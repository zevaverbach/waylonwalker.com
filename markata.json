{"config": {"glob_patterns": ["pages/**/*.md"], "hooks": ["markata.plugins.publish_source", "markata.plugins.publish_dev_to_source", "markata.plugins.prevnext", "plugins.render_template_variables", "plugins.codeblocks", "plugins.index", "plugins.slug", "plugins.one_line_link", "plugins.include", "default", "plugins.seo_amp", "plugins.publish_amp", "plugins.custom_seo", "plugins.gif_to_mp4", "plugins.youtube", "plugins.rss_tag", "plugins.auto_publish"], "disabled_hooks": ["markata.plugins.covers", "markata.plugins.flat_slug"], "markdown_extensions": [], "default_cache_expire": 1209600, "output_dir": "markout", "assets_dir": "static", "site_version": 16, "url": "https://waylonwalker.com", "images_url": "https://images.waylonwalker.com", "title": "Waylon Walkers Digital Garden", "description": "I write about how I use python and linux in data science.", "rss_description": "Waylon Walkers posts", "author_name": "Waylon Walker", "author_email": "waylon@waylonwalaker.com", "icon": "8bitcc.png", "lang": "en", "post_template": "pages/templates/post_template.html", "amp_template": "pages/templates/post_template.amp.html", "theme_color": "#322D39", "background_color": "#B73CF6", "start_url": "/", "site_name": "Waylon Walker", "short_name": "ww", "display": "minimal-ui", "twitter_card": "summary_large_image", "twitter_creator": "@_waylonwalker", "twitter_site": "@_waylonwalker", "auto_description": {"description": {"len": 160}, "long_description": {"len": 250}, "super_description": {"len": 500}, "cache_expire": 1209600, "config_key": "auto_description"}, "auto_publish": {"filters": {"til": "templateKey==\"til\" and date<=today"}, "cache_expire": 1209600, "config_key": "auto_publish"}, "archive": {"archive_template": "pages/templates/archive_template.html", "pages": {"archive": {"filter": "date<=today and templateKey in ['blog-post', 'til'] and status.lower()=='published'"}, "blog": {"filter": "date<=today and templateKey in ['blog-post'] and status.lower()=='published'"}, "draft": {"filter": "status=='draft'"}, "scheduled": {"filter": "date>today"}, "today": {"filter": "date==today"}, "python": {"filter": "date<=today and 'python' in tags"}, "python-draft": {"filter": "date<=today and 'python' in tags and status=='draft'"}, "linux": {"filter": "date<=today and 'linux' in tags"}, "linux-draft": {"filter": "date<=today and 'linux' in tags and status=='draft'"}, "vim": {"filter": "date<=today and 'vim' in tags"}, "vim-draft": {"filter": "date<=today and 'vim' in tags and status=='draft'"}, "kedro": {"filter": "date<=today and 'kedro' in tags"}, "kedro-draft": {"filter": "date<=today and 'kedro' in tags and status=='draft'"}, "gratitude": {"template": "pages/templates/archive_template.html", "card_template": "pages/templates/gratitude_card.html", "filter": "date<=today and templateKey == 'gratitude'"}, "til": {"template": "pages/templates/archive_template.html", "filter": "date<=today and templateKey == 'til'"}, "til-vim": {"template": "pages/templates/archive_template.html", "filter": "date<=today and templateKey == 'til' and 'vim' in tags"}}}, "covers": [{"name": "-dev", "template": "static/cover-template.png", "font": "./.github/scripts/waterlilly-script.ttf", "font_color": "rgb(255,255,255)"}, {"name": "-og", "template": "static/og-template.png", "font": "./.github/scripts/waterlilly-script.ttf", "font_color": "rgb(255,255,255)", "text_font": "./static/JosefinSans-Regular.ttf", "text_font_color": "rgb(200,200,200)"}, {"name": "-hashnode", "template": "static/hashnode-template.png", "font": "./.github/scripts/waterlilly-script.ttf", "font_color": "rgb(255,255,255)"}], "seo": [{"name": "og:type", "property": "og:type", "content": "article"}, {"name": "og:author", "property": "og:author", "content": "Waylon Walker"}, {"name": "og:site_name", "property": "og:site_name", "content": "Waylon Walker"}, {"name": "theme-color", "content": "#322D39"}], "prevnext": {"prevnext_color_angle": "#ff66c4"}, "feeds": {"published": {"filter": "date<=today and templateKey in ['blog-post', 'til'] and status.lower()=='published'", "sort": "slug", "template": "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/markata/plugins/default_post_template.html"}, "archive": {"filter": "True", "template": "/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/markata/plugins/default_post_template.html"}}}, "articles": [{"cover": "", "title": "Sample", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/sample.md", "description": "! ! ! ! ! ! ! ! ! ! ! ! !", "content": "# title\n\n## subtitle\n\n!!! note \"sample note\"\n\n    this is a sameple\n\n!!! danger \"be careful\"\n\n    this is super dang.\n\n    ## subtitle\n\n!!! reminder\n\n    this is a reminder\n\n!!! caution\n\n    this is a caution\n\n!!! attention\n\n    this is a attention\n\n!!! hint\n\n    this is a hint\n\n!!! error\n\n    this is a error\n\n!!! important\n\n    this is a important\n\n!!! seealso\n\n    this is a seealso\n\n!!! tip\n\n    this is a tip\n\n!!! todo\n\n    this is a todo\n\n!!! warning\n\n    this is a warning\n\n!!! settings\n\n    this is a settings\n\n<div>\n# markdown in html\n</div>\n\n<div markdown=\"1\">\nThis is a *Markdown* Paragraph.\n</div>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_075'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 075</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/009'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>009</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-25", "edit_link": "https://github.com/edit/main/pages/sample.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571544", "datetime": "2021-01-25 00:00:00+00:00", "slug": "sample", "jinja": false, "output_html": "markout/sample/index.html", "long_description": "! ! ! ! ! ! ! ! ! ! ! ! !", "super_description": "! ! ! ! ! ! ! ! ! ! ! ! !", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452909fa0>, next=<frontmatter.Post object at 0x7f34506324c0>)"}, {"cover": "", "title": "Gratitude 075", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_075.md", "description": "We are tired, short on sleep, bodies tired from lifting, but we remain high on the excitement of what is to come.  We are pushing through day by day to ensure t", "content": "#### Calm\n\nWe are tired, short on sleep, bodies tired from lifting, but we remain high on the excitement of what is to come.  We are pushing through day by day to ensure that we meet our deadlines.  Our kids are missing the amount of time that we play with them, and starting to struggle emotionally, heck I think we are all struggling emotionally.  We have packed everything we own into a truck ready to move to a new place.  All of our favorite things are packed in, not surrounding us, and not giving us the compfort that we are used to.  This has been our life over the past week.  Now we take a deep breath and appreciate all of the help we have recieved this week.  The help that we recieved from our friends, to the landlords, my coworkers, and most of all each other.  Our favorite things are starting to surround us in our new place.  We have room, and time, to play.  Some things are not yet set up, but enough is setup to breathe.  Let's embrace the **calm** as we roll into the final phase of this move.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_027'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 027</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/sample'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Sample</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-19", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_075.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571555", "datetime": "2019-01-19 00:00:00+00:00", "slug": "gratitude/gratitude_075", "jinja": false, "output_html": "markout/gratitude/gratitude_075/index.html", "long_description": "We are tired, short on sleep, bodies tired from lifting, but we remain high on the excitement of what is to come.  We are pushing through day by day to ensure that we meet our deadlines.  Our kids are missing the amount of time that we play with them", "super_description": "We are tired, short on sleep, bodies tired from lifting, but we remain high on the excitement of what is to come.  We are pushing through day by day to ensure that we meet our deadlines.  Our kids are missing the amount of time that we play with them, and starting to struggle emotionally, heck I think we are all struggling emotionally.  We have packed everything we own into a truck ready to move to a new place.  All of our favorite things are packed in, not surrounding us, and not giving us the ", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506637f0>, next=<frontmatter.Post object at 0x7f3452909ca0>)"}, {"cover": "", "title": "Gratitude 027", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_027.md", "description": "CuttinScrap.com was released last night!!!  I am very excited with how it is turning out.  I am even more excited to see", "content": "#### Encouragement\n\n[CuttinScrap.com](https://www.cuttinscrap.com) was released last night!!!  I am very excited with how it is turning out.  I am even more excited to see Rhiannon start using it and getting some more content built up.  This is the by far the biggest front end project that I have ever done.  I think most of all I really like seeing how much Rhiannon likes site.   She seems blown away and has commented that she did not think that it would turn out anywhere close to this good. She would have been proud to own it either way just knowing that I built it for her.  Seeing her face light up during each preview that we did really kept me going to finish.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_079'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 079</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_075'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 075</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-22", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_027.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571562", "datetime": "2018-01-22 00:00:00+00:00", "slug": "gratitude/gratitude_027", "jinja": false, "output_html": "markout/gratitude/gratitude_027/index.html", "long_description": "", "super_description": "", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825040>, next=<frontmatter.Post object at 0x7f3452909fa0>)"}, {"cover": "", "title": "Gratitude 079", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_079.md", "description": "Recently I have been thinking about all of the resources that have been available for me to learn.  I am so grateful to have these at my disposal.  Learning how", "content": "#### Learning Resources\n\nRecently I have been thinking about all of the resources that have been available for me to learn.  I am so grateful to have these at my disposal.  Learning how to improve myself, and increase my productivity in the long run is a  passion of mine.  I spend many days spinning my wheels with something, but I am always learning.  Even though those few hours were lost in the short term, in the long term I always come away having learned something.  These small wins each day cumulativly add up to something that gives me a lot of productivity in my daily work and allows me to succeed.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_070'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 070</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_027'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 027</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-05", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_079.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571568", "datetime": "2019-02-05 00:00:00+00:00", "slug": "gratitude/gratitude_079", "jinja": false, "output_html": "markout/gratitude/gratitude_079/index.html", "long_description": "Recently I have been thinking about all of the resources that have been available for me to learn.  I am so grateful to have these at my disposal.  Learning how to improve myself, and increase my productivity in the long run is a  passion of mine.  I", "super_description": "Recently I have been thinking about all of the resources that have been available for me to learn.  I am so grateful to have these at my disposal.  Learning how to improve myself, and increase my productivity in the long run is a  passion of mine.  I spend many days spinning my wheels with something, but I am always learning.  Even though those few hours were lost in the short term, in the long term I always come away having learned something.  These small wins each day cumulativly add up to som", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663790>, next=<frontmatter.Post object at 0x7f34506637f0>)"}, {"cover": "", "title": "Gratitude 070", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_070.md", "description": "Today is kicking off as a pretty amazing morning so far.  The whole family was in a really happy mood, even right after waking up.  I enjoyed the start of sunri", "content": "#### Great Morning\n\nToday is kicking off as a pretty amazing morning so far.  The whole family was in a really happy mood, even right after waking up.  I enjoyed the start of sunrise running around with Wyatt at the bus stop, and continuing now while writing my gratitude and daily planning.  Even though I was 10 minutes or so behind getting out the door this morning everything else has been going flawlessly, especially the most important things; family, mind, mood, and gratitude.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_026'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 026</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_079'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 079</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_070.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571573", "datetime": "2019-01-11 00:00:00+00:00", "slug": "gratitude/gratitude_070", "jinja": false, "output_html": "markout/gratitude/gratitude_070/index.html", "long_description": "Today is kicking off as a pretty amazing morning so far.  The whole family was in a really happy mood, even right after waking up.  I enjoyed the start of sunrise running around with Wyatt at the bus stop, and continuing now while writing my gratitud", "super_description": "Today is kicking off as a pretty amazing morning so far.  The whole family was in a really happy mood, even right after waking up.  I enjoyed the start of sunrise running around with Wyatt at the bus stop, and continuing now while writing my gratitude and daily planning.  Even though I was 10 minutes or so behind getting out the door this morning everything else has been going flawlessly, especially the most important things; family, mind, mood, and gratitude.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450632ca0>, next=<frontmatter.Post object at 0x7f3452825040>)"}, {"cover": "", "title": "Gratitude 026", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_026.md", "description": "On Thursday I got the call that Rhiannon had passes out during physical therapy.  I went right to her therapy office to find her rehydrating in a chair.  She se", "content": "#### Calm\n\nOn Thursday I got the call that Rhiannon had passes out during physical therapy.  I went right to her therapy office to find her rehydrating in a chair.  She seemed ok and that this would pass and be ok.  When trying to get up again she passed out.  Three days later we are back home from the hospital and she is still passing out.  All we know is that she has cancer and she is struggling to keep her blood pressure up while standing.  I am very grateful that we have the friends we have to take care of everything at home for us.  Most of all I am grateful that we are able to keep it calm and collected.  Too many folks get very worked up through these events and it is not productive.  Our job is to remain calm, stay focused on the things that we are able to do that help her, and let the doctors do their job.  We have enough doctors involved that if there was something to find, it would have been found.  I really hope that we can get her back on her feet where she is not passing out everytime that she stands up.  But for now, I am keeping my calm, staying positive, spending time with the kids, and doing the tasks that help us function through the day.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_037'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 037</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_070'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 070</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_026.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571579", "datetime": "2018-01-21 00:00:00+00:00", "slug": "gratitude/gratitude_026", "jinja": false, "output_html": "markout/gratitude/gratitude_026/index.html", "long_description": "On Thursday I got the call that Rhiannon had passes out during physical therapy.  I went right to her therapy office to find her rehydrating in a chair.  She seemed ok and that this would pass and be ok.  When trying to get up again she passed out.  ", "super_description": "On Thursday I got the call that Rhiannon had passes out during physical therapy.  I went right to her therapy office to find her rehydrating in a chair.  She seemed ok and that this would pass and be ok.  When trying to get up again she passed out.  Three days later we are back home from the hospital and she is still passing out.  All we know is that she has cancer and she is struggling to keep her blood pressure up while standing.  I am very grateful that we have the friends we have to take car", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825220>, next=<frontmatter.Post object at 0x7f3450663790>)"}, {"cover": "", "title": "Gratitude 037", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_037.md", "description": "I cannot express how grateful I am for Rhiannon", "content": "#### Kid Smarts\n\nI cannot express how grateful I am for Rhiannon's smarts when it comes to raising small children.  These things are complicated and only continue to get more complicated as they grow!  There are times where I am just not quite sure what to do or how to handle certain situations, and she will come back with an answer that makes sense.  Giving an understanding about how that would make the child feel in the moment and what it will do to them in the long term.  As I am growing these understandings things are making more sense, but I still feel like I have a lot to learn when it comes to parenting.  I am not only grateful that she takes the lead on the research and develops new strategies as they grow, but she is also able to present to me in a way that makes sense.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_061'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 061</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_026'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 026</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-02-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_037.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571586", "datetime": "2018-02-04 00:00:00+00:00", "slug": "gratitude/gratitude_037", "jinja": false, "output_html": "markout/gratitude/gratitude_037/index.html", "long_description": "I cannot express how grateful I am for Rhiannon", "super_description": "I cannot express how grateful I am for Rhiannon", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825370>, next=<frontmatter.Post object at 0x7f3450632ca0>)"}, {"cover": "", "title": "Gratitude 061", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_061.md", "description": "I research everything to ", "content": "#### Inspirational Work\n\nI research everything to _DEATH_.  This includes my work.  I am constantly looking for inspiration, and learning from others in how they do their work. I love seeing the results that can be achieved by someone who is dedicated fully to their craft, and try to understan how I can achieve 80% of that with 20% of the effort, so that I dont need to be a full time designer, front end developer, dev ops... you get the picture.  Over the last couple of months we have had a Data Scientist on rotation in our group and its time to get it into production and start getting  some feedback.  As he is learning how the web works its cool to see the light come on for someone else, and have that ah ha moment.  The web is an overly complicated beast these days with far too many options.  It is\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-125'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 125</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_037'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 037</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-12-19", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_061.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571592", "datetime": "2018-12-19 00:00:00+00:00", "slug": "gratitude/gratitude_061", "jinja": false, "output_html": "markout/gratitude/gratitude_061/index.html", "long_description": "I research everything to ", "super_description": "I research everything to ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450632a60>, next=<frontmatter.Post object at 0x7f3452825220>)"}, {"cover": "", "title": "Gratitude 125", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-125.md", "description": "We heard back from the owners of our house Today Was the repeat trip back to Iowa City, another 12 hours in the car for", "content": "We heard back from the owners of our house! As exciting as it is they still\nkinda left us hanging.  They admitted to just ghosting everyone and that they\nwill get back to us tomorrow.  It's frustrating that there are so many layers\nin between us, but at the same time I am grateful for the team of people\nhelping us.  There is so much that goes into buying a house that We would never\nthink of wtihout tons of research.\n\n\nToday Was the repeat trip back to Iowa City, another 12 hours in the car for\nthe kids.  I am so grateful for how supportive they are of Rhiannon, they will\ndo anything for her.  It was a bit chaotic at times, but overall I am proud of\nthem for getting through this stressfull trip.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_068'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 068</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_061'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 061</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-19", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-125.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571598", "datetime": "2022-01-19 00:00:00+00:00", "slug": "gratitude/gratitude-125", "jinja": false, "output_html": "markout/gratitude/gratitude-125/index.html", "long_description": "We heard back from the owners of our house Today Was the repeat trip back to Iowa City, another 12 hours in the car for", "super_description": "We heard back from the owners of our house Today Was the repeat trip back to Iowa City, another 12 hours in the car for", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450632c40>, next=<frontmatter.Post object at 0x7f3452825370>)"}, {"cover": "", "title": "Gratitude 068", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_068.md", "description": "This morning we informed Wyatt", "content": "#### Amazing People\n\nThis morning we informed Wyatt's bus diver that we were going to be moving and this was his last week riding the bus with her.  It was sad to let her know that we are leaving.  She has done so well with him, and they have become the best of friends.  He is the first one on the bus in the morning and sits right next to her.  She is able to start her day off early with a level of energy that is only parallelled by him, which is something that he needs.  He really attracts to positive people that can match his level of energy and enthusiasm for the day.  I am so grateful for people like her, who can bring so much positivity and gratitude to our life.  Some people are repelled by Wyatt's level of enthusiasm, so it is always exciting to see this.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-166'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 166</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-125'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 125</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-09", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_068.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571604", "datetime": "2019-01-09 00:00:00+00:00", "slug": "gratitude/gratitude_068", "jinja": false, "output_html": "markout/gratitude/gratitude_068/index.html", "long_description": "This morning we informed Wyatt", "super_description": "This morning we informed Wyatt", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825940>, next=<frontmatter.Post object at 0x7f3450632a60>)"}, {"cover": "", "title": "Gratitude 166", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-166.md", "description": "Happy Birthday Rhiannon, I love the chill day that we had.  Sometimes", "content": "Happy Birthday Rhiannon, I love the chill day that we had.  Sometimes\nBirthdays get over hyped the the kids kinda go over board, but today\nthey just did fantastic.  We started with a great trip to Hy Vee to pick\nup the cake, flowers, and a few extras.  We came back and set up\ndecorations just in time for my first and only real meeting of the day.\nHad a good lunch date that included pop tarts and a cinnamon role\ndoughnut.  Then Rhiannon spent the afternoon dying her hair, and it came\nout with just the most vibrant purple, it looks so good on her.\nFinished up the day with a great potato soup, as requested, and cake.\nGetting ready to go kick her butt in game night now.  Just because it's\nher birthday does not mean she can't lose at some games.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_103'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 103</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_068'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 068</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-05", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-166.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571610", "datetime": "2022-03-05 00:00:00+00:00", "slug": "gratitude/gratitude-166", "jinja": false, "output_html": "markout/gratitude/gratitude-166/index.html", "long_description": "Happy Birthday Rhiannon, I love the chill day that we had.  Sometimes", "super_description": "Happy Birthday Rhiannon, I love the chill day that we had.  Sometimes", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825250>, next=<frontmatter.Post object at 0x7f3450632c40>)"}, {"cover": "", "title": "Gratitude 103", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_103.md", "description": "Today I really tried to shift focus to on the kids.  It This morning Wyatt and I finished Wally his robot dog.  It was so cute, In the afternoon we went out to ", "content": "Today I really tried to shift focus to on the kids.  It's been a wild\nride this year and I have really been stuck in the motions, wake up, get\nkids food, work, get Rhiannon meds, work, get food, .... all the utilitarian\nthings that we all need day in and day out.  Then vacation hit and all\nthe extra time was on cleaning and holiday things.  It was hard to just\nuse the extra time to do fun things with them that we normally have not\nbeen doing.\n\nThis morning Wyatt and I finished Wally his robot dog.  It was so cute,\nand he loved it.  Honestly the kit was super cool, complicated, and the\ndirections were only mostly there.  It turned into a lot of can you\nfind A15 for me, do you want to cut it, thank you, this is where I am\ngoing to put it.  He loved watchig it come together, but I could feel\nthat it was too much for him to do, even with help.\n\nIn the afternoon we went out to the front and went skating/bike riding.\nEveryone did great, and Ayla made some really good improvements on\nriding her bike uphill.  She was making it uphill with less and less\nhelp each time.\n\nFinally after supper Wyatt Ayla and I all built things in scratch.  Ayla\nsang the most beautiful song, and I animated the ballerina that she\npicked out to sing her song.  Then Wyatt made a Dream Character move and\nfight a boss, he drew a custom sword, and I make it so the sword\nfollowed dream.\n\nJust tryin to make the best of the holidays\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_078'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 078</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-166'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 166</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-27", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_103.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571616", "datetime": "2021-12-27 00:00:00+00:00", "slug": "gratitude/gratitude_103", "jinja": false, "output_html": "markout/gratitude/gratitude_103/index.html", "long_description": "Today I really tried to shift focus to on the kids.  It This morning Wyatt and I finished Wally his robot dog.  It was so cute, In the afternoon we went out to the front and went skating/bike riding. Finally after supper Wyatt Ayla and I all built th", "super_description": "Today I really tried to shift focus to on the kids.  It This morning Wyatt and I finished Wally his robot dog.  It was so cute, In the afternoon we went out to the front and went skating/bike riding. Finally after supper Wyatt Ayla and I all built things in scratch.  Ayla Just tryin to make the best of the holidays", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34528252b0>, next=<frontmatter.Post object at 0x7f3452825940>)"}, {"cover": "", "title": "Gratitude 078", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_078.md", "description": "We have been moved into the new apartment now for about 2 weeks, and I am really amazed how it feels to have simplified a lot of things along the way. There is ", "content": "#### Simplicity\n\nWe have been moved into the new apartment now for about 2 weeks, and I am really amazed how it feels to have simplified a lot of things along the way. There is a lot less clutter.  Cleaning is a breeze.  The kids are able to find their things and put them away with ease (for the most part).  There feels to be much less of a weight in each room.  Everywhere in the place feels light, clean, and easy to breathe.  There is very little in the way of stress of clutter and cleanliness.  The daily burden is quite minimal and everything can be cleaned up with very little effort.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_015'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 015</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_103'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 103</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_078.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571622", "datetime": "2019-02-04 00:00:00+00:00", "slug": "gratitude/gratitude_078", "jinja": false, "output_html": "markout/gratitude/gratitude_078/index.html", "long_description": "We have been moved into the new apartment now for about 2 weeks, and I am really amazed how it feels to have simplified a lot of things along the way. There is a lot less clutter.  Cleaning is a breeze.  The kids are able to find their things and put", "super_description": "We have been moved into the new apartment now for about 2 weeks, and I am really amazed how it feels to have simplified a lot of things along the way. There is a lot less clutter.  Cleaning is a breeze.  The kids are able to find their things and put them away with ease (for the most part).  There feels to be much less of a weight in each room.  Everywhere in the place feels light, clean, and easy to breathe.  There is very little in the way of stress of clutter and cleanliness.  The daily burde", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34528256d0>, next=<frontmatter.Post object at 0x7f3452825250>)"}, {"cover": "", "title": "Gratitude 015", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_015.md", "description": "I love having those special moments of time with the kids.  Today we had a few minutes to play before supper time, and we decided to go down to the basement to ", "content": "#### Special Moments\n\nI love having those special moments of time with the kids.  Today we had a few minutes to play before supper time, and we decided to go down to the basement to play some imagination action adventure game.  The kids are really into minecraft at the moment so its always very centered around minecraft.  Tonight there was an extra special moment where Wyatt on his own gave Ayla his brand new nerf gun to play with.  At this point he has not alowed her to play with it because it was a new Christmas toy.  She was extatic, and we all enjoyed running from her as she shot towards us.  I thought it was extra special because we were all having fun and no one was arguing about who got the new toy.  I am so proud of Wyatt, because he is really growing up and growing out of the not sharing phase. I have really seen him open up to share an play with Ayla in new ways lately.  It really makes you feel like a good parent when you can watch them grow up like this.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-184'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 184</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_078'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 078</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_015.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571628", "datetime": "2017-12-29 00:00:00+00:00", "slug": "gratitude/gratitude_015", "jinja": false, "output_html": "markout/gratitude/gratitude_015/index.html", "long_description": "I love having those special moments of time with the kids.  Today we had a few minutes to play before supper time, and we decided to go down to the basement to play some imagination action adventure game.  The kids are really into minecraft at the mo", "super_description": "I love having those special moments of time with the kids.  Today we had a few minutes to play before supper time, and we decided to go down to the basement to play some imagination action adventure game.  The kids are really into minecraft at the moment so its always very centered around minecraft.  Tonight there was an extra special moment where Wyatt on his own gave Ayla his brand new nerf gun to play with.  At this point he has not alowed her to play with it because it was a new Christmas to", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825490>, next=<frontmatter.Post object at 0x7f34528252b0>)"}, {"cover": "", "title": "Gratitude 184", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-184.md", "description": "Today was mothers day, and it was one of the most chill mother At the end of the day we went to Hy Vee, and dang am I impressed with how well Anyways, Wyatt was", "content": "Today was mothers day, and it was one of the most chill mother's day we have\never had.  We, maybe I should say I, did not go so wild with things.  Mom got\nsome handmade artwork, and easy afternoon, and a mothers day theme sidewalk\nchaulk art.\n\nAt the end of the day we went to Hy Vee, and dang am I impressed with how well\nWyatt did.  Both did very well till the end, where Ayla really lost it when she\nsaw things that she thought that she really needed, but didn't.  It's so hard\nwhen you have not been in a store for so long to get so see real things for\nsale.\n\nAnyways, Wyatt was fantastic.  I pushed mom in the wheel chair and he took the\ncart.  He very calmly and maturely pushed the cart through the entire store,\nand even filled it with all the things we needed, and nothing more.  Not once\ndid we have to remind him that we were there just for groceries.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-124'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 124</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_015'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 015</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-09", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-184.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571634", "datetime": "2022-05-09 00:00:00+00:00", "slug": "gratitude/gratitude-184", "jinja": false, "output_html": "markout/gratitude/gratitude-184/index.html", "long_description": "Today was mothers day, and it was one of the most chill mother At the end of the day we went to Hy Vee, and dang am I impressed with how well Anyways, Wyatt was fantastic.  I pushed mom in the wheel chair and he took the", "super_description": "Today was mothers day, and it was one of the most chill mother At the end of the day we went to Hy Vee, and dang am I impressed with how well Anyways, Wyatt was fantastic.  I pushed mom in the wheel chair and he took the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825a90>, next=<frontmatter.Post object at 0x7f34528256d0>)"}, {"cover": "", "title": "Gratitude 124", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-124.md", "description": "Last night we lined up a bunch of new houses to look at, still not Tomorrow is a follow up appointment in Iowa City so we have a big day in Still got our finger", "content": "Last night we lined up a bunch of new houses to look at, still not\nhearing back from the owners,  its frustrating, but we need to move so\nwe gotta start looking.\n\nTomorrow is a follow up appointment in Iowa City so we have a big day in\nthe car ahead of us.  With all the restrictions we don't really have\nmuch chance to get out of the car.  It's a nervewracking day, getting\nbig news, with our kids sitting in the car for about 10 hours.  It's the\nbest way for us all to stay safe.  Last time the kids did fantastic\nconsidering they have not been in the car at all in so long.  Hoping for\ngood news and a good trip ride with them.\n\nStill got our fingers crossed on the house!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-182'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 182</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-184'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 184</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-18", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-124.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571640", "datetime": "2022-01-18 00:00:00+00:00", "slug": "gratitude/gratitude-124", "jinja": false, "output_html": "markout/gratitude/gratitude-124/index.html", "long_description": "Last night we lined up a bunch of new houses to look at, still not Tomorrow is a follow up appointment in Iowa City so we have a big day in Still got our fingers crossed on the house", "super_description": "Last night we lined up a bunch of new houses to look at, still not Tomorrow is a follow up appointment in Iowa City so we have a big day in Still got our fingers crossed on the house", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825b50>, next=<frontmatter.Post object at 0x7f3452825490>)"}, {"cover": "", "title": "Gratitude 182", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-182.md", "description": "Crutches are gone, whoop whoop Wyatt has been so helpful lately it has been very impressive.  Since our big", "content": "Crutches are gone, whoop whoop!  But dang this leg is weak.  It's crazy how\nmuch strength you loose after 3 weeks of no weight bearing, but also impressive\nto see how quickly it starts coming back.  After just half the day back on my\nfeet I am walking without crutches pretty well.\n\nWyatt has been so helpful lately it has been very impressive.  Since our big\nmeltdown night he has been ready to help without too much push back.  This has\nbeen a huge relief and really helped get through the tail end of this stint on\ncrutches.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-120'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 120</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-124'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 124</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-182.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571646", "datetime": "2022-05-03 00:00:00+00:00", "slug": "gratitude/gratitude-182", "jinja": false, "output_html": "markout/gratitude/gratitude-182/index.html", "long_description": "Crutches are gone, whoop whoop Wyatt has been so helpful lately it has been very impressive.  Since our big", "super_description": "Crutches are gone, whoop whoop Wyatt has been so helpful lately it has been very impressive.  Since our big", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34528259a0>, next=<frontmatter.Post object at 0x7f3452825a90>)"}, {"cover": "", "title": "Gratitude 120", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-120.md", "description": "Holy nother day", "content": "Holy nother day! This process is moving so fast, this morning we stepped\ninto the house that we have been looking for.  It's honestly one that\nhas came up several times in our searches over the past while and we\nkeep saying we really like it, but its only for sale.  Now we are trying\nto buy it!!  We already have our offer drafted and submitted.  We got a\nlot of paperwork to sift through, and some big decisions to think about.\nI am so grateful that this one came up and just looks so perfect for us.\nIt's outside of Peoria a little ways and in a much less competitive\nmarket.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-114'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 114</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-182'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 182</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-13", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-120.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571652", "datetime": "2022-01-13 00:00:00+00:00", "slug": "gratitude/gratitude-120", "jinja": false, "output_html": "markout/gratitude/gratitude-120/index.html", "long_description": "Holy nother day", "super_description": "Holy nother day", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825cd0>, next=<frontmatter.Post object at 0x7f3452825b50>)"}, {"cover": "", "title": "Gratitude 114", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-114.md", "description": "We made it through the first week back at it.  I am so grateful that We made it", "content": "We made it through the first week back at it.  I am so grateful that We made it\nthrough the important meetings with Ayla's school, and Rhiannon is still\ntesting negative for COVID.  It's heartbreaking to see that she is so sick, yet\neverything reads as if she is just fine.  I wish there was something that we\ncould do for her, but the doctors just don't do much when all the labs come\nback \"fine\".  Again I am grateful that is has not yet proved to be something\nsuper dangerous.  Doing my best to keep it positive in this space, but the\nunknown can be quite scary with this one.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-112'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 112</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-120'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 120</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-07", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-114.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571658", "datetime": "2022-01-07 00:00:00+00:00", "slug": "gratitude/gratitude-114", "jinja": false, "output_html": "markout/gratitude/gratitude-114/index.html", "long_description": "We made it through the first week back at it.  I am so grateful that We made it", "super_description": "We made it through the first week back at it.  I am so grateful that We made it", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825820>, next=<frontmatter.Post object at 0x7f34528259a0>)"}, {"cover": "", "title": "Gratitude 112", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-112.md", "description": "Today was Chemo day for Rhiannon, and a rough one at that.  We did get a", "content": "Today was Chemo day for Rhiannon, and a rough one at that.  We did get a\nwhole box of Casey's delicious doughnuts and cookies to enjoy together.\nThat only goes so far towards seeing her suffer continuously all day.  I\nam just grateful that its only like this for one day every month, in\nanother day or two she will be back to her best, but today is her worst.\nIt's not easy being the one caught between caring for everyone, but we\nall make due and try our best to give Mama some extra love and support\non this one day each month.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_051'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 051</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-114'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 114</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-05", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-112.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571663", "datetime": "2022-01-05 00:00:00+00:00", "slug": "gratitude/gratitude-112", "jinja": false, "output_html": "markout/gratitude/gratitude-112/index.html", "long_description": "Today was Chemo day for Rhiannon, and a rough one at that.  We did get a", "super_description": "Today was Chemo day for Rhiannon, and a rough one at that.  We did get a", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452825f10>, next=<frontmatter.Post object at 0x7f3452825cd0>)"}, {"cover": "", "title": "Gratitude 051", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_051.md", "description": "Today I am grateful for the fact that I have someone to talk about my problems with.  Rhiannon is very influential when it comes to mental health.   She has con", "content": "#### Talking\n\nToday I am grateful for the fact that I have someone to talk about my problems with.  Rhiannon is very influential when it comes to mental health.   She has conconcoured several very difficult issues of her own and is able to guide me through mine.  I am glad that we are able to talk through these things and come up with actionable things to correct.\n\nLife remains a rollar coaster and these issues will come  and go, new ones will rise and fall, old ones will creep in.  It is important to keep someone like this who you can talk to.  For me it is **very** difficult to identify what the root issue is to begin with let alone try to fix it.  Recently I was really struggling and it came down to confidence/imposter syndrome.  She was able to identify that, and point out some really amazing feedback that I have recieved as truth that I am achieving great standards, even if I dont feel that way when I am lost in the weeds of everything.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-173'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 173</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-112'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 112</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-11-05", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_051.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571670", "datetime": "2018-11-05 00:00:00+00:00", "slug": "gratitude/gratitude_051", "jinja": false, "output_html": "markout/gratitude/gratitude_051/index.html", "long_description": "Today I am grateful for the fact that I have someone to talk about my problems with.  Rhiannon is very influential when it comes to mental health.   She has conconcoured several very difficult issues of her own and is able to guide me through mine.  ", "super_description": "Today I am grateful for the fact that I have someone to talk about my problems with.  Rhiannon is very influential when it comes to mental health.   She has conconcoured several very difficult issues of her own and is able to guide me through mine.  I am glad that we are able to talk through these things and come up with actionable things to correct. Life remains a rollar coaster and these issues will come  and go, new ones will rise and fall, old ones will creep in.  It is important to keep som", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34528203a0>, next=<frontmatter.Post object at 0x7f3452825820>)"}, {"cover": "", "title": "Gratitude 173", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-173.md", "description": "So we started the podcast back up, and it was super fun.  Rhiannon and I", "content": "So we started the podcast back up, and it was super fun.  Rhiannon and I\njust recorded a podcast super tired and exhausted, but no excuses we did\nit, we recorded a damn podcast.  It actually didn't turn out that great\nbecause my stupid interface went low on me, but whatever we did it.  I'm\nactually excited to get back into it and make some time each week to\njust chat to her about whatever.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-91'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 91</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_051'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 051</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-173.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571676", "datetime": "2022-03-14 00:00:00+00:00", "slug": "gratitude/gratitude-173", "jinja": false, "output_html": "markout/gratitude/gratitude-173/index.html", "long_description": "So we started the podcast back up, and it was super fun.  Rhiannon and I", "super_description": "So we started the podcast back up, and it was super fun.  Rhiannon and I", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34528206d0>, next=<frontmatter.Post object at 0x7f3452825f10>)"}, {"cover": "", "title": "Gratitude 91", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-91.md", "description": "Today I am grateful for having our housing maintenance taken care of for us.  Our AC went out last night. We called them up this morning and they had it fixed b", "content": "#### Maintenance\n\nToday I am grateful for having our housing maintenance taken care of for us.  Our AC went out last night. We called them up this morning and they had it fixed by the afternoon.  The relief of not having something else to contend with is ver nice.  I didn't have to waste my time checking the simple things or worry that we are spending their minimum price to flip a breaker.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_076'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 076</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-173'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 173</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-05-17", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-91.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571685", "datetime": "2019-05-17 00:00:00+00:00", "slug": "gratitude/gratitude-91", "jinja": false, "output_html": "markout/gratitude/gratitude-91/index.html", "long_description": "Today I am grateful for having our housing maintenance taken care of for us.  Our AC went out last night. We called them up this morning and they had it fixed by the afternoon.  The relief of not having something else to contend with is ver nice.  I ", "super_description": "Today I am grateful for having our housing maintenance taken care of for us.  Our AC went out last night. We called them up this morning and they had it fixed by the afternoon.  The relief of not having something else to contend with is ver nice.  I didn", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820190>, next=<frontmatter.Post object at 0x7f34528203a0>)"}, {"cover": "", "title": "Gratitude 076", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_076.md", "description": "The Boxes are slowly disappearing, the laundry pile is creeping down to the final pieces.  We are nearing the final stages of the move thanks to some great team", "content": "#### Team Work\n\nThe Boxes are slowly disappearing, the laundry pile is creeping down to the final pieces.  We are nearing the final stages of the move thanks to some great teamwork.  We have been working though the day and late into the night, consistently putting the hours in.   Each day we creep closer to our final goal that seemed like it would never come.   Our  things are slowly finding their way to their home, placed with care  and precision.  Getting all of our things that we love brings us joy.  Some of these things were not seen since the last move.  I cannot wait to see the day's progress.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_046'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 046</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-91'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 91</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_076.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571691", "datetime": "2019-01-21 00:00:00+00:00", "slug": "gratitude/gratitude_076", "jinja": false, "output_html": "markout/gratitude/gratitude_076/index.html", "long_description": "The Boxes are slowly disappearing, the laundry pile is creeping down to the final pieces.  We are nearing the final stages of the move thanks to some great teamwork.  We have been working though the day and late into the night, consistently putting t", "super_description": "The Boxes are slowly disappearing, the laundry pile is creeping down to the final pieces.  We are nearing the final stages of the move thanks to some great teamwork.  We have been working though the day and late into the night, consistently putting the hours in.   Each day we creep closer to our final goal that seemed like it would never come.   Our  things are slowly finding their way to their home, placed with care  and precision.  Getting all of our things that we love brings us joy.  Some of", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820430>, next=<frontmatter.Post object at 0x7f34528206d0>)"}, {"cover": "", "title": "Gratitude 046", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_046.md", "description": "I am very grateful that we have help with the kids when we need it on a moments notice.  Today I came home with a migrane, and was able to rest up for a little ", "content": "#### Kid Help\n\nI am very grateful that we have help with the kids when we need it on a moments notice.  Today I came home with a migrane, and was able to rest up for a little while before helping them with bedtime.  Rather than pushing though and being miserable, I was able to take a short break then proceed with a nice night with the kids and Rhiannon.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_074'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 074</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_076'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 076</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-04-17", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_046.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571697", "datetime": "2018-04-17 00:00:00+00:00", "slug": "gratitude/gratitude_046", "jinja": false, "output_html": "markout/gratitude/gratitude_046/index.html", "long_description": "I am very grateful that we have help with the kids when we need it on a moments notice.  Today I came home with a migrane, and was able to rest up for a little while before helping them with bedtime.  Rather than pushing though and being miserable, I", "super_description": "I am very grateful that we have help with the kids when we need it on a moments notice.  Today I came home with a migrane, and was able to rest up for a little while before helping them with bedtime.  Rather than pushing though and being miserable, I was able to take a short break then proceed with a nice night with the kids and Rhiannon.", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820400>, next=<frontmatter.Post object at 0x7f3452820190>)"}, {"cover": "", "title": "Gratitude 074", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_074.md", "description": "I am so grateful that even during a rough time, a time where I feel that I struggle to get things accomplished.  I feel that I dont put the time in, people reco", "content": "#### Anti-Imposter\n\nI am so grateful that even during a rough time, a time where I feel that I struggle to get things accomplished.  I feel that I dont put the time in, people recognize me for my work.  There are days that I feel that I cannot get the simplest of thing to work, and wonder what am I doing here, I feel like I dont know how to do what I need to, someone pops in to say thanks for my work for them.  Sometimes I feel that I stretch myself too broad and I do too many different types of things to get good at any of them.  Then someone comes my way to ask me how to do it because they know I am one of the few in our area that knows the full spectrum from end to end.  These gentle reminders keep me going.  They remind me that I can do it.  They remind me that no everyone knows what they are doing 100% of the time.  They remind me where I was, and where I am.  They remind me of the progress that I have already made.  They remind me that my goals are always changing and moving, but along the way I have reached so many.  So today, tell someone about the great work that they did, and how it helped you.  Tell them that you have confidence in their work and their hard work is appreciated.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-101'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 101</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_046'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 046</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-18", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_074.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571703", "datetime": "2019-01-18 00:00:00+00:00", "slug": "gratitude/gratitude_074", "jinja": false, "output_html": "markout/gratitude/gratitude_074/index.html", "long_description": "I am so grateful that even during a rough time, a time where I feel that I struggle to get things accomplished.  I feel that I dont put the time in, people recognize me for my work.  There are days that I feel that I cannot get the simplest of thing ", "super_description": "I am so grateful that even during a rough time, a time where I feel that I struggle to get things accomplished.  I feel that I dont put the time in, people recognize me for my work.  There are days that I feel that I cannot get the simplest of thing to work, and wonder what am I doing here, I feel like I dont know how to do what I need to, someone pops in to say thanks for my work for them.  Sometimes I feel that I stretch myself too broad and I do too many different types of things to get good ", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820a60>, next=<frontmatter.Post object at 0x7f3452820430>)"}, {"cover": "", "title": "Gratitude 101", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-101.md", "description": "Christmas has been a blast so far. Everyone has been just having so much fun,", "content": "Christmas has been a blast so far. Everyone has been just having so much fun,\nwith almost no arguing or complaining.  There is so much gratitude shown for\nthe things that we have recieved big or small, fun or utilitarian.  We are sad\nthat we cannot go see our extended family, but its been really nice to have\nthis focused time with just our close family bringing us together even\nstronger.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-164'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 164</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_074'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 074</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-25", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-101.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571709", "datetime": "2021-12-25 00:00:00+00:00", "slug": "gratitude/gratitude-101", "jinja": false, "output_html": "markout/gratitude/gratitude-101/index.html", "long_description": "Christmas has been a blast so far. Everyone has been just having so much fun,", "super_description": "Christmas has been a blast so far. Everyone has been just having so much fun,", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820ca0>, next=<frontmatter.Post object at 0x7f3452820400>)"}, {"cover": "", "title": "Gratitude 164", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-164.md", "description": "Today we went on a family walk around the block and met some of the nicest", "content": "Today we went on a family walk around the block and met some of the nicest\nneighbors.  I am so grateful that we have a nice neighborhood to take the whole\nfamily on walks around.  Dobby did so good at his leash training.  Ayla and I\ncollected trash to throw away, and Wyatt was way ahead of us all with a\nskateboard.  I am so proud of Ayla, part way through it started to sprinkle on\nus and she stayed relatively calm and collected.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-105'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 105</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-101'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 101</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-164.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571714", "datetime": "2022-03-03 00:00:00+00:00", "slug": "gratitude/gratitude-164", "jinja": false, "output_html": "markout/gratitude/gratitude-164/index.html", "long_description": "Today we went on a family walk around the block and met some of the nicest", "super_description": "Today we went on a family walk around the block and met some of the nicest", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820580>, next=<frontmatter.Post object at 0x7f3452820a60>)"}, {"cover": "", "title": "Gratitude 105", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-105.md", "description": "We I have really been trying to get him to do the problem solving as much as I am so grateful that this technology exists and we can make games together.", "content": "We've switched to scratch.  My son and I have one on one time twice per day,\nusually right at his chaotic times while medicine is kicking in.  Generally\nit's Minecrafts as that is a safe place to be as chaotic as we need to be, but\ntoday its been a day of scratch.  Its fun to see how quickly he is picking it\nup, he is already on his own setting up new sprites, reskinning them, and\nsetting up keys to move them around.  I step in with some things that are just\noutside of his zone.  The first time we go through it, it seems like he is\npaying no attention and does not care, but after a few times of going through a\nconcept he seems to be picking it up.\n\nI have really been trying to get him to do the problem solving as much as\npossible, so if we are paired up and I am \"writing\" the code, I try to get him\nto drive as much as possible.  Even if its not a direct we need a forever\nblock, describing to me what the sprite should do and what the player needs to\ndo to make it happen is a huge step.  I try to make him give me as small of a\nstep as he can without pushing too hard because I understand that it is his\ntime that he is a bit chaotic.\n\nI am so grateful that this technology exists and we can make games together.\nThis is totally not something I had as a kid and would have loved to have or\nbeen encouraged to pursue.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-102'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 102</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-164'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 164</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-105.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571720", "datetime": "2021-12-29 00:00:00+00:00", "slug": "gratitude/gratitude-105", "jinja": false, "output_html": "markout/gratitude/gratitude-105/index.html", "long_description": "We I have really been trying to get him to do the problem solving as much as I am so grateful that this technology exists and we can make games together.", "super_description": "We I have really been trying to get him to do the problem solving as much as I am so grateful that this technology exists and we can make games together.", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820c70>, next=<frontmatter.Post object at 0x7f3452820ca0>)"}, {"cover": "", "title": "Gratitude 102", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-102.md", "description": "Today has been a day.  Ayla has been on some serious mood swings and doing some I am so grateful that after this talk we both had a much better night, we", "content": "Today has been a day.  Ayla has been on some serious mood swings and doing some\nvery out of character activity.  At the end of the day we had a nice talk.  We\ntalked about how we both made some mistakes thoughout the day, everyone does\nthey are a part of life.  But we don't need to let those mistakes define how our\nday goes, we get to choose if we continue down a good or bad path for the rest\nof the day.\n\nI am so grateful that after this talk we both had a much better night, we\nunderstood the feelings that each other was processing and were able to really\nturn our night around and have a much better time cooperating with each other\nfrom there on out.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-106'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 106</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-105'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 105</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-26", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-102.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571728", "datetime": "2021-12-26 00:00:00+00:00", "slug": "gratitude/gratitude-102", "jinja": false, "output_html": "markout/gratitude/gratitude-102/index.html", "long_description": "Today has been a day.  Ayla has been on some serious mood swings and doing some I am so grateful that after this talk we both had a much better night, we", "super_description": "Today has been a day.  Ayla has been on some serious mood swings and doing some I am so grateful that after this talk we both had a much better night, we", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34528856a0>, next=<frontmatter.Post object at 0x7f3452820580>)"}, {"cover": "", "title": "Gratitude 106", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-106.md", "description": "Today was a super calm and chill day. It worked out because Rhiannon is coming We were back to Minecraft, this morning we jumped straight into it, all three of", "content": "Today was a super calm and chill day. It worked out because Rhiannon is coming\ndown with something that is hitting her hard.  No covid symptoms yet, we are\nhoping that its not that.  Anyways multiple times today she had asked what are\nthe kids doing. Which is weird because they usually let you know what they are\ndoing without needing to ask.\n\nWe were back to Minecraft, this morning we jumped straight into it, all three of\nus.  I am really proud of how far Wyatt has come towards welcoming and helping\nAyla.  He is doing really well at accepting her and letting her in more to play\nwith us.  Not that he doesn't, we do all get time to interact together, but its\njust becoming more and more regular.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-158'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 158</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-102'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 102</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-30", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-106.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571734", "datetime": "2021-12-30 00:00:00+00:00", "slug": "gratitude/gratitude-106", "jinja": false, "output_html": "markout/gratitude/gratitude-106/index.html", "long_description": "Today was a super calm and chill day. It worked out because Rhiannon is coming We were back to Minecraft, this morning we jumped straight into it, all three of", "super_description": "Today was a super calm and chill day. It worked out because Rhiannon is coming We were back to Minecraft, this morning we jumped straight into it, all three of", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820be0>, next=<frontmatter.Post object at 0x7f3452820c70>)"}, {"cover": "", "title": "Gratitude 158", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-158.md", "description": "Cabinets are cleaned up, well to the best of my ability, and are geting Well let me tell you these had 20 years of greasy grime and dust coating This was so bad", "content": "Cabinets are cleaned up, well to the best of my ability, and are geting\nfilled up.  You might not think this is such a big deal, or what crazy\nperson needs to clean the cabinets of their new house before putting\nanything in them...\n\nWell let me tell you these had 20 years of greasy grime and dust coating\nthem making them feel like a fly trap, giving the kitchen its own\nspecial smell and just waiting for the next poor bug to land on it.\n\nThis was so bad that on the last ones nearest to the stove I had to pull\nout the paint thinner to get the bulk of it off.  in the end they still\nfeel slightly sticky.  Anyways, thanks very much to, not a sponsor,\nDrill Brush for making this happen.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_036'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 036</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-106'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 106</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-25", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-158.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571740", "datetime": "2022-02-25 00:00:00+00:00", "slug": "gratitude/gratitude-158", "jinja": false, "output_html": "markout/gratitude/gratitude-158/index.html", "long_description": "Cabinets are cleaned up, well to the best of my ability, and are geting Well let me tell you these had 20 years of greasy grime and dust coating This was so bad that on the last ones nearest to the stove I had to pull", "super_description": "Cabinets are cleaned up, well to the best of my ability, and are geting Well let me tell you these had 20 years of greasy grime and dust coating This was so bad that on the last ones nearest to the stove I had to pull", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730430>, next=<frontmatter.Post object at 0x7f34528856a0>)"}, {"cover": "", "title": "Gratitude 036", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_036.md", "description": "This morning Wyatt came into our room just as normal, chipper as can be ready to go.  But something was different than normal.  I felt like I had just hit the p", "content": "#### Special Time\n\nThis morning Wyatt came into our room just as normal, chipper as can be ready to go.  But something was different than normal.  I felt like I had just hit the pillow.  I grabbed a phone so that he could go watch something on his own, when I relized that it was 2:30AM.  This is not out of the ordinary for him to have a few days that he is ready to go.  We have learned that this is part of his ADHD and his mind is just running and ready to go.  Fighting  it only makes for starting off what could have been a good day on a bad note.  I let him go downstairs and he stayed quiet for the most part and let everyone sleep.  When I came down just before 6 he greeted me with cheer, let me have my coffee and we proceeded to have some special time.  We build with magnet tiles, legos, played a game, and even went outside to continue carving our path through the woods.  I cherish our special time together in happiness and am glad that we are learning to work with his disorder and have more good days like this.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_017'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 017</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-158'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 158</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-02-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_036.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571745", "datetime": "2018-02-03 00:00:00+00:00", "slug": "gratitude/gratitude_036", "jinja": false, "output_html": "markout/gratitude/gratitude_036/index.html", "long_description": "This morning Wyatt came into our room just as normal, chipper as can be ready to go.  But something was different than normal.  I felt like I had just hit the pillow.  I grabbed a phone so that he could go watch something on his own, when I relized t", "super_description": "This morning Wyatt came into our room just as normal, chipper as can be ready to go.  But something was different than normal.  I felt like I had just hit the pillow.  I grabbed a phone so that he could go watch something on his own, when I relized that it was 2:30AM.  This is not out of the ordinary for him to have a few days that he is ready to go.  We have learned that this is part of his ADHD and his mind is just running and ready to go.  Fighting  it only makes for starting off what could h", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820670>, next=<frontmatter.Post object at 0x7f3452820be0>)"}, {"cover": "", "title": "Gratitude 017", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_017.md", "description": "Breaks are a good time for refresh and focus on some other things.  During this holiday break I have been able to spend quite a bit of time with my beautiful wi", "content": "#### Breaks\n\nBreaks are a good time for refresh and focus on some other things.  During this holiday break I have been able to spend quite a bit of time with my beautiful wife Rhiannon.  I have really enjoyed helping her setup her new adventure [Cuttin Scrap](www.cuttinscrap.com).  It will be a nice creative outlet for her to combine her love of sewing and crafting with her love of speech and writing.  I am really excited to see her get going.\n\n\nWe have also spent some time at nights playing games and watching YouTube.  Its really nice to not have to worry about anything work related and focus on the family.  The extra time has helped strengthen our marriage and allow us to discuss some things that have been on our minds for awhile.  Now its time to start 2018 Fresh and Strong.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-123'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 123</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_036'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 036</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_017.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571751", "datetime": "2018-01-01 00:00:00+00:00", "slug": "gratitude/gratitude_017", "jinja": false, "output_html": "markout/gratitude/gratitude_017/index.html", "long_description": "Breaks are a good time for refresh and focus on some other things.  During this holiday break I have been able to spend quite a bit of time with my beautiful wife Rhiannon.  I have really enjoyed helping her setup her new adventure  We have also spen", "super_description": "Breaks are a good time for refresh and focus on some other things.  During this holiday break I have been able to spend quite a bit of time with my beautiful wife Rhiannon.  I have really enjoyed helping her setup her new adventure  We have also spent some time at nights playing games and watching YouTube.  Its really nice to not have to worry about anything work related and focus on the family.  The extra time has helped strengthen our marriage and allow us to discuss some things that have been", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730040>, next=<frontmatter.Post object at 0x7f3452730430>)"}, {"cover": "", "title": "Gratitude 123", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-123.md", "description": "They are still MIA, we have our hopes up that somethings serious happened, or Rhiannon and I are back to watching supercross as date nights on Saturday.  We", "content": "They are still MIA, we have our hopes up that somethings serious happened, or\nthey are taking the holiday weekend off.  We still have time, but not much, so\nwe started looking into alternatives today so that we arent without a house\nbefore this is done.\n\nRhiannon and I are back to watching supercross as date nights on Saturday.  We\ntook a few years off after an event that happened in Daytona.  We are both\nreally enjoying trying to figure out what has changed since we stopped and\nwatching together each week.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_089'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 089</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_017'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 017</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-17", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-123.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571757", "datetime": "2022-01-17 00:00:00+00:00", "slug": "gratitude/gratitude-123", "jinja": false, "output_html": "markout/gratitude/gratitude-123/index.html", "long_description": "They are still MIA, we have our hopes up that somethings serious happened, or Rhiannon and I are back to watching supercross as date nights on Saturday.  We", "super_description": "They are still MIA, we have our hopes up that somethings serious happened, or Rhiannon and I are back to watching supercross as date nights on Saturday.  We", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730310>, next=<frontmatter.Post object at 0x7f3452820670>)"}, {"cover": "", "title": "Gratitude 089", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_089.md", "description": "Lately has seemed incredibly busy.  I feel like I just dont quite have enough time to the things done that I want to get done. Key word to remember is want.  I ", "content": "#### Keeping Busy\n\n\nLately has seemed incredibly busy.  I feel like I just dont quite have enough time to the things done that I want to get done. Key word to remember is want.  I am extremely grateful that my opinion is valued so much that it keeps me this busy.  I am gratful that the things that **need** to get done, do get done.  I am grateful that I am still able to get **some** of the things that I **want** to get done each day.  Each day is a new one, with exciting challenges along the way.  It's what keeps life exciting.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_020'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 020</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-123'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 123</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-24", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_089.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571763", "datetime": "2019-02-24 00:00:00+00:00", "slug": "gratitude/gratitude_089", "jinja": false, "output_html": "markout/gratitude/gratitude_089/index.html", "long_description": "Lately has seemed incredibly busy.  I feel like I just dont quite have enough time to the things done that I want to get done. Key word to remember is want.  I am extremely grateful that my opinion is valued so much that it keeps me this busy.  I am ", "super_description": "Lately has seemed incredibly busy.  I feel like I just dont quite have enough time to the things done that I want to get done. Key word to remember is want.  I am extremely grateful that my opinion is valued so much that it keeps me this busy.  I am gratful that the things that ", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452820ee0>, next=<frontmatter.Post object at 0x7f3452730040>)"}, {"cover": "", "title": "Gratitude 020", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_020.md", "description": "Recently the kids have really been into singing in the car with Daddy on the way to and from Preshool.  It is so fun, because we are all belting it out so loud,", "content": "#### Good Tunes\n\nRecently the kids have really been into singing in the car with Daddy on the way to and from Preshool.  It is so fun, because we are all belting it out so loud, and each take over for our special parts.  It's interesting how Ayla has grown into liking it.  For the longest time I thought that she did not like Wyatt and I being so loud, but she never complained about it.  Then over the past week I noticed during some parts of the songs she is the **LOUDEST** one in the car.  After each song the kids both ask, \"Did I sing the whole song?\", and I try to get super into it and have a very motivational Radio DJ style of voice encouraging them to continue and tell them how well they did.\n\n>during some parts of the songs she is the **LOUDEST** one in the car.\n\n\n#### Kids Current Favorite songs\n\n* Californication by Red Hot Chili Peppers\n* Stressed Out by Twenty One Pilots\n* Emperor's New Clothes by Panic! at the Disco\n* An 11 Year Old Wrote This About His Bully by Mac Lethal\n* Ride by Twenty One Pilots\n\nP.S. Its so awesome to see how into the Mac Lethal song they are.  It has a really cool message about being kind to others, and treating everyone with respect.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-132'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 132</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_089'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 089</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_020.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571771", "datetime": "2019-01-03 00:00:00+00:00", "slug": "gratitude/gratitude_020", "jinja": false, "output_html": "markout/gratitude/gratitude_020/index.html", "long_description": "Recently the kids have really been into singing in the car with Daddy on the way to and from Preshool.  It is so fun, because we are all belting it out so loud, and each take over for our special parts.  It during some parts of the songs she is the  ", "super_description": "Recently the kids have really been into singing in the car with Daddy on the way to and from Preshool.  It is so fun, because we are all belting it out so loud, and each take over for our special parts.  It during some parts of the songs she is the  Californication by Red Hot Chili Peppers Stressed Out by Twenty One Pilots Emperor An 11 Year Old Wrote This About His Bully by Mac Lethal Ride by Twenty One Pilots P.S. Its so awesome to see how into the Mac Lethal song they are.  It has a really co", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730670>, next=<frontmatter.Post object at 0x7f3452730310>)"}, {"cover": "", "title": "Gratitude 132", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-132.md", "description": "Tonight was the first night with Ayla I got to see our new house today during the home inspection, and it", "content": "Tonight was the first night with Ayla's new routine and it went very\nwell.  I could tell it was much easier and more comfortable for her.\n\nI got to see our new house today during the home inspection, and it\nlooks very nice. It has plenty of space for all of us, and should be\nmuch more maintainable at about half the total square feet that we are\nin right now.  We are all excited to pick out our paint colors and start\ndesigning out our own spaces.  The home inspection went quite well.\nThere was some small maintenance things that he pointed out, but it was\nall really good.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_032'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 032</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_020'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 020</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-26", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-132.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571777", "datetime": "2022-01-26 00:00:00+00:00", "slug": "gratitude/gratitude-132", "jinja": false, "output_html": "markout/gratitude/gratitude-132/index.html", "long_description": "Tonight was the first night with Ayla I got to see our new house today during the home inspection, and it", "super_description": "Tonight was the first night with Ayla I got to see our new house today during the home inspection, and it", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730550>, next=<frontmatter.Post object at 0x7f3452820ee0>)"}, {"cover": "", "title": "Gratitude 032", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_032.md", "description": "This weekend was an abnormally warm January weekend, which meant that we were able to ge the kids out and moving more than normal.  On Saturday we started to bu", "content": "#### Get out and move\n\n\nThis weekend was an abnormally warm January weekend, which meant that we were able to ge the kids out and moving more than normal.  On Saturday we started to build Wyatt Walkers Walking path through the thick brush.  Both kids were really into it and were guiding me through the thick brush letting me know where the path should turn next.  Wyatt kept very busy with his tree pruners trimming the leftover branches.\n\nOn Sunday the kids and I went out to the skate park while mommy had a lunch date with a friend.  Ayla enjoyed throwing a small frisbee off of the top of the pyramid while Wyatt rode his scooter and daddy's skateboard around the park.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-137'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 137</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-132'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 132</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_032.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571783", "datetime": "2018-01-29 00:00:00+00:00", "slug": "gratitude/gratitude_032", "jinja": false, "output_html": "markout/gratitude/gratitude_032/index.html", "long_description": "This weekend was an abnormally warm January weekend, which meant that we were able to ge the kids out and moving more than normal.  On Saturday we started to build Wyatt Walkers Walking path through the thick brush.  Both kids were really into it and", "super_description": "This weekend was an abnormally warm January weekend, which meant that we were able to ge the kids out and moving more than normal.  On Saturday we started to build Wyatt Walkers Walking path through the thick brush.  Both kids were really into it and were guiding me through the thick brush letting me know where the path should turn next.  Wyatt kept very busy with his tree pruners trimming the leftover branches. On Sunday the kids and I went out to the skate park while mommy had a lunch date wit", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527303a0>, next=<frontmatter.Post object at 0x7f3452730670>)"}, {"cover": "", "title": "Gratitude 137", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-137.md", "description": "First full day with Dobby home went fantastically Last night was date night.  It was super fun we are really getting back", "content": "First full day with Dobby home went fantastically!   We did have one\naccident inside the house, he let me know that he needed to go, but I\nwanted to put real pants on first.  Well that didn't work out so well,\npeed right as I set him down.  We live and we learn.  At least we still\nhave a really good pet spot vac from Gizmo's final year where he really\nstarted to have some serious bladder issues.\n\n\nLast night was date night.  It was super fun we are really getting back\ninto the flow of watching supercross every Saturday again.  It brings\nback a ton of memories for me, as I have watched almost every race since\n2005.  It's just been so fun to get back into it with Rhiannon.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_064'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 64</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_032'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 032</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-31", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-137.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571788", "datetime": "2022-01-31 00:00:00+00:00", "slug": "gratitude/gratitude-137", "jinja": false, "output_html": "markout/gratitude/gratitude-137/index.html", "long_description": "First full day with Dobby home went fantastically Last night was date night.  It was super fun we are really getting back", "super_description": "First full day with Dobby home went fantastically Last night was date night.  It was super fun we are really getting back", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527305e0>, next=<frontmatter.Post object at 0x7f3452730550>)"}, {"cover": "", "title": "Gratitude 64", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_064.md", "description": "This morning I was graced with the greatest mood that my son could possibly have.  He was incredibly courteous, grateful, willing to do things on his own.  He g", "content": "#### Good Moods\n\n\nThis morning I was graced with the greatest mood that my son could possibly have.  He was incredibly courteous, grateful, willing to do things on his own.  He got himself dressed, put his own shoes on, and when I told him that we had an early morning Dr. appointment he did not throw a fit and was 100% on board with going.  He was at the top of his game, and as happy as could be.\n\n>   Watching his gratitude and positivity shine this morning was more thatn enough motivation to start my day off on the right foot.\n\nThese are the moments that we long for as parents, and it is important to not brush over them and forget them.  It's important to to watch him grow into a great meaningful member of society.  Watching his gratitude and positivity shine this morning was more thatn enough motivation to start my day off on the right foot, and we did. We dropped off Ayla at preschool, attended his Dr. Appointment then came back to play and continue our wonderful morning.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_087'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 087</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-137'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 137</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_064.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571794", "datetime": "2019-01-03 00:00:00+00:00", "slug": "gratitude/gratitude_064", "jinja": false, "output_html": "markout/gratitude/gratitude_064/index.html", "long_description": "This morning I was graced with the greatest mood that my son could possibly have.  He was incredibly courteous, grateful, willing to do things on his own.  He got himself dressed, put his own shoes on, and when I told him that we had an early morning", "super_description": "This morning I was graced with the greatest mood that my son could possibly have.  He was incredibly courteous, grateful, willing to do things on his own.  He got himself dressed, put his own shoes on, and when I told him that we had an early morning Dr. appointment he did not throw a fit and was 100% on board with going.  He was at the top of his game, and as happy as could be. Watching his gratitude and positivity shine this morning was more thatn enough motivation to start my day off on the r", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730af0>, next=<frontmatter.Post object at 0x7f34527303a0>)"}, {"cover": "", "title": "Gratitude 087", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_087.md", "description": "Lateley I have found myself inside of a few niche communities becoming very well respected for my opinion.  I rememver back a few years as I started getting mor", "content": "#### Community\n\nLateley I have found myself inside of a few niche communities becoming very well respected for my opinion.  I rememver back a few years as I started getting more and more in to programming, I joined these communities within my company.  I came in knowing very little and obsorbing all that I could.  I would seek out the advice of others when my google searches left me lost.  Over the years I absorbed quite a bit of this internal knowlege base and a heap of knowlege from open sources.  As the years have gone by many of the folks I looked up to are gone or absent from the community.  I am finding others seeking my attention more and more.  It is really an amazing feeling of respect when folks not only seek out your help, but respond back hours later with a big thank you and a check out the latest version that includes your ideas.  I am also very grateful for those who have helped along the way, I cannot thank them enough, and owe my getting started on the path I am on to them.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_080'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 080</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_064'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 64</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-16", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_087.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571800", "datetime": "2019-02-16 00:00:00+00:00", "slug": "gratitude/gratitude_087", "jinja": false, "output_html": "markout/gratitude/gratitude_087/index.html", "long_description": "Lateley I have found myself inside of a few niche communities becoming very well respected for my opinion.  I rememver back a few years as I started getting more and more in to programming, I joined these communities within my company.  I came in kno", "super_description": "Lateley I have found myself inside of a few niche communities becoming very well respected for my opinion.  I rememver back a few years as I started getting more and more in to programming, I joined these communities within my company.  I came in knowing very little and obsorbing all that I could.  I would seek out the advice of others when my google searches left me lost.  Over the years I absorbed quite a bit of this internal knowlege base and a heap of knowlege from open sources.  As the year", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527308b0>, next=<frontmatter.Post object at 0x7f34527305e0>)"}, {"cover": "", "title": "Gratitude 080", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_080.md", "description": "This morning Wyatt had a 2 hr delay.  I still took Ayla to school on time.  I did some work, but still had some time for fun on the MineCraft server.  This is a", "content": "#### Fun\n\nThis morning Wyatt had a 2 hr delay.  I still took Ayla to school on time.  I did some work, but still had some time for fun on the MineCraft server.  This is a new world that Wyatt named Nathan.  We did a 20 minute mining session, and at the end wyatt found the first diamonds of the server.  He was in a really fun mood, and we were chatting it up the whole time, working together towards a common goal.  He was so cooperative, taking on tasks of his own, giving me tasks, divying up materials along the way to make sure each could accomplish their task.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-148'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 148</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_087'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 087</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-06", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_080.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571806", "datetime": "2019-02-06 00:00:00+00:00", "slug": "gratitude/gratitude_080", "jinja": false, "output_html": "markout/gratitude/gratitude_080/index.html", "long_description": "This morning Wyatt had a 2 hr delay.  I still took Ayla to school on time.  I did some work, but still had some time for fun on the MineCraft server.  This is a new world that Wyatt named Nathan.  We did a 20 minute mining session, and at the end wya", "super_description": "This morning Wyatt had a 2 hr delay.  I still took Ayla to school on time.  I did some work, but still had some time for fun on the MineCraft server.  This is a new world that Wyatt named Nathan.  We did a 20 minute mining session, and at the end wyatt found the first diamonds of the server.  He was in a really fun mood, and we were chatting it up the whole time, working together towards a common goal.  He was so cooperative, taking on tasks of his own, giving me tasks, divying up materials alon", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527380d0>, next=<frontmatter.Post object at 0x7f3452730af0>)"}, {"cover": "", "title": "Gratitude 148", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-148.md", "description": "It Ok so I can kinda get it wtih the vegan hipsters that don What really hurts is that there are people like Rhiannon dying during It", "content": "It's been a few weeks since I have talked to Mom, It kinda hurts.  I\nreally don't know what to do.  This stupid pandemic is to dang politcal\nfor it's own good.  I for once am standing strong beside my wife and am\nsupporting her the best I can.  Her doctors have told her that there is\nno way her body could survive getting COVID-19 so it is really hard for\nme to understand anyone who chooses to go unvaccinated.\n\nOk so I can kinda get it wtih the vegan hipsters that don't take any\nmodern medication and use yoga to cure their pneumonia.  Not getting the\nvaccine aligns right in with their core values.  But those who are\nslinging fried food, steak, burgers, and beer on a regular basis.  I\nreally cannot fathom a \"my body, my choice\" argument.  It just does not\ncompute with me.  We live in a society that depends on each other.  As\nmuch as some people would like to think they can survive in the woods,\nthe fact is they don't.  They live in a society built on groups of\npeople working together.  The fact that this thing is still going on is\nrediculous.  The fact that DEATH RATES, not just cases is higher than\nwhen it started, with the unvaccinated getting taken down 20x more is\njust insane to me.\n\nWhat really hurts is that there are people like Rhiannon dying during\nthe large spikes because they cannot get the care they need.  Hospitals\nare overwhelmed with unvaccinated, who had a choice in the matter.\nRhiannon is living with an uncurable cancer, she has absolutely no\nchoice in the matter when her body decides it's going to shut down and\nneed an ICU bed.\n\nIt's really just hard to imagine that anyone we thought was close to us\nreally give two fucks about her at the end of the day if they are not\ndoing their part.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-133'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 133</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_080'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 080</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-148.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571814", "datetime": "2022-02-11 00:00:00+00:00", "slug": "gratitude/gratitude-148", "jinja": false, "output_html": "markout/gratitude/gratitude-148/index.html", "long_description": "It Ok so I can kinda get it wtih the vegan hipsters that don What really hurts is that there are people like Rhiannon dying during It", "super_description": "It Ok so I can kinda get it wtih the vegan hipsters that don What really hurts is that there are people like Rhiannon dying during It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730ca0>, next=<frontmatter.Post object at 0x7f34527308b0>)"}, {"cover": "", "title": "Gratitude 133", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-133.md", "description": "Chemo day today, and it seemed like an ok one this time round, Rhiannon was", "content": "Chemo day today, and it seemed like an ok one this time round, Rhiannon was\nable to get a good rest in this afternoon.  That always seems to help her quite\na bit.  The house paperwork is flying in and rhiannon is squashing it as fast\nas it hits our inbox.  I help with what I can, but honestly most of it is done\nwithin minutes of it getting to us.  She is really crushing this beast mode.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-156'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 156</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-148'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 148</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-27", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-133.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571820", "datetime": "2022-01-27 00:00:00+00:00", "slug": "gratitude/gratitude-133", "jinja": false, "output_html": "markout/gratitude/gratitude-133/index.html", "long_description": "Chemo day today, and it seemed like an ok one this time round, Rhiannon was", "super_description": "Chemo day today, and it seemed like an ok one this time round, Rhiannon was", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527308e0>, next=<frontmatter.Post object at 0x7f34527380d0>)"}, {"cover": "", "title": "Gratitude 156", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-156.md", "description": "Long day... We got everything moved over to the new house, and it was a long", "content": "Long day... We got everything moved over to the new house, and it was a long\nday.  My legs are killing from the all the stairs.  The kids did so good with\nall the chaos going on, I am so proud of them.  Now we really get to make this\nhouse ours, we don't have to answer to anyone!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_048'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 048</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-133'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 133</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-23", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-156.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571825", "datetime": "2022-02-23 00:00:00+00:00", "slug": "gratitude/gratitude-156", "jinja": false, "output_html": "markout/gratitude/gratitude-156/index.html", "long_description": "Long day... We got everything moved over to the new house, and it was a long", "super_description": "Long day... We got everything moved over to the new house, and it was a long", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738430>, next=<frontmatter.Post object at 0x7f3452730ca0>)"}, {"cover": "", "title": "Gratitude 048", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_048.md", "description": "Today We had a playdate for the kids.  While its good to get the kids out and interacting with others, its good for the adults as well.  I am not typically one ", "content": "#### Playdate\n\nToday We had a playdate for the kids.  While its good to get the kids out and interacting with others, its good for the adults as well.  I am not typically one to spring up an event with other adults, so its great that the kids drive that for us.  The adults were able to play a board game while the kids were playing.  I am very grateful that I was able to get out and enjoy some time with other adults, and that the kids had a really good afternoon.  The game we played was new to me and was a blast to play.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_033'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 033</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-156'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 156</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-04-22", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_048.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571831", "datetime": "2018-04-22 00:00:00+00:00", "slug": "gratitude/gratitude_048", "jinja": false, "output_html": "markout/gratitude/gratitude_048/index.html", "long_description": "Today We had a playdate for the kids.  While its good to get the kids out and interacting with others, its good for the adults as well.  I am not typically one to spring up an event with other adults, so its great that the kids drive that for us.  Th", "super_description": "Today We had a playdate for the kids.  While its good to get the kids out and interacting with others, its good for the adults as well.  I am not typically one to spring up an event with other adults, so its great that the kids drive that for us.  The adults were able to play a board game while the kids were playing.  I am very grateful that I was able to get out and enjoy some time with other adults, and that the kids had a really good afternoon.  The game we played was new to me and was a blas", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730940>, next=<frontmatter.Post object at 0x7f34527308e0>)"}, {"cover": "", "title": "Gratitude 033", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_033.md", "description": "Today started out like most days, morning routine, kids in the car and headed to preschool.  Since Rhiannon got the January mug at Starbucks we have been stoppi", "content": "#### Safety\n\nToday started out like most days, morning routine, kids in the car and headed to preschool.  Since Rhiannon got the January mug at Starbucks we have been stopping there for the morning coffee on the way to preschool.  As we were leaving a police car came roaring from the parking lot lights on right behind us.  There was an accident at the intersection right in front of Starbucks.  Passing by the accident it clearly looked like one car took more damage than the other, and that it was from being hit by another car and pushed into a pole at a high speed.  My heart goes out to them! It made me really grateful that we have not been in any accidents, especially because we typically drive down a very crazy road in the mornings.  It is not uncommon to come accross accidents along the way.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_059'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 059</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_048'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 048</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_033.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571837", "datetime": "2018-01-29 00:00:00+00:00", "slug": "gratitude/gratitude_033", "jinja": false, "output_html": "markout/gratitude/gratitude_033/index.html", "long_description": "Today started out like most days, morning routine, kids in the car and headed to preschool.  Since Rhiannon got the January mug at Starbucks we have been stopping there for the morning coffee on the way to preschool.  As we were leaving a police car ", "super_description": "Today started out like most days, morning routine, kids in the car and headed to preschool.  Since Rhiannon got the January mug at Starbucks we have been stopping there for the morning coffee on the way to preschool.  As we were leaving a police car came roaring from the parking lot lights on right behind us.  There was an accident at the intersection right in front of Starbucks.  Passing by the accident it clearly looked like one car took more damage than the other, and that it was from being h", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527383a0>, next=<frontmatter.Post object at 0x7f3452738430>)"}, {"cover": "", "title": "Gratitude 059", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_059.md", "description": "There is no substitute for a positive personality.  I am very grateful to have a super positive subset of folks that I work with every day, it really helps to c", "content": "#### Positivity\n\nThere is no substitute for a positive personality.  I am very grateful to have a super positive subset of folks that I work with every day, it really helps to cancel out the negative ones.   I really like what Gary V. says about surrounding yourself with positive people, Keep  only those who are positive arounnd you and let the rest go.  I really struggle to completely shut out anyone from my life, but I do try to focus my interactions to those who are positive and uplifting.  I will give nearly anyone who asks for help in a nice positive way 15mins - 1hr.  Those who come and demand help with negativity are hard to give that time to.  I do not seek them out for help, feedback, or to check in on them.  Keep the positive ones close to you.\n\nAs this one is about positivity I find it odd that it went in a direction about negative folks and was on the edge of not really being a gratitude post.  I guess thats what happens in a short/timed freeflow sometimes.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-117'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 117</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_033'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 033</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-12-13", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_059.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571843", "datetime": "2018-12-13 00:00:00+00:00", "slug": "gratitude/gratitude_059", "jinja": false, "output_html": "markout/gratitude/gratitude_059/index.html", "long_description": "There is no substitute for a positive personality.  I am very grateful to have a super positive subset of folks that I work with every day, it really helps to cancel out the negative ones.   I really like what Gary V. says about surrounding yourself ", "super_description": "There is no substitute for a positive personality.  I am very grateful to have a super positive subset of folks that I work with every day, it really helps to cancel out the negative ones.   I really like what Gary V. says about surrounding yourself with positive people, Keep  only those who are positive arounnd you and let the rest go.  I really struggle to completely shut out anyone from my life, but I do try to focus my interactions to those who are positive and uplifting.  I will give nearly", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452730ee0>, next=<frontmatter.Post object at 0x7f3452730940>)"}, {"cover": "", "title": "Gratitude 117", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-117.md", "description": "What a DAY, the landlord reached out to us last minute asking if he I am so gratefult that we can do all the things that we need without It", "content": "What a DAY, the landlord reached out to us last minute asking if he\ncould show the house we are renting to potential buyers tomorrow, giving\nus only one days notice!  It was a bit chaotic, a lot of emotions around\nletting someone in our house, especially while the biggest wave of COVID\nis in full force.\n\nI am so gratefult that we can do all the things that we need without\nmuch need of bringing anyone into our house.  I am so glad this house\nhas been reliable for use and not needed much maintenance.  For the most\npart our groceries are delivered to us, or for a short period was\ngathered for us and we picked it up.\n\nIt's just so nervewracking letting people in right now.  I am just\nasking for everyone to be ok.  Most people can handle this just fine,\nbut Rhiannon's lungs are barely hanging in there with her current\nillness as is, there is no way she could get through without a least a\nrough hospital stay.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_043'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 043</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_059'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 059</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-10", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-117.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571848", "datetime": "2022-01-10 00:00:00+00:00", "slug": "gratitude/gratitude-117", "jinja": false, "output_html": "markout/gratitude/gratitude-117/index.html", "long_description": "What a DAY, the landlord reached out to us last minute asking if he I am so gratefult that we can do all the things that we need without It", "super_description": "What a DAY, the landlord reached out to us last minute asking if he I am so gratefult that we can do all the things that we need without It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527389d0>, next=<frontmatter.Post object at 0x7f34527383a0>)"}, {"cover": "", "title": "Gratitude 043", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_043.md", "description": "I have recently found a new podcast, The Ken Coleman Show, from the Ramsey network.  I really like Ken", "content": "####  Prep and Reflect\n\nI have recently found a new podcast, The Ken Coleman Show, from the Ramsey network.  I really like Ken's style.  He recently talked about 2 two things that you should do everyday.  Prepare and reflect. If you are not doing these things it is very difficult to progress in your goals.  I really like how the gratitude journal works into the reflect piece of life.  It brings me positivity and a chance to look back on the day.  I like how I am able to reflect on the day, or last few days and find something positive that happened.  It also helps me think about how I can improve myself.  I am  also reflecting throughout the day as I think about things that I might write about in the journal.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-157'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 157</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-117'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 117</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-30", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_043.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571856", "datetime": "2018-03-30 00:00:00+00:00", "slug": "gratitude/gratitude_043", "jinja": false, "output_html": "markout/gratitude/gratitude_043/index.html", "long_description": "I have recently found a new podcast, The Ken Coleman Show, from the Ramsey network.  I really like Ken", "super_description": "I have recently found a new podcast, The Ken Coleman Show, from the Ramsey network.  I really like Ken", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527381f0>, next=<frontmatter.Post object at 0x7f3452730ee0>)"}, {"cover": "", "title": "Gratitude 157", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-157.md", "description": "Another busy one today", "content": "Another busy one today!  Lot's of people in and out of the house to get\nall of our services up and running.  I think we are gettting settled in\npretty well.  Tomorrow we will be able to access our basement, and have\nnothing scheduled, so we will be able to just do the things that we\nneed/want to do without needing to be somewhere else.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_085'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 085</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_043'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 043</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-24", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-157.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571862", "datetime": "2022-02-24 00:00:00+00:00", "slug": "gratitude/gratitude-157", "jinja": false, "output_html": "markout/gratitude/gratitude-157/index.html", "long_description": "Another busy one today", "super_description": "Another busy one today", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738340>, next=<frontmatter.Post object at 0x7f34527389d0>)"}, {"cover": "", "title": "Gratitude 085", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_085.md", "description": "Today is Valentines day, and I have been getting all sorts of love from my family, and it is really amazing.  Rhiannon helped the kids create this massive heart", "content": "#### Oh the Love\n\n\nToday is Valentines day, and I have been getting all sorts of love from my family, and it is really amazing.  Rhiannon helped the kids create this massive heart out of post it notes that include all the ways that the kids love me.  The things they said were so sweet, and really made me feel good.  It really reminded me of the difference I make in their lives every day.  Rhiannon remade a sign that we used to have haning in our house.  It has a saying that we always used to say _\" Forever and Ever\"_.  She made it really modern and it looks amazing.  I also felt really good helping the kids give mommy a present, and giving the kids their presents from me.  Since Ayla was home sick, I decided to bring her a single rose home.  Seeing her face light up when she saw it was well worth it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_067'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 067</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-157'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 157</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_085.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571868", "datetime": "2019-02-14 00:00:00+00:00", "slug": "gratitude/gratitude_085", "jinja": false, "output_html": "markout/gratitude/gratitude_085/index.html", "long_description": "Today is Valentines day, and I have been getting all sorts of love from my family, and it is really amazing.  Rhiannon helped the kids create this massive heart out of post it notes that include all the ways that the kids love me.  The things they sa", "super_description": "Today is Valentines day, and I have been getting all sorts of love from my family, and it is really amazing.  Rhiannon helped the kids create this massive heart out of post it notes that include all the ways that the kids love me.  The things they said were so sweet, and really made me feel good.  It really reminded me of the difference I make in their lives every day.  Rhiannon remade a sign that we used to have haning in our house.  It has a saying that we always used to say ", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34527388e0>, next=<frontmatter.Post object at 0x7f34527381f0>)"}, {"cover": "", "title": "Gratitude 067", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_067.md", "description": "Today I got a meeting invite with two folks that I do not usually get to interact with.  The title, recognition for Waylon Walker... I am very excited to see wh", "content": "####  Recognition from unexpected places\n\nToday I got a meeting invite with two folks that I do not usually get to interact with.  The title, recognition for Waylon Walker... I am very excited to see what it is, and very grateful to have the chance to meet these folks in person.  I do a lot of work that is not necessarily fit my job role, but is something that I know I have skills to do very quickly that many other folks do not.  I fill many of these requests throughout the year, and every once in awhile I get a VERY nice thank you from the person, or their boss.  I am grateful to be able to interact with these positive folks.  It makes me feel really good, and like I am doing a good job.  This particular on is different, and I will not know exactly what it is until Monday.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-115'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 115</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_085'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 085</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-08", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_067.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571874", "datetime": "2019-01-08 00:00:00+00:00", "slug": "gratitude/gratitude_067", "jinja": false, "output_html": "markout/gratitude/gratitude_067/index.html", "long_description": "Today I got a meeting invite with two folks that I do not usually get to interact with.  The title, recognition for Waylon Walker... I am very excited to see what it is, and very grateful to have the chance to meet these folks in person.  I do a lot ", "super_description": "Today I got a meeting invite with two folks that I do not usually get to interact with.  The title, recognition for Waylon Walker... I am very excited to see what it is, and very grateful to have the chance to meet these folks in person.  I do a lot of work that is not necessarily fit my job role, but is something that I know I have skills to do very quickly that many other folks do not.  I fill many of these requests throughout the year, and every once in awhile I get a VERY nice thank you from", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738310>, next=<frontmatter.Post object at 0x7f3452738340>)"}, {"cover": "", "title": "Gratitude 115", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-115.md", "description": "Today we started cleaning up some more things in the garage, quite", "content": "Today we started cleaning up some more things in the garage, quite\ncasually.  I was quite impressed at what a great helper Wyatt was, he\nwas stying on task for quite some time, vaccuuming up some things, and\nfolding up boxes.  It's quite the growth for him to be able to focus on\nsomething for very long at all.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_058'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 058</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_067'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 067</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-08", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-115.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571882", "datetime": "2022-01-08 00:00:00+00:00", "slug": "gratitude/gratitude-115", "jinja": false, "output_html": "markout/gratitude/gratitude-115/index.html", "long_description": "Today we started cleaning up some more things in the garage, quite", "super_description": "Today we started cleaning up some more things in the garage, quite", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738c40>, next=<frontmatter.Post object at 0x7f34527388e0>)"}, {"cover": "", "title": "Gratitude 058", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_058.md", "description": "Lately there has been a rollar coaster running through our house.  So much going on that its hard for everyone ot keep their head above water at all times.  I a", "content": "#### Pick me up when I Fall\n\nLately there has been a rollar coaster running through our house.  So much going on that its hard for everyone ot keep their head above water at all times.  I am grateful that we all have remained on each others team.  Sometimes when we fall we have to help ourselves back up, but it is really nice when there are others there to help us up.  That's what family is for isn't it?  It is amazing to see how others respond when they see you down and jump in with all they can do to help. I recently had a fall (_mental_), and after getting through it felt rediculous.  It has really opened my eyes to how to help people, and how to spot someone who is just having a rough day.  Most people do not have poor intentions, but they can come off that way when they are in a bad place.  Spot these moments in someones day and try to pick them back up.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_065'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 065</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-115'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 115</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-12-12", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_058.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571888", "datetime": "2018-12-12 00:00:00+00:00", "slug": "gratitude/gratitude_058", "jinja": false, "output_html": "markout/gratitude/gratitude_058/index.html", "long_description": "Lately there has been a rollar coaster running through our house.  So much going on that its hard for everyone ot keep their head above water at all times.  I am grateful that we all have remained on each others team.  Sometimes when we fall we have ", "super_description": "Lately there has been a rollar coaster running through our house.  So much going on that its hard for everyone ot keep their head above water at all times.  I am grateful that we all have remained on each others team.  Sometimes when we fall we have to help ourselves back up, but it is really nice when there are others there to help us up.  That", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738b80>, next=<frontmatter.Post object at 0x7f3452738310>)"}, {"cover": "", "title": "Gratitude 065", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_065.md", "description": "Today was filled with Dr. appointments... and Wyatt was still out of school.  Days like this can terrify my sometimes, but Wyatt was completely on board with it", "content": "#### We played hard\n\nToday was filled with Dr. appointments... and Wyatt was still out of school.  Days like this can terrify my sometimes, but Wyatt was completely on board with it and we had a blast the entire day.  We played minecraft pocket edition in the wating room in apt 1, followed by some errands, a wonderful family lunch.  Then we played around a fountain at the last one, and it was a blast.  As he had surgery a week ago it has been awhile since we played this hard... and stayed completely positive the whole time.  We just went with the flow starting with some simple toys we had, to ninja moves, to an epic ninja Herobrine battle.  These are the moments that I yearn for as a parent.  Playing one on one, completely positive, in the flow, no fights, and having a blast.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-140'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 140</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_058'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 058</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_065.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571894", "datetime": "2019-01-04 00:00:00+00:00", "slug": "gratitude/gratitude_065", "jinja": false, "output_html": "markout/gratitude/gratitude_065/index.html", "long_description": "Today was filled with Dr. appointments... and Wyatt was still out of school.  Days like this can terrify my sometimes, but Wyatt was completely on board with it and we had a blast the entire day.  We played minecraft pocket edition in the wating room", "super_description": "Today was filled with Dr. appointments... and Wyatt was still out of school.  Days like this can terrify my sometimes, but Wyatt was completely on board with it and we had a blast the entire day.  We played minecraft pocket edition in the wating room in apt 1, followed by some errands, a wonderful family lunch.  Then we played around a fountain at the last one, and it was a blast.  As he had surgery a week ago it has been awhile since we played this hard... and stayed completely positive the who", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738790>, next=<frontmatter.Post object at 0x7f3452738c40>)"}, {"cover": "", "title": "Gratitude 140", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-140.md", "description": "HUGE SNOW DAY.  Today we got one of the biggest snows we have had since moving Rhiannon scooped the drive... well she hired it out.  I am so grateful for her Wh", "content": "HUGE SNOW DAY.  Today we got one of the biggest snows we have had since moving\nto Illinois nearly 10 years ago.  The one that feels close was the first year\nwe were here, the day Becca came to see us in Minier we got dumped on.  I\nremember calling in that day and the response was well, if you don't think you\ncan make it you can use a vacation day.... it was my first year and my very\nlittle vacation was pro-rated.  Oh what different times we are in now!\n\nRhiannon scooped the drive... well she hired it out.  I am so grateful for her\ndoing that, because as I watched neighbors snowblow their driveways I realized\nhow back breaking shoveling would have been.\n\nWhile everyone else way blowing off their drives after work Wyatt and I were\nenjoying the fruits of Rhiannon's hard work.  We made a really awesome igloo in\nthe pile of snow that turned into a tunnel through the pile.  He was super\nimpressed and was had a ton of fun playing it.\n\n[![Wyatt in the snow tunnel](https://images.waylonwalker.com/wyatt-snow-tunnel-2022.webp)](https://images.waylonwalker.com/wyatt-snow-tunnel-2022-full.webp)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_054'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 054</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_065'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 065</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-140.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571902", "datetime": "2022-02-03 00:00:00+00:00", "slug": "gratitude/gratitude-140", "jinja": false, "output_html": "markout/gratitude/gratitude-140/index.html", "long_description": "HUGE SNOW DAY.  Today we got one of the biggest snows we have had since moving Rhiannon scooped the drive... well she hired it out.  I am so grateful for her While everyone else way blowing off their drives after work Wyatt and I were", "super_description": "HUGE SNOW DAY.  Today we got one of the biggest snows we have had since moving Rhiannon scooped the drive... well she hired it out.  I am so grateful for her While everyone else way blowing off their drives after work Wyatt and I were", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738f70>, next=<frontmatter.Post object at 0x7f3452738b80>)"}, {"cover": "", "title": "Gratitude 054", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_054.md", "description": "Through everything we have gone through we have always came out on top.  Nothing has knocked us down so bad that we cannot get back up.  Some days it may feel l", "content": "#### Hanging in there...\n\nThrough everything we have gone through we have always came out on top.  Nothing has knocked us down so bad that we cannot get back up.  Some days it may feel like we will never recover, but we always do.  Some days everything just is too much and is too overwhelming, but we find our way to the top.  Some days we feel crushed, but somehow we find the strength to kick that boulder off of our chest and rise above.  We are human, we have our good days and out bad days.  Our bad days feel so low we think it may never end, but it always does.  We rise back to the top and crush this thing we call life.  Everyone has their own struggles that they deal with every day, and their own battles to fight.  Next time your down, just remember it will **not** last forever and your day will come to crush it.  We will stand strong, concour our enemies, and rise to the top.\n\n> Forever and Ever.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-168'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 168</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-140'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 140</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-11-13", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_054.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571907", "datetime": "2018-11-13 00:00:00+00:00", "slug": "gratitude/gratitude_054", "jinja": false, "output_html": "markout/gratitude/gratitude_054/index.html", "long_description": "Through everything we have gone through we have always came out on top.  Nothing has knocked us down so bad that we cannot get back up.  Some days it may feel like we will never recover, but we always do.  Some days everything just is too much and is", "super_description": "Through everything we have gone through we have always came out on top.  Nothing has knocked us down so bad that we cannot get back up.  Some days it may feel like we will never recover, but we always do.  Some days everything just is too much and is too overwhelming, but we find our way to the top.  Some days we feel crushed, but somehow we find the strength to kick that boulder off of our chest and rise above.  We are human, we have our good days and out bad days.  Our bad days feel so low we ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be310>, next=<frontmatter.Post object at 0x7f3452738790>)"}, {"cover": "", "title": "Gratitude 168", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-168.md", "description": "Making progress.  Today was a very productive day, brand new door", "content": "Making progress.  Today was a very productive day, brand new door\nhandles on 3 doors,  and nearly got one of the new ceiling fans up.\nMaybe tonight we can continue and get a cabinet up.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-175'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 175</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_054'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 054</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-07", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-168.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571914", "datetime": "2022-03-07 00:00:00+00:00", "slug": "gratitude/gratitude-168", "jinja": false, "output_html": "markout/gratitude/gratitude-168/index.html", "long_description": "Making progress.  Today was a very productive day, brand new door", "super_description": "Making progress.  Today was a very productive day, brand new door", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738e50>, next=<frontmatter.Post object at 0x7f3452738f70>)"}, {"cover": "", "title": "Gratitude 175", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-175.md", "description": "Not a year goes by where this is not a tough day for her, but every year", "content": "Not a year goes by where this is not a tough day for her, but every year\nprogress is made.  Healing was put on hold for many years, and did not\nstart until she was truly able to grieve for what was lost.  Since then\nshe has made so many improvements to herself, she has put in so much\nwork that it is easier.  The hard days around this one get fewer and\nfewer.  Her power on this day grows strong.  All I can say is that I am\ndamn proud of what she has accomplished.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-180'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 180</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-168'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 168</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-16", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-175.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571920", "datetime": "2022-03-16 00:00:00+00:00", "slug": "gratitude/gratitude-175", "jinja": false, "output_html": "markout/gratitude/gratitude-175/index.html", "long_description": "Not a year goes by where this is not a tough day for her, but every year", "super_description": "Not a year goes by where this is not a tough day for her, but every year", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452738af0>, next=<frontmatter.Post object at 0x7f34506be310>)"}, {"cover": "", "title": "Gratitude 180", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-180.md", "description": "Whoof It took a hot minute to get this post started, my template engine had a Currently I have a broken leg and its not so easy to get up and down, so I was Whe", "content": "Whoof It took a hot minute to get this post started, my template engine had a\nbunch of breaking changes.  Today was a therapy day for Wyatt, which can be\nquite chaotic, and it sure did not let down.  He had a great day leading in and\nthrough it, but afterwards is where it all hits the fan.  Today did not\ndisappoint, and I can take a majority of the blame here.  You see, part of him\nand what makes him who he is, cleaning up is INCREDIBLY DIFFICULT for him. Well\ncomplete basement desctruction had happened at some point through the week, but\nwas just discovered.  I generally help quite graciously, at least I hope I do.\nGenerally I try to pick up the best I can after him throughout the day so that\nthings don't go too chaotic, and trust me sometimes it's a lot to keep up with.\n\nCurrently I have a broken leg and its not so easy to get up and down, so I was\npushing him a little harder than I maybe should have.  I really just wanted him\nto take some responsibility and at least help in some way.  I did a great job\nat calmly talking through it with him, but I was not able to help.  But we only\nwent backwards, more legos ended up on the floor than were actually picked up\nand more cardboard scraps were created than were picked up.  I stayed calm and\ndid not push hard, I just stayed with him and talked to him.\n\nWhere I failed is communicating with Rhiannon,  you see she was down with him\nfor about 15 mintues before she had to go.  Once she left I gave them both a\npretty gracious break before we got back to cleaning up.  All felt mostly good,\nbut what I did not realize is that she agreed with him that he had already done\nenough with her and did not need to participate anymore.\n\nIn all, its been quite awhile since I have not just simply picked up after him\nwith very little question.  I feel like I learned something from this\nexperience and hope we all have a better day tomorrow.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-176'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 176</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-175'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 175</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-180.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571926", "datetime": "2022-04-29 00:00:00+00:00", "slug": "gratitude/gratitude-180", "jinja": false, "output_html": "markout/gratitude/gratitude-180/index.html", "long_description": "Whoof It took a hot minute to get this post started, my template engine had a Currently I have a broken leg and its not so easy to get up and down, so I was Where I failed is communicating with Rhiannon,  you see she was down with him In all, its bee", "super_description": "Whoof It took a hot minute to get this post started, my template engine had a Currently I have a broken leg and its not so easy to get up and down, so I was Where I failed is communicating with Rhiannon,  you see she was down with him In all, its been quite awhile since I have not just simply picked up after him", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be430>, next=<frontmatter.Post object at 0x7f3452738e50>)"}, {"cover": "", "title": "Gratitude 176", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-176.md", "description": "Made it through another day, everything just feels so busy since the move.", "content": "Made it through another day, everything just feels so busy since the move.\nMade some great progress though.  I had a small window of time to really make\nsome progress on a project I need done by the end of the month.  I feel like I\nmade some good headway on it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_063'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 063</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-180'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 180</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-17", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-176.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571931", "datetime": "2022-03-17 00:00:00+00:00", "slug": "gratitude/gratitude-176", "jinja": false, "output_html": "markout/gratitude/gratitude-176/index.html", "long_description": "Made it through another day, everything just feels so busy since the move.", "super_description": "Made it through another day, everything just feels so busy since the move.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be160>, next=<frontmatter.Post object at 0x7f3452738af0>)"}, {"cover": "", "title": "Gratitude 063", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_063.md", "description": "2019 I will be more professional looking every day... not just when convenient and to kick it off I got my hair cut today.  I have gone a few months now without", "content": "#### Shaggy No More\n\n2019 I will be more professional looking every day... not just when convenient and to kick it off I got my hair cut today.  I have gone a few months now without a hair cut so I was pretty excited to get the shaggs cut down.  It was very nice to just get out of the house and away for a short period and come back looking like $1M bucks.  Rhiannon has been on me about my hair and my wrickly shirts in the past.  No more, this is the year that I will keep up on it myself without needing my wife to hold my hand!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_049'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 049</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-176'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 176</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-02", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_063.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571937", "datetime": "2019-01-02 00:00:00+00:00", "slug": "gratitude/gratitude_063", "jinja": false, "output_html": "markout/gratitude/gratitude_063/index.html", "long_description": "2019 I will be more professional looking every day... not just when convenient and to kick it off I got my hair cut today.  I have gone a few months now without a hair cut so I was pretty excited to get the shaggs cut down.  It was very nice to just ", "super_description": "2019 I will be more professional looking every day... not just when convenient and to kick it off I got my hair cut today.  I have gone a few months now without a hair cut so I was pretty excited to get the shaggs cut down.  It was very nice to just get out of the house and away for a short period and come back looking like $1M bucks.  Rhiannon has been on me about my hair and my wrickly shirts in the past.  No more, this is the year that I will keep up on it myself without needing my wife to ho", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be670>, next=<frontmatter.Post object at 0x7f34506be430>)"}, {"cover": "", "title": "Gratitude 049", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_049.md", "description": "Today I woke up to find a very inspiring note from Rhiannon.  It was hand writtent front and back", "content": "#### Support\n\nToday I woke up to find a very inspiring note from Rhiannon.  It was hand writtent front and back!  In the note she talked about the stuggles that we have had over the last 2 years, and that while reading through her journal there was one thing that kept her going day in and day out, me.  I have been there through the hard times for her.  Yesterday I heard some news that was very sad for me to hear, and made me very unsure of the future.  She left me this note to let me know that no matter what happens she will be there by my side and we will get through it together.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_047'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 047</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_063'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 063</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-08-30", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_049.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571945", "datetime": "2018-08-30 00:00:00+00:00", "slug": "gratitude/gratitude_049", "jinja": false, "output_html": "markout/gratitude/gratitude_049/index.html", "long_description": "Today I woke up to find a very inspiring note from Rhiannon.  It was hand writtent front and back", "super_description": "Today I woke up to find a very inspiring note from Rhiannon.  It was hand writtent front and back", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be550>, next=<frontmatter.Post object at 0x7f34506be160>)"}, {"cover": "", "title": "Gratitude 047", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_047.md", "description": "Its not something that is handed out by participation.  Being part of the battle does not earn bravery.  Defeating the odds,  going into a battle with passion f", "content": "#### Bravery\n\nIts not something that is handed out by participation.  Being part of the battle does not earn bravery.  Defeating the odds,  going into a battle with passion for the end result, and putting all of your heart into it.  Thats what defines bravery to me.  Last night I saw two family members give excelent examples of bravery.  Last night was the preschool prom night.  Ayla was unable to go, and Rhiannon was very passionate about going with Wyatt.  She has not been feeling well, and being around lots of poeple can make it very difficult at times, but she did it.  She was able to overcome the odds and make it through the prom for him. The other great example of bravery was Wyatt.  While in a very excited mood, with a lot going on around him.  He was able to stand by his mothers side, hold her hand, ask her if she was ok, and ask if there was anything he could do to help her through a rough spot.  He was able to overcome his ADHD, take a deep breath and stand strong for his mother.  This is not the first time that he has done this.  He has been growing up into a brave boy lately.\n\n> He was able to overcome his ADHD, take a deep breath and stand strong for his mother.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_062'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 062</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_049'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 049</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-04-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_047.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571951", "datetime": "2018-04-21 00:00:00+00:00", "slug": "gratitude/gratitude_047", "jinja": false, "output_html": "markout/gratitude/gratitude_047/index.html", "long_description": "Its not something that is handed out by participation.  Being part of the battle does not earn bravery.  Defeating the odds,  going into a battle with passion for the end result, and putting all of your heart into it.  Thats what defines bravery to m", "super_description": "Its not something that is handed out by participation.  Being part of the battle does not earn bravery.  Defeating the odds,  going into a battle with passion for the end result, and putting all of your heart into it.  Thats what defines bravery to me.  Last night I saw two family members give excelent examples of bravery.  Last night was the preschool prom night.  Ayla was unable to go, and Rhiannon was very passionate about going with Wyatt.  She has not been feeling well, and being around lot", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be3a0>, next=<frontmatter.Post object at 0x7f34506be670>)"}, {"cover": "", "title": "Gratitude 062", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_062.md", "description": "It", "content": "#### Productive Break\n\nIt's nearing the end of the annual shutdown. We have had a lot of illness running through the house over the course of the break, but the last couple of days have been very productive.  We have been **Spring Cleaning**.  We have cleared out a lot of unnecessary things, scrubbed the house, and packed up a lot of things in preparation for the upcoming move.  It feels great to finally start to see some progress on these tasks after talking about them for so long.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_030'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 030</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_047'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 047</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_062.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571957", "datetime": "2019-01-01 00:00:00+00:00", "slug": "gratitude/gratitude_062", "jinja": false, "output_html": "markout/gratitude/gratitude_062/index.html", "long_description": "It", "super_description": "It", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be5e0>, next=<frontmatter.Post object at 0x7f34506be550>)"}, {"cover": "", "title": "Gratitude 030", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_030.md", "description": "I am grateful that I have such great friends that are able to help us through a very difficult time.  Today I am able to work and not have to worry about Rhiann", "content": "#### Great Friends\n\nI am grateful that I have such great friends that are able to help us through a very difficult time.  Today I am able to work and not have to worry about Rhiannon or the kids, knowing that someone is home with them.  The peace of mind is invaluable when you have a family member with a severe medical issue.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-181'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 181</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_062'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 062</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-25", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_030.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571963", "datetime": "2018-01-25 00:00:00+00:00", "slug": "gratitude/gratitude_030", "jinja": false, "output_html": "markout/gratitude/gratitude_030/index.html", "long_description": "I am grateful that I have such great friends that are able to help us through a very difficult time.  Today I am able to work and not have to worry about Rhiannon or the kids, knowing that someone is home with them.  The peace of mind is invaluable w", "super_description": "I am grateful that I have such great friends that are able to help us through a very difficult time.  Today I am able to work and not have to worry about Rhiannon or the kids, knowing that someone is home with them.  The peace of mind is invaluable when you have a family member with a severe medical issue.", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be8b0>, next=<frontmatter.Post object at 0x7f34506be3a0>)"}, {"cover": "", "title": "Gratitude 181", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-181.md", "description": "Getting back into a rythm.  It", "content": "Getting back into a rythm.  It's been crazy around here with my broken leg, but\nthings are finally finding their way back into a somewhat normal rythm.  Today\nwas Saturday and it was fairly focused on playing with the kids hacking on my\nblog, and running an errand with everyone.  I nearly have my blog tooling fixed\nup from the issues I was having with copier, and now understand why it was\ncompletely deleting projects any time it had an issue.  I also got my\nscreenshot tool up and running in full force.  I can now take screenshots,\npublish them, and paste right into my blog with a single key.  This is\nsomething that I have really been wanting to add to my workflow for a long\ntime, and am pretty excited to have it running.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_083'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 083</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_030'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 030</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-30", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-181.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571968", "datetime": "2022-04-30 00:00:00+00:00", "slug": "gratitude/gratitude-181", "jinja": false, "output_html": "markout/gratitude/gratitude-181/index.html", "long_description": "Getting back into a rythm.  It", "super_description": "Getting back into a rythm.  It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be9d0>, next=<frontmatter.Post object at 0x7f34506be5e0>)"}, {"cover": "", "title": "Gratitude 083", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_083.md", "description": "This weekend we re-implemented the ticket system in our house.  It is really supposed to help focus ADHD kids.  The kids have been really responsive to it.  Not", "content": "#### Manners\n\nThis weekend we re-implemented the ticket system in our house.  It is really supposed to help focus ADHD kids.  The kids have been really responsive to it.  Not only have they been really helpful to earn tickets so that they can have been cleaning up and doing nice things without being asked to.  They have been arguing less, and playing cooperatively more.  I really hope this is a sign of what is to come.  I am really grateful to have a wife that understands this kind of stuff and can research the latest techniques to help them.  She is just able to pick up and see things in kids that is far above normal.  She is then able to research and implement things to help them that are very targeted to their needs.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-119'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 119</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-181'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 181</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-10", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_083.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571974", "datetime": "2019-02-10 00:00:00+00:00", "slug": "gratitude/gratitude_083", "jinja": false, "output_html": "markout/gratitude/gratitude_083/index.html", "long_description": "This weekend we re-implemented the ticket system in our house.  It is really supposed to help focus ADHD kids.  The kids have been really responsive to it.  Not only have they been really helpful to earn tickets so that they can have been cleaning up", "super_description": "This weekend we re-implemented the ticket system in our house.  It is really supposed to help focus ADHD kids.  The kids have been really responsive to it.  Not only have they been really helpful to earn tickets so that they can have been cleaning up and doing nice things without being asked to.  They have been arguing less, and playing cooperatively more.  I really hope this is a sign of what is to come.  I am really grateful to have a wife that understands this kind of stuff and can research t", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c31f0>, next=<frontmatter.Post object at 0x7f34506be8b0>)"}, {"cover": "", "title": "Gratitude 119", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-119.md", "description": "Let the home buying process begin", "content": "Let the home buying process begin!  Just a few days ago we thought our\nonly option was to continue renting for yet another lease, and here we\nare today working with what seems like a fantastic mortgage company and\nrealator trying to figure out what we want in a house.  I think we are\njust at the point where we would like to be in just a bit better\nsituation before purchasing, but at the same time, we are done getting\nkicked to the street or needing to upgrade every 1-2 years we have\ncurrently lived in 6 different Addresses in the last 10 years, let's\nhope the next 10 have much fewer than this.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_084'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 084</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_083'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 083</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-12", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-119.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571980", "datetime": "2022-01-12 00:00:00+00:00", "slug": "gratitude/gratitude-119", "jinja": false, "output_html": "markout/gratitude/gratitude-119/index.html", "long_description": "Let the home buying process begin", "super_description": "Let the home buying process begin", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506beaf0>, next=<frontmatter.Post object at 0x7f34506be9d0>)"}, {"cover": "", "title": "Gratitude 084", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_084.md", "description": "Today I am very proud of the reputation that I have buit.  I am very well respected inside my community.  My opinions are valued.  I am known to be very reliabl", "content": "#### Reputation\n\n\nToday I am very proud of the reputation that I have buit.  I am very well respected inside my community.  My opinions are valued.  I am known to be very reliable.  I will deliver what I have promised on time, or give plenty heads up that it's not going to happen.  I work in an organization that is very closed doors.  Folks keep their knowledge to themselves, and are generally not willing to help others accross the organization without a kick back.  I give out all of my best knowledge for free, and will at lease give anyone a few mintutes of time to point them in the right direction. I am really proud of where this has lead me, and the reputation I have gained.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_056'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 056</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-119'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 119</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_084.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571988", "datetime": "2019-02-11 00:00:00+00:00", "slug": "gratitude/gratitude_084", "jinja": false, "output_html": "markout/gratitude/gratitude_084/index.html", "long_description": "Today I am very proud of the reputation that I have buit.  I am very well respected inside my community.  My opinions are valued.  I am known to be very reliable.  I will deliver what I have promised on time, or give plenty heads up that it", "super_description": "Today I am very proud of the reputation that I have buit.  I am very well respected inside my community.  My opinions are valued.  I am known to be very reliable.  I will deliver what I have promised on time, or give plenty heads up that it", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506bedc0>, next=<frontmatter.Post object at 0x7f34506c31f0>)"}, {"cover": "", "title": "Gratitude 056", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_056.md", "description": "Today is Thanksgiving here in the United States, what a great day to take a reflection on the past year, and think about what I am grateful for. Ayla is a singi", "content": "#### Reflection\n\nToday is Thanksgiving here in the United States, what a great day to take a reflection on the past year, and think about what I am grateful for.\n\n\nAyla is a singing, speaking, yelling, and screeeeeming pro.  Over this last year she has gone from nearly mute to graduating from Speech therapy!  Her progress has been astounding, and seeing her now you would have no idea where she was one year ago.  I would say she has some of the best enunciation I have heard from a 4 year old.\n\nWyatt got his CPAP, and has a plan to help him start sleeping better.  We are all hoping for the best for this little boy.  Fingers crossed that some sleep will help his ADHD.\n\nI am also very grateful for where our marriage is and where it has came from over the last year.  It has been rocky, but what relationship isn't _we're people_.  But we have learned so much about each other, and continue to get better each and every day.  I think that it's pretty amazing that we can take everything that life throws at us and stay on top!.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-109'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 109</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_084'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 084</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-11-19", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_056.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.571994", "datetime": "2018-11-19 00:00:00+00:00", "slug": "gratitude/gratitude_056", "jinja": false, "output_html": "markout/gratitude/gratitude_056/index.html", "long_description": "Today is Thanksgiving here in the United States, what a great day to take a reflection on the past year, and think about what I am grateful for. Ayla is a singing, speaking, yelling, and screeeeeming pro.  Over this last year she has gone from nearly", "super_description": "Today is Thanksgiving here in the United States, what a great day to take a reflection on the past year, and think about what I am grateful for. Ayla is a singing, speaking, yelling, and screeeeeming pro.  Over this last year she has gone from nearly mute to graduating from Speech therapy Wyatt got his CPAP, and has a plan to help him start sleeping better.  We are all hoping for the best for this little boy.  Fingers crossed that some sleep will help his ADHD. I am also very grateful for where ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506bef70>, next=<frontmatter.Post object at 0x7f34506beaf0>)"}, {"cover": "", "title": "Gratitude 109", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-109.md", "description": "This is the end of the long winter break and time to get back to the normal It", "content": "This is the end of the long winter break and time to get back to the normal\nflow of life.  It's been a great 2 weeks off.  I was able to spend a lot of\nquality time with the kids and get a lot of side project work done.  Markata\nhas come so far, and has made releasing new posts so much easier.\n\nIt's a good time to get a reset and remember what is most important, and not\nlet work me stressed out.  It's always going to be there and stressing over it\nis not going to make much change to it.  We hae a ton of things going on in our\nlife that requires my attention, and thats ok.  This is why I am on such a\nflexible work schedule.  There are times to push and really make a lot of\nprogress, and times to focus on helping family with their needs.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-97'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 096</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_056'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 056</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-02", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-109.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572000", "datetime": "2022-01-02 00:00:00+00:00", "slug": "gratitude/gratitude-109", "jinja": false, "output_html": "markout/gratitude/gratitude-109/index.html", "long_description": "This is the end of the long winter break and time to get back to the normal It", "super_description": "This is the end of the long winter break and time to get back to the normal It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3160>, next=<frontmatter.Post object at 0x7f34506bedc0>)"}, {"cover": "", "title": "Gratitude 096", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-97.md", "description": "It Lately I", "content": "## It's been awhile\n\nIt's been quite awhile since I have done a gratitude journal, like really long,\nbut lately i've felt that it's time to start back up again.\n\n## Doc\n\nLately I've been battling some nasty allergies, today I\nwent to the doctor to get checked out and prescribed some\nmedication that I think is going to make a big difference.\nAparantly my nose was pretty filled up.  I could\ndefinitely feel some immediate relief as my nose started\nclearing up through the day. I am so grateful that\nRhiannon pushed me to getting checked out.  I am so\ngrateful that my doctor took me back in as a patient after\nnot seeing him for so long though the pandemic.  Finally I\nam ready for some relief.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_039'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 039</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-109'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 109</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-22", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-97.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572006", "datetime": "2021-06-22 00:00:00+00:00", "slug": "gratitude/gratitude-97", "jinja": false, "output_html": "markout/gratitude/gratitude-97/index.html", "long_description": "It Lately I", "super_description": "It Lately I", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c33a0>, next=<frontmatter.Post object at 0x7f34506bef70>)"}, {"cover": "", "title": "Gratitude 039", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_039.md", "description": "Yesterday we had the great opportunity to meet with Leis from ramsey Solutions.  We were very honored to be able to meet with such knowledgeable advisor as Leis", "content": "#### Leis\n\nYesterday we had the great opportunity to meet with Leis from ramsey Solutions.  We were very honored to be able to meet with such knowledgeable advisor as Leis.  He confirmed many of the things that we had in our minds and was able to offer a few suggestions for us.  Most of all I was really proud of all fo the work that Rhiannon has done to set up for the future.  The meeting with Leis confirmed that she has done everything possible to set up for success.  She had an answer for all of his questions, and had everything setup that he suggested.  Her organizational skills have really paid off.  I have a really good feeling that we are as well prepared as we can be and on track to succeed in the future.  Thank you Leis for your time! It is greatly appreciated.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_024'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 024</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-97'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 096</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_039.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572011", "datetime": "2018-03-14 00:00:00+00:00", "slug": "gratitude/gratitude_039", "jinja": false, "output_html": "markout/gratitude/gratitude_039/index.html", "long_description": "Yesterday we had the great opportunity to meet with Leis from ramsey Solutions.  We were very honored to be able to meet with such knowledgeable advisor as Leis.  He confirmed many of the things that we had in our minds and was able to offer a few su", "super_description": "Yesterday we had the great opportunity to meet with Leis from ramsey Solutions.  We were very honored to be able to meet with such knowledgeable advisor as Leis.  He confirmed many of the things that we had in our minds and was able to offer a few suggestions for us.  Most of all I was really proud of all fo the work that Rhiannon has done to set up for the future.  The meeting with Leis confirmed that she has done everything possible to set up for success.  She had an answer for all of his ques", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c30d0>, next=<frontmatter.Post object at 0x7f34506c3160>)"}, {"cover": "", "title": "Gratitude 024", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_024.md", "description": "Over the past few years we have recieved tons of support from other people.   This is something that I am very grateful for and we would not be where we are tod", "content": "#### Support\n\nOver the past few years we have recieved tons of support from other people.   This is something that I am very grateful for and we would not be where we are today without it.  Along our journey we have came in contact with some very generous folks.  Yesterday was our opportunity to give a little back  to another.  One of Rhiannon's close friends boyfriends had passed away.  While we did not know him very well, he meant a whole lot to someone who means a whole lot to us.  I am very grateful that we were able to take the day off and make the long trip in good health.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-100'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 100</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_039'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 039</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_024.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572017", "datetime": "2018-01-11 00:00:00+00:00", "slug": "gratitude/gratitude_024", "jinja": false, "output_html": "markout/gratitude/gratitude_024/index.html", "long_description": "Over the past few years we have recieved tons of support from other people.   This is something that I am very grateful for and we would not be where we are today without it.  Along our journey we have came in contact with some very generous folks.  ", "super_description": "Over the past few years we have recieved tons of support from other people.   This is something that I am very grateful for and we would not be where we are today without it.  Along our journey we have came in contact with some very generous folks.  Yesterday was our opportunity to give a little back  to another.  One of Rhiannon", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3430>, next=<frontmatter.Post object at 0x7f34506c33a0>)"}, {"cover": "", "title": "Gratitude 100", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-100.md", "description": "It Best of all we had a special supper, and enjoyed a movie all together, Merry Christmas Everyone.", "content": "It's Christmas eve and the love and excitement is in the air.  It's\ndefinitely been a chaotic day with emotions going high and low.  Ayla\nhas been singing her heart out, she even recorded one on Mommy's phone\nand sent it to me.  Wyatt and I hav play many rounds of Minecraft,\ninstalled a crazy number of new mods, and got a few rounds of 0AD in.\n\n\nBest of all we had a special supper, and enjoyed a movie all together,\nthat's right Wyatt, the king of not being able to stay put for 5 mintues\nenjoyed at least half a movie with us before we cut out early to go\nplay.  I am so grateful that I have this time off to enjoy with them and\nsee them just so happy and joyful.\n\nMerry Christmas Everyone.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_021'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 022</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_024'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 024</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-24", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-100.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572026", "datetime": "2021-12-24 00:00:00+00:00", "slug": "gratitude/gratitude-100", "jinja": false, "output_html": "markout/gratitude/gratitude-100/index.html", "long_description": "It Best of all we had a special supper, and enjoyed a movie all together, Merry Christmas Everyone.", "super_description": "It Best of all we had a special supper, and enjoyed a movie all together, Merry Christmas Everyone.", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3820>, next=<frontmatter.Post object at 0x7f34506c30d0>)"}, {"cover": "", "title": "Gratitude 022", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_021.md", "description": "There is something special about having pure uninterrupted adult time with your spouse.  Last night I went out with Rhiannon and we had an absolute blast.  We w", "content": "#### Adult Time\n\nThere is something special about having pure uninterrupted adult time with your spouse.  Last night I went out with Rhiannon and we had an absolute blast.  We went to the brand new brewery in town \"Industry Brewing Company\".  It was absolutely amazing.  The food was good, but the beer was completely flawless.  There is just something beautiful about something that is so flawless.  Each style I had was brewed to a T.  My favorite of course was the \"Industry Standard\", a super hoppy pale ale.\n\nNext we were off to the local big box quilting store to get some supplies for Rhiannon's next project on Cuttin Scrap.  It was fun, we looked at a bunch of different stuff.  And she was able to talk shop.\n\nAfter that we were off to see the latest Pitch perfect movie. before we were able to do that I required coffee to stay up through the whole thing.  So we went downtown to check out Zion coffee roasters for the first time.  It was a beautiful shop that reminded me of Horizon Line Coffee in downtown Des Moines, Iowa.  We finished the night off in the movies and headed home.\n\nI am so grateful to be able to spend such quality time with my best friend.  We have great friends that are able to watch the crazy kids.  We are able to afford a simple night out.  Lastly Rhiannon and I are getting closer than we ever have before.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-130'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 130</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-100'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 100</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-07", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572032", "datetime": "2018-01-07 00:00:00+00:00", "slug": "gratitude/gratitude_021", "jinja": false, "output_html": "markout/gratitude/gratitude_021/index.html", "long_description": "There is something special about having pure uninterrupted adult time with your spouse.  Last night I went out with Rhiannon and we had an absolute blast.  We went to the brand new brewery in town  Next we were off to the local big box quilting store", "super_description": "There is something special about having pure uninterrupted adult time with your spouse.  Last night I went out with Rhiannon and we had an absolute blast.  We went to the brand new brewery in town  Next we were off to the local big box quilting store to get some supplies for Rhiannon After that we were off to see the latest Pitch perfect movie. before we were able to do that I required coffee to stay up through the whole thing.  So we went downtown to check out Zion coffee roasters for the first", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3f70>, next=<frontmatter.Post object at 0x7f34506c3430>)"}, {"cover": "", "title": "Gratitude 130", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-130.md", "description": "In my 32 years I cannot recall ever dropping an f-bomb in front of my mom, heck", "content": "In my 32 years I cannot recall ever dropping an f-bomb in front of my mom, heck\nbesides a short period in my life were I developed shop mouth I rarely drop\none.  Like twice a year at most.  Tonight it was not only in her presence, it\nwas directed right at her.  I am still processing how I feel about it, but I\nthink it was a discussion that was a long time coming that we needed to have.\nI'm glad to get it off my chest, but I also feel lost and not quite sure where\nto go from here.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-151'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 151</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 022</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-24", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-130.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572038", "datetime": "2022-01-24 00:00:00+00:00", "slug": "gratitude/gratitude-130", "jinja": false, "output_html": "markout/gratitude/gratitude-130/index.html", "long_description": "In my 32 years I cannot recall ever dropping an f-bomb in front of my mom, heck", "super_description": "In my 32 years I cannot recall ever dropping an f-bomb in front of my mom, heck", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3a60>, next=<frontmatter.Post object at 0x7f34506c3820>)"}, {"cover": "", "title": "Gratitude 151", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-151.md", "description": "Today felt like a mostly productive day, I got some good packing in. At the end of the day Dobby and I had a huge play session with lots of", "content": "Today felt like a mostly productive day, I got some good packing in.\nPlayed with the kids.  Wyatt and I continued on with our amazing boat\ncourse in minecraft.\n\nAt the end of the day Dobby and I had a huge play session with lots of\nheavy running back and fourth.  He got a huge workout. I have never seen\nhim move like that, but I could see that it really made him very happy\nto play that heavy with someone.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_052'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 052</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-130'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 130</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-151.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572044", "datetime": "2022-02-14 00:00:00+00:00", "slug": "gratitude/gratitude-151", "jinja": false, "output_html": "markout/gratitude/gratitude-151/index.html", "long_description": "Today felt like a mostly productive day, I got some good packing in. At the end of the day Dobby and I had a huge play session with lots of", "super_description": "Today felt like a mostly productive day, I got some good packing in. At the end of the day Dobby and I had a huge play session with lots of", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3550>, next=<frontmatter.Post object at 0x7f34506c3f70>)"}, {"cover": "", "title": "Gratitude 052", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_052.md", "description": "The past 6 years have taught me a lot about life. Especially about the most important part  ", "content": "#### 6 years\n\nThe past 6 years have taught me a lot about life. Especially about the most important part  **Family**.  Family are those who have your back at any moment, and you have their back at any given moment.  6 years ago we expanded our family when we brought our first child into it.  Since then has been quite the journey.  Throughout those 6 years every single one of use have had our ups and downs, but the others always have our backs and help us through anything.  Not only is that sweet boy turning 6 today, but he is the one that needs a bit of extra attention right now.  We have his back and will help him through his journey.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-110'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 110</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-151'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 151</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-11-09", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_052.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572050", "datetime": "2018-11-09 00:00:00+00:00", "slug": "gratitude/gratitude_052", "jinja": false, "output_html": "markout/gratitude/gratitude_052/index.html", "long_description": "The past 6 years have taught me a lot about life. Especially about the most important part  ", "super_description": "The past 6 years have taught me a lot about life. Especially about the most important part  ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3af0>, next=<frontmatter.Post object at 0x7f34506c3a60>)"}, {"cover": "", "title": "Gratitude 110", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-110.md", "description": "Really the last day before it all starts back up.  Today, I totally Today Ayla and I had a fantastic coloring session.  We each made some", "content": "Really the last day before it all starts back up.  Today, I totally\nthought it was a work day.  Got dressed and everything, popped out the\nlaptop and realized it was a floating holiday.  Well it was a good dry\nrun, cause after a few weeks off getting up and at em on top of getting\neveryone their things they need in the morning I was not getting going\nat the normal time.\n\nToday Ayla and I had a fantastic coloring session.  We each made some\nheart eye emojis to give to each other and they turned out awesome.  She\neven cut them out for me.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-121'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 121</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_052'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 052</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-03", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-110.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572056", "datetime": "2022-01-03 00:00:00+00:00", "slug": "gratitude/gratitude-110", "jinja": false, "output_html": "markout/gratitude/gratitude-110/index.html", "long_description": "Really the last day before it all starts back up.  Today, I totally Today Ayla and I had a fantastic coloring session.  We each made some", "super_description": "Really the last day before it all starts back up.  Today, I totally Today Ayla and I had a fantastic coloring session.  We each made some", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c38e0>, next=<frontmatter.Post object at 0x7f34506c3550>)"}, {"cover": "", "title": "Gratitude 121", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-121.md", "description": "I think we did it", "content": "I think we did it!! We put an offer in on a house, negotiated, and accepted a\ncounter offer.  This is all moving so fast, there is so much more to go, but I\nreally think we are going to have a place to live before we are sent out of\nhere! It is down to the wire, its so close, but there is a really good chance\neverything is going to come together.  I seriously cannot believe this.  In no\nway did we think we were ready less than a week ago, and as we started looking\ninto rentals all the same feelings come back.  The houses are kinda what we\nwant, but never quite the home we imagine, and there is not much we can do\nabout it.  And the fate of where we are next month is always in the fate of\nsomeone elses hands.  Now it's still between us and the bank, but as long as we\nhold up on our end there is not much that can actually happen, unlike renting.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-160'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 160</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-110'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 110</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-121.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572061", "datetime": "2022-01-14 00:00:00+00:00", "slug": "gratitude/gratitude-121", "jinja": false, "output_html": "markout/gratitude/gratitude-121/index.html", "long_description": "I think we did it", "super_description": "I think we did it", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9430>, next=<frontmatter.Post object at 0x7f34506c3af0>)"}, {"cover": "", "title": "Gratitude 160", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-160.md", "description": "Nearly finished.  We have the keys to our old house for one more day, and we", "content": "Nearly finished.  We have the keys to our old house for one more day, and we\nare co close to being finished with it.  Rhiannon has been crushing it over\nthere, like seriously \ud83e\uddb5 crushing it.  She spent most of the day there with the\nmove out cleanup maids, and has gone back to pick up the last of the clutter,\nskim coat holes in the wall, and paint.  It is looking remarkable over there by\nthe video I have seen of the place.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-093-1'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 094</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-121'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 121</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-27", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-160.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572071", "datetime": "2022-02-27 00:00:00+00:00", "slug": "gratitude/gratitude-160", "jinja": false, "output_html": "markout/gratitude/gratitude-160/index.html", "long_description": "Nearly finished.  We have the keys to our old house for one more day, and we", "super_description": "Nearly finished.  We have the keys to our old house for one more day, and we", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3e80>, next=<frontmatter.Post object at 0x7f34506c38e0>)"}, {"cover": "", "title": "Gratitude 094", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-093-1.md", "description": "The weather outside lately has been rainy and dreary, making it difficult for us to get outside much.  Yesterday there was a break of great weather.  The kids a", "content": "### Let's get outside\n\nThe weather outside lately has been rainy and dreary, making it difficult for us to get outside much.  Yesterday there was a break of great weather.  The kids and I took advantage of the opportunity.  We got outside to go on walks, to parks, and even was able to try to fly a little bit, though it was a bit windy for flying.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-127'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 127</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-160'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 160</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-05-20", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-093-1.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572077", "datetime": "2019-05-20 00:00:00+00:00", "slug": "gratitude/gratitude-093-1", "jinja": false, "output_html": "markout/gratitude/gratitude-093-1/index.html", "long_description": "The weather outside lately has been rainy and dreary, making it difficult for us to get outside much.  Yesterday there was a break of great weather.  The kids and I took advantage of the opportunity.  We got outside to go on walks, to parks, and even", "super_description": "The weather outside lately has been rainy and dreary, making it difficult for us to get outside much.  Yesterday there was a break of great weather.  The kids and I took advantage of the opportunity.  We got outside to go on walks, to parks, and even was able to try to fly a little bit, though it was a bit windy for flying.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3d30>, next=<frontmatter.Post object at 0x7f34506c9430>)"}, {"cover": "", "title": "Gratitude 127", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-127.md", "description": "We lost the house we were really dreaming of today. It On the bright side, we found a house that we do really like.  One that if we", "content": "We lost the house we were really dreaming of today. It's been tough.  I think\nthe toughest part is that we are going to have to spend more to get a house\nthat we don't love as much.  This system sucks.\n\nOn the bright side, we found a house that we do really like.  One that if we\nhadn't seen the other would really feel a whole lot better about.  It's\nactually really close and checks a lot of the boxes that our family wants.\nFingers crossed this one is not a crazy as the last.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-153'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 153</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-093-1'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 094</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-127.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572083", "datetime": "2022-01-21 00:00:00+00:00", "slug": "gratitude/gratitude-127", "jinja": false, "output_html": "markout/gratitude/gratitude-127/index.html", "long_description": "We lost the house we were really dreaming of today. It On the bright side, we found a house that we do really like.  One that if we", "super_description": "We lost the house we were really dreaming of today. It On the bright side, we found a house that we do really like.  One that if we", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9790>, next=<frontmatter.Post object at 0x7f34506c3e80>)"}, {"cover": "", "title": "Gratitude 153", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-153.md", "description": "Whew, an exhausting day.  Packing, running with Dobby and the kids, and fully", "content": "Whew, an exhausting day.  Packing, running with Dobby and the kids, and fully\nscooped the drive at two houses.  We had our first chance to just hang out as a\nfamily at the new house, and it was pretty nice.  The kids had a ton of energy\nas one would expect, but it was nice to actually spend some non rushed time\nthere to really poke around at OUR HOUSE.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_034'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 034</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-127'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 127</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-19", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-153.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572089", "datetime": "2022-02-19 00:00:00+00:00", "slug": "gratitude/gratitude-153", "jinja": false, "output_html": "markout/gratitude/gratitude-153/index.html", "long_description": "Whew, an exhausting day.  Packing, running with Dobby and the kids, and fully", "super_description": "Whew, an exhausting day.  Packing, running with Dobby and the kids, and fully", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c90d0>, next=<frontmatter.Post object at 0x7f34506c3d30>)"}, {"cover": "", "title": "Gratitude 034", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_034.md", "description": "Today I am grateful that I am able to communicate with my beautiful wife Rhiannon. I am so glad that we are able to help each other out on our worst days, and k", "content": "#### Communication\n\n\nToday I am grateful that I am able to communicate with my beautiful wife Rhiannon. I am so glad that we are able to help each other out on our worst days, and keep going even after our bad moments.  We are able to grow and build off of each other.  I am grateful that we have an open and honest relationship that we are able to talk about anything.  We have had a rough month, and will continue to have a rough patch until after Feb. 20.  Its to be expected that we have these patches with her illness. I am really grateful that we are able to get through them together, so that we can enjoy the good days.  Good days are coming, lets make the best out of the rough ones together.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_018'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 018</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-153'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 153</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_034.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572095", "datetime": "2018-01-29 00:00:00+00:00", "slug": "gratitude/gratitude_034", "jinja": false, "output_html": "markout/gratitude/gratitude_034/index.html", "long_description": "Today I am grateful that I am able to communicate with my beautiful wife Rhiannon. I am so glad that we are able to help each other out on our worst days, and keep going even after our bad moments.  We are able to grow and build off of each other.  I", "super_description": "Today I am grateful that I am able to communicate with my beautiful wife Rhiannon. I am so glad that we are able to help each other out on our worst days, and keep going even after our bad moments.  We are able to grow and build off of each other.  I am grateful that we have an open and honest relationship that we are able to talk about anything.  We have had a rough month, and will continue to have a rough patch until after Feb. 20.  Its to be expected that we have these patches with her illnes", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9700>, next=<frontmatter.Post object at 0x7f34506c9790>)"}, {"cover": "", "title": "Gratitude 018", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_018.md", "description": "Tonight was the last night of the big holiday vacation and I finally got that special moment with every single family member over break.  It was Ayla I ran out ", "content": "#### My First French Braid\n\nTonight was the last night of the big holiday vacation and I finally got that special moment with every single family member over break.  It was Ayla's turn tonight.  We had our break when Wyatt wanted mommy to play MineCraft with him and did not want daddy to play.  Ayla's hair looked like a bird was trying to built its nest in it.  We made our way upstairs with a spray bottle, comb, brush and a whole lot of excitement.  We filled the spray bottle with water, and I let Ayla start going to town spraying everything in sight.  Although it was explicitly stated that it would not be used for its intended purpose, detangling hair.  Thats ok though as I was able to get some moisture in with my hands.  I continued to do my first french braid on her.  The first attempt was a fail as Ayla was moving too much and I lost it.  The second attemt was a success.  After this Ayla proceeded to water, brush, wipe, and comb daddy's har over the next hour!\n\n\n\nI ran out of time, but I will still mention that she painted her first set of toes.\n\n![](https://images.waylonwalker.com/toes.jpg)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-138'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 138</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_034'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 034</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_018.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572101", "datetime": "2019-01-01 00:00:00+00:00", "slug": "gratitude/gratitude_018", "jinja": false, "output_html": "markout/gratitude/gratitude_018/index.html", "long_description": "Tonight was the last night of the big holiday vacation and I finally got that special moment with every single family member over break.  It was Ayla I ran out of time, but I will still mention that she painted her first set of toes.", "super_description": "Tonight was the last night of the big holiday vacation and I finally got that special moment with every single family member over break.  It was Ayla I ran out of time, but I will still mention that she painted her first set of toes.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9550>, next=<frontmatter.Post object at 0x7f34506c90d0>)"}, {"cover": "", "title": "Gratitude 138", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-138.md", "description": "Boxes came today Dobby is still cute as can be and spent quite a bit of the morning time", "content": "Boxes came today!  Getting ready to really dig into the next phase of\nthis move.  It's a combination of exciting and overwhelming.  I am so\nincredibly grateful that this is the last time that we have to do this\nsemi-unwillingly for a long time!  There is no more landlord, no more\nowner to deal with.  The next place is all for us to decide what to do\nwith.  We get to pick the colors, we get to pick what new appliances to\nput in.  Most importantly we get to choose when we want to move.  We\nwill be in a very stable place where we are in much more control.\n\nDobby is still cute as can be and spent quite a bit of the morning time\nwith me.  In fact he completely fell asleep on my desk for one meeting I\nwas in.  He is so far doing fantastic with all things puppy, fingers\ncrossed that we can continue to guide him to good and not need to battle\nhim every step of the way.  We really could not ask for a better puppy\nfor us!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_014'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 014</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_018'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 018</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-138.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572107", "datetime": "2022-02-01 00:00:00+00:00", "slug": "gratitude/gratitude-138", "jinja": false, "output_html": "markout/gratitude/gratitude-138/index.html", "long_description": "Boxes came today Dobby is still cute as can be and spent quite a bit of the morning time", "super_description": "Boxes came today Dobby is still cute as can be and spent quite a bit of the morning time", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c98b0>, next=<frontmatter.Post object at 0x7f34506c9700>)"}, {"cover": "", "title": "Gratitude 014", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_014.md", "description": "I am currently in the middle of a week long holiday break.  Its nice to take some time off from the everyday hustle to refresh the brain and focus on some other", "content": "#### Time Off\n\nI am currently in the middle of a week long holiday break.  Its nice to take some time off from the everyday hustle to refresh the brain and focus on some other things.  We are able to do quite a bit of traveling and see family that we do not get to see very often.  I am able to spend more time with my wife and the kids.  I have also started making a website for my wife.  Its probably something that I would not otherwise have time to dig deeply into and make nearly the same progress as quickly.\n\n\nThe time in the car can be a nice time to connect.  We have taken quite a bit of time to plan out Rhiannon's new adventure, CuttinScrap.  It is a YouTube channel that will serve as her creative outlet, combining her love of speech and Drama with Crafting.  I am really excited to see her find her voice and get into a rhythm with the channel.  She is really excited as well.  We have been doing a lot of planning and behind the scenes work and anxiously awaiting time to make episode 0.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-169'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 169</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-138'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 138</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_014.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572114", "datetime": "2017-12-29 00:00:00+00:00", "slug": "gratitude/gratitude_014", "jinja": false, "output_html": "markout/gratitude/gratitude_014/index.html", "long_description": "I am currently in the middle of a week long holiday break.  Its nice to take some time off from the everyday hustle to refresh the brain and focus on some other things.  We are able to do quite a bit of traveling and see family that we do not get to ", "super_description": "I am currently in the middle of a week long holiday break.  Its nice to take some time off from the everyday hustle to refresh the brain and focus on some other things.  We are able to do quite a bit of traveling and see family that we do not get to see very often.  I am able to spend more time with my wife and the kids.  I have also started making a website for my wife.  Its probably something that I would not otherwise have time to dig deeply into and make nearly the same progress as quickly. ", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9670>, next=<frontmatter.Post object at 0x7f34506c9550>)"}, {"cover": "", "title": "Gratitude 169", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-169.md", "description": "Tonight we started a new adventure into Blender.  It", "content": "Tonight we started a new adventure into Blender.  It's something that Wyatt has\nbeen asking about for a long time and we finally just did it.  I will say the\nbarrier to entry was way lower than I thought it would be.  Within minutes we\nhad it installed on both of our computers and were sculpting silly characters\nout of virtual clay.  It was so fun.  I am so grateful for the tools that we\nhave available these days for cheap or free.  This type of software was far\nfrom even possible when I was a kid and what was out there was not available to\nkids.  I am excited to see him grow and stretch his muscles into game\ndevelopment, simulation, digital art, or whatever may come of it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_044'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 044</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_014'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 014</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-08", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-169.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572120", "datetime": "2022-03-08 00:00:00+00:00", "slug": "gratitude/gratitude-169", "jinja": false, "output_html": "markout/gratitude/gratitude-169/index.html", "long_description": "Tonight we started a new adventure into Blender.  It", "super_description": "Tonight we started a new adventure into Blender.  It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c99d0>, next=<frontmatter.Post object at 0x7f34506c98b0>)"}, {"cover": "", "title": "Gratitude 044", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_044.md", "description": "Over the course of the winter the kids and I have been creating trails through the woods behind our house.  It has been really fun.  The forrest is really thick", "content": "#### Running\n\nOver the course of the winter the kids and I have been creating trails through the woods behind our house.  It has been really fun.  The forrest is really thick with lots of small bits of brush,  a stream, logs and various old junk.  The kids have enjoyed having a place to get out of the house and stop around.  It has been a great outlet for us.\n\nRecently I have started running on them.  I have been getting better and better.  I feel like I am starting to get back inot a bit of shape where I am not winded within minutes, but can at least make a few laps.  I find the trails really fun to run on, as I have always really struggled running on a track or even sidewalk.  I am always looking for something to make it more exciting.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-154'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 154</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-169'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 169</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-04-13", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_044.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572126", "datetime": "2018-04-13 00:00:00+00:00", "slug": "gratitude/gratitude_044", "jinja": false, "output_html": "markout/gratitude/gratitude_044/index.html", "long_description": "Over the course of the winter the kids and I have been creating trails through the woods behind our house.  It has been really fun.  The forrest is really thick with lots of small bits of brush,  a stream, logs and various old junk.  The kids have en", "super_description": "Over the course of the winter the kids and I have been creating trails through the woods behind our house.  It has been really fun.  The forrest is really thick with lots of small bits of brush,  a stream, logs and various old junk.  The kids have enjoyed having a place to get out of the house and stop around.  It has been a great outlet for us. Recently I have started running on them.  I have been getting better and better.  I feel like I am starting to get back inot a bit of shape where I am n", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9d30>, next=<frontmatter.Post object at 0x7f34506c9670>)"}, {"cover": "", "title": "Gratitude 154", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-154.md", "description": "Big play session tonight with Dobby and the kids, everyone was sprinting While Dobby and Wyatt got a good cuddle session.  Wyatt was so happy.  He said Also got", "content": "Big play session tonight with Dobby and the kids, everyone was sprinting\nthrough the basement like crazy.  All with HUGE smiles on their face. We ran so\nhard for so long that eventually dobby just stopped and laid down.\n\nWhile Dobby and Wyatt got a good cuddle session.  Wyatt was so happy.  He said\nthat it was soo calming for him and he just loved it.  Generally they are both\njust so high energy that Wyatt inadvertantly gets nipped and does not like it.\n\nAlso got a bunch of boxes packed up!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_040'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 0040</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_044'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 044</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-20", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-154.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572131", "datetime": "2022-02-20 00:00:00+00:00", "slug": "gratitude/gratitude-154", "jinja": false, "output_html": "markout/gratitude/gratitude-154/index.html", "long_description": "Big play session tonight with Dobby and the kids, everyone was sprinting While Dobby and Wyatt got a good cuddle session.  Wyatt was so happy.  He said Also got a bunch of boxes packed up", "super_description": "Big play session tonight with Dobby and the kids, everyone was sprinting While Dobby and Wyatt got a good cuddle session.  Wyatt was so happy.  He said Also got a bunch of boxes packed up", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9820>, next=<frontmatter.Post object at 0x7f34506c99d0>)"}, {"cover": "", "title": "Gratitude 0040", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_040.md", "description": "Let This would not have been possible without the help of several folks.  First off Rhiannon, as if you are not on the same page as your wife with finances, you", "content": "#### No More Credit Cards\n\nLet's face it we all know that credit cards are bad and we should not let them get out of control, but you know what life happens and when you dont have an emergency fund in order using one is better than being stranded with a broken car, or missing out on a very important family event.  I am very grateful to say that today we not only do we have a good emergency fund in place, but we also have our last credit card paid off.  I cannot explain how great this feels.   We had stretched ourselves too thin and were using debt for emergencies for a few years, and it had gotten to the point that I felt like we were in an endless cycle that we could never get out of.\n\n\nThis would not have been possible without the help of several folks.  First off Rhiannon, as if you are not on the same page as your wife with finances, you will never fix your financial problems.  Second Dave Ramsey for showing us the light. And finally our friends who have supported us more than we can even thank them for.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_045'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 045</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-154'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 154</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-18", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_040.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572137", "datetime": "2018-03-18 00:00:00+00:00", "slug": "gratitude/gratitude_040", "jinja": false, "output_html": "markout/gratitude/gratitude_040/index.html", "long_description": "Let This would not have been possible without the help of several folks.  First off Rhiannon, as if you are not on the same page as your wife with finances, you will never fix your financial problems.  Second Dave Ramsey for showing us the light. And", "super_description": "Let This would not have been possible without the help of several folks.  First off Rhiannon, as if you are not on the same page as your wife with finances, you will never fix your financial problems.  Second Dave Ramsey for showing us the light. And finally our friends who have supported us more than we can even thank them for.", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9af0>, next=<frontmatter.Post object at 0x7f34506c9d30>)"}, {"cover": "", "title": "Gratitude 045", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_045.md", "description": "Yesterday Rhiannon and I were able to get some much needed time away for some  very overdue haircuts.  It was really nice to be able to just take off and leave ", "content": "#### Time Out\n\nYesterday Rhiannon and I were able to get some much needed time away for some  very overdue haircuts.  It was really nice to be able to just take off and leave the kids with friends on a whim. While it takes all that she's got to go anywhere I am still very grateful that she is able to get out of the house.  It was nice to spend a dreary day out with her.  Dreary days are the best because the air is always fresh and clear of most environmental smoke.\n\n> While it takes all that she's got to go anywhere I am still very grateful that she is able to get out of the house.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_010'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 010</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_040'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 0040</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-04-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_045.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572143", "datetime": "2018-04-14 00:00:00+00:00", "slug": "gratitude/gratitude_045", "jinja": false, "output_html": "markout/gratitude/gratitude_045/index.html", "long_description": "Yesterday Rhiannon and I were able to get some much needed time away for some  very overdue haircuts.  It was really nice to be able to just take off and leave the kids with friends on a whim. While it takes all that she While it takes all that she", "super_description": "Yesterday Rhiannon and I were able to get some much needed time away for some  very overdue haircuts.  It was really nice to be able to just take off and leave the kids with friends on a whim. While it takes all that she While it takes all that she", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf040>, next=<frontmatter.Post object at 0x7f34506c9820>)"}, {"cover": "", "title": "Gratitude 010", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_010.md", "description": "A few months ago my wife and I decided to start going to family therapy, to talk about some things that we could see were only going to get worse without giving", "content": "#### Strong Relationships\n\nA few months ago my wife and I decided to start going to family therapy, to talk about some things that we could see were only going to get worse without giving them some attention.  This is the best decision we have made in our marriage.  We have really learned to relate to the other person, and put ourself in their shoes.  We are learning about how our actions effect the other.\n\n> This is the best decision we have made in our marriage.\n\nWithout taking steps in the right direction our marriage was heading downhill.  Medical needs were taking precidence, and we were both fighing through a dark hole of depression.  After the first session we saw great improvement.  I am grateful that we took the steps to work on our marriage in such a dark time for us on every other aspect of life.  I am grateful that we got a great therapist on first try.  I feel like you rarely get a medical professional that works for you on the first try.  I am grateful that we are both devoted to making it work, and have made great strides in our relationship.  Most of all I am grateful to see how taking the right steps to strengthen our marriage has improved other parts of our life, and made it easier to handle events as they come up.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-143'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 143</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_045'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 045</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-22", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_010.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572149", "datetime": "2017-12-22 00:00:00+00:00", "slug": "gratitude/gratitude_010", "jinja": false, "output_html": "markout/gratitude/gratitude_010/index.html", "long_description": "A few months ago my wife and I decided to start going to family therapy, to talk about some things that we could see were only going to get worse without giving them some attention.  This is the best decision we have made in our marriage.  We have re", "super_description": "A few months ago my wife and I decided to start going to family therapy, to talk about some things that we could see were only going to get worse without giving them some attention.  This is the best decision we have made in our marriage.  We have really learned to relate to the other person, and put ourself in their shoes.  We are learning about how our actions effect the other. This is the best decision we have made in our marriage. Without taking steps in the right direction our marriage was ", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c9c10>, next=<frontmatter.Post object at 0x7f34506c9af0>)"}, {"cover": "", "title": "Gratitude 143", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-143.md", "description": "BOOSTED x2.  Rhiannon is double boosted as of today.  She is so far handling it Tonight is date night, super excited to chill and watch the race with her for", "content": "BOOSTED x2.  Rhiannon is double boosted as of today.  She is so far handling it\nlike a champ.  I can tell it's having its effect on her, but the real effects\nare going to come over the next few days.  I really think the timing is great,\nshe will have some time to recover before the move really starts to happen and\nshe will be fully boosted right as all the major stuff is happening, keeping\nher as absolutely safe as possible.\n\nTonight is date night, super excited to chill and watch the race with her for\nthe night.  This season has been pretty exciting so far and its been really fun\nto get back into it with her.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-179'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 178</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_010'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 010</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-06", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-143.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572157", "datetime": "2022-02-06 00:00:00+00:00", "slug": "gratitude/gratitude-143", "jinja": false, "output_html": "markout/gratitude/gratitude-143/index.html", "long_description": "BOOSTED x2.  Rhiannon is double boosted as of today.  She is so far handling it Tonight is date night, super excited to chill and watch the race with her for", "super_description": "BOOSTED x2.  Rhiannon is double boosted as of today.  She is so far handling it Tonight is date night, super excited to chill and watch the race with her for", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf670>, next=<frontmatter.Post object at 0x7f34506cf040>)"}, {"cover": "", "title": "Gratitude 178", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-179.md", "description": "I cannot believe that I went nearly an entire month witout posting here, well I Today was a bit coastery,  we had some big highs and low lows, but overall the", "content": "I cannot believe that I went nearly an entire month witout posting here, well I\nam back.  Habits are hard to change right, you are either in the flow or not,\nbut once you are on one side transitioning to the other is hard.  That theory\nwill hold up here.  It's time to get back into the things that I love to do.  I\nreally like taking just a few minutes per day to this journal and it will\ncontinue to happen.\n\nToday was a bit coastery,  we had some big highs and low lows, but overall the\nlows were pretty short and we made it through and ended with a chipoltle treat.\nRhianon continued to kick some serious ass on all the house and installed a\nbrand new deadbolt.  It looks super nice and makes for a fantastic updtate to\nour previous old one.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-155'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 155</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-143'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 143</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-27", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-179.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572164", "datetime": "2022-04-27 00:00:00+00:00", "slug": "gratitude/gratitude-179", "jinja": false, "output_html": "markout/gratitude/gratitude-179/index.html", "long_description": "I cannot believe that I went nearly an entire month witout posting here, well I Today was a bit coastery,  we had some big highs and low lows, but overall the", "super_description": "I cannot believe that I went nearly an entire month witout posting here, well I Today was a bit coastery,  we had some big highs and low lows, but overall the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf0d0>, next=<frontmatter.Post object at 0x7f34506c9c10>)"}, {"cover": "", "title": "Gratitude 155", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-155.md", "description": "Big day today", "content": "Big day today!!! Movers are coming to box everything in our house!.  It\nfeels crazy but this move is about to happen.  We could sit back and\njust tlet them do everything, but that is not our style.  I am too cheap\nto let them do everything without me doing as much as I can, and\nRhiannon is too anxious to let them.  She also likes to save money, but\nI dont think its in quite the frugal fashion as me.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_025'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 025</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-179'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 178</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-155.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572170", "datetime": "2022-02-21 00:00:00+00:00", "slug": "gratitude/gratitude-155", "jinja": false, "output_html": "markout/gratitude/gratitude-155/index.html", "long_description": "Big day today", "super_description": "Big day today", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf280>, next=<frontmatter.Post object at 0x7f34506cf670>)"}, {"cover": "", "title": "Gratitude 025", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_025.md", "description": "I am so grateful that I have Rhiannon in my life.  Last night we were able to go out of our way to help a family member in  need.  I am so proud that she is abl", "content": "#### Support\n\n\nI am so grateful that I have Rhiannon in my life.  Last night we were able to go out of our way to help a family member in  need.  I am so proud that she is able to stand up for what is right and help someone who really needs it.  This family member was in a really dark place and Rhiannon was able to spot that and stand up to help her.  This person really just needed someone there for her, to give her a hug, and not feel alone.  I am so proud of Rhiannon for being able to hold this persons hand, and walk her to a better place in life.\n\n\nI think there is a real sense of maturity that comes with being there yourslef and climbing out of that hole and realizing how much better life is on the other side if you can just put your head down, make some hard decisions and consiously control your life and direct it to where you want it to be.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_057'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 057</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-155'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 155</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_025.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572176", "datetime": "2018-01-14 00:00:00+00:00", "slug": "gratitude/gratitude_025", "jinja": false, "output_html": "markout/gratitude/gratitude_025/index.html", "long_description": "I am so grateful that I have Rhiannon in my life.  Last night we were able to go out of our way to help a family member in  need.  I am so proud that she is able to stand up for what is right and help someone who really needs it.  This family member ", "super_description": "I am so grateful that I have Rhiannon in my life.  Last night we were able to go out of our way to help a family member in  need.  I am so proud that she is able to stand up for what is right and help someone who really needs it.  This family member was in a really dark place and Rhiannon was able to spot that and stand up to help her.  This person really just needed someone there for her, to give her a hug, and not feel alone.  I am so proud of Rhiannon for being able to hold this persons hand,", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf9d0>, next=<frontmatter.Post object at 0x7f34506cf0d0>)"}, {"cover": "", "title": "Gratitude 057", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_057.md", "description": "Lately I have been feeling great They say that you can only help others when you are capable of helping yourself, ", "content": "#### Feeling Good\n\nLately I have been feeling great!  Literally great.  We have had a ton going on for awhile and its been a long time that I have truely felt this great.  The benefits are astounding.  They say that you can only help others when you are capable of helping yourself, _oh how that is so true_.  I feel like lately I have been able to keep my cool and help everyone else much better than when not feeling on top of my game.\n\n> They say that you can only help others when you are capable of helping yourself, _oh how that is so true_.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_104'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 104</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_025'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 025</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-12-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_057.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572182", "datetime": "2018-12-01 00:00:00+00:00", "slug": "gratitude/gratitude_057", "jinja": false, "output_html": "markout/gratitude/gratitude_057/index.html", "long_description": "Lately I have been feeling great They say that you can only help others when you are capable of helping yourself, ", "super_description": "Lately I have been feeling great They say that you can only help others when you are capable of helping yourself, ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf430>, next=<frontmatter.Post object at 0x7f34506cf280>)"}, {"cover": "", "title": "Gratitude 104", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_104.md", "description": "SNOW DAY Today was the first day of snow Our snowman at about half of its maximum height.", "content": "SNOW DAY!!!\n\nToday was the first day of snow! The kids and I took full advantage.  We\nscooped the driveway and sidewalk first so that it doesn't build up into\na sheet of ice since it never sees sun this time of year.  We built a\ngiant snow man at its tallest point it was taller than I could reach.\nWe went sledding down the hill by the trail.  Wyatt was the only one\nthat braved the trek all the way to the top.  I made sure that he didn't\nhit the pile of logs at the bottom, but I was afraid I would have hit it\nhard and hurt myself.  Ayla went pretty high up and had the biggest\nsmile on her face the hole time she was going down.\n\n[![snowman](https://images.waylonwalker.com/snowman-dec-28-2021-small.webp)](https://images.waylonwalker.com/snowman-dec-28-2021.jpg)\n\n> Our snowman at about half of its maximum height.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_019'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 019</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_057'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 057</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-28", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_104.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572188", "datetime": "2021-12-28 00:00:00+00:00", "slug": "gratitude/gratitude_104", "jinja": false, "output_html": "markout/gratitude/gratitude_104/index.html", "long_description": "SNOW DAY Today was the first day of snow Our snowman at about half of its maximum height.", "super_description": "SNOW DAY Today was the first day of snow Our snowman at about half of its maximum height.", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf790>, next=<frontmatter.Post object at 0x7f34506cf9d0>)"}, {"cover": "", "title": "Gratitude 019", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_019.md", "description": "Last night stared like any other night. Put the kids to bed, hang out with my Beautiful wife for a while, off to sleep, then Wyatt comes in at the wee hours of ", "content": "#### My Parter\n\nLast night stared like any other night. Put the kids to bed, hang out with my Beautiful wife for a while, off to sleep, then Wyatt comes in at the wee hours of the morning ready to start his day.  The only difference last night was that it was not the wee hours of the day, it was **11:30 PM**.  He was wired and ready to go as if he slept the whole night through.  I am very grateful that I was able to tag team the situation with Rhiannon, as he did not go back to sleep.  We were both able to get some rest through the night.  It may not have been the best, but we were able to make the best out of a tough situation.  In the Morning we had to take the van into the repair shop, and on the way home we were able to discuss some solutions to the problem when it happens in the future.  Rhiannon was able to get the ball rolling with the pediatrician to see their recommendations.  Man I love her, long before I would have even thought to go that route she had already sent the message out.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_028'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 028</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_104'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 104</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-02", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_019.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572194", "datetime": "2018-01-02 00:00:00+00:00", "slug": "gratitude/gratitude_019", "jinja": false, "output_html": "markout/gratitude/gratitude_019/index.html", "long_description": "Last night stared like any other night. Put the kids to bed, hang out with my Beautiful wife for a while, off to sleep, then Wyatt comes in at the wee hours of the morning ready to start his day.  The only difference last night was that it was not th", "super_description": "Last night stared like any other night. Put the kids to bed, hang out with my Beautiful wife for a while, off to sleep, then Wyatt comes in at the wee hours of the morning ready to start his day.  The only difference last night was that it was not the wee hours of the day, it was ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cfaf0>, next=<frontmatter.Post object at 0x7f34506cf430>)"}, {"cover": "", "title": "Gratitude 028", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_028.md", "description": "I am not sure that time heals all wounds, but some wounds just take time.  Yesterday during therapy Rhiannon finally had a chance to talk about some very tough ", "content": "#### Time\n\nI am not sure that time heals all wounds, but some wounds just take time.  Yesterday during therapy Rhiannon finally had a chance to talk about some very tough topics.  It was very tough to talk about at the time, and I did have a bit of a rough afternoon following the appointment.  I am not sure why, but I just needed some space and time.  Today I feel quite a bit better and am ready to start my day on a good note!  I am not sure how long it will take for these wounds to heal but time will help.\n\nI am very grateful that Rhiannon was able to give me some space and time yesterday after our appointment.  I know that it is very difficult for her to see me down.  I am also very grateful that she setup therapy for us and has given us this outlet to discuss topics like this.  I am grateful that we were able to bring it up and talk about it with a neutral party.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-111'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 111</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_019'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 019</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-23", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_028.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572201", "datetime": "2018-01-23 00:00:00+00:00", "slug": "gratitude/gratitude_028", "jinja": false, "output_html": "markout/gratitude/gratitude_028/index.html", "long_description": "I am not sure that time heals all wounds, but some wounds just take time.  Yesterday during therapy Rhiannon finally had a chance to talk about some very tough topics.  It was very tough to talk about at the time, and I did have a bit of a rough afte", "super_description": "I am not sure that time heals all wounds, but some wounds just take time.  Yesterday during therapy Rhiannon finally had a chance to talk about some very tough topics.  It was very tough to talk about at the time, and I did have a bit of a rough afternoon following the appointment.  I am not sure why, but I just needed some space and time.  Today I feel quite a bit better and am ready to start my day on a good note I am very grateful that Rhiannon was able to give me some space and time yesterda", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf8b0>, next=<frontmatter.Post object at 0x7f34506cf790>)"}, {"cover": "", "title": "Gratitude 111", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-111.md", "description": "First day back to work for the new year I feel much more tired after a day of Anyways all went pretty well, It was good to see everyone (online).  There was a", "content": "First day back to work for the new year I feel much more tired after a day of\nwork, never in my life did I think I would say that about office work, but hard\nthinking all day takes more out of you than one realizes.  Being up multiple\ntimes throughout the night also likely plays into it.\n\nAnyways all went pretty well, It was good to see everyone (online).  There was a\nmoment where I was pretty heads down problem solving live in front of two\nco-workers, Actually trying to get their project working for them so they could\ncontinue on without me, and the kids just erupted.  I was so grateful that\nRhiannon had my back, she got the kids what they needed and I was able to finish\nup that working session fairly quick, and get them going.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_055'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 055</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_028'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 028</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-111.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572207", "datetime": "2022-01-04 00:00:00+00:00", "slug": "gratitude/gratitude-111", "jinja": false, "output_html": "markout/gratitude/gratitude-111/index.html", "long_description": "First day back to work for the new year I feel much more tired after a day of Anyways all went pretty well, It was good to see everyone (online).  There was a", "super_description": "First day back to work for the new year I feel much more tired after a day of Anyways all went pretty well, It was good to see everyone (online).  There was a", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cfd30>, next=<frontmatter.Post object at 0x7f34506cfaf0>)"}, {"cover": "", "title": "Gratitude 055", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_055.md", "description": "Ayla was born 4 years ago with her fair share of medical issues.  Most of which are resolved... potty training continues to be a source of difficulty for us.   ", "content": "#### Signs of Improvement\n\nAyla was born 4 years ago with her fair share of medical issues.  Most of which are resolved... potty training continues to be a source of difficulty for us.   We have relaxed and are letting her take the wheel at the moment.  It is slow going, but every once in awhile she shows us a spark of hope that she will get it. Yesterday was one of those days.  It is good to continue to let these moments revive our hope that she can do it and that when we are ready to push her again she will be ready to take charge.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-116'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 116</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-111'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 111</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-11-19", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_055.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572212", "datetime": "2018-11-19 00:00:00+00:00", "slug": "gratitude/gratitude_055", "jinja": false, "output_html": "markout/gratitude/gratitude_055/index.html", "long_description": "Ayla was born 4 years ago with her fair share of medical issues.  Most of which are resolved... potty training continues to be a source of difficulty for us.   We have relaxed and are letting her take the wheel at the moment.  It is slow going, but e", "super_description": "Ayla was born 4 years ago with her fair share of medical issues.  Most of which are resolved... potty training continues to be a source of difficulty for us.   We have relaxed and are letting her take the wheel at the moment.  It is slow going, but every once in awhile she shows us a spark of hope that she will get it. Yesterday was one of those days.  It is good to continue to let these moments revive our hope that she can do it and that when we are ready to push her again she will be ready to ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf940>, next=<frontmatter.Post object at 0x7f34506cf8b0>)"}, {"cover": "", "title": "Gratitude 116", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-116.md", "description": "Supercross is back.  Rhiannon and I took a few years off from watching", "content": "Supercross is back.  Rhiannon and I took a few years off from watching\nsupercross, the first time I had since I was probably 15 or so.  I am\nnot sure what happened mentally, but we had a bad experience while going\nto one live and just kinda stopped watching for a few years, but now we\nare back and it made for a fun date night night in.  I am so glad to\nhave her with me and just as excited to get back into it as I am.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-167'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 167</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_055'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 055</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-09", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-116.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572218", "datetime": "2022-01-09 00:00:00+00:00", "slug": "gratitude/gratitude-116", "jinja": false, "output_html": "markout/gratitude/gratitude-116/index.html", "long_description": "Supercross is back.  Rhiannon and I took a few years off from watching", "super_description": "Supercross is back.  Rhiannon and I took a few years off from watching", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cfc40>, next=<frontmatter.Post object at 0x7f34506cfd30>)"}, {"cover": "", "title": "Gratitude 167", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-167.md", "description": "Today felt felt a bit like a busy one.  It all goes back a few weeks ago So today I wake up to a backed up sink, and after many hours of trying I am so grateful", "content": "Today felt felt a bit like a busy one.  It all goes back a few weeks ago\nto when I was cleaning out and installing washer and dryer.  I had\npushed the washer in and out like 3 times.  well on the last time I\ndecided not I probably was not done yet and I was not going to button it\nup.  Instead I would leave it out a few inches and not install the drain\nhose, because it was probably coming back out soon again anyways.\nWeeealll.... I kinda forgot about this later as I finished mopping up\nand decided to just nudge it back into place on my way out.\n\n\nSo today I wake up to a backed up sink, and after many hours of trying\nto unclog it, I go to the basement to explore for another cleanout\nsomewhere.  Maybe there is something down here that can reach the clog.\nWell to my surprise I walk into the guest bedroom to find two ceiling\ntiles on the floor, about a dozen ruined, along with some mattress\nsheets.  At first I was in complete disbelief of what I was actually\nlooking at, until I remembered what had happened a few weeks ago.\n\nI am so grateful that it simply dropped through some ceiling tiles, and\nonto a tiled floor.  Made for not too bad of a cleanup.  Now as a\nhomeowner I get to fix it and now answer to a landlord.\n\nLesson learned, water on the floor equals check the basement.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_066'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 066</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-116'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 116</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-06", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-167.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572224", "datetime": "2022-03-06 00:00:00+00:00", "slug": "gratitude/gratitude-167", "jinja": false, "output_html": "markout/gratitude/gratitude-167/index.html", "long_description": "Today felt felt a bit like a busy one.  It all goes back a few weeks ago So today I wake up to a backed up sink, and after many hours of trying I am so grateful that it simply dropped through some ceiling tiles, and Lesson learned, water on the floor", "super_description": "Today felt felt a bit like a busy one.  It all goes back a few weeks ago So today I wake up to a backed up sink, and after many hours of trying I am so grateful that it simply dropped through some ceiling tiles, and Lesson learned, water on the floor equals check the basement.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d50d0>, next=<frontmatter.Post object at 0x7f34506cf940>)"}, {"cover": "", "title": "Gratitude 066", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_066.md", "description": "Today we are getting ready for  our big move.  I am very gratefull to have such great friends to help us pack up our junk, and get rid of the things we dont nee", "content": "#### Great Friends\n\nToday we are getting ready for  our big move.  I am very gratefull to have such great friends to help us pack up our junk, and get rid of the things we dont need.  We started our minalist journey 2 years ago and during the last move we ended up with a bunch of boxes that were maybies that we are now getting rid of.  Anyways.  We just finished up a full day of prepping for a move, and our friends were so awesome.  Everyone was super helpful, positive, encouraging and no complaints from anyone.  Some even offered to take some things off of our hands as they would get more use out of them than we would in our new place, much better than seeing them hit the landfill.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-165'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 165</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-167'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 167</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-05", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_066.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572230", "datetime": "2019-01-05 00:00:00+00:00", "slug": "gratitude/gratitude_066", "jinja": false, "output_html": "markout/gratitude/gratitude_066/index.html", "long_description": "Today we are getting ready for  our big move.  I am very gratefull to have such great friends to help us pack up our junk, and get rid of the things we dont need.  We started our minalist journey 2 years ago and during the last move we ended up with ", "super_description": "Today we are getting ready for  our big move.  I am very gratefull to have such great friends to help us pack up our junk, and get rid of the things we dont need.  We started our minalist journey 2 years ago and during the last move we ended up with a bunch of boxes that were maybies that we are now getting rid of.  Anyways.  We just finished up a full day of prepping for a move, and our friends were so awesome.  Everyone was super helpful, positive, encouraging and no complaints from anyone.  S", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cfc10>, next=<frontmatter.Post object at 0x7f34506cfc40>)"}, {"cover": "", "title": "Gratitude 165", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-165.md", "description": "This afternoon Wyatt and I went on a big skate throught the", "content": "This afternoon Wyatt and I went on a big skate throught the\nneighborhood.  He had such a good time he wanted to do a second lap, and\nanother later right at dark.  I am grateful that the sidewalks are so\nnice for us to ride on wtih very few cracks that would fully take anyone\nout. The traffic is also very mild.   There are very few cars on the\nroads and the ones that are there are all going at a vy nice pace.  No\none really races through our neighborhood.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_072'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 072</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_066'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 066</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-165.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572235", "datetime": "2022-03-04 00:00:00+00:00", "slug": "gratitude/gratitude-165", "jinja": false, "output_html": "markout/gratitude/gratitude-165/index.html", "long_description": "This afternoon Wyatt and I went on a big skate throught the", "super_description": "This afternoon Wyatt and I went on a big skate throught the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5310>, next=<frontmatter.Post object at 0x7f34506d50d0>)"}, {"cover": "", "title": "Gratitude 072", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_072.md", "description": "Yesterday was packing day for a big move.  We have been getting ready for a few weeks now... Rhiannon has been getting ready for a few weeks and I kinda helped.", "content": "### Preparation\n\nYesterday was packing day for a big move.  We have been getting ready for a few weeks now... Rhiannon has been getting ready for a few weeks and I kinda helped.  She really nocked this one out of the park.  Everything was so well organized into boxes and labeled we were able to load the truck really fast. She has been pushing herself really hard for a few weeks now.  We were both really impressed with how little the truck was filled.  We got the largest size Uhaul and only filled it half way.  We have had this same truck in the past, and filled it.  We have expanded our family, and yet trimmed down on the stuff.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-134'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 134</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-165'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 165</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-14", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_072.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572243", "datetime": "2019-01-14 00:00:00+00:00", "slug": "gratitude/gratitude_072", "jinja": false, "output_html": "markout/gratitude/gratitude_072/index.html", "long_description": "Yesterday was packing day for a big move.  We have been getting ready for a few weeks now... Rhiannon has been getting ready for a few weeks and I kinda helped.  She really nocked this one out of the park.  Everything was so well organized into boxes", "super_description": "Yesterday was packing day for a big move.  We have been getting ready for a few weeks now... Rhiannon has been getting ready for a few weeks and I kinda helped.  She really nocked this one out of the park.  Everything was so well organized into boxes and labeled we were able to load the truck really fast. She has been pushing herself really hard for a few weeks now.  We were both really impressed with how little the truck was filled.  We got the largest size Uhaul and only filled it half way.  W", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d51f0>, next=<frontmatter.Post object at 0x7f34506cfc10>)"}, {"cover": "", "title": "Gratitude 134", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-134.md", "description": "We got a passing home inspection today.  There were comments on it of course, a", "content": "We got a passing home inspection today.  There were comments on it of course, a\nfew things we need to fix up, and a few things that we requested to be cleared\nup before finalizing the deal.  But nothing seemed like a deal stopper at all.\nRhiannon keeps superstaring all the documents within the hour they hit our\ninbox she has them turned around and back on the different places involved.\nAgain this feels like such a huge process, I am so grateful that we found such\na great team to help us through it successfully.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_088'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 088</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_072'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 072</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-28", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-134.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572249", "datetime": "2022-01-28 00:00:00+00:00", "slug": "gratitude/gratitude-134", "jinja": false, "output_html": "markout/gratitude/gratitude-134/index.html", "long_description": "We got a passing home inspection today.  There were comments on it of course, a", "super_description": "We got a passing home inspection today.  There were comments on it of course, a", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5670>, next=<frontmatter.Post object at 0x7f34506d5310>)"}, {"cover": "", "title": "Gratitude 088", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_088.md", "description": "It", "content": "#### Helping each other\n\nIt's been a bit of a rough go in our family.  Above the normal advanced someone or several of us have been sick nearly all winter.  Rhiannon has seen the worst of the struggle with a very long running congestion.  Through all of this we are here to support each other.  The mental toll of being sick and tending to others who are sick takes a lot out of each of us.  We are still able to work together, pick each other up and keep going. Some days are harder than others, some days we do not feel at our best be we still find the strength to help the others through.  Yesterday Rhiannon helped me through a very rough time.  I am so grateful for her abilitiy to dig into the menal stuff and help out.  This is something that I find very hard to do.  She is great at it.  She is rally able to help me and the kids when we are feeling overwhelmed.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_073'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>gratitude 073</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-134'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 134</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-17", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_088.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572255", "datetime": "2019-02-17 00:00:00+00:00", "slug": "gratitude/gratitude_088", "jinja": false, "output_html": "markout/gratitude/gratitude_088/index.html", "long_description": "It", "super_description": "It", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5460>, next=<frontmatter.Post object at 0x7f34506d51f0>)"}, {"cover": "", "title": "gratitude 073", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_073.md", "description": "We", "content": "#### Great Friends\n\nWe're officially moved into ouur new place today.  I cannot thank all of our great friends enough for helping us get through the move.  They helped us get the truck on the coldest and snowiest day of the year, pack it up in the snow, unload it, and return the truck.  But they did not leave before helping with the kids's number one concern.... **bunk beds**.  Last night two of them pulled a very late night to assemble the kids's bed so they could sleep.  These kids have been talking non-stop for a long time about these bunk beds and they were so excited when they saw them.\n\n**Thank You** everyone who helped us throughout our move!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_071'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 071</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_088'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 088</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-15", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_073.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572260", "datetime": "2019-01-15 00:00:00+00:00", "slug": "gratitude/gratitude_073", "jinja": false, "output_html": "markout/gratitude/gratitude_073/index.html", "long_description": "We", "super_description": "We", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d58b0>, next=<frontmatter.Post object at 0x7f34506d5670>)"}, {"cover": "", "title": "Gratitude 071", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_071.md", "description": "Yesterday we got a call from Wyatt", "content": "#### The Right Words\n\nYesterday we got a call from Wyatt's principal.  It was something that I did not quite know how to deal with.  These things are not in my wheelhouse at all!  Rhiannon jumped right in and was able to talk to him and say all of the right things that he needed to hear.  I was amazed at the way she was able to speak to him with positivity, gratitude, and most of all inspiration.  She did not try to tear him down for what he did, but try to higlight the person that he was in those moments, and paint a picture of the person that he wants to be.  I was just amazed at how she was able to translate what we wanted to see from him into his terms, and give great example of things that he would really care about.  Hang in there mama we are on the right path to help him.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-187'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 187</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_073'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>gratitude 073</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-12", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_071.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572266", "datetime": "2019-01-12 00:00:00+00:00", "slug": "gratitude/gratitude_071", "jinja": false, "output_html": "markout/gratitude/gratitude_071/index.html", "long_description": "Yesterday we got a call from Wyatt", "super_description": "Yesterday we got a call from Wyatt", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5280>, next=<frontmatter.Post object at 0x7f34506d5460>)"}, {"cover": "", "title": "Gratitude 187", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-187.md", "description": "Today I had my first and final physical therapy", "content": "Today I had my first and final physical therapy\nappointment for my knee.  It went really well. I went to\none that we really trust, and he was able to asure me that\neverything was healing and looking well.  He told me what\nto look out for and what to do to keep healing the right\nway.  I am just go grateful that everything has turned out\nwell from this simple accident that could have been even\nworse.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-129'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 129</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_071'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 071</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-13", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-187.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572272", "datetime": "2022-05-13 00:00:00+00:00", "slug": "gratitude/gratitude-187", "jinja": false, "output_html": "markout/gratitude/gratitude-187/index.html", "long_description": "Today I had my first and final physical therapy", "super_description": "Today I had my first and final physical therapy", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5550>, next=<frontmatter.Post object at 0x7f34506d58b0>)"}, {"cover": "", "title": "Gratitude 129", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-129.md", "description": "It all started when we decided to celebrate buying our house \ud83c\udf89.  We decided", "content": "It all started when we decided to celebrate buying our house \ud83c\udf89.  We decided\nscrew making supper and doing dishes, we are going to order something.  We got\npizza for the kids and burritos for the parents.  Rhiannons did not come out\nquite as good as she would have hoped, so she barely ate any.  Little did she\nknow the storm that burrito bowl was brewing.  She was throwing up all last\nnight and just trying to get comfortable and make it through the day today.  I\nam very grateful for our kids patience and understanding trying to get her what\nshe needs to get through the day.  Sadly we are likely going to have to cancel\nour SuperCross date night tonight to let her finally get some rest, but we can\nalways watch it not live tomorrow.  Let's hope for a better day for her\ntomorrow.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-185'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 185</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-187'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 187</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-23", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-129.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572278", "datetime": "2022-01-23 00:00:00+00:00", "slug": "gratitude/gratitude-129", "jinja": false, "output_html": "markout/gratitude/gratitude-129/index.html", "long_description": "It all started when we decided to celebrate buying our house \ud83c\udf89.  We decided", "super_description": "It all started when we decided to celebrate buying our house \ud83c\udf89.  We decided", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5820>, next=<frontmatter.Post object at 0x7f34506d5280>)"}, {"cover": "", "title": "Gratitude 185", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-185.md", "description": "Today we got out of the house for a walk around the neighborhood.  It", "content": "Today we got out of the house for a walk around the neighborhood.  It\nfeels good to help everyone get back out and active.  I can't skate with\nthe kids yet, but they can still ride their scooters.  Rhiannon came\nwith us and I am very grateful, because Ayla was really struggling and\nneeded a whole parent to focus on her.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-149'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 149</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-129'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 129</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-10", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-185.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572285", "datetime": "2022-05-10 00:00:00+00:00", "slug": "gratitude/gratitude-185", "jinja": false, "output_html": "markout/gratitude/gratitude-185/index.html", "long_description": "Today we got out of the house for a walk around the neighborhood.  It", "super_description": "Today we got out of the house for a walk around the neighborhood.  It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5b80>, next=<frontmatter.Post object at 0x7f34506d5550>)"}, {"cover": "", "title": "Gratitude 149", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-149.md", "description": "I am so proud of Ayla and all of the progress she has made lately.  She is She has been doing really well with her peristeen and getting her independence Today ", "content": "I am so proud of Ayla and all of the progress she has made lately.  She is\ndoing really well with Mr. Black, her teacher from school.  He has been really\ngood at helping us navigate what to expect.  Rhiannon has been giving her gum\nduring school and it really seems to help her ability to focus and work.\n\nShe has been doing really well with her peristeen and getting her independence\nback.  It's really hard for her to want to do it, but she does really good at\nunderstanding that she needs to do it.\n\nToday she gave me her number, oh and her house is 4.\n\n[![Ayla's Nummber from feb 2022](https://images.waylonwalker.com/aylas-number-feb-2022.webp)](https://images.waylonwalker.com/aylas-number-feb-2022-full.webp)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-178'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 178</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-185'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 185</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-12", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-149.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572291", "datetime": "2022-02-12 00:00:00+00:00", "slug": "gratitude/gratitude-149", "jinja": false, "output_html": "markout/gratitude/gratitude-149/index.html", "long_description": "I am so proud of Ayla and all of the progress she has made lately.  She is She has been doing really well with her peristeen and getting her independence Today she gave me her number, oh and her house is 4.", "super_description": "I am so proud of Ayla and all of the progress she has made lately.  She is She has been doing really well with her peristeen and getting her independence Today she gave me her number, oh and her house is 4.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5e50>, next=<frontmatter.Post object at 0x7f34506d5820>)"}, {"cover": "", "title": "Gratitude 178", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-178.md", "description": "It", "content": "It's Chemo Day once again.  And once again the emotional toll is high on\neveryone.  I am not sure what has been going on for the last few months,\nbut I feel so bad for Rhiannon.  I just want to support her, show my\nlove, and give her everything she needs on chemo day, but lately it's\nbeen hard.  There has been some emotional toll that seems to just\nmultiply on everyone and make it really hard to put her at the forefront\nwithout everything else falling apart.  I wish I understood it better.\nHopefully we can find our groove again and get back to giving her what\nshe needs on these days.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-144'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 144</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-149'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 149</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-31", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-178.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572297", "datetime": "2022-03-31 00:00:00+00:00", "slug": "gratitude/gratitude-178", "jinja": false, "output_html": "markout/gratitude/gratitude-178/index.html", "long_description": "It", "super_description": "It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5c40>, next=<frontmatter.Post object at 0x7f34506d5b80>)"}, {"cover": "", "title": "Gratitude 144", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-144.md", "description": "Today it warmed up quite a bit and the sun was in full force on the big It was super fun and soemthing I home we talk about for years to come.", "content": "Today it warmed up quite a bit and the sun was in full force on the big\ndump of snow that we got last week.  It made just the most epically\npackable snow.  This is something that we dont often see in our area so\nwe took full advantage.  The front yard was fully shaded and was still\npowder, but the back yard had this packing snow.  I wanted to build a\nhuge snowman in the back and Wyatt wanted to continue his fort in the\nfront.  We compromised and built a fort in the back.\n\nIt was super fun and soemthing I home we talk about for years to come.\nIt turned out as the most epic igloo that I have ever witnessed in\nperson.  It was surprisingly easy to build with the nearly slushy snow\nthat we had today. He was so excited to show Rhiannon that he did a\nvideo call wtih with her right from the comfort of the igloo.\n\n[![Wyatt standing next to our epic igloo](https://images.waylonwalker.com/wyatt-igloo-2022.webp)](https://images.waylonwalker.com/wyatt-igloo-2022-full.webp)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_016'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 016</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-178'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 178</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-07", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-144.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572302", "datetime": "2022-02-07 00:00:00+00:00", "slug": "gratitude/gratitude-144", "jinja": false, "output_html": "markout/gratitude/gratitude-144/index.html", "long_description": "Today it warmed up quite a bit and the sun was in full force on the big It was super fun and soemthing I home we talk about for years to come.", "super_description": "Today it warmed up quite a bit and the sun was in full force on the big It was super fun and soemthing I home we talk about for years to come.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db430>, next=<frontmatter.Post object at 0x7f34506d5e50>)"}, {"cover": "", "title": "Gratitude 016", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_016.md", "description": "Last night we made a long trip back from my In-Laws.  Which was a great day by the way.  Sometimes we struggle with Wyatt When we got home Wyatt just finished u", "content": "#### One on One time\n\nLast night we made a long trip back from my In-Laws.  Which was a great day by the way.  Sometimes we struggle with Wyatt's energy in a house with lots of breakable items, but he did great yesterday.  When we got home Wyatt just finished up with a good two hour nap and was wired... at 11:00 PM.  He was hungry, as he was too excited to play while at grandmas house and did not eat much.  I sat up with him,  we shared a peanut butter sandwich and got out a new pack of trolls characters and worked on finding all of their names.\n\n>When we got home Wyatt just finished up with a good two hour nap and was wired... at 11:00 PM\n\n\nMoments like these do not seem to come often enough.  I really enjoy playing with the whole family and the full level of craziness that it brings, but having a calm one on one time with one member of the family seems extra special.  It was the perfect ending to a long day with lots of packing, travel, and excitement.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_041'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 0040</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-144'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 144</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_016.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572308", "datetime": "2017-12-21 00:00:00+00:00", "slug": "gratitude/gratitude_016", "jinja": false, "output_html": "markout/gratitude/gratitude_016/index.html", "long_description": "Last night we made a long trip back from my In-Laws.  Which was a great day by the way.  Sometimes we struggle with Wyatt When we got home Wyatt just finished up with a good two hour nap and was wired... at 11:00 PM Moments like these do not seem to ", "super_description": "Last night we made a long trip back from my In-Laws.  Which was a great day by the way.  Sometimes we struggle with Wyatt When we got home Wyatt just finished up with a good two hour nap and was wired... at 11:00 PM Moments like these do not seem to come often enough.  I really enjoy playing with the whole family and the full level of craziness that it brings, but having a calm one on one time with one member of the family seems extra special.  It was the perfect ending to a long day with lots o", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5d30>, next=<frontmatter.Post object at 0x7f34506d5c40>)"}, {"cover": "", "title": "Gratitude 0040", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_041.md", "description": "Today has been a really relaxing day", "content": "#### I slept in\n\nToday has been a really relaxing day!  I woke up this morning Rhiannon was with Ayla, and Wyatt was downstairs with some friends staying in the house, so I continued sleeping until I was ready to get up.  After getting up I helped Ayla with potty training for awhile,  in which we racked up 3 sticker! Then Wyatt and I went out sledding in this epic snow that we were blessed with today.  It was a thick heavy, and perfect sledding snow.  We built a tall takeoff ramp, and continued sledding for quite awile.  It was a bit tiring from the weight of the snow, but it was super fun.  The reason that I say that we were blessed with this snow is that the fires have stopped.  Every trip we  leave the house this past week has ended up with us running into a thick smoke from folks burning grass and brush.  This landed us in the hospital once, and Rhiannon in strong pain the other times.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-142'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 142</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_016'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 016</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-24", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_041.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572314", "datetime": "2018-03-24 00:00:00+00:00", "slug": "gratitude/gratitude_041", "jinja": false, "output_html": "markout/gratitude/gratitude_041/index.html", "long_description": "Today has been a really relaxing day", "super_description": "Today has been a really relaxing day", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506d5e80>, next=<frontmatter.Post object at 0x7f34506db430>)"}, {"cover": "", "title": "Gratitude 142", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-142.md", "description": "Today I got some good Dobby training time in.  He and I took a long walk", "content": "Today I got some good Dobby training time in.  He and I took a long walk\naround the park. He did really good, even in the deep snow that we have\ngoing on.  Later on tonight we did a bit of training.  This was my first\nchance at training with treats, and its amazing how fast just a young\npup is picking up commands.  He seems REALLY smart compared to most\nother animals that I have had close contact with.  It could also be that\nwith Rhiannons great research we are starting him off on the right foot.\n\n[![Dobby Jumping Through the Snow](https://images.waylonwalker.com/dobby-snow-jump-feb-2022.webp)](https://images.waylonwalker.com/dobby-snow-jump-feb-2022-full.webp)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-99'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 099</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_041'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 0040</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-05", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-142.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572320", "datetime": "2022-02-05 00:00:00+00:00", "slug": "gratitude/gratitude-142", "jinja": false, "output_html": "markout/gratitude/gratitude-142/index.html", "long_description": "Today I got some good Dobby training time in.  He and I took a long walk", "super_description": "Today I got some good Dobby training time in.  He and I took a long walk", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db160>, next=<frontmatter.Post object at 0x7f34506d5d30>)"}, {"cover": "", "title": "Gratitude 099", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-99.md", "description": "So much for better sleep, we made it to 2:00 am before kids were up. Today I played a new game with wyatt called 0A.D its a real time", "content": "So much for better sleep, we made it to 2:00 am before kids were up.\nThey were exhausted today, fingers crossed for tomorrow.I\n\nToday I played a new game with wyatt called 0A.D its a real time\nstrategy game similar to Age of Empires, we had a blast.  Honestly its\nprobably more up my alley than his so I don't see us playing it too\nmuch.  It was fun to mix up our normal Minecraft time with something\nnew, but it was pretty complicated and a completely new category of game\nso it was quite overwhelming with new content, and felt very fast paced.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-139'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 139</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-142'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 142</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-23", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-99.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572331", "datetime": "2021-12-23 00:00:00+00:00", "slug": "gratitude/gratitude-99", "jinja": false, "output_html": "markout/gratitude/gratitude-99/index.html", "long_description": "So much for better sleep, we made it to 2:00 am before kids were up. Today I played a new game with wyatt called 0A.D its a real time", "super_description": "So much for better sleep, we made it to 2:00 am before kids were up. Today I played a new game with wyatt called 0A.D its a real time", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db670>, next=<frontmatter.Post object at 0x7f34506d5e80>)"}, {"cover": "", "title": "Gratitude 139", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-139.md", "description": "Today Ayla was quarantined in her room after having a sick evening yesterday. Oh and I would drop by with dobby at the door each time we needed to go out for", "content": "Today Ayla was quarantined in her room after having a sick evening yesterday.\nShe seems to be doing great overall today, no more symptoms.  I completely\nexpect tomorrow to be back to normal.  We set her up with all sorts of fun\nactivities and meals in her room.  We even gave her one of our Alexas so that\nshe could drop into my office anytime that she needed.  She would drop in, tell\nme jokes, and all about the things she was up to.  Overall I am very impressed\nwith how well she did today.  She is so good with all of these kind of things.\n\nOh and I would drop by with dobby at the door each time we needed to go out for\na puppy peek to help us feel better, it would bring the biggest smile to her\nface each time.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-152'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 152</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-99'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 099</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-02", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-139.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572337", "datetime": "2022-02-02 00:00:00+00:00", "slug": "gratitude/gratitude-139", "jinja": false, "output_html": "markout/gratitude/gratitude-139/index.html", "long_description": "Today Ayla was quarantined in her room after having a sick evening yesterday. Oh and I would drop by with dobby at the door each time we needed to go out for", "super_description": "Today Ayla was quarantined in her room after having a sick evening yesterday. Oh and I would drop by with dobby at the door each time we needed to go out for", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db100>, next=<frontmatter.Post object at 0x7f34506db160>)"}, {"cover": "", "title": "Gratitude 152", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-152.md", "description": "We bought out house today", "content": "We bought out house today!!  This all happened so fast and has been such\na mix of emotions all the way.  I am just so happy to be able to provide\nmy family with a house they can love and cherish and grow up in.  We\nwoke up today thinking that it was going to be at lease four more days\nas we were waiting on the irs, but due to some Mortgage company magic we\nwere able to close today!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-161'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 161</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-139'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 139</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-16", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-152.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572343", "datetime": "2022-02-16 00:00:00+00:00", "slug": "gratitude/gratitude-152", "jinja": false, "output_html": "markout/gratitude/gratitude-152/index.html", "long_description": "We bought out house today", "super_description": "We bought out house today", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db550>, next=<frontmatter.Post object at 0x7f34506db670>)"}, {"cover": "", "title": "Gratitude 161", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-161.md", "description": "Today we opened up the house for Dobby, so far he has been pretty confined to", "content": "Today we opened up the house for Dobby, so far he has been pretty confined to\nhis play pen and a few extra areas that were boarded up with boxes.  He has\ndone ok, but you could tell that he just wants to be with everyone.  He\nabsolutely loved it!  He was just sprinting around the house like a crazy pup.\nThere were definitely some hillarias slide outs on the tile floor.  Wyatt\nespecially loved having that extra space to run with him.  They did so well\ntogether.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_013'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 013</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-152'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 152</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-28", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-161.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572349", "datetime": "2022-02-28 00:00:00+00:00", "slug": "gratitude/gratitude-161", "jinja": false, "output_html": "markout/gratitude/gratitude-161/index.html", "long_description": "Today we opened up the house for Dobby, so far he has been pretty confined to", "super_description": "Today we opened up the house for Dobby, so far he has been pretty confined to", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506dbd30>, next=<frontmatter.Post object at 0x7f34506db100>)"}, {"cover": "", "title": "Gratitude 013", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_013.md", "description": "This Christmas we had two events on Christmas day, with 5 hours of travel, and a final destination to sleep at.  I am very grateful that we were able to get thr", "content": "#### Long Days, Good Times\n\nThis Christmas we had two events on Christmas day, with 5 hours of travel, and a final destination to sleep at.  I am very grateful that we were able to get through all of the travel in one piece.  THe kids had a blast!  It was a very fun Christmas for them.  Wyatt got his most wished for gift this year, Maui's hook from Moana.  It was so fun to watch him open it.  He was absolutely speechless.\n\n\nI am glad everyone was able to enjoy the food.  Both events were very accomodating to our family allergies.  The first event was a potato bar where everything was kept separate and you could personalize your dish.  The kids really just wanted to snack all day.  At the second event they went out of their way to find dairy free butter to cook wtih.  There were only one or two items that had dairy in them.  It feels good to be supported by your family.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-98'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 098</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-161'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 161</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-26", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_013.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572380", "datetime": "2017-12-26 00:00:00+00:00", "slug": "gratitude/gratitude_013", "jinja": false, "output_html": "markout/gratitude/gratitude_013/index.html", "long_description": "This Christmas we had two events on Christmas day, with 5 hours of travel, and a final destination to sleep at.  I am very grateful that we were able to get through all of the travel in one piece.  THe kids had a blast I am glad everyone was able to ", "super_description": "This Christmas we had two events on Christmas day, with 5 hours of travel, and a final destination to sleep at.  I am very grateful that we were able to get through all of the travel in one piece.  THe kids had a blast I am glad everyone was able to enjoy the food.  Both events were very accomodating to our family allergies.  The first event was a potato bar where everything was kept separate and you could personalize your dish.  The kids really just wanted to snack all day.  At the second event", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db790>, next=<frontmatter.Post object at 0x7f34506db550>)"}, {"cover": "", "title": "Gratitude 098", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-98.md", "description": "Both kids are starting to sleep again, we switched their medicine around and Today we met with Ayla", "content": "Both kids are starting to sleep again, we switched their medicine around and\nare doing things like thier vitamins in the morning and compensated some others\nfor their increased age/weight.  It's been weeks since Wyatt has made it past\n3am, and its been wearing on everyone, we are all quite tired from the\ninterrupted or lack of sleep.\n\nToday we met with Ayla's surgical team again.  We are making some great\nprogress to giving her some independence back, having daily bowel movements, no\naccidents, and we might not need to go the surgical route.  She has been\nhandling the new routine like a champ and we are all getting figuring out how\nto make the best of it.  Despite what it is, it often gives me and her some\ntime together where we are both a bit silly and trying to not let the stress of\nthe routine get to us.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-171'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 171</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_013'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 013</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-22", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-98.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572386", "datetime": "2021-12-22 00:00:00+00:00", "slug": "gratitude/gratitude-98", "jinja": false, "output_html": "markout/gratitude/gratitude-98/index.html", "long_description": "Both kids are starting to sleep again, we switched their medicine around and Today we met with Ayla", "super_description": "Both kids are starting to sleep again, we switched their medicine around and Today we met with Ayla", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506dbaf0>, next=<frontmatter.Post object at 0x7f34506dbd30>)"}, {"cover": "", "title": "Gratitude 171", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-171.md", "description": "Tonight I got a good fetch session in with Dobby.  It was a wild and", "content": "Tonight I got a good fetch session in with Dobby.  It was a wild and\nbusy day, but it ended on a very good note.  It's quite relaxing to play\nwith him in a 1:1 format where no one else was trying to step in.  It\nreally lets him focus on what we are doing, and he does so well with it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_086'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 086</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-98'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 098</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-171.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572393", "datetime": "2022-03-11 00:00:00+00:00", "slug": "gratitude/gratitude-171", "jinja": false, "output_html": "markout/gratitude/gratitude-171/index.html", "long_description": "Tonight I got a good fetch session in with Dobby.  It was a wild and", "super_description": "Tonight I got a good fetch session in with Dobby.  It was a wild and", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506dba00>, next=<frontmatter.Post object at 0x7f34506db790>)"}, {"cover": "", "title": "Gratitude 086", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_086.md", "description": "The morning is early as I open the door and am greated with the fresh skif of snow.  The perfect amount to go frolicing in.  Not too much to make it difficult t", "content": "#### Getting out of the house\n\nThe morning is early as I open the door and am greated with the fresh skif of snow.  The perfect amount to go frolicing in.  Not too much to make it difficult to walk, but enough to cover everything in sight.  In the Afternoon Wyatt and I mustered up the courage to brave our way through some nearby trails.  The adventure was exciting as we have not yet ventured these trails much since our move here.  The trail we chose approached a nearby stream.  We watched as the glassy smooth stream cut through the shear white snow, ran through the fluffy off white catails, and into the frozen lake.  We continued to walk onto a park, where we had a long snowball fight in which I stood back and through snowballs at wyatt as he ran through the park.  Wyatt won of course as it was nearly impossible to hit him as he dodged in and out of the equipment, and I would lose one point for each and every miss.  Soon thereafter the sun was quickly setting and it was time to hit the trail home.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_022'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 022</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-171'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 171</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-15", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_086.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572399", "datetime": "2019-02-15 00:00:00+00:00", "slug": "gratitude/gratitude_086", "jinja": false, "output_html": "markout/gratitude/gratitude_086/index.html", "long_description": "The morning is early as I open the door and am greated with the fresh skif of snow.  The perfect amount to go frolicing in.  Not too much to make it difficult to walk, but enough to cover everything in sight.  In the Afternoon Wyatt and I mustered up", "super_description": "The morning is early as I open the door and am greated with the fresh skif of snow.  The perfect amount to go frolicing in.  Not too much to make it difficult to walk, but enough to cover everything in sight.  In the Afternoon Wyatt and I mustered up the courage to brave our way through some nearby trails.  The adventure was exciting as we have not yet ventured these trails much since our move here.  The trail we chose approached a nearby stream.  We watched as the glassy smooth stream cut throu", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506db9d0>, next=<frontmatter.Post object at 0x7f34506dbaf0>)"}, {"cover": "", "title": "Gratitude 022", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_022.md", "description": "Sometimes you just need some time to be a kid.  Today was that day... it was a snow day.  During which the kids were very generous at letting me work, but we we", "content": "#### Kid Time\n\nSometimes you just need some time to be a kid.  Today was that day... it was a snow day.  During which the kids were very generous at letting me work, but we were also able to have some quality moments.  First of which happened at lunch.  Wyatt decided that we were having pancakes, and the kids would help make them.   I was really impressed at their cooperation.  They did really well at taking turns putting ingredients into the batter, and stirring.\n\n> I was really impressed at their cooperation.\n\nThe second bit of kid time came late in the afternoon after the kids had a nap.  We went outside to go sledding.  They were both a bit crabby to get clothes on, but cheered up once we got outside.  We all had a blast, Even Ayla who has had a terrible fear of the snow this year.  She just stood in it for the longest time before warming up to it.  Eventually she braved up enough, aka was forced on to the sled with daddy.  She loved it! She was absolutely smiling ear to ear when we hit the bottom.  From there on the kids took turns riding down with daddy for the next 2 hrs!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_031'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 031</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_086'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 086</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-08", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_022.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572405", "datetime": "2018-01-08 00:00:00+00:00", "slug": "gratitude/gratitude_022", "jinja": false, "output_html": "markout/gratitude/gratitude_022/index.html", "long_description": "Sometimes you just need some time to be a kid.  Today was that day... it was a snow day.  During which the kids were very generous at letting me work, but we were also able to have some quality moments.  First of which happened at lunch.  Wyatt decid", "super_description": "Sometimes you just need some time to be a kid.  Today was that day... it was a snow day.  During which the kids were very generous at letting me work, but we were also able to have some quality moments.  First of which happened at lunch.  Wyatt decided that we were having pancakes, and the kids would help make them.   I was really impressed at their cooperation.  They did really well at taking turns putting ingredients into the batter, and stirring. I was really impressed at their cooperation. T", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0310>, next=<frontmatter.Post object at 0x7f34506dba00>)"}, {"cover": "", "title": "Gratitude 031", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_031.md", "description": "Sometimes you just need a bit of help and it is hard to pick yourself up.  This morning was one of those days.  I just felt overwhelmed and like there was no st", "content": "#### Pick me up\n\nSometimes you just need a bit of help and it is hard to pick yourself up.  This morning was one of those days.  I just felt overwhelmed and like there was no stopping it.  Rhiannon gave me a call and after talking through some things I felt a huge weight lifted.  I wouldn't say that I was healed, but I would say I was on a good trajectory.  It's really hard to battle things as a family. We are all in it together and that picking each other up will help everyone.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_009'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 009</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_022'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 022</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-26", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_031.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572411", "datetime": "2018-01-26 00:00:00+00:00", "slug": "gratitude/gratitude_031", "jinja": false, "output_html": "markout/gratitude/gratitude_031/index.html", "long_description": "Sometimes you just need a bit of help and it is hard to pick yourself up.  This morning was one of those days.  I just felt overwhelmed and like there was no stopping it.  Rhiannon gave me a call and after talking through some things I felt a huge we", "super_description": "Sometimes you just need a bit of help and it is hard to pick yourself up.  This morning was one of those days.  I just felt overwhelmed and like there was no stopping it.  Rhiannon gave me a call and after talking through some things I felt a huge weight lifted.  I wouldn", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506dbee0>, next=<frontmatter.Post object at 0x7f34506db9d0>)"}, {"cover": "", "title": "Gratitude 009", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_009.md", "description": "Today we are nearing the last week before Rhiannon", "content": "#### Good Doctors\n\nToday we are nearing the last week before Rhiannon's Next Treatment in chemotherapy.  It was a rough day, she had a bad carcinoid attack last night and was on edge of another all day today.  I am grateful that we were able to get in with a really good oncologist.  The best in the area in terms of carcinoid cancer.  I am really glad that he has a plan for us and it is helping get through most of the month between doses.  Since it is such a rare type of cancer there are few knowledgeable in the subject, which just makes it that much better that we are in with the best.   It allows us to have some really good days.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-177'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 177</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_031'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 031</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_009.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572417", "datetime": "2017-12-21 00:00:00+00:00", "slug": "gratitude/gratitude_009", "jinja": false, "output_html": "markout/gratitude/gratitude_009/index.html", "long_description": "Today we are nearing the last week before Rhiannon", "super_description": "Today we are nearing the last week before Rhiannon", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506dbc10>, next=<frontmatter.Post object at 0x7f34506e0310>)"}, {"cover": "", "title": "Gratitude 177", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-177.md", "description": "Getting back into the rythm.  It Today Rhiannon and I started Casey Neistat", "content": "Getting back into the rythm.  It's so interesting how easily a good habit can\ndie.  I stopped journeling here for a few days and used that time to prepare\nfor a conference talk, which seemed to go pretty well, and well a week has gone\nby with no more posts.\n\nToday Rhiannon and I started Casey Neistat's monthly .com course and I am\nexcited to learn storytelling and video production from such an icon.  But\nprobably more importantly I am excited to enjoy it with Rhiannon.  I feel like\nwe are at such a great place in our releationship and little activities like\nthis really do help bring us even closer together, and understand one another\neven more as we grow together.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_023'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 023</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_009'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 009</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-177.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572423", "datetime": "2022-03-29 00:00:00+00:00", "slug": "gratitude/gratitude-177", "jinja": false, "output_html": "markout/gratitude/gratitude-177/index.html", "long_description": "Getting back into the rythm.  It Today Rhiannon and I started Casey Neistat", "super_description": "Getting back into the rythm.  It Today Rhiannon and I started Casey Neistat", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0430>, next=<frontmatter.Post object at 0x7f34506dbee0>)"}, {"cover": "", "title": "Gratitude 023", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_023.md", "description": "This year I started a new position at work.  Everything about it is enjoyable.  Not sure if that is jut the honeymoon phase or not.  I am working as a data scie", "content": "#### Excitement\n\nThis year I started a new position at work.  Everything about it is enjoyable.  Not sure if that is jut the honeymoon phase or not.  I am working as a data scientist.  Its exciting that there is so much low hanging fruit to be had.  In my previous role as an engineer I was in a very established role.  While this role was great,  I really enjoyed it, and had no intentions of moving until  this oppotunity landed in my lap.  I felt like being in such an establishd role the job was to follow the processes that had been previously set up.  Now being in a much less established role there is a lot more room for creativity.  I like getting to work and really being excited to get to work creating things that add value to the organization.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-113'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 113</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-177'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 177</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-10", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_023.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572429", "datetime": "2018-01-10 00:00:00+00:00", "slug": "gratitude/gratitude_023", "jinja": false, "output_html": "markout/gratitude/gratitude_023/index.html", "long_description": "This year I started a new position at work.  Everything about it is enjoyable.  Not sure if that is jut the honeymoon phase or not.  I am working as a data scientist.  Its exciting that there is so much low hanging fruit to be had.  In my previous ro", "super_description": "This year I started a new position at work.  Everything about it is enjoyable.  Not sure if that is jut the honeymoon phase or not.  I am working as a data scientist.  Its exciting that there is so much low hanging fruit to be had.  In my previous role as an engineer I was in a very established role.  While this role was great,  I really enjoyed it, and had no intentions of moving until  this oppotunity landed in my lap.  I felt like being in such an establishd role the job was to follow the pro", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e03a0>, next=<frontmatter.Post object at 0x7f34506dbc10>)"}, {"cover": "", "title": "Gratitude 113", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-113.md", "description": "Getting back into our rythm.  It", "content": "Getting back into our rythm.  It's starting to feel busy here again,\nwork is cranking along with quite a bit of pull.  I have have 1 of 3\nmajor pieces of the next release of one of my big projects submitted for\nPR!  Wyatt and I are fully in scratch and having a good 3 sessions per\nday.  Rhiannon and I have a really big meeting with the school tomorrow,\nso I am trying to read up a bit on that as I can.  Ayla and I had a full\nsilly swinging around session.  I am just so grateful to feel the love\nfrom all angles of life.  It's chaotic sometimes, but in a very loving\nmanner.  I couldn't be any happier.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-136'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 136</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_023'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 023</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-06", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-113.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572437", "datetime": "2022-01-06 00:00:00+00:00", "slug": "gratitude/gratitude-113", "jinja": false, "output_html": "markout/gratitude/gratitude-113/index.html", "long_description": "Getting back into our rythm.  It", "super_description": "Getting back into our rythm.  It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0040>, next=<frontmatter.Post object at 0x7f34506e0430>)"}, {"cover": "", "title": "Gratitude 136", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-136.md", "description": "Dobby (our new pup) came home today, and he is just the cutest pup ever. Rhiannon has done so much research, I am so proud of her", "content": "Dobby (our new pup) came home today, and he is just the cutest pup ever.\nHe is already filling our house with some much needed love.  I know the\nnext few weeks are going to get a bit crazy and his need for us is only\ngoing to add to it, but it will be so worth it.\n\nRhiannon has done so much research, I am so proud of her!  It feels so\ndifferent going into this with someone who knows what they are doing\nthan just winging it.  I really feel like we are setting Dobby up for\nsuccess in our house.  Much of the care is focused on positivity and\nlove rather than yelling, hitting, or any punishment.  We only let him\ngo places that he is allowed, and when he is doing an undesirable\nactivity we simply redirect him to a desireable activity.  There's\nobviously a lot more detail that goes into this, but distilled down as\nfar as I can this is the essential strategy we are taking.\n\n![Waylon sitting with Dobby on his first day home](https://images.waylonwalker.com/waylon-dobby-jan-2022.webp)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/the-good-old-days'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>The Good Old Days</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-113'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 113</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-30", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-136.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572442", "datetime": "2022-01-30 00:00:00+00:00", "slug": "gratitude/gratitude-136", "jinja": false, "output_html": "markout/gratitude/gratitude-136/index.html", "long_description": "Dobby (our new pup) came home today, and he is just the cutest pup ever. Rhiannon has done so much research, I am so proud of her", "super_description": "Dobby (our new pup) came home today, and he is just the cutest pup ever. Rhiannon has done so much research, I am so proud of her", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e00d0>, next=<frontmatter.Post object at 0x7f34506e03a0>)"}, {"cover": "", "title": "The Good Old Days", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/the-good-old-days.md", "description": "When I think of the good old days, you are the first person to come to mind.  Back in those days I was up before the sun every day... No Excuses.  I remember I ", "content": "When I think of the good old days, you are the first person to come to mind.  Back in those days I was up before the sun every day... No Excuses.  I remember I would start asking to go to your house almost immediately when I woke up on weekends that I knew you had at your dad's.  Mom usually held me back until at least 10 AM before I was allowed to start knocking on the door.  At that point I would jump on my bike for the 1/4 mile trek down the gravel road, usually to find out that you were not quite up yet.  From there I would keep stopping by every 30 minutes until you were ready to play.  Which could only be in 30 minute increments... Do you remember that?  We had 30 minute curfew's to that we were allowed to play at each others house. At which point we would just ask to go play at the others house.\n\nI remember playing in the mudhole in front of my house chasing the tiniest frogs imaginable, to look behind and you had lost your boots completely stuck in the mud ready to loose your things.  I was full outdoors man back in those days.  Wanted to be just like dad.  Spending all of my free time riding my bike and chasing some sort of animal.  I would go back to help and get myself stuck.  By the end of it I'm sure we both had gone head first in the mud trying to get out!  At this point we were probably told that it was time to stop playing together for the day as we were both a complete wreck.  I'm sure that I was angry that I made it through on my own fine, only to get messy trying to help you.  In reality It was just about impossible to get through that mudhole if you weren't the first one through it.\n\nYears later our bikes turned to mopeds, three-wheelers, and go carts.  I have nearly forgotten about the go-carts by this point.  I remember that you always had this big BA oddessy, and It was all I could do to keep up on the grasshopper.  I remember desperately trying to keep up one day coming from our soon to be motocross track to Mark's house when I hit big hole sideways and went rolling.  I had no helmet on our anything.  I am pretty sure that I hurt myself pretty good, but I was too tough to let that stop me.  Besides that I was probably too proud of my amazing go-carting skills to even admit that I would have crashed.   By the time I caught up I just played it off like I needed a break.  Which would be completely obvious because there was nothing that made me want to take a break from riding back in those days.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-128'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 128</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-136'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 136</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-22", "edit_link": "https://github.com/edit/main/pages/gratitude/the-good-old-days.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572448", "datetime": "2019-09-22 00:00:00+00:00", "slug": "gratitude/the-good-old-days", "jinja": false, "output_html": "markout/gratitude/the-good-old-days/index.html", "long_description": "When I think of the good old days, you are the first person to come to mind.  Back in those days I was up before the sun every day... No Excuses.  I remember I would start asking to go to your house almost immediately when I woke up on weekends that ", "super_description": "When I think of the good old days, you are the first person to come to mind.  Back in those days I was up before the sun every day... No Excuses.  I remember I would start asking to go to your house almost immediately when I woke up on weekends that I knew you had at your dad I remember playing in the mudhole in front of my house chasing the tiniest frogs imaginable, to look behind and you had lost your boots completely stuck in the mud ready to loose your things.  I was full outdoors man back i", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0550>, next=<frontmatter.Post object at 0x7f34506e0040>)"}, {"cover": "", "title": "Gratitude 128", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-128.md", "description": "We got a house, for real this time.  I am actually 99% sure, maybe 90%,", "content": "We got a house, for real this time.  I am actually 99% sure, maybe 90%,\nanyways it's solid.  We put in an offer and it was accepted this time.\nIt's very close to here, so Ayla will be going to the same school\ndistrict, different school.  Her 3rd year in school will also be her 3rd\nschool in the same district, all within a 5 minute drive of each other,\nits wild.  It has an appropriate amount of space for all of us, and a\nvery big back yard that we plan to fence in and let the kids roam to\ntheir hearts content as soon as we can.  It looks like a very nice house\nwe are excited to get started with our new journey in it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_060'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 060</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/the-good-old-days'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>The Good Old Days</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-22", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-128.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572454", "datetime": "2022-01-22 00:00:00+00:00", "slug": "gratitude/gratitude-128", "jinja": false, "output_html": "markout/gratitude/gratitude-128/index.html", "long_description": "We got a house, for real this time.  I am actually 99% sure, maybe 90%,", "super_description": "We got a house, for real this time.  I am actually 99% sure, maybe 90%,", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0220>, next=<frontmatter.Post object at 0x7f34506e00d0>)"}, {"cover": "", "title": "Gratitude 060", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_060.md", "description": "Every once in awhile its time to take a deep breath..  Seriously do it with me stop,  take a deep breath, exhale.  Understand that you cannot do everything.  So", "content": "#### Chill\n\nEvery once in awhile its time to take a deep breath..  Seriously do it with me stop,  take a deep breath, exhale.  Understand that you cannot do everything.  Sometimes life throws you a loop that is out of your control.  Today was one of those days.  Getting down to the end of the year I get really excited to work on my projects at work for me.  I take full advantage of the reduced workforce, reduced desk stops, reduced chit chat, and I GTD.  Getting down within the last week I am starting to prioritize projects to ensure I get everything done that really needs done while I have this time to ensure full productivity in the next year.  My son stayed home sick and I was with him.  As much as I wanted to stress out about the things I wasnt getting done we came to a comprimise.  I was able to work from home for a good chunk of the day, but we also spent some time chilling together on our Minecraft server.  It was really fun.  We were working through projects together, taking out mobs, building structures, the stresses of life seemed to melt away for awhile.  And you know what we both loved it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-146'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 146</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-128'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 128</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-12-18", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_060.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572460", "datetime": "2018-12-18 00:00:00+00:00", "slug": "gratitude/gratitude_060", "jinja": false, "output_html": "markout/gratitude/gratitude_060/index.html", "long_description": "Every once in awhile its time to take a deep breath..  Seriously do it with me stop,  take a deep breath, exhale.  Understand that you cannot do everything.  Sometimes life throws you a loop that is out of your control.  Today was one of those days. ", "super_description": "Every once in awhile its time to take a deep breath..  Seriously do it with me stop,  take a deep breath, exhale.  Understand that you cannot do everything.  Sometimes life throws you a loop that is out of your control.  Today was one of those days.  Getting down to the end of the year I get really excited to work on my projects at work for me.  I take full advantage of the reduced workforce, reduced desk stops, reduced chit chat, and I GTD.  Getting down within the last week I am starting to pr", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0670>, next=<frontmatter.Post object at 0x7f34506e0550>)"}, {"cover": "", "title": "Gratitude 146", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-146.md", "description": "We got the appraisal back on our house today.  It came in a bit under,", "content": "We got the appraisal back on our house today.  It came in a bit under,\nand we are going to need to bring some cash to the closing, but it's ok\nit was not over our budget.  We will get out of here and in there before\nour lease here expires, but it might limit some of the things that we\nare able to do with it.  I am just excited that we are moving forward,\nand do not need to be in the middle of this mess for a long time.\nHopefully for a REALLY long time, we have moved WAY too often over the\ncourse of my 12 years being out of my parents house, I'm pretty sure\nthat I have held 11 different addresses over those years, its time for\nthat to slow down big time.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_042'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 042</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_060'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 060</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-09", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-146.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572466", "datetime": "2022-02-09 00:00:00+00:00", "slug": "gratitude/gratitude-146", "jinja": false, "output_html": "markout/gratitude/gratitude-146/index.html", "long_description": "We got the appraisal back on our house today.  It came in a bit under,", "super_description": "We got the appraisal back on our house today.  It came in a bit under,", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0790>, next=<frontmatter.Post object at 0x7f34506e0220>)"}, {"cover": "", "title": "Gratitude 042", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_042.md", "description": "Today I am very grateful for all of the wonderful birthday wishes.  I started I didn All in all this was one of the best days I have had in awhile, Thanks every", "content": "#### Happy Birthday\n\nToday I am very grateful for all of the wonderful birthday wishes.  I started\noff the day with two very excited kids.  They couldn't wait to wake up, give\ndaddy a big hug and wish him happy birthday today.  My kids love them some\nbirthday wishes and do all they can to make the birthday person  feel special.\nNext the text messages started to roll in.  It is nice to hear from everyone\nthat I havent heard from in awhile.  At night Scott Volunteered to bathe the\nkids, and get pajammas on them, while I was able to spend a  bit more time with\nRhiannon.  Speaking of which...\n\nI didn't forget the most special of all.  Rhiannon, my beautiful wife, was a\nsoldier  today.  She got up, forgone the medicine, and headed out with me\nbright and early to take the kids to Pre-K, get coffee, and run various\nerrands.  In which we ran into smoke on several occassions that nearly took her\ndown.  While I was out taking Wyatt to therapy, and picking up Ayla.  She\nmuscled through and finished my quilt, wrapped my presents, and cooked an\namazing jumbalya!!\n\n\nAll in all this was one of the best days I have had in awhile, Thanks everyone!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_012'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 012</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-146'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 146</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-26", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_042.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572472", "datetime": "2018-03-26 00:00:00+00:00", "slug": "gratitude/gratitude_042", "jinja": false, "output_html": "markout/gratitude/gratitude_042/index.html", "long_description": "Today I am very grateful for all of the wonderful birthday wishes.  I started I didn All in all this was one of the best days I have had in awhile, Thanks everyone", "super_description": "Today I am very grateful for all of the wonderful birthday wishes.  I started I didn All in all this was one of the best days I have had in awhile, Thanks everyone", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0f70>, next=<frontmatter.Post object at 0x7f34506e0670>)"}, {"cover": "", "title": "Gratitude 012", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_012.md", "description": "Good days are the best.  I enjoy the days where everything seems to fall into place seemingly without effort.  The air is clean and easy to breathe.  The kids a", "content": "#### The Good Days\n\nGood days are the best.  I enjoy the days where everything seems to fall into place seemingly without effort.  The air is clean and easy to breathe.  The kids are cooperating.  I am working on a project with my best friend in the world.  I play with my kids, and we all have a great time together.\n\nToday was one of those days.  I spent much of the day helping Rhiannon set up the Cuttin Scrap channel.  We are setting up a really nice area for her to work on a craft that she is very passionate about.  It is the place that she has dreamed of for years.  No its not perfect with the most space available, but it is the best with what we have got, and it is all hers.  At the end of the day we were able to sit down and begin working through her website and socials.\n\n> It is the place that she has dreamed of for years.\n\n\nI also really enjoyed getting to play in the fresh snow with Wyatt.  He loved it.  We shoveled it into big piles to jump in, threw snowballs, and just had the best of adventure.  Ayla and Rhiannon came to the window to watch, and they laughed at us while we acted silly.  Today was Christmas, one of the most magical days of the year to spend with the ones you love most.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_082'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 082</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_042'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 042</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-25", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_012.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572479", "datetime": "2017-12-25 00:00:00+00:00", "slug": "gratitude/gratitude_012", "jinja": false, "output_html": "markout/gratitude/gratitude_012/index.html", "long_description": "Good days are the best.  I enjoy the days where everything seems to fall into place seemingly without effort.  The air is clean and easy to breathe.  The kids are cooperating.  I am working on a project with my best friend in the world.  I play with ", "super_description": "Good days are the best.  I enjoy the days where everything seems to fall into place seemingly without effort.  The air is clean and easy to breathe.  The kids are cooperating.  I am working on a project with my best friend in the world.  I play with my kids, and we all have a great time together. Today was one of those days.  I spent much of the day helping Rhiannon set up the Cuttin Scrap channel.  We are setting up a really nice area for her to work on a craft that she is very passionate about", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0d30>, next=<frontmatter.Post object at 0x7f34506e0790>)"}, {"cover": "", "title": "Gratitude 082", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_082.md", "description": "I am so grateful that I am working in a space in which I can work remotely often.  As a mechanical engineer I really struggled.  Our team was really structured ", "content": "#### Working Remotely\n\nI am so grateful that I am working in a space in which I can work remotely often.  As a mechanical engineer I really struggled.  Our team was really structured for onsite work, and did not play well for remote folks.  Moving into data science, as long as I have a good connection to the data I need I can be productive from anywhere.  Actually Sometimes I find there to be fewer distractions at home.  Generally I work from home due to someone else's medical needs.  Today was different, my voice is completely gone.  This winter has been a rough one.  I am so grateful that I can cancel all of my meetings, push them to next week and take time to heal.  I can also put my head down and get some great work done without needing to use my voice.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_077'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 077</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_012'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 012</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-08", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_082.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572485", "datetime": "2019-02-08 00:00:00+00:00", "slug": "gratitude/gratitude_082", "jinja": false, "output_html": "markout/gratitude/gratitude_082/index.html", "long_description": "I am so grateful that I am working in a space in which I can work remotely often.  As a mechanical engineer I really struggled.  Our team was really structured for onsite work, and did not play well for remote folks.  Moving into data science, as lon", "super_description": "I am so grateful that I am working in a space in which I can work remotely often.  As a mechanical engineer I really struggled.  Our team was really structured for onsite work, and did not play well for remote folks.  Moving into data science, as long as I have a good connection to the data I need I can be productive from anywhere.  Actually Sometimes I find there to be fewer distractions at home.  Generally I work from home due to someone else", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0c10>, next=<frontmatter.Post object at 0x7f34506e0f70>)"}, {"cover": "", "title": "Gratitude 077", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_077.md", "description": "It", "content": "#### Teacher Appreciation\n\nIt's the dead of winter, the cold January months, so cold in fact schools closed down for two days due to an arctic wind.  For these two days Wyatt brought home homework to do at home.  Nothing big just a few simple things.  This really opened my eyes up to what teachers have to go through every day.  It is really tough to get him focused on doing the work for very long at all.  It is tough as an adult when you are _sooo_ close to the end of the task to let go and give a break, or to let him do it his way when you know he is capable of doing better.  For this I am grateful that we have teachers that are experts at working with kids like Wyatt to give him the best education possible, because without them I would loose my mind!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_011'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 011</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_082'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 082</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_077.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572491", "datetime": "2019-02-01 00:00:00+00:00", "slug": "gratitude/gratitude_077", "jinja": false, "output_html": "markout/gratitude/gratitude_077/index.html", "long_description": "It", "super_description": "It", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e0ee0>, next=<frontmatter.Post object at 0x7f34506e0d30>)"}, {"cover": "", "title": "Gratitude 011", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_011.md", "description": "I am grateful that we have been able to make it to my family for Christmas time.  I am so glad to see how much fun my parents and the kids have together.  They ", "content": "####  Happy Holidays Round 1\n\nI am grateful that we have been able to make it to my family for Christmas time.  I am so glad to see how much fun my parents and the kids have together.  They all get along so well. I am glad to see some of the changes that my parents are making to get through their tough times at home.  They seem to be quite a bit happier that the past few times that we have been home.   We all got some really nice gifts, and I am glad that everyone was able to at least get something that they enjoy, even if it wasn't much.  The kids were so excited to see all of the gifts, and had such fun opening them.  They have been playing with them all day.  I am very grateful to see them sharing and having fun together rather than fighting over who gets what.  Wyatt has really been stepping it up as a big brother, and even spent his own hard earned money to buy Ayla a gift!\n\n\n> I am very grateful to see them sharing and having fun together\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-095'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 095</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_077'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 077</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-23", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_011.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572497", "datetime": "2017-12-23 00:00:00+00:00", "slug": "gratitude/gratitude_011", "jinja": false, "output_html": "markout/gratitude/gratitude_011/index.html", "long_description": "I am grateful that we have been able to make it to my family for Christmas time.  I am so glad to see how much fun my parents and the kids have together.  They all get along so well. I am glad to see some of the changes that my parents are making to ", "super_description": "I am grateful that we have been able to make it to my family for Christmas time.  I am so glad to see how much fun my parents and the kids have together.  They all get along so well. I am glad to see some of the changes that my parents are making to get through their tough times at home.  They seem to be quite a bit happier that the past few times that we have been home.   We all got some really nice gifts, and I am glad that everyone was able to at least get something that they enjoy, even if i", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8040>, next=<frontmatter.Post object at 0x7f34506e0c10>)"}, {"cover": "", "title": "Gratitude 095", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-095.md", "description": "Its been 8 great years so far.  We have grown together so much along the way.  I don", "content": "#### Happy Anniversary\n\nIts been 8 great years so far.  We have grown together so much along the way.  I don't think that we could have every planned out our path to get where we are today 8 years ago.  We did know one thing, that we would be here together.  We fight whatever challenges come our way together.  We can beat anything as long as we stick together on the same page.  trouble comes as soon as we loose sight  of that and work alone.  Together we have grown so much more than either of us could have done alone. There are challenges that neither of us could have conquered alone.  I cannot imagine myself facing these challenges with anyone else.  I know that we can defeat whatever comes our way in the future, because together we are strong.  I Love you Rhiannon Walker, _Forever and Ever_.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-162'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 162</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_011'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 011</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-05-21", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-095.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572503", "datetime": "2019-05-21 00:00:00+00:00", "slug": "gratitude/gratitude-095", "jinja": false, "output_html": "markout/gratitude/gratitude-095/index.html", "long_description": "Its been 8 great years so far.  We have grown together so much along the way.  I don", "super_description": "Its been 8 great years so far.  We have grown together so much along the way.  I don", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8160>, next=<frontmatter.Post object at 0x7f34506e0ee0>)"}, {"cover": "", "title": "Gratitude 162", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-162.md", "description": "Slowly back into it.  After the longest break I have had from work", "content": "Slowly back into it.  After the longest break I have had from work\n(other than shut downs) in quite awhile I am back at it.  It felt really\ngood to know that the team that I am building at work is becoming\ncapable of sustaining themsleves without me.  A few years ago this was\nnot the case.  We hired a bunch of people really fast and threw them all\ninto it without onboarding.  Since then we have taken the time to really\ngrow them into where they are, and have been much more careful about\nonboarding new foks.  I am so proud of this team for being able to\nsustain themselves all on their own.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-141'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 141</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-095'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 095</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-162.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572509", "datetime": "2022-03-01 00:00:00+00:00", "slug": "gratitude/gratitude-162", "jinja": false, "output_html": "markout/gratitude/gratitude-162/index.html", "long_description": "Slowly back into it.  After the longest break I have had from work", "super_description": "Slowly back into it.  After the longest break I have had from work", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8310>, next=<frontmatter.Post object at 0x7f34506e8040>)"}, {"cover": "", "title": "Gratitude 141", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-141.md", "description": "Brisket night We all seem to be coming down with a bit of a winter cold.  It", "content": "Brisket night!  We had a fantastic Brisket delivered to us by Butcher\nBox, and everyone absolutely loved it.  Ayla was so skeptical, that it\nwas kinda funny.  she went from \"ew, I don't want that\", to \"Maybe I'll\ntry some\", to \"YES give me some\", to \"Can I have MORE!\".\n\nWe all seem to be coming down with a bit of a winter cold.  It's a bit\nrough, but so glad that it's not covid, we have been testing like crazy.\nAt this point I feel like we are one of the few left who have not got\nit, we are also so crazy protecting ourselves from it for the sake of\nRhiannons life!  There is no way she could survive it so we must do\neverything in our power to avoid it.  I think the hardest part is that\nthe rest of the world is like   'eh its ok, nothing bad will happen', ya\nknow what, at this point most of the rest of the world has had it at\nsome point.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-107'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 107</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-162'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 162</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-141.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572515", "datetime": "2022-02-04 00:00:00+00:00", "slug": "gratitude/gratitude-141", "jinja": false, "output_html": "markout/gratitude/gratitude-141/index.html", "long_description": "Brisket night We all seem to be coming down with a bit of a winter cold.  It", "super_description": "Brisket night We all seem to be coming down with a bit of a winter cold.  It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e80d0>, next=<frontmatter.Post object at 0x7f34506e8160>)"}, {"cover": "", "title": "Gratitude 107", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-107.md", "description": "Happy New Years  \ud83c\udf89\ud83c\udf89.  Today we played Hangry, a new game that we got for Christmas as", "content": "Happy New Years  \ud83c\udf89\ud83c\udf89.  Today we played Hangry, a new game that we got for Christmas as\na whole family.  It was a freaking blast!  The whole family was belly laughing\nthrough most of it.  I am so grateful that Rhiannon was able to tough through at\nleast one round of it despite her illness that's coming on.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_029'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 029</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-141'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 141</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-31", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-107.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572523", "datetime": "2021-12-31 00:00:00+00:00", "slug": "gratitude/gratitude-107", "jinja": false, "output_html": "markout/gratitude/gratitude-107/index.html", "long_description": "Happy New Years  \ud83c\udf89\ud83c\udf89.  Today we played Hangry, a new game that we got for Christmas as", "super_description": "Happy New Years  \ud83c\udf89\ud83c\udf89.  Today we played Hangry, a new game that we got for Christmas as", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e81f0>, next=<frontmatter.Post object at 0x7f34506e8310>)"}, {"cover": "", "title": "Gratitude 029", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_029.md", "description": "Last night was a night that I had to run back into work late at night to run some analysis.  I was able to get in and get it done fairly quickly, and it felt re", "content": "#### Finishing\n\nLast night was a night that I had to run back into work late at night to run some analysis.  I was able to get in and get it done fairly quickly, and it felt really good to have it done and not have to worry about it in the last hour before the presentation.  I also stuck to my No More Death by powerpoint rule, and did not include an eye chart in the slides.  This was something that I always said I would change when I took over the role, but never did.  Now that I have vowed to never again break the principles of Death by PowerPoint I had to change.\n\n\nSecondly my wife is a rockstar.  She was up with our crazy son most of the night, as he was really struggling to sleep.  He was just up and ready to go really early in the morning.  I am grateful that I was able to get somme sleep, and really hope that she is able to get some rest while the house is quiet today.\n\n<style>@import url(\"https://goo.gl/RrPQm5\")</style>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-131'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 131</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-107'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 107</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-01-24", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_029.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572528", "datetime": "2018-01-24 00:00:00+00:00", "slug": "gratitude/gratitude_029", "jinja": false, "output_html": "markout/gratitude/gratitude_029/index.html", "long_description": "Last night was a night that I had to run back into work late at night to run some analysis.  I was able to get in and get it done fairly quickly, and it felt really good to have it done and not have to worry about it in the last hour before the prese", "super_description": "Last night was a night that I had to run back into work late at night to run some analysis.  I was able to get in and get it done fairly quickly, and it felt really good to have it done and not have to worry about it in the last hour before the presentation.  I also stuck to my No More Death by powerpoint rule, and did not include an eye chart in the slides.  This was something that I always said I would change when I took over the role, but never did.  Now that I have vowed to never again break", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8550>, next=<frontmatter.Post object at 0x7f34506e80d0>)"}, {"cover": "", "title": "Gratitude 131", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-131.md", "description": "Today Ayla got a new night time routine for her enema, its called a peristeen.", "content": "Today Ayla got a new night time routine for her enema, its called a peristeen.\nWe have been looking forward to this step for awhile now.  The progress we have\nmade so far has been great.  She is gaining back a lot of independence and\nconfidence in herself, but the night time routine itself has been a sore spot.\nIt's been uncomfortable and causes cramping.  Rhiannon said the peristeen went\nso well today at the appointment, that its going to be so much better.  We are\nreally just trying to do the best that we can for her, and want her to suceed\nand go on with the most confidence she can.  We really do not want her scarred\nfrom having accidents for all of her childhood.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_090'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 090</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_029'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 029</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-25", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-131.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572534", "datetime": "2022-01-25 00:00:00+00:00", "slug": "gratitude/gratitude-131", "jinja": false, "output_html": "markout/gratitude/gratitude-131/index.html", "long_description": "Today Ayla got a new night time routine for her enema, its called a peristeen.", "super_description": "Today Ayla got a new night time routine for her enema, its called a peristeen.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8c10>, next=<frontmatter.Post object at 0x7f34506e81f0>)"}, {"cover": "", "title": "Gratitude 090", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_090.md", "description": "Kiddos are all back in school, and doing better.  Wyatt is still running a bit slower than his normal 110% energetic self, but is hanging in there.  I am gratef", "content": "#### Back to School\n\nKiddos are all back in school, and doing better.  Wyatt is still running a bit slower than his normal 110% energetic self, but is hanging in there.  I am grateful that we are back on track with a regular schedule and we are all able to do our own things that we need to throughout the day.  I really enjoy being able to help everyone while they are down, but it really wears on me as everyone stacks up their down days back to back.  It felt good to have some quiet time to get some work done and feel productive.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-150'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 150</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-131'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 131</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-25", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_090.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572540", "datetime": "2019-02-25 00:00:00+00:00", "slug": "gratitude/gratitude_090", "jinja": false, "output_html": "markout/gratitude/gratitude_090/index.html", "long_description": "Kiddos are all back in school, and doing better.  Wyatt is still running a bit slower than his normal 110% energetic self, but is hanging in there.  I am grateful that we are back on track with a regular schedule and we are all able to do our own thi", "super_description": "Kiddos are all back in school, and doing better.  Wyatt is still running a bit slower than his normal 110% energetic self, but is hanging in there.  I am grateful that we are back on track with a regular schedule and we are all able to do our own things that we need to throughout the day.  I really enjoy being able to help everyone while they are down, but it really wears on me as everyone stacks up their down days back to back.  It felt good to have some quiet time to get some work done and fee", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8430>, next=<frontmatter.Post object at 0x7f34506e8550>)"}, {"cover": "", "title": "Gratitude 150", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-150.md", "description": "Today feels sad, it just does.  The politics of this stupid pandemic Wyatt and I played a vehicle mod for Minecraft today, It was super fun,", "content": "Today feels sad, it just does.  The politics of this stupid pandemic\njust hurt.  Its really amplifying a lot of things that have been there\nfor years and it hurts.\n\nWyatt and I played a vehicle mod for Minecraft today, It was super fun,\nwe ended up making a boat course where we made big jumps with different\nwater elements.  He was definitely the better boat operator.  I would\nspot where he was landing and making landings in those place.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-183'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 183</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_090'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 090</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-13", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-150.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572546", "datetime": "2022-02-13 00:00:00+00:00", "slug": "gratitude/gratitude-150", "jinja": false, "output_html": "markout/gratitude/gratitude-150/index.html", "long_description": "Today feels sad, it just does.  The politics of this stupid pandemic Wyatt and I played a vehicle mod for Minecraft today, It was super fun,", "super_description": "Today feels sad, it just does.  The politics of this stupid pandemic Wyatt and I played a vehicle mod for Minecraft today, It was super fun,", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8e50>, next=<frontmatter.Post object at 0x7f34506e8c10>)"}, {"cover": "", "title": "Gratitude 183", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-183.md", "description": "prev Gratitude 122 next Gratitude 150", "content": "\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-122'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 122</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-150'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 150</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-04", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-183.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572552", "datetime": "2022-05-04 00:00:00+00:00", "slug": "gratitude/gratitude-183", "jinja": false, "output_html": "markout/gratitude/gratitude-183/index.html", "long_description": "", "super_description": "", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e89d0>, next=<frontmatter.Post object at 0x7f34506e8430>)"}, {"cover": "", "title": "Gratitude 122", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-122.md", "description": "\ud83d\ude2c Today has been a bit nervewracking.  The sellers of our house are On a less nervewracking note, Wyatt and I played on our first Modded", "content": "\ud83d\ude2c Today has been a bit nervewracking.  The sellers of our house are\nMIA, and we are waiting for them to sign some documents.  We are getting\nnervous that they are having second thoughts about the deal before it\ngets finalized, but I'm sure they are just away from their devices for\npersonal reasons.\n\nOn a less nervewracking note, Wyatt and I played on our first Modded\nminecraft server today.  He has been asking me for weeks to set it up\nand we have just been swamped that I have just told him no lets just\nfocus on playing something that works.  It took over an hour, maybe two\nto get all figured out and running, but we did it.  There was no guide\nout there for Linux, and all the gui's are written for windows and not\nworking for me.  Everything felt like what I needed to do was\nstraightforward, but it I had to run the same command several\ntimes over with different results to get going.  We had a blast, he was\njust super pumped and trying to tell me all these things he knows about\nmodded minecraft.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-108'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 108</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-183'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 183</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-16", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-122.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572560", "datetime": "2022-01-16 00:00:00+00:00", "slug": "gratitude/gratitude-122", "jinja": false, "output_html": "markout/gratitude/gratitude-122/index.html", "long_description": "\ud83d\ude2c Today has been a bit nervewracking.  The sellers of our house are On a less nervewracking note, Wyatt and I played on our first Modded", "super_description": "\ud83d\ude2c Today has been a bit nervewracking.  The sellers of our house are On a less nervewracking note, Wyatt and I played on our first Modded", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e88b0>, next=<frontmatter.Post object at 0x7f34506e8e50>)"}, {"cover": "", "title": "Gratitude 108", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-108.md", "description": "What a blizzard.  Wyatt and I braved the cold, had a snowball fight,", "content": "What a blizzard.  Wyatt and I braved the cold, had a snowball fight,\nscooped the front sidewalk and just explored.  This is probably the most\nsnow Wyatt has yet to see, it was magnificently beautful.  I am so\ngrateful to have this time off each year to really spend time with the\nfamily without feeling like I constantly need to get to something.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_035'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 035</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-122'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 122</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-108.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572566", "datetime": "2022-01-01 00:00:00+00:00", "slug": "gratitude/gratitude-108", "jinja": false, "output_html": "markout/gratitude/gratitude-108/index.html", "long_description": "What a blizzard.  Wyatt and I braved the cold, had a snowball fight,", "super_description": "What a blizzard.  Wyatt and I braved the cold, had a snowball fight,", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8dc0>, next=<frontmatter.Post object at 0x7f34506e89d0>)"}, {"cover": "", "title": "Gratitude 035", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_035.md", "description": "Today I am strugging to come up with a new topic for my gratitude journal.  I feel like I have written about many of the things I am grateful for recently.  As ", "content": "#### Peace\n\nToday I am strugging to come up with a new topic for my gratitude journal.  I feel like I have written about many of the things I am grateful for recently.  As I am sitting here with a nice display of color and listening to the frogs, from our kids's lighted sound machine of course.  I realize that I am just enjoying this moment of peace.  It is nice to not have to worry about anything for a few minutes and just let the words flow.  I think this is why I enjoy doing this gratitude journal, becuase I feel a nice sense of peace after completeing it for the day.  Sometimes the days are crazy, sometimes they are normal, sometimes they are quiet each day is new and none like the other.  But whatever the day brings most of them have included this 5 minutes of peace for the last 35 days.  Thank you Rhiannon for pushing me to start this journal.\n\n> Sometimes the days are crazy, sometimes they are normal, sometimes they are quiet each day is new and none like the other.\n\n\n<style>@import url(\"https://goo.gl/RrPQm5\")</style>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-159'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 159</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-108'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 108</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-02-01", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_035.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572572", "datetime": "2018-02-01 00:00:00+00:00", "slug": "gratitude/gratitude_035", "jinja": false, "output_html": "markout/gratitude/gratitude_035/index.html", "long_description": "Today I am strugging to come up with a new topic for my gratitude journal.  I feel like I have written about many of the things I am grateful for recently.  As I am sitting here with a nice display of color and listening to the frogs, from our kids S", "super_description": "Today I am strugging to come up with a new topic for my gratitude journal.  I feel like I have written about many of the things I am grateful for recently.  As I am sitting here with a nice display of color and listening to the frogs, from our kids Sometimes the days are crazy, sometimes they are normal, sometimes they are quiet each day is new and none like the other.", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8d30>, next=<frontmatter.Post object at 0x7f34506e88b0>)"}, {"cover": "", "title": "Gratitude 159", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-159.md", "description": "Laundry room is working The one issue that we ran into was. I fully setup the washer, then pulled it", "content": "Laundry room is working!  It appears that for years the dryer vent has been\njust kinda set on top of the hole in the floor, not attached at all..... This\nhad blown dryer lint over everything in the laundry room, and I am curious if\nit contributed tot he excessive duest on everyting in the whole house.  I got\nit all cleaned out and hooked up to the best of my ability.  The connections\nhave a solid couple inches overlap and taped tight.\n\nThe one issue that we ran into was. I fully setup the washer, then pulled it\nback out, and forgot to put the drain back on before running a load and\ndraining in onto the floor.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_050'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 049</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_035'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 035</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-26", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-159.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572578", "datetime": "2022-02-26 00:00:00+00:00", "slug": "gratitude/gratitude-159", "jinja": false, "output_html": "markout/gratitude/gratitude-159/index.html", "long_description": "Laundry room is working The one issue that we ran into was. I fully setup the washer, then pulled it", "super_description": "Laundry room is working The one issue that we ran into was. I fully setup the washer, then pulled it", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed160>, next=<frontmatter.Post object at 0x7f34506e8dc0>)"}, {"cover": "", "title": "Gratitude 049", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_050.md", "description": "Today was Ayla", "content": "#### Happy Birthday Ayla\n\nToday was Ayla's fourth birthday, what an adventure it took to get here.  I am so grateful for how far she has came.  Her medical issues are all resolved, her speech is on point, and she is overall a very happy and healthy four year old girl.  Today we were able to celebrate her birthday at home as a family.  She absolutely loved the presents that we got her.  It was very fun to watch the excitement on her face all day long.  She is very attached to her new toys and hasnt stopped playing with them yet.  It has been a long journey for us to get here with us, and it was worth all of the effort!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-172'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 172</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-159'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 159</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-10-18", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_050.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572584", "datetime": "2018-10-18 00:00:00+00:00", "slug": "gratitude/gratitude_050", "jinja": false, "output_html": "markout/gratitude/gratitude_050/index.html", "long_description": "Today was Ayla", "super_description": "Today was Ayla", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e8a60>, next=<frontmatter.Post object at 0x7f34506e8d30>)"}, {"cover": "", "title": "Gratitude 172", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-172.md", "description": "Hooof, what a day... I am so grateful that I am able to have the flexibility I", "content": "Hooof, what a day... I am so grateful that I am able to have the flexibility I\nhave with work.  The kids were just tearing each other apart if left alone at\nall today.  It was just insane how quickly I would leave them to utter\ndestruction.  It's all ok though.  I got a few things done at least, and\neveryone survived.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-174'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 174</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_050'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 049</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-12", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-172.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572590", "datetime": "2022-03-12 00:00:00+00:00", "slug": "gratitude/gratitude-172", "jinja": false, "output_html": "markout/gratitude/gratitude-172/index.html", "long_description": "Hooof, what a day... I am so grateful that I am able to have the flexibility I", "super_description": "Hooof, what a day... I am so grateful that I am able to have the flexibility I", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed040>, next=<frontmatter.Post object at 0x7f34506ed160>)"}, {"cover": "", "title": "Gratitude 174", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-174.md", "description": "What a busy morning today.  We got our sink unclogged, Dobby had a", "content": "What a busy morning today.  We got our sink unclogged, Dobby had a\nfollow up Vet apt, and a trainer apt.  So glad that our sink is finally\nfixed and we did not end up with any bad kitchen floods in the process.\nWell there was that time when I was taking out the old broken dishwasher\nand it dumped all over on the way out, but it was quickly mopped up.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_081'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 081</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-172'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 172</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-15", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-174.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572596", "datetime": "2022-03-15 00:00:00+00:00", "slug": "gratitude/gratitude-174", "jinja": false, "output_html": "markout/gratitude/gratitude-174/index.html", "long_description": "What a busy morning today.  We got our sink unclogged, Dobby had a", "super_description": "What a busy morning today.  We got our sink unclogged, Dobby had a", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed550>, next=<frontmatter.Post object at 0x7f34506e8a60>)"}, {"cover": "", "title": "Gratitude 081", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_081.md", "description": "I am very grateful that I have the freedom to learn the things I need to in order to advance my skills and grow my career.  I am very stretched for time, just l", "content": "#### Freedom to learn\n\nI am very grateful that I have the freedom to learn the things I need to in order to advance my skills and grow my career.  I am very stretched for time, just like everyone else, but I am able to get the things done that I need to and still find time for learning.  I talk to some people that do not have the time.  They are piled so high with tasks to do that there is no time to learn.  I a grateful that my leadership sees value in it and do not really ask questions as long as tasks are being completed on time.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-186'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 186</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-174'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 174</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-07", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_081.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572604", "datetime": "2019-02-07 00:00:00+00:00", "slug": "gratitude/gratitude_081", "jinja": false, "output_html": "markout/gratitude/gratitude_081/index.html", "long_description": "I am very grateful that I have the freedom to learn the things I need to in order to advance my skills and grow my career.  I am very stretched for time, just like everyone else, but I am able to get the things done that I need to and still find time", "super_description": "I am very grateful that I have the freedom to learn the things I need to in order to advance my skills and grow my career.  I am very stretched for time, just like everyone else, but I am able to get the things done that I need to and still find time for learning.  I talk to some people that do not have the time.  They are piled so high with tasks to do that there is no time to learn.  I a grateful that my leadership sees value in it and do not really ask questions as long as tasks are being com", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed0d0>, next=<frontmatter.Post object at 0x7f34506ed040>)"}, {"cover": "", "title": "Gratitude 186", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-186.md", "description": "Tonight I got to stream and knock out a big feature in a side project", "content": "Tonight I got to stream and knock out a big feature in a side project\nthat I have really been wanting to knock out.  I made my website builder\nthemable sot hat users can choose thier own colors without needing to\nwrite any html and css, I am pretty excited for it.  I got to play with\nthe kids early on, and made a hard stop where I was going to stop and do\nmy own thing.  I think this will help me get a few more hours for myself\nhere and there.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-096'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 097</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_081'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 081</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-12", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-186.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572610", "datetime": "2022-05-12 00:00:00+00:00", "slug": "gratitude/gratitude-186", "jinja": false, "output_html": "markout/gratitude/gratitude-186/index.html", "long_description": "Tonight I got to stream and knock out a big feature in a side project", "super_description": "Tonight I got to stream and knock out a big feature in a side project", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed220>, next=<frontmatter.Post object at 0x7f34506ed550>)"}, {"cover": "", "title": "Gratitude 097", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-096.md", "description": "Today was the every 3 week chemo therapy day for my wife.  Today I am grateful Thank you Dee we appreciate you so much", "content": "##  Chemo day\n\nToday was the every 3 week chemo therapy day for my wife.  Today I am grateful\nthat it all went well and that she got her favorite nurse, Dee, to administer\nit.  They have a really great relationship, and it makes me feel great for\nRhiannon to have such a companion through this.  Even though I am still not\nable to get into the cancer center due to COVID-19 restrictions I feel that she\nis well taken care of.\n\n> Thank you Dee we appreciate you so much\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-163'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 163</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-186'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 186</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-23", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-096.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572615", "datetime": "2021-06-23 00:00:00+00:00", "slug": "gratitude/gratitude-096", "jinja": false, "output_html": "markout/gratitude/gratitude-096/index.html", "long_description": "Today was the every 3 week chemo therapy day for my wife.  Today I am grateful Thank you Dee we appreciate you so much", "super_description": "Today was the every 3 week chemo therapy day for my wife.  Today I am grateful Thank you Dee we appreciate you so much", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed4c0>, next=<frontmatter.Post object at 0x7f34506ed0d0>)"}, {"cover": "", "title": "Gratitude 163", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-163.md", "description": "Do you ever wish that you could just get through to someone, try to get them to On the flip side, I would also really like to try to understand their side.  I", "content": "Do you ever wish that you could just get through to someone, try to get them to\nunderstand your side?  Right now I would really like to know how to explain to\nmy family what my wife means to me. The mother of our children.  My best friend\nfor as long as I can remember, the only friend I've really had any where near\nthis long in my life.\n\nOn the flip side, I would also really like to try to understand their side.  I\nthink I know, but its so damn foreign to me that it just makes no sense.  I\nfeel we just have very similarly opposing feelings there, just not\nunderstanding where the other is coming from.  It all feels so rediculous, but\nevery day, every big event I feel like I just loose a bit more of them.  It\nmake me feel sad.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-118'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 118</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-096'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 097</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-02", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-163.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572621", "datetime": "2022-03-02 00:00:00+00:00", "slug": "gratitude/gratitude-163", "jinja": false, "output_html": "markout/gratitude/gratitude-163/index.html", "long_description": "Do you ever wish that you could just get through to someone, try to get them to On the flip side, I would also really like to try to understand their side.  I", "super_description": "Do you ever wish that you could just get through to someone, try to get them to On the flip side, I would also really like to try to understand their side.  I", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed820>, next=<frontmatter.Post object at 0x7f34506ed220>)"}, {"cover": "", "title": "Gratitude 118", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-118.md", "description": "What a day today was, we were really tossed into the home moving process", "content": "What a day today was, we were really tossed into the home moving process\non all fronts.  We checked out a rental that is really close to where we\ncurrently are.  It's quite a bit smaller, more expensive, and has no\nbackyard.  It does seem like it would not be a bad short term option\nthough.  Our current house was viewed by a potential buyer, this was\ncompletely tossed on us last minute, throwing us in a complete scramble\nto tidy up.  And finally we just started talking with a home mortgage\ncompany about the possibility of purchasing a home.  It's all a lot.\nThis house has been good to us, and getting through the last year in\nquarantine, but out time here is running short.  It's exciting, and I am\nso grateful that we have some options.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_069'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 069</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-163'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 163</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-118.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572627", "datetime": "2022-01-11 00:00:00+00:00", "slug": "gratitude/gratitude-118", "jinja": false, "output_html": "markout/gratitude/gratitude-118/index.html", "long_description": "What a day today was, we were really tossed into the home moving process", "super_description": "What a day today was, we were really tossed into the home moving process", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed310>, next=<frontmatter.Post object at 0x7f34506ed4c0>)"}, {"cover": "", "title": "Gratitude 069", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_069.md", "description": "Alright I do not usually mix gratitude with material things, but hear me out", "content": "#### New Devices\n\nAlright I do not usually mix gratitude with material things, but hear me out\nhere.  Today is the second day with my new to me refurbished three year old\nphone, and I am really enjoying it.  I wanted to pay cash, didn't want to pay\n$800, wanted good performance, and didn't really care about having the Latest\nshow room floor tech.  So far it is treating me really well.  The biggest\nreason that I got a new phone was that my signal was cutting out, and with our\ncrazy lifestyle with lots of emergencies that I need to respond to I need\nsomehing reliable.  Today I was at work and this phone had signal in places\nwithin my work that none of my last 2-3 devices could get signal in.  I was\nblown away when I could walk anywhere in the building and hold a conversation\nwith my wife.  This gives me the confidence that my phone will have signal when\nI need it and I can respond to any emergency that I need to.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-170'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 170</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-118'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 118</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-10", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_069.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572633", "datetime": "2019-01-10 00:00:00+00:00", "slug": "gratitude/gratitude_069", "jinja": false, "output_html": "markout/gratitude/gratitude_069/index.html", "long_description": "Alright I do not usually mix gratitude with material things, but hear me out", "super_description": "Alright I do not usually mix gratitude with material things, but hear me out", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed8e0>, next=<frontmatter.Post object at 0x7f34506ed820>)"}, {"cover": "", "title": "Gratitude 170", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-170.md", "description": "Today was chemo day, and we made it through.  The kids were high energy", "content": "Today was chemo day, and we made it through.  The kids were high energy\nand kinda building on each other, but overall for a chemo day it went\npretty well.  Rhiannon was there for a very long time, I feel bad for\nher, but hopefully the fluids she got help aid in a speedy recovery.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude_053'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 053</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_069'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 069</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-10", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-170.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572638", "datetime": "2022-03-10 00:00:00+00:00", "slug": "gratitude/gratitude-170", "jinja": false, "output_html": "markout/gratitude/gratitude-170/index.html", "long_description": "Today was chemo day, and we made it through.  The kids were high energy", "super_description": "Today was chemo day, and we made it through.  The kids were high energy", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed9d0>, next=<frontmatter.Post object at 0x7f34506ed310>)"}, {"cover": "", "title": "Gratitude 053", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude_053.md", "description": "We recently ", "content": "#### She is a RockStar\n\nWe recently _(today)_ found out that that Wyatt has moderatly severe Sleep apnea.  This explains a  lot for him, and is a bit scary for us at the moment, and we are hoping for the best for him.  We wouldnt have found out any of this if it wasnt for Rhiannon.  She is an advocate for these kids like nothing else.  The mom gene is strong wiht this one.  When she knows something is wrong in her gut, she stops at nothing to find answers.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-126'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 126</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-170'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 170</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-11-11", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude_053.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572646", "datetime": "2018-11-11 00:00:00+00:00", "slug": "gratitude/gratitude_053", "jinja": false, "output_html": "markout/gratitude/gratitude_053/index.html", "long_description": "We recently ", "super_description": "We recently ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ed280>, next=<frontmatter.Post object at 0x7f34506ed8e0>)"}, {"cover": "", "title": "Gratitude 126", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-126.md", "description": "We are getting ghosted by sellers again, they are really cramping the", "content": "We are getting ghosted by sellers again, they are really cramping the\nstyle on this whole gratitude journal.  I am very grateful that we have\na great team on our end trying to get us into a house that we love\nbefore we are sent out of this one.  They are really doing everything\nthat they can to help us, it's just hard when there is no response from\nthe other end.  This house really meets so many of our wishes, many\nwishes that we didnt even realize that we had.  It's hard to look at\nother houses, especially when most are more in the city and more\nexpensive.   We still have our hopes up.  We really want a house that\nour whole family can love and we can grow together in without worry\nabout where we are going to be living next.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-135'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 135</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude_053'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 053</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-20", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-126.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572652", "datetime": "2022-01-20 00:00:00+00:00", "slug": "gratitude/gratitude-126", "jinja": false, "output_html": "markout/gratitude/gratitude-126/index.html", "long_description": "We are getting ghosted by sellers again, they are really cramping the", "super_description": "We are getting ghosted by sellers again, they are really cramping the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506edf70>, next=<frontmatter.Post object at 0x7f34506ed9d0>)"}, {"cover": "", "title": "Gratitude 135", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/gratitude/gratitude-135.md", "description": "Today felt busy AF.  It was just a solid day of activity.  Tyring to get Ayla", "content": "Today felt busy AF.  It was just a solid day of activity.  Tyring to get Ayla\nthrough her homework, through school, Deployed 2 projects at work, and.... and\n.... we are getting ready for Dobby to come home tomorrow.  I am so excited for\nhim to be home with us.  Everyone is.  Its just so joyful to see the excitement\nthat everyone has for him.  Rhiannon has done some fantastic research to\nunderstan what we need to do to trai him properly.  We have never gotten a pet\nthat was not a rescue.  This was in part to knowing the family he is coming\nfrom, and the fact that he is going to be Rhiannons medical alert animal.  We\nwanted him to be trained from t start for what she needs him to do.  So excited\nfor the big day.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-course'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Course</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-126'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 126</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-29", "edit_link": "https://github.com/edit/main/pages/gratitude/gratitude-135.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572658", "datetime": "2022-01-29 00:00:00+00:00", "slug": "gratitude/gratitude-135", "jinja": false, "output_html": "markout/gratitude/gratitude-135/index.html", "long_description": "Today felt busy AF.  It was just a solid day of activity.  Tyring to get Ayla", "super_description": "Today felt busy AF.  It was just a solid day of activity.  Tyring to get Ayla", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2310>, next=<frontmatter.Post object at 0x7f34506ed280>)"}, {"cover": "", "title": "Kedro Course", "tags": ["python"], "status": "Draft", "templateKey": "blog-post", "path": "pages/blog/kedro-course.md", "description": "find all nodes with raw in the name use parameters make and use a logger use find-kedro in spaceflights slide in a new node vizualize your pipeline find slow no", "content": "* find all nodes with raw in the name\n* use parameters\n* make and use a logger\n* use find-kedro in spaceflights\n* slide in a new node\n* vizualize your pipeline\n* find slow nodes\n* move the configuration directory\n* build kedro into docker and run it\n\n* pyinstrument\n* pdb\n* make a new cli command\n* make a hook\n* load catalog entries\n* slice a pipeline\n  * by tag\n  * by name\n  * from inputs\n  * to outputs\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/expand-one-line-links'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Expand One Line Links</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-135'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 135</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-04", "edit_link": "https://github.com/edit/main/pages/blog/kedro-course.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572664", "datetime": "2021-12-04 00:00:00+00:00", "slug": "kedro-course", "jinja": false, "output_html": "markout/kedro-course/index.html", "long_description": "find all nodes with raw in the name use parameters make and use a logger use find-kedro in spaceflights slide in a new node vizualize your pipeline find slow nodes move the configuration directory build kedro into docker and run it pyinstrument pdb m", "super_description": "find all nodes with raw in the name use parameters make and use a logger use find-kedro in spaceflights slide in a new node vizualize your pipeline find slow nodes move the configuration directory build kedro into docker and run it pyinstrument pdb make a new cli command make a hook load catalog entries slice a pipeline by tag by name from inputs to outputs", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506edc10>, next=<frontmatter.Post object at 0x7f34506edf70>)"}, {"cover": "", "title": "Expand One Line Links", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/expand-one-line-links.md", "description": "I wanted a super simple way to cross-link blog posts that require as little effort as possible, yet still looks good in vanilla markdown in GitHub.  I have been", "content": "I wanted a super simple way to cross-link blog posts that require as little effort as possible, yet still looks good in vanilla markdown in GitHub.  I have been using a snippet that puts HTML into the markdown.  While this works, it's more manual/difficult for me does not look the best, and does not read well as\n\n## Goals for new card\n\nThe new card should be fully automated to expand with title, description, and\ncover image.  Bonus if I am able to attach a comment behind it.\n\n* fully automated\n* card expansion\n* Title\n* description\n* cover image\n\n## Old Card\n\nIf you can call it a card \ud83e\udd23.  This card was just an image wrapped in an anchor tag and a paragraph tag.  I found this was the most consistent way to get an image narrower and centered in both GitHub and dev.to.\n\n``` html\n<p style='text-align: center'>\n  <a href='https://waylonwalker.com/notes/eight-years-cat/'>\n    <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/eight-years-cat.png\"\n    alt=\"My first eight years as a working professional article\"\n    />\n  </a>\n</p>\n```\n\n<p style='text-align: center'>\n  <a href='https://waylonwalker.com/notes/eight-years-cat'>\n    <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/eight-years-cat.png\"\n    alt=\"My first eight years as a working professional article\"\n    />\n  </a>\n</p>\n\nThe key here is that I have to put the HTML into the markdown.  It looks a bit dirty while editing and quite frankly it's a pain to deal with.\n\n---\n\n## New Card\n\n``` markdown\n\n<a class=\"onelinelink\" href=\"https://waylonwalker.com/eight-years-cat/\">\n<img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/29cdf6fcfb17d7fd766fc438144fb3e4/630fb/eight-years-cat-xmas2020.png\" alt=\"article cover for My first eight years as a working professional.\">\n<div class=\"right\">\n    <h2>My first eight years as a working professional.</h2>\n    <p class=\"description\">\n    This day 8 years ago I started my first day as a Mechanical Engineer. I am so grateful for this journey that I have been able to have. There is no way that I could have planned this journey from the beginning.\n    </p>\n    <p class=\"url\">\n    <span class=\"read-more\">read more</span>  waylonwalker.com\n    </p>\n</div>\n</a>\n\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/eight-years-cat/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/eight-years-cat-og_250x140.png\" alt=\"article cover for \n My first eight years as a working professional.\n\"/>\n          <p><strong>\n My first eight years as a working professional.\n</strong></p>\n      </a>\n  </div>\n\n\n## First step\n\nMy first attempt was to make my own transformer for `gatsby-remark-embedder`. I previously set this up on my site for Twitter and YouTube.  I tried to get some custom transformers going, to do what I wanted for my own website, but failed.  I really struggled to understand what data was coming in and out of the transformer.  My lack of js/node debugging skills was really showing.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/gatsby-remark-embedder/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/gatsby-remark-embedder-og_250x140.png\" alt=\"article cover for \n gatsby-remark-embedder\n\"/>\n          <p><strong>\n gatsby-remark-embedder\n</strong></p>\n      </a>\n  </div>\n\n\n\n> using gatsby-remark-embedder to expand Twitter/YouTube\n\n## Redirects\n\nIt also works with redirects. I have a redirect to my \"latest\" post.  It's something that I don't do the best job at keeping up to date, but when I feel really proud of a post I make it the latest.\n\nhttps://waylonwalker.com/latest/\n\n> this post is a redirect to my \"latest post\"\n\n## Client Side\n\nI started out by running this card expansion client side. This was the strategy that I used to find the list of elements that should be transformed.\n\n* get all anchors\n* get all paragraphs\n* filter paragraphs where the content is one of the links\n* filter paragraphs where there is only one element in the paragraph\n* filter to paragraphs with links that `shouldTransform`\n* These elements should have the `oneLineLinkCard` applied.\n\n``` javascript\nconst oneLineLinks = () => {\n  const linkText = [...document.querySelectorAll('.post-body p a')].map(\n    (p) => p.innerText\n  )\n  const paragraphs = document.querySelectorAll('.post-body p') //\n\n  const regex = /^https?:\\/\\/waylonwalker\\.com\\//\n  const shouldTransform = (url) => regex.test(url)\n\n  const anchorOnly = [...paragraphs].filter(\n    (p) => linkText.includes(p.innerText) && p.childElementCount === 1\n  )\n\n  anchorOnly\n    .filter((p) => shouldTransform(p.firstElementChild.href))\n    .map(\n      async (p) =>\n        (p.outerHTML = await oneLineLinkCard(p.firstElementChild.href))\n    )\n}\n```\n\n## Styles\n\nCSS is not my strong suit, but I can generally hammer something into a shape that I am happy with.  For this one, I did struggle a bit with how it looked on various screens, particularly because I was holding the cover image size to a hard 300px.  I ended up with more media queries than I needed, but it works.\n\n``` css\n.onelinelink + blockquote {\n  position: relative;\n  left: 2rem;\n  background: rgba(0, 0, 0, .2);\n  margin: -6rem auto 1rem;\n  padding-top: 3rem;\n  border: 1px solid goldenrod;\n  border-top: 2px solid goldenrod;\n\n  max-width: 300px;\n  @media (max-width: 350px) {\n  left: 0rem;\n  margin-left: .4rem;\n  margin-right: .4rem;\n  }\n  @media (min-width: 800px) {\n    max-width: 600px;\n  }\n  @media (min-width: 900px) {\n    max-width: 700px;\n  }\n  @media (min-width: 1000px) {\n    max-width: 800px;\n  }\n  border-radius: 15px/45px;\n  display: block;\n  }\n\n}\n\n.onelinelink {\n  position: relative;\n  z-index: 2;\n  margin: 4rem;\n  overflow: hidden;\n  display: flex;\n  border: 2px solid rgba(255, 50, 50, .1);\n  background: rgba(255, 50, 50, .015);\n  background: #262236;\n  text-decoration: none;\n  border-radius: 8px;\n  max-height: 126px;\n\n  @media (max-width: 800px) {\n    flex-direction: column;\n    max-height: 800px;\n    max-width: 300px;\n    margin: 4rem auto;\n\n  }\n\n  h2 {\n    top: -1.2rem;\n    postition: relative;\n    margin: 0;\n    padding: 0;\n    font-size: .8rem;\n    font-weight: 400;\n\n  }\n\n  .right {\n  width: 100%;\n    padding: 5px 15px;\n  }\n  .description {\n    font-size: 1rem;\n    line-height: 1.2rem;\n    height: calc(100% - 31px - 1rem);\n    padding: 0;\n    padding-bottom: 1rem;\n    padding-top: .1rem;\n    margin: 0;\n  }\n  .url {\n    padding-right: 30px;\n    color: rgba(255, 255, 255, .1);\n    text-align: right;\n    position: relative;\n    z-index: 2;\n    background: #262236;\n  }\n  \n  img {\n    max-width: 300px;\n    max-height: 126px;\n    padding: 0;\n    margin: 0;\n    border-radius: 8px 0 0 8px;\n  }\n  .read-more {\n    font-size: .6rem;\n    color: rgba(255, 255, 255, .08);\n  }\n}\n```\n\n### Final Look\n\nOn mobile, it renders vertically.\n\n![mobile](https://images.waylonwalker.com/one-line-link-vertical.png)\n\nOn desktop, it renders horizontally.\n\n![desktop](https://images.waylonwalker.com/one-line-link-horizontal.png)\n\n## Expansion\n\nI'm sure that all of this can be better, my js skills are still forming.  It's quite humbling to see how hard it is to think in an unfamiliar language.  The following `oneLineLineCard` renders a string template literal from a paragraph with a single anchor to a card that contains some of that pages meta information.  The \n getDescription` function uses a fetch to get the metadata right from the content of the page.\n\n``` javascript\nconst getDescription = (url) =>\n  fetch(url)\n    .then((r) => r.text())\n    .then((html) => {\n      let parser = new DOMParser()\n      let doc = parser.parseFromString(html, 'text/html')\n      let meta = doc.querySelectorAll('meta')\n      const description = [...meta].filter(\n        (m) => m.name === 'og:description'\n      )[0].content\n      const image = [...meta].filter((m) => m.name === 'og:image')[0]?.content\n      const sm_image = [...meta].filter((m) => m.name === 'og:sm_image')[0]\n        ?.content\n      const url = [...meta].filter((m) => m.name === 'og:url')[0]?.content\n      const title = [...meta].filter((m) => m.name === 'title')[0]?.content\n      return { description, image, url, title, sm_image }\n    })\n\nconst oneLineLinkCard = (url) => {\n  return getDescription(url).then(\n    (meta) =>\n      `<a class=\"onelinelink\" href=${meta.url}>\n  <img src='${meta.sm_image ? meta.sm_image : meta.image ? meta.image : ''}' alt='cover image for ${meta.title ? meta.title : ''}>\n  <div class=\"right\">\n    <h2>${meta.title ? meta.title : ''}</h2>\n    <p class='description'>\n      ${meta.description ? meta.description : ''}\n    </p>\n    <p class=\"url\">\n       <span class='read-more'>read more</span>  waylonwalker.com\n    </p>\n  </div>\n\n</a>\n  `\n  )\n}\n```\n\n## It works...\n\nAnd it works.  Whenever I reference my own blog with just a single link on a line in markdown I get a nice card link out to the other post, with a small image sized for the card, the title, and the description of the post.\n\n\n## But\n\n* too much client-side\n* does not work well with cross-posting\n\nFor every link I do this with the client will pull the full page just to get a bit of metadata.  I am already doing a bit more than I want to do client-side for a blog, so I would prefer to do it ahead of time.\n\nAdditionally, since it is done client-side it does not translate well when I copy my markdown to various other blogging platforms.  If it were rendered right into the markdown cross-posting would be much easier.\n\n## Future State\n\n_actually already implemented at this point_\n\nThe direction I am going to try is to use python to load each post, look for lines that contain only a link, then render this same markup right in the markdown.  For this I am going to use a language I am more familiar with, python, and do this inside of GitHub actions just before build time so that the markdown I write stays the same, the cards will only be rendered in prod.\n\n## Why Python \ud83d\udc0d\n\nPython is my every day what I know, I work much more efficiently and cleanly with it.  Also the more I blog the more abstractions I am seeing and the lazier I am getting.  Things like description, SEO, cover images are all getting automated. Gatsby really doesn't like to run when some of those things are missing, probably due to my lack of JS error handling skills.  I find it much easier to load up all the pages and patch up the frontmatter in python before\nbuild time.\n\nI am kinda curious if eventually, I can re-create everything I need in python because I am honestly not using react for much more than a glorified templating system, besides search.  If I can pre-render everything in python\n\n## What do you think??\n\nDo they look good?  Could they be better?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/explain-twitter-cards'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\ude4b\u200d\u2642\ufe0f Can Anyone Explain Twitter Cards to me?</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/eight-years-cat'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>My first eight years as a working professional.</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-18", "edit_link": "https://github.com/edit/main/pages/blog/expand-one-line-links.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572670", "datetime": "2020-11-18 00:00:00+00:00", "slug": "expand-one-line-links", "jinja": false, "output_html": "markout/expand-one-line-links/index.html", "long_description": "I wanted a super simple way to cross-link blog posts that require as little effort as possible, yet still looks good in vanilla markdown in GitHub.  I have been using a snippet that puts HTML into the markdown.  While this works, it The new card shou", "super_description": "I wanted a super simple way to cross-link blog posts that require as little effort as possible, yet still looks good in vanilla markdown in GitHub.  I have been using a snippet that puts HTML into the markdown.  While this works, it The new card should be fully automated to expand with title, description, and fully automated card expansion Title description cover image If you can call it a card \ud83e\udd23.  This card was just an image wrapped in an anchor tag and a paragraph tag.  I found this was the mo", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a040>, next=<frontmatter.Post object at 0x7f34506aee50>)"}, {"cover": "", "title": "tmux last session", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-last-session.md", "description": "https://youtu.be/RB87EEnnMnU An ultimate productivity key-binding in tmux is one to switch to the last session.  I use this to quickly get between sessions real", "content": "https://youtu.be/RB87EEnnMnU\n\nAn ultimate productivity key-binding in tmux is one to switch to the last session.  I use this to quickly get between sessions really quick.  Often I am working and need to lookup a quick note, or copy something into my notes, then get back to where I was quickly.\n\n``` bash\nbind -n M-b switch-client -l\n```\n\nI think of this hub and spoke model, and use `last-session` to quickly drive it.\n\n![hub and spoke](https://images.waylonwalker.com/tmux-nav-hub-spoke.png)\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-list-keys'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux list-keys</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-killing-tmux'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>killing tmux</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-16", "edit_link": "https://github.com/edit/main/pages/blog/tmux-last-session.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572676", "datetime": "2021-07-16 00:00:00+00:00", "slug": "tmux-last-session", "jinja": false, "output_html": "markout/tmux-last-session/index.html", "long_description": "https://youtu.be/RB87EEnnMnU An ultimate productivity key-binding in tmux is one to switch to the last session.  I use this to quickly get between sessions really quick.  Often I am working and need to lookup a quick note, or copy something into my n", "super_description": "https://youtu.be/RB87EEnnMnU An ultimate productivity key-binding in tmux is one to switch to the last session.  I use this to quickly get between sessions really quick.  Often I am working and need to lookup a quick note, or copy something into my notes, then get back to where I was quickly. I think of this hub and spoke model, and use  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640670>, next=<frontmatter.Post object at 0x7f34506961f0>)"}, {"cover": "", "title": "nvim conf 2021 | IDE's are slow | Waylon Walker", "tags": ["kedro"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/nvim-ides-are-slow.md", "description": "https://youtu.be/E18m4KkJUnI Using Vim as a Team Lead I \ud83d\udc9c Tmux Why I stopped using @code Get there fast How I vim Use a graphical IDE if it works for you. vim i", "content": "https://youtu.be/E18m4KkJUnI\n\n[//]: <> (## images)\n\n[//]: <> (too many codes)\n[//]: <> ( https://pbs.twimg.com/media/FAEmRjYUcAUk2eR?format=jpg&name=large )\n[//]: <> ( https://twitter.com/_WaylonWalker/status/1438849269407047686/photo/1 )\n[//]: <> ( https://twitter.com/_WaylonWalker/status/1438849269407047686/photo/1 )\n\n---\n\n## Slides \ud83d\udc47\n\n## welcome\n\n[//]: <> (Rather than saying vim is fast lets fix some things live.  While we are trying)\n[//]: <> (to present on how fast vim is, popups will iterrupt with critical production)\n[//]: <> (failures that need fixed straight away.)\n\n[//]: <> (## topics)\n[//]: <> (* lsp)\n[//]: <> (* make vim yours)\n[//]: <> (* I use tmux)\n[//]: <> (* quickfix)\n\n\n## Other possible titles\n\n* Using Vim as a Team Lead\n* I \ud83d\udc9c Tmux\n* Why I stopped using @code\n* Get there fast\n* How I vim\n\n\n## It's ok\n\nUse a graphical IDE if it works for you.\n\n## Trick it out\n\nvim is so well integrated into the terminal, take advantage\n\n## It wasn't working for me anymore\n\n[//]: <> (seriously,)\n\n## dozens of instances\n\nAs a team lead I bounce betweeen a dozen projects a per day\n\nhttps://pbs.twimg.com/media/FAEmRjYUcAUk2eR?format=jpg&name=large \n\n[//]: <> (Trying to run more than one instance of an ide is hard, especially when)\n[//]: <> (projects are so similar and all start looking the same.)\n\n## Move With Intent\n\nRunning vim inside tmux lets me move swiftly between the exact project I need.\n\nhttps://twitter.com/_WaylonWalker/status/1438849269407047686/photo/1\n[//]: <> (__)\n\n## Hub and Spoke\n\n* direct link to specific projects\n* fuzzy into all projects\n* fuzzy into open projects\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n[//]: <> (I'm sure there are other ways do do this, I bet you can get a vim plugin to do this)\n\n## Other Things That Make this Possible\n\n* tmux\n* direnv\n\n> vim adjacent things\n\n[//]: <> (## Check messages)\n\n\n[//]: <> (a short interruption where I am called back to work where I show flying swiftly)\n[//]: <> (between projects with the perfect intent.)\n\n## yes, vim is ugly, make it yours\n\n@rook\n``` vim\ncommand! Q :q\n```\n\n@_waylonwalker\n``` vim\nnnoremap <leader>6 <c-^>\n```\n\n\n[//]: <> (__)\n\n## lsp\n\n\n``` vim\nlua vim.lsp.buf.definition()\n```\n\n## treesitter\n\n\n``` vim\nPlug 'nvim-treesitter/nvim-treesitter-textobjects'\n```\n\n## telescope\n\nfuzzy matching like a boss\n\nfzf is ok too\n\n## Check Messages\n\n[//]: <> (Another interruption comes in, this time the change uses the lsp and some custom bindings)\n[//]: <> (Data Pipeline is down.)\n[//]: <> (* Use the lsp go to definition.)\n[//]: <> (* Open data in visidata)\n[//]: <> (* use jumplist to get back)\n[//]: <> (* make the fix)\n[//]: <> (* use fugitive to commit)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/out-of-space'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Out of Space</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/newsboat'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Newsboat</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-29", "edit_link": "https://github.com/edit/main/pages/blog/nvim-ides-are-slow.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572681", "datetime": "2021-10-29 00:00:00+00:00", "slug": "nvim-ides-are-slow", "jinja": false, "output_html": "markout/nvim-ides-are-slow/index.html", "long_description": "https://youtu.be/E18m4KkJUnI Using Vim as a Team Lead I \ud83d\udc9c Tmux Why I stopped using @code Get there fast How I vim Use a graphical IDE if it works for you. vim is so well integrated into the terminal, take advantage As a team lead I bounce betweeen a ", "super_description": "https://youtu.be/E18m4KkJUnI Using Vim as a Team Lead I \ud83d\udc9c Tmux Why I stopped using @code Get there fast How I vim Use a graphical IDE if it works for you. vim is so well integrated into the terminal, take advantage As a team lead I bounce betweeen a dozen projects a per day https://pbs.twimg.com/media/FAEmRjYUcAUk2eR?format=jpg Running vim inside tmux lets me move swiftly between the exact project I need. https://twitter.com/ direct link to specific projects fuzzy into all projects fuzzy into op", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3550>, next=<frontmatter.Post object at 0x7f3450685220>)"}, {"cover": "", "title": "Do You Hoist", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/do-you-hoist.md", "description": "Do you have any use cases that you use hoising?  Why?  It seems like a really cool feature in any language that uses it, but I dont really notice it in use.", "content": "I am working through Wes Bos's\n[beginnerjavascript.com/](https://beginnerjavascript.com/) I just hit module 18\non hoisting.  It's something that I always knew was there, Its not something I\ntypically see used or use myself.\n\n## Do you Hoist?\n\nDo you have any use cases that you use hoising?  Why?  It seems like a really cool feature in any language that uses it, but I dont really notice it in use.\n\n## What is Hoising\n\nThere are many articles that cover this in far more depth, but its the idea that variable declarations and functions are defined before they are executed.  This means that it doesnt matter if you call a function before or after it is defined.\n\n\n## Hoisting\n\n``` javascript\n\nconsole.log(`Hello ${getUser()}`)\n\nfunction getUser() {\n  return 'Waylon'\n}\n```\n\nRunning this code will log out \"Waylon\"\n\n## What about variable hoisting\n\nI am most familiar with python which does not variable hoist so this one kinda confused me at first.  It only hoists the variable declaration not the value of the variable.  It defines whether the variable is going to be `var`, `let`, or `const` and sets it to undefined.\n\n> It only hoists the variable declaration not the value of the variable.\n\n``` javascript\nconsole.log('name: ', name)\nconsole.log('firstName: ', firstName)\n\nconst name = \"Waylon\"\n```\n\nThis code will log out `name: undefined` followed by an `Uncaught ReferenceError: firstName is not defined` since `name` has been decalared and `firstName` has not been decalred.\n\n## I don't Hoist\n\nReally it feels weird to call function definitions before using them.  I really dont have a better reason.  It just feels more natural to do so.\n\n## Is hoisting more readable?\n\nI kinda like the idea of putting the \ud83e\udd69 meat of the file up at the top so that someone reading it will see the good stuff first, then can optionally dig into the weeds if they need to.\n\n## I started a newsletter\n\nI recently started a newsletter, [join in](https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe) and let me know what you want to hear about.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/don-t-waste-your-time-learning-everything'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Don\u2019t waste your time learning everything</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/digital-ocean'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Digital Ocean</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-25", "edit_link": "https://github.com/edit/main/pages/blog/do-you-hoist.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572689", "datetime": "2020-02-25 00:00:00+00:00", "slug": "do-you-hoist", "jinja": false, "output_html": "markout/do-you-hoist/index.html", "long_description": "I am working through Wes Bos Do you have any use cases that you use hoising?  Why?  It seems like a really cool feature in any language that uses it, but I dont really notice it in use. There are many articles that cover this in far more depth, but i", "super_description": "I am working through Wes Bos Do you have any use cases that you use hoising?  Why?  It seems like a really cool feature in any language that uses it, but I dont really notice it in use. There are many articles that cover this in far more depth, but its the idea that variable declarations and functions are defined before they are executed.  This means that it doesnt matter if you call a function before or after it is defined. Running this code will log out  I am most familiar with python which do", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae790>, next=<frontmatter.Post object at 0x7f345066c700>)"}, {"cover": "", "title": "tmux copy-mode", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-copy-mode.md", "description": "https://youtu.be/-ypY tmux copy-mode is a tmux mode that lets you scroll, search, copy, and jump your Default keybinding to get into copy mode is  If you are a ", "content": "https://youtu.be/-ypY_-VmBKk\n\ntmux copy-mode is a tmux mode that lets you scroll, search, copy, and jump your\nway through a pane.  There are a ton of keybindings for copy-mode, the main\nones you will need to know are `/` for searching down `?` for searching up, `n`\nfor next item, `space` for starting a selection, and enter to copy the\nselection.  Arrow keys will be used for navigation unless you have specified vi mode, then it will be `hjkl`.\n\nDefault keybinding to get into copy mode is `prefix+[`.\n\n``` bash\nbind-key          [ copy-mode\n```\n\nIf you are a vim user you will likely want to use vi style keys, add this to\nyour `~/.tmux.conf` file to enable vi mode.\n\n\n``` bash\nsetw -g mode-keys vi\n```\n\nfull list of copy-mode keybindings from the man page.\n\n``` bash\n  Command                                      vi              emacs\n           append-selection\n           append-selection-and-cancel                  A\n           back-to-indentation                          ^               M-m\n           begin-selection                              Space           C-Space\n           bottom-line                                  L\n           cancel                                       q               Escape\n           clear-selection                              Escape          C-g\n           copy-end-of-line [<prefix>]                  D               C-k\n           copy-line [<prefix>]\n           copy-pipe [<command>] [<prefix>]\n           copy-pipe-no-clear [<command>] [<prefix>]\n           copy-pipe-and-cancel [<command>] [<prefix>]\n           copy-selection [<prefix>]\n           copy-selection-no-clear [<prefix>]\n           copy-selection-and-cancel [<prefix>]         Enter           M-w\n           cursor-down                                  j               Down\n           cursor-down-and-cancel\n           cursor-left                                  h               Left\n           cursor-right                                 l               Right\n           cursor-up                                    k               Up\n           end-of-line                                  $               C-e\n           goto-line <line>                             :               g\n           halfpage-down                                C-d             M-Down\n           halfpage-down-and-cancel\n           halfpage-up                                  C-u             M-Up\n           history-bottom                               G               M->\n           history-top                                  g               M-<\n           jump-again                                   ;               ;\n           jump-backward <to>                           F               F\n           jump-forward <to>                            f               f\n           jump-reverse                                 ,               ,\n           jump-to-backward <to>                        T\n           jump-to-forward <to>                         t\n           jump-to-mark                                 M-x             M-x\n           middle-line                                  M               M-r\n           next-matching-bracket                        %               M-C-f\n           next-paragraph                               }               M-}\n           next-space                                   W\n           next-space-end                               E\n           next-word                                    w\n           next-word-end                                e               M-f\n           other-end                                    o\n           page-down                                    C-f             PageDown\n           page-down-and-cancel\n           page-up                                      C-b             PageUp\n           pipe [<command>] [<prefix>]\n           pipe-no-clear [<command>] [<prefix>]\n           pipe-and-cancel [<command>] [<prefix>]\n           previous-matching-bracket                                    M-C-b\n           previous-paragraph                           {               M-{\n           previous-space                               B\n           previous-word                                b               M-b\n           rectangle-on\n           rectangle-off\n           rectangle-toggle                             v               R\n           refresh-from-pane                            r               r\n           scroll-down                                  C-e             C-Down\n           scroll-down-and-cancel\n           scroll-up                                    C-y             C-Up\n           search-again                                 n               n\n           search-backward <for>                        ?\n           search-backward-incremental <for>                            C-r\n           search-backward-text <for>\n           search-forward <for>                         /\n           search-forward-incremental <for>                             C-s\n           search-forward-text <for>\n           search-reverse                               N               N\n           select-line                                  V\n           select-word\n           set-mark                                     X               X\n           start-of-line                                0               C-a\n           stop-selection\n           top-line                                     H               M-R\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-display-message'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux display-message</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-command-line'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux command line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-28", "edit_link": "https://github.com/edit/main/pages/blog/tmux-copy-mode.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572695", "datetime": "2021-07-28 00:00:00+00:00", "slug": "tmux-copy-mode", "jinja": false, "output_html": "markout/tmux-copy-mode/index.html", "long_description": "https://youtu.be/-ypY tmux copy-mode is a tmux mode that lets you scroll, search, copy, and jump your Default keybinding to get into copy mode is  If you are a vim user you will likely want to use vi style keys, add this to full list of copy-mode key", "super_description": "https://youtu.be/-ypY tmux copy-mode is a tmux mode that lets you scroll, search, copy, and jump your Default keybinding to get into copy mode is  If you are a vim user you will likely want to use vi style keys, add this to full list of copy-mode keybindings from the man page. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae9d0>, next=<frontmatter.Post object at 0x7f345069ca00>)"}, {"cover": "", "title": "Maintianing multiple git repos with mu-repo", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/mu-repo.md", "description": "https://waylonwalker.com/bash/ I have similar command line related shortcuts in my bash notes", "content": "## Quickstart\n\n``` bash\n# installation\npip install mu-repo\n\n## register repos\nmu register --recursive\nmu list\n\n# run git commands\nmu status --short\nmu diff -U0 --color | bat\n\n# run shell commands\nmu sh $(grep -iRl \"KEDRO_GID=0\" | xargs sed -i \"s/KEDRO_GID=0/KEDRO_GID=5/g\")\n```\n\n## Registering Repos\n``` bash\nmu register --all\nmu register --all\nmu register --recursive\n\nmu unregister --all\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/bash/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/bash-og_250x140.png\" alt=\"article cover for \n \ud83d\udcdd Bash Notes\n\"/>\n          <p><strong>\n \ud83d\udcdd Bash Notes\n</strong></p>\n      </a>\n  </div>\n\n\n> I have similar command line related shortcuts in my bash notes\n\n## Full Help\n\n``` bash\nmu --help\n\n* mu register repo1 repo2: Registers repo1 and repo2 to be tracked.\n* mu register --all: Registers all subdirs with .git (non-recursive).\n* mu register --current: Registers all subdirs with .git (non-recursive).\n* mu register --recursive: Registers all subdirs with .git (recursive).\n* mu unregister repo1 repo2 | --all: Stops tracking some repository.\n* mu list: Lists the currently tracked repositories.\n* mu set-var git=d:/bin/git/bin/git.exe: Set git location to be used.\n* mu set-var serial=0|1: Set commands to be executed serially or in parallel.\n* mu get-vars: Prints the configuration file.\n* mu fix-eol: Changes end of lines to '\\n' on all changed files.\n* mu find-branch [-r] *pat*:\n    Finds all branches matching a given pattern (or simply mu fb).\n* mu git-init-config: Initial git configuration (username, log, etc.)\n* mu --version: Prints its version\n* mu auto-update: Automatically updates mu-repo\n  (using git -- if it was installed from the repo as in the instructions).\n\n* mu dd:\n     Creates a directory structure with working dir vs head and opens\n     WinMerge with it (doing mu ac will commit exactly what's compared in this\n     situation).\n\n     Also accepts a parameter to compare with a different commit/branch. I.e.:\n     mu dd HEAD^^\n     mu dd 9fd88da\n     mu dd development\n\n* mu sh <command line>\n   Allows calling any command line in the registered repositories\n   e.g.: mu sh ls -la will call ls -la on all registered repositories.\n\n* mu clone: Cloning multiple repos from a base url.\n  Use mu clone --help to open browser with more details.\n\n* mu <command> repo:<repo1>,<repo2>\n   Allows specifying target repositories for a single command:\n   e.g.: mu st repo:repo1,repo2: Will do st on repo1 and repo2.\n\n* mu group: Repository grouping\n\n  * mu group add <name> [--empty]:\n      Creates new group with current repositories, unless --empty is given\n  * mu group rm <name>: Removes a group\n  * mu group switch <name>: Switches to an existing group\n  * mu group reset: Stops using the current group (uses all repos again).\n  * mu group: With no parameters, just lists current groups\n\n  Use mu register normally to add repositories to the current group\n  Use mu list to list repositories in the current group\n\nShortcuts:\n\nmu st         = Nice status message for all repos (always in parallel)\nmu co branch  = git checkout branch\nmu mu-branch  = git rev-parse --abbrev-ref HEAD (print current branch)\nmu up         = git fetch origin curr_branch:refs/remotes/origin/curr_branch\nmu up --all   = git fetch origin (always in parallel)\nmu upd | sync = up/diff incoming changes\nmu a          = git add -A\nmu c msg      = git commit -m \"Message\" (the message must always be passed)\nmu ac msg     = git add -A & git commit -m (the message must always be passed)\nmu acp msg    = same as 'mu ac' + git push origin current branch.\nmu p          = git push origin current branch.\nmu rb         = git rebase origin/current branch.\nmu shell      = On msysgit, call sh --login -i (linux-like env)\nmu fb [-r] pat= Shortcut for find-branch\n\nAny other command is passed directly to git for each repository:\nI.e.:\n\nmu pull            \nmu fetch           \nmu push            \nmu checkout release\n\nNote: Actions considered safe may always be executed in parallel (i.e.: mu st)\n\nNote: Passing --timeit in any command will print the time for the command.\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/how-i-review-kedro-projects'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I Review Pipeline Code</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-copy-mode'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux copy-mode</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-10", "edit_link": "https://github.com/edit/main/pages/blog/mu-repo.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572701", "datetime": "2021-06-10 00:00:00+00:00", "slug": "mu-repo", "jinja": false, "output_html": "markout/mu-repo/index.html", "long_description": "https://waylonwalker.com/bash/ I have similar command line related shortcuts in my bash notes", "super_description": "https://waylonwalker.com/bash/ I have similar command line related shortcuts in my bash notes", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f28b0>, next=<frontmatter.Post object at 0x7f34506f21f0>)"}, {"cover": "", "title": "How I Review Pipeline Code", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/how-i-review-kedro-projects.md", "description": "I have started doing more regular PR https://waylonwalker.com/what-is-kedro passing ci Variable Names Antipatterns No commented out code Docsttrings generally m", "content": "I have started doing more regular PR's on my teams\n[Kedro](https://waylonwalker.com/what-is-kedro) pipelines.  I generally take a\ntwo phase approach to the review in order to give the reviewee both quick and\ndetailed feedback.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n## initial scan (Phase1)\n\n* passing ci\n* Variable Names\n* Antipatterns\n* No commented out code\n* Docsttrings generally make sense\n\n\nPhase1 is typically a quick scan over the PR right within the PR window in my browser.  \n\n### Passing CI\n\n* flake8\n* black\n* isort\n* interrogate\n* pytest\n* build\n\nThe very first thing that needs to happen is automated CI.  We use things like\nflake8, black, isort, interrogate to ensure that everyone follows generic style\nguides like pep8.  The project does a build within the PR, but no deploy.\n\n## Variable Names\n\nI strugle really hard to not impose my own opinion into the PR at this point,\nand sometimes really want to change a lot of variable names.  Typically I make\nsure they don't grow longer than necessary, too short, misspelled, or\ninconsistent.  I make sure that I can follow the flow without gettign tripped\nup by names.\n\n## Antipatterns\n\nI am not too much of a zealot of any paradigm.  I am mostly looking for\nreadability and consistency.  Many times as we dig into an antipattern the\nresponse is \"Well I tried to do it the other way, but hit this issue\".\nGenerally we figure out the problem together and avoid the antipattern, or\nunderstand that this is an edge case and leave a comment for our future selves\nto know why it is the way it is.\n\n## No Commented Code\n\nOne of the biggest scars of a hard problem solving session is leaving behind\nall the other things you tried commented out with no context.  I am a fan of\nkeeping things clean, because its real easy to forget which line was working\nnext time you comment out the good one.  You have made your best choice, run\nwith it and get rid of the clutter..\n\n\n---\n\n## clone (Phase2)\n\nAt this point it depends on the complexity of the change and confidence of the\nreviewee.  If their changes are simple enough and they are confident with the\nresults its probably good enough to just review the changes.  If its a bigger\nchange I want to see the pipeline myself.\n\n\n\n\n## viz\n\n* disconnects\n\n## load data\n\n## step through operations\n\n## run sections\n\n## run functions\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pyspark-v-pandas'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Pyspark V Pandas</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/mu-repo'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Maintianing multiple git repos with mu-repo</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-21", "edit_link": "https://github.com/edit/main/pages/blog/how-i-review-kedro-projects.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572707", "datetime": "2021-03-21 00:00:00+00:00", "slug": "how-i-review-kedro-projects", "jinja": false, "output_html": "markout/how-i-review-kedro-projects/index.html", "long_description": "I have started doing more regular PR https://waylonwalker.com/what-is-kedro passing ci Variable Names Antipatterns No commented out code Docsttrings generally make sense Phase1 is typically a quick scan over the PR right within the PR window in my br", "super_description": "I have started doing more regular PR https://waylonwalker.com/what-is-kedro passing ci Variable Names Antipatterns No commented out code Docsttrings generally make sense Phase1 is typically a quick scan over the PR right within the PR window in my browser. flake8 black isort interrogate pytest build The very first thing that needs to happen is automated CI.  We use things like I strugle really hard to not impose my own opinion into the PR at this point, I am not too much of a zealot of any parad", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2670>, next=<frontmatter.Post object at 0x7f34506e0b80>)"}, {"cover": "", "title": "Pyspark V Pandas", "tags": [], "status": "draft", "templateKey": "", "path": "pages/blog/pyspark-v-pandas.md", "description": "prev Silence Kedro Logs next How I Review Pipeline Code", "content": "\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-silence'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Silence Kedro Logs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/how-i-review-kedro-projects'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I Review Pipeline Code</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "edit_link": "https://github.com/edit/main/pages/blog/pyspark-v-pandas.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572713", "datetime": "0001-01-01 00:00:00+00:00", "slug": "pyspark-v-pandas", "jinja": false, "output_html": "markout/pyspark-v-pandas/index.html", "long_description": "", "super_description": "", "date": "0001-01-01", "year": 1, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2af0>, next=<frontmatter.Post object at 0x7f34506f28b0>)"}, {"cover": "", "title": "Silence Kedro Logs", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-silence.md", "description": "Kedro can have a chatty logger.  While this is super nice in production First, how does one silence a python log?  Python loggers can be retrieved by | Level   ", "content": "Kedro can have a chatty logger.  While this is super nice in production\nso see everything that happened during a pipeline run. This can be troublesome\nwhile trying to implement a cli extension with clean output.\n\n## Silence a Python log\n\nFirst, how does one silence a python log?  Python loggers can be retrieved by\nthe `logging` module's `getLogger` function. Then their log level can be\nchanged.  Much of kedro's chattiness comes from INFO level logs.  I don't want\nto hear about anything for my current use case unless it's essential, i.e., a\nfailure.  In this case, I set the log levels to ERROR as most errors should\nstop execution anyways.\n\n\n### python logging levels\n\n\n| Level    | Numeric value |\n|----------|---------------|\n| CRITICAL | 50            |\n| ERROR    | 40            |\n| WARNING  | 30            |\n| INFO     | 20            |\n| DEBUG    | 10            |\n| NOTSET   | 0             |\n\n\n## Get or Create a logger\n\nGetting a python logger is straightforward if we know the name of the logger.\nThe following block will grab the logger object for the logger currently\nregistered under the name passed in.\n\n``` python\nlogger = logging.getLogger('kedro')\n```\n\n> \ud83d\udd25 If a logger doesn't exist under the passed in name, it will create one for you.\n\n## Set Level\n\nOnce we get the logger, we need to silence it by setting the log level.\nTypically it's not appropriate to completely turn off loggers as you would still\nwant information in the case of a complete failure.  If you are building\na cli such as one that prints out the pipelines to the console, you may not want\nto see logs that happen during regular operation as this would make it more\nchallenging to integrate with other shell applications.\n\n``` python \nlogger.setLevel(logging.ERROR)\n```\n\n> \u26a0 Be sure to leave some logging left. After the point of error, you are not\n> going to get a clean output anyways.  So let the user see what happened.\n\nIt is possible to set the log level before kedro even registers the\nlogger, if there is no logger currently setup under getLogger, it will create\none.\n\n## Silent all kedro loggers\n\nAs of `kedro==0.17.3` this function covers every logger issued by\nkedro.  I generated this list of `known_kedro_loggers` by looking through their\ncodebase and filling in a few others I found by running it.\n\n``` python\ndef silent_loggers() -> None:\n    \"\"\"All logs need to be silent in order for a clean kedro diff output.\"\"\"\n    known_kedro_loggers = [\n        \"ProfileTimeTransformer\",\n        \"hooks_handler\",\n        \"kedro.__init__\",\n        \"kedro\",\n        \"kedro.config\",\n        \"kedro.config.config\",\n        \"kedro.extras.decorators.memory_profiler\",\n        \"kedro.framework.cli\",\n        \"kedro.framework.session.session\",\n        \"kedro.framework.session.store\",\n        \"kedro.framework.session\",\n        \"kedro.io.cached_dataset\",\n        \"kedro.io.data_catalog\",\n        \"kedro.io\",\n        \"kedro.journal\",\n        \"kedro.pipeline\",\n        \"kedro.pipeline.decorators\",\n        \"kedro.pipeline.node\",\n        \"kedro.pipeline.pipeline\",\n        \"kedro.runner\",\n        \"kedro.runner.runner\",\n        \"kedro.versioning.journal\",\n        \"py4\",\n    ]\n    for logger in [\n        *known_kedro_loggers,\n        *list(logging.root.manager.loggerDict.keys()),  # type: ignore\n    ]:\n        logging.getLogger(logger).setLevel(logging.ERROR)\n```\n\nThis function comes right from a plugin I am currently working on\n[kedro-diff](https://github.com/WaylonWalker/kedro-diff).  Check it out, give\nit a star, and watch it for release.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> Not familiar with kedro, check out this article to see what it's all about.\n\n## Master the log\n\nPython logs can seem super confusing at first, understanding how to get a\nlogger and set its level are the first steps to mastering it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-spaceflights-stream1'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Spaceflights - part 1 | Stream replay June 4, 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-run'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Running your Kedro Pipeline from the command line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-20", "edit_link": "https://github.com/edit/main/pages/blog/kedro-silence.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572719", "datetime": "2021-05-20 00:00:00+00:00", "slug": "kedro-silence", "jinja": false, "output_html": "markout/kedro-silence/index.html", "long_description": "Kedro can have a chatty logger.  While this is super nice in production First, how does one silence a python log?  Python loggers can be retrieved by | Level    | Numeric value | Getting a python logger is straightforward if we know the name of the l", "super_description": "Kedro can have a chatty logger.  While this is super nice in production First, how does one silence a python log?  Python loggers can be retrieved by | Level    | Numeric value | Getting a python logger is straightforward if we know the name of the logger. \ud83d\udd25 If a logger doesn Once we get the logger, we need to silence it by setting the log level. \u26a0 Be sure to leave some logging left. After the point of error, you are not It is possible to set the log level before kedro even registers the As of  ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f100>, next=<frontmatter.Post object at 0x7f345063bd30>)"}, {"cover": "", "title": "Python atexit", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/blog/python-atexit.md", "description": "I", "content": "I'm still trying to understand this one, but this is how you force a\npython object to stop atexit.\n\n\n``` python\nimport atexit\n\nclass Server:\n    def __init__(\n        self,\n        auto_restart: bool = True,\n        directory: Union[str, \"Path\"] = None,\n        port: int = 8000,\n    ):\n        if directory is None:\n            from markata import Markata\n\n            m = Markata()\n            directory = m.config[\"output_dir\"]\n\n        self.directory = directory\n        self.port = find_port(port=port)\n        self.start_server()\n        atexit.register(self.kill)\n\n    def start_server(self):\n        import subprocess\n\n        self.cmd = [\n            \"python\",\n            \"-m\",\n            \"http.server\",\n            str(self.port),\n            \"--directory\",\n            self.directory,\n        ]\n\n        self.proc = subprocess.Popen(\n            self.cmd,\n            stderr=subprocess.PIPE,\n            stdout=subprocess.PIPE,\n        )\n        self.start_time = time.time()\n\n\n    def kill(self):\n        self.auto_restart = False\n        self.proc.kill()\n\n    def __rich__(self) -> Panel:\n        if not self.proc.poll():\n            return Panel(\n                f\"[green]serving on port: [gold1]{self.port} [green]using pid: [gold1]{self.proc.pid} [green]uptime: [gold1]{self.uptime} [green]link: [gold1] http://localhost:{self.port}[/]\",\n                border_style=\"blue\",\n                title=\"server\",\n            )\n\n        else:\n            if self.auto_restart:\n                self.start_server()\n\n            return Panel(f\"[red]server died\", title=\"server\", border_style=\"red\")\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-data-science-background'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Background Tasks in Python for Data Science</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-args-kwargs-slides'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>SLIDES - understanding python \\*args and \\*\\*kwargs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2000-01-15", "edit_link": "https://github.com/edit/main/pages/blog/python-atexit.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572724", "datetime": "2000-01-15 00:00:00+00:00", "slug": "python-atexit", "jinja": false, "output_html": "markout/python-atexit/index.html", "long_description": "I", "super_description": "I", "year": 2000, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3790>, next=<frontmatter.Post object at 0x7f34506a9790>)"}, {"cover": "", "title": "Thanks For Subscribing", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/thank-you.md", "description": "You're awesome! Thanks for subscribing to my newsletter.", "content": "<meta name='og:article:modified_time' content='2020-06-23T14:53:23Z'/>\n\n# \u2728 You're Awesome\n\nThank you so much for subscribing to my newsletter.  It's still early days, please let me know what you want to hear about, I would love to get the conversation started!\n\nMy hope is that you find some wicked sweet content here and stay tuned for more, but if you dont like it you can opt-out at any time.\n\n## What to expect\n\n* Weekly inspirational message based on my experiences breaking into the industry\n* monthly-ish message about what is going on new posts, life, updates\n* Future annouce premium content ( let me know what you think it should be )\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-settings'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I configure git</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-atexit'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python atexit</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-20", "edit_link": "https://github.com/edit/main/pages/blog/thank-you.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572733", "datetime": "2020-05-20 00:00:00+00:00", "slug": "thank-you", "jinja": false, "output_html": "markout/thank-you/index.html", "long_description": "Thank you so much for subscribing to my newsletter.  It My hope is that you find some wicked sweet content here and stay tuned for more, but if you dont like it you can opt-out at any time. Weekly inspirational message based on my experiences breakin", "super_description": "Thank you so much for subscribing to my newsletter.  It My hope is that you find some wicked sweet content here and stay tuned for more, but if you dont like it you can opt-out at any time. Weekly inspirational message based on my experiences breaking into the industry monthly-ish message about what is going on new posts, life, updates Future annouce premium content ( let me know what you think it should be )", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2b20>, next=<frontmatter.Post object at 0x7f34506f29d0>)"}, {"cover": "", "title": "How I configure git", "tags": ["git", "linux"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/git-settings.md", "description": "Git can be a bit tricky to get configured correctly.  I often stumble into", "content": "Git can be a bit tricky to get configured correctly.  I often stumble into\nconfig issues weeks after setting up a new machine that I did not even notice.\nThese are my notes to remind me how I configure git.\n\n## Identity\n\n``` bash\ngit config --global user.name \"John Doe\"\ngit config --global user.email johndoe@example.com\n```\n\n## rebase\n\n\n## editor\n\n\n``` bash\ngit config --global core.editor nvim\n```\n\n\n## default branch\n\n\n``` bash\ngit config --global init.defaultBranch main\n```\n\n## push to current bransh wihtout setting upstream\n\n``` bash\ngit config --global push.default current\n```\n\n## Autostash\n\n``` bash\ngit config pull.rebase true\ngit config rebase.autoStash true\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-pypi-list'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Creating pypi-list with kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/thank-you'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Thanks For Subscribing</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-25", "edit_link": "https://github.com/edit/main/pages/blog/git-settings.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572739", "datetime": "2021-06-25 00:00:00+00:00", "slug": "git-settings", "jinja": false, "output_html": "markout/git-settings/index.html", "long_description": "Git can be a bit tricky to get configured correctly.  I often stumble into", "super_description": "Git can be a bit tricky to get configured correctly.  I often stumble into", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2c10>, next=<frontmatter.Post object at 0x7f34506f2340>)"}, {"cover": "", "title": "Creating pypi-list with kedro", "tags": ["kedro", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/kedro-pypi-list.md", "description": "I had an idea come to me via twitter. Short one word name packages are becoming I started with the simple index.  Pypi provides a single page listing to every", "content": "I had an idea come to me via twitter. Short one word name packages are becoming\nhard to find on pypi.  Short one word readable package names that are not a\nplay on words are easy to remember, easy to spell correctly, and quick to type\nout.\n\n## Simple index\n\nI started with the simple index.  Pypi provides a single page listing to every\nsingle package hosted on pypi via the [simple-index](https://pypi.org/simple/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/github-actions-syntax'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Getting Started with GitHub Actions</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-settings'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I configure git</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-23", "edit_link": "https://github.com/edit/main/pages/blog/kedro-pypi-list.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572745", "datetime": "2021-05-23 00:00:00+00:00", "slug": "kedro-pypi-list", "jinja": false, "output_html": "markout/kedro-pypi-list/index.html", "long_description": "I had an idea come to me via twitter. Short one word name packages are becoming I started with the simple index.  Pypi provides a single page listing to every", "super_description": "I had an idea come to me via twitter. Short one word name packages are becoming I started with the simple index.  Pypi provides a single page listing to every", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f28e0>, next=<frontmatter.Post object at 0x7f34506f2b20>)"}, {"cover": "", "title": "Getting Started with GitHub Actions", "tags": ["actions"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/github-actions-syntax.md", "description": "Github actions are written in configuration files using the YAML syntax.  YAML Can I just say that I learned more than I realized about YAML by writing this In ", "content": "Github actions are written in configuration files using the YAML syntax.  YAML\nis a superset of JSON.  Most YAML can be expressed inline with JSON syntax.\nSimilar to python YAML is whitespace driven by whitespace rather than brackets\ntags.  The argument for using YAML for configuration files such as actions is\nthat it is more human-readable and editable.  It's much easier to see the\nwhitespace layout than it is to get closing brackets correct.  For actions, I\nbelieve this is mostly true.  I don't see any use case to get past 3-5 indents,\nwhich is completely manageable.\n\n> Can I just say that I learned more than I realized about YAML by writing this\n> article\n\n## Arrays and Objects\n\nIn YAML or JSON, the most basic containers for data are **arrays**, a 1D list\nof things, and **objects**, for key-value pairs.\n\n### Arrays\n\nThe start of an array container is signified with a leading `-`.  This is\nprobably one of the big things I didn't understand about YAML before writing\nthis post, but hats off to the GitHub actions editor as it took care of a lot\nof my misunderstanding for me.\n\n``` YAML\n- one\n- two\n- three\n```\n\n``` json\n['one', 'two', 'three']\n```\n\n\n### Objects\n\nObjects are just `{key: \"value\"}` pairs without any `-` before them.  I find\nthat objects make \ud83d\udcaf sense to me.  Unlike arrays, they feel very intuitive.\n\n``` YAML\nname: one\nwho: me\n```\n\n``` json\n{'name': 'one', 'who': 'me'}\n```\n\n## Example Combining arrays and objects\n\nLet's start writing something that looks a bit more like a GitHub action.\nGitHub actions are built from an object containing name, on, jobs.  Where jobs\nis a list of jobs, that contain a list of steps.  Simple actions will only need\na single job, but commonly a list of steps.\n\n#### Shortlist of GitHub action keys\n\nThese are the keys, with their parents, that I found most useful.  You can find\na complete list on\n[workflow-syntax-for-github-actions](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions).\n\n* name\n* on\n\t* push\n    * pull_request\n    * schedule\n    * watch\n* env\n* jobs\n\t* name\n    * needs\n    * env\n    * if\n    * steps\n\n### Combining arrays and objects\n\nHere is a very small example that contains an object with one key, `jobs`.\nThat `jobs` object contains one job called `build` that contains a list of\n`steps`.  Notice the `-` before each step, and how each `step` repeats the same\nobject keys.\n\n```yaml\njobs:\n    build:\n        runs-on: ubuntu-latest\n        steps:\n        - name: step-one\n          uses: checkout\n        - name: step-two\n          uses: test\n        - name: step-three\n          uses: package\n```\n``` json\n{\n  \"jobs\": {\n    \"build\": {\n      \"runs-on\": \"ubuntu-latest\",\n      \"steps\": [\n        {\n          \"name\": \"step-one\",\n          \"uses\": \"checkout\"\n        },\n        {\n          \"name\": \"step-two\",\n          \"uses\": \"test\"\n        },\n        {\n          \"name\": \"step-three\",\n          \"uses\": \"package\"\n        }\n      ]\n    }\n  }\n}\n```\n\n\n## Multiline Strings\n\nMultiline strings are super important in GitHub actions.  You will likely use\nthe `|` to preserve newlines for shell scripts most commonly but may also have\nsome raw text fields that need to be concatenated without a newline character\nusing the `>` operator.\n\n* | preserves newlines\n* > folds newlines\n\n``` YAML\npreserved: |\n    cd my-dir\n    ls\n    mv public ../\nfolded: >\n    This is some long text\n    that I do not want on\n    one line, but it is\n    really a one-liner\n```\n\n``` JSON\n{\n    \"preserved\": \"cd my-dir\\nls\\nmv public ../\\n\",\n    \"folded\": \"This is some long text that I do not want on one line, but it is  really\n   a one-liner\"\n}\n```\n\n> \ud83d\udd25 I always use `|` for steps that are scripts\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/testproject-io-py-actions/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/testproject-io-py-actions-og_250x140.png\" alt=\"article cover for \n Integration testing with Python, TestProject.io, and GitHub Actions\n\"/>\n          <p><strong>\n Integration testing with Python, TestProject.io, and GitHub Actions\n</strong></p>\n      </a>\n  </div>\n\n\nIn \ud83d\udc46 This article you can see how I use the `|` character to run some docker\ncompose commands in a GitHub action to run some integration tests wtih pytet,\ntestproject.io, a headless browser, and selenium.\n\n## Anchors are not supported \n\nYAML has this amazing feature for reducing repetative content called anchors.\nYou can save part of your configuration as a reusable variable in other\nsections.  I see this being really cool if you had separate jobs that all\nneeded similar steps.  Look for this improvement in the future, for now just be\naware that it is part of the YAML syntax.\n\nSee support ticket \ud83d\udc49\n[Support-for-YAML-anchors](https://github.community/t5/GitHub-Actions/Support-for-YAML-anchors/m-p/30336)\n\n``` YAML\nsecrets: &secrets\n    github-pat: ${{ gh-pat }}\n    gmail-pass: ${{ gmail-pass }}\n\njobs:\n    build:\n        - name: step-one\n          uses: checkout\n          <<: *secrets\n        - name: step-two\n          uses: test\n          <<: *secrets\n        - name: step-three\n          uses: package\n          <<: *secrets\n```\n\nNotice how the nice clean YAML syntax gets exploded with much more data in the\nJSON format.\n\n``` json\n{\n    \"secrets\": {\n        \"github-pat\": \"${{ gh-pat }}\",\n        \"gmail-pass\": \"${{ gmail-pass }}\"\n    },\n    \"jobs\": {\n        \"build\": [\n            {\n                \"github-pat\": \"${{ gh-pat }}\",\n                \"gmail-pass\": \"${{ gmail-pass }}\",\n                \"name\": \"step-one\",\n                \"uses\": \"checkout\"\n            },\n            {\n                \"github-pat\": \"${{ gh-pat }}\",\n                \"gmail-pass\": \"${{ gmail-pass }}\",\n                \"name\": \"step-two\",\n                \"uses\": \"test\"\n            },\n            {\n                \"github-pat\": \"${{ gh-pat }}\",\n                \"gmail-pass\": \"${{ gmail-pass }}\",\n                \"name\": \"step-three\",\n                \"uses\": \"package\"\n            }\n        ]\n    }\n}\n```\n\n## Writing an Action\n\nWith a basic understanding of YAML you can probably go to your repo and click\nactions > new workflow > setup my own workflow right from the ui, and create\nyour own.  Or read through the official syntax docs for deeper information\n[workflow-syntax-for-github-actions](https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions).\nLet's finsh off with a really simple action, the default one from GitHub.\n\n### Important first step\n\nIt is important to know that when running an action you will likely need access\nto your code in order to lint, test, build, package, whatever you want to do\nwith it.  Your first step for any action requiring code from your repo is to\n`checkout` your repo.\n\n```yaml\n steps:\n # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n - uses: actions/checkout@v\n```\n### Default example\n\nThis example runs a workflow called `CI` on ubuntu on every push or PR to the\nmain branch.  Within the build job it does a checkout of the repo, then runs\ntwo shell steps.\n\n``` YAML\n# This is a basic workflow to help you get started with Actions\n\nname: CI\n\n# Controls when the action will run. Triggers the workflow on push or pull request\n# events but only for the main branch\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n    - uses: actions/checkout@v2\n\n    # Runs a single command using the runners shell\n    - name: Run a one-line script\n      run: echo Hello, world!\n\n    # Runs a set of commands using the runners shell\n    - name: Run a multi-line script\n      run: |\n        echo Add other actions to build,\n        echo test, and deploy your project.\n\n```\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/four-github-actions-website/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/four-github-actions-website-og_250x140.png\" alt=\"article cover for \n Four github actions for your website\n\"/>\n          <p><strong>\n Four github actions for your website\n</strong></p>\n      </a>\n  </div>\n\n\n## Python\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/four-github-actions-python/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/four-github-actions-python-og_250x140.png\" alt=\"article cover for \n Four Github Actions for Python\n\"/>\n          <p><strong>\n Four Github Actions for Python\n</strong></p>\n      </a>\n  </div>\n\n\nIf you are a python deveoper like me you will likely want to use GitHub actions\nto Lint, Test, Package, and deploy your python projects. \ud83d\udc46 This article covers just that.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gitui'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gitui is a blazing fast terminal git interface</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-update-user'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Update Git User</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-03-16", "edit_link": "https://github.com/edit/main/pages/blog/github-actions-syntax.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572751", "datetime": "2020-03-16 00:00:00+00:00", "slug": "github-actions-syntax", "output_html": "markout/github-actions-syntax/index.html", "long_description": "Github actions are written in configuration files using the YAML syntax.  YAML Can I just say that I learned more than I realized about YAML by writing this In YAML or JSON, the most basic containers for data are  The start of an array container is s", "super_description": "Github actions are written in configuration files using the YAML syntax.  YAML Can I just say that I learned more than I realized about YAML by writing this In YAML or JSON, the most basic containers for data are  The start of an array container is signified with a leading  Objects are just  Let These are the keys, with their parents, that I found most useful.  You can find name on push pull schedule watch env jobs name needs env if steps Here is a very small example that contains an object with", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067fc10>, next=<frontmatter.Post object at 0x7f345064c310>)"}, {"cover": "", "title": "tmux popups", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-popups.md", "description": "https://youtu.be/2I8fB28zfB4 https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "content": "https://youtu.be/2I8fB28zfB4\n\n``` bash\n# open a popup scratchpad\nbind -n M-g display-popup -E \"tmux new-session -A -s scratch\"\n# open my blog in a scratchpad\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-prefix'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux prefix</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-next-prev-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux next/prev session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-14", "edit_link": "https://github.com/edit/main/pages/blog/tmux-popups.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572757", "datetime": "2021-07-14 00:00:00+00:00", "slug": "tmux-popups", "jinja": false, "output_html": "markout/tmux-popups/index.html", "long_description": "https://youtu.be/2I8fB28zfB4 https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "super_description": "https://youtu.be/2I8fB28zfB4 https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1550>, next=<frontmatter.Post object at 0x7f345063b790>)"}, {"cover": "", "title": "\ud83d\udc0d Parsing RSS feeds with Python", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/parsing-rss-python.md", "description": "I am looking into a way to replace my google reader experience that I had back This is how I used python to parse rss and setup my own custom feed. Install the ", "content": "I am looking into a way to replace my google reader experience that I had back\nin 2013 before google took it from us.  I am starting by learning how to parse\nfeeds with python, and without much previous knowledge, it proved to be much\neasier than anticipated thanks to the `feedparser` library.\n\nThis is how I used python to parse rss and setup my own custom feed.\n\n\n## Install\n\nInstall the feedparser library.\n\n``` bash\nconda create -n reader python=3.8 -y\nsource activate reader\npip install feedparser\n```\n\n## Get the content\n\n```python\nimport feedparser\nfeed = feedparser.parse('https://waylonwalker.com/rss.xml')\n```\n\n## The feed object\n\nThe feed is a feedparser.FeedParserDict.  For all intents and purposes this\nseems to just behave like a dict with the following `keys()`.\n\n``` python\nfeed.keys()\n['feed', 'entries', 'bozo', 'headers', 'etag', 'href', 'status', 'encoding', 'version', 'namespaces', 'content'])\n```\n\n**feed** has some general information about the rss feed, but the meat of the\nfeed is in **entries**.  The rest of the keys weren't all that useful for me at\nthe moment.\n\n\n## pulling multiple feeds\n\nI grabbed a few popular RSS feeds that I was familiar with to get started.\n\n```python\nurls = ['https://waylonwalker.com/rss',\n        'https://joelhooks.com/rss.xml',\n        'https://swyx.io/rss.xml',\n    ]\nfeeds = [feedparser.parse(url)['entries'] for url in urls]\n```\n\nI checked out the keys, all three had the following keys.  Mine also had the\nfull post under `'content'`, this is because I added an extra `custom_element`\nfor publishing to `dev.to` from an RSS feed.\n\n``` python\nfeeds[1][0].keys()\n>>> dict_keys(['title', 'title_detail', 'summary', 'summary_detail', 'links', 'link', 'id', 'guidislink', 'published'\n, 'published_parsed'])\n```\n\n\n## NOTE: dev.to/feed\n\nI also pulled the [dev.to/feed](https://dev.to/feed).  Since is it setup for\nmore Authors it had a few extra keys.\n\n``` python\nfeedparser.parse('https://dev.to/feed')[0].keys()\n>>> dict_keys(['title', 'title_detail', 'authors', 'author', 'author_detail', 'published', 'published_parsed', 'links\n', 'link', 'id', 'guidislink', 'summary', 'summary_detail', 'tags'])\n```\n\n\n## Combining Feeds\n\nNow that I have a list of feeds, I can create a single feed sorted by date with\na list comprehension.  Note I did need to pull in `dateutil.parser` to convert\nthe date strings to datetime objects to be sorted.\n\n``` python\nimport dateutil.parser\n\nfeed = [item for feed in feeds for item in feed]\nfeed.sort(key=lambda x: dateutil.parser.parse(x['published']), reverse=True)\n```\n\n```python\n[ins] In [115]: [{'title': i['title'], 'date': i['published'], 'link': i['link']}  for i in feed[:10]]\n>>>\n[{'title': '\ud83d\ude4b\\u200d\u2642\ufe0f Can Anyone Explain Twitter Cards to me?',\n  'date': 'Sat, 11 Jul 2020 03:00:00 GMT',\n  'link': 'https://waylonwalker.com/explain-twitter-cards/'},\n {'title': 'How I Built My GitHub Profile',\n  'date': 'Fri, 10 Jul 2020 03:00:00 GMT',\n  'link': 'https://waylonwalker.com/my-github-profile/'},\n {'title': 'Lessons and Regrets from My $25000 Launch',\n  'date': 'Fri, 03 Jul 2020 04:06:47 GMT',\n  'link': 'https://swyx.io/writing/coding-career-launch'},\n {'title': 'SLIDES - understanding python *args and **kwargs',\n  'date': 'Thu, 02 Jul 2020 05:00:00 GMT',\n  'link': 'https://waylonwalker.com/python-args-kwargs-slides/'},\n {'title': 'Launching the Coding Career Handbook!',\n  'date': 'Wed, 01 Jul 2020 13:08:37 GMT',\n  'link': 'https://swyx.io/writing/launching-coding-career'},\n {'title': 'Gracefully adopt kedro, the catalog',\n  'date': 'Mon, 29 Jun 2020 03:00:00 GMT',\n  'link': 'https://waylonwalker.com/graceful-kedro-catalog/'},\n {'title': \"\ud83e\udd13 What's on your GitHub Profile\",\n  'date': 'Mon, 29 Jun 2020 03:00:00 GMT',\n  'link': 'https://waylonwalker.com/whats-on-your-github-profile/'},\n {'title': \"Versioned Docs in 30 Seconds with Amplify Console's Branch Subdomains\",\n  'date': 'Fri, 26 Jun 2020 16:34:09 GMT',\n  'link': 'https://swyx.io/writing/amplify-console-branch-subdomains'},\n {'title': \"What's New in React\",\n  'date': 'Wed, 24 Jun 2020 00:00:00 GMT',\n  'link': 'https://swyx.io/speaking/react-whats-new'},\n {'title': 'Coding Careers - Vincit',\n  'date': 'Wed, 24 Jun 2020 00:00:00 GMT',\n  'link': 'https://swyx.io/speaking/coding-careers-vincit'}]\n```\n\n\n## Decentralized Feed\n\nI think the idea of RSS is super cool, and the idea that I can potentially\ncreate my own custom platform-agnostic decentralized feed is pretty cool.  I\nwould love to have a google reader like experience back.\n\nThis post was super fun to explore.  I used an external library (`feedparser`)\nto pull in the feeds, but other than that It was all vanilla python 3.8.  In\nDataScience we tend to get very `DataFrame` heavy and I miss working with\nvanilla datatypes sometimes.\n\n## Trying to step up your python game\n\nWhile trying to step up your skills you will need lots of practice.  Its good\nto have several options to try out ideas quickly.  I often use replit.com,\ncheck out this post to see how I use it.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/practice-python-online/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/practice-python-online-og_250x140.png\" alt=\"article cover for \n \ud83d\udc0d Practice Python Online\n\"/>\n          <p><strong>\n \ud83d\udc0d Practice Python Online\n</strong></p>\n      </a>\n  </div>\n\n\n> Not a sponsor REPL.it is a great way to practice.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/personal-url-shortener'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Personal URL shortener with Netlify Redirects</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/pariss-athena-on-black-tech-pipeline'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Black Tech Pipeline</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-13", "edit_link": "https://github.com/edit/main/pages/blog/parsing-rss-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572762", "datetime": "2020-07-13 00:00:00+00:00", "slug": "parsing-rss-python", "jinja": false, "output_html": "markout/parsing-rss-python/index.html", "long_description": "I am looking into a way to replace my google reader experience that I had back This is how I used python to parse rss and setup my own custom feed. Install the feedparser library. The feed is a feedparser.FeedParserDict.  For all intents and purposes", "super_description": "I am looking into a way to replace my google reader experience that I had back This is how I used python to parse rss and setup my own custom feed. Install the feedparser library. The feed is a feedparser.FeedParserDict.  For all intents and purposes this I grabbed a few popular RSS feeds that I was familiar with to get started. I checked out the keys, all three had the following keys.  Mine also had the I also pulled the  Now that I have a list of feeds, I can create a single feed sorted by dat", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e0d0>, next=<frontmatter.Post object at 0x7f3450646430>)"}, {"cover": "", "title": "Minimal Kedro Pipeline", "tags": ["python", "kedro", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/minimal-kedro-pipeline.md", "description": "How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It \ud83d\udcdd Note this is only a composable pipeline, ", "content": "How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It's only a total of 35 lines of python, 8 in `setup.py` and 27 in `mini_kedro_pipeline.py`.\n\n> \ud83d\udcdd Note this is only a composable pipeline, not a full project, it does not contain a catalog or runner.\n\n## Minimal Kedro Pipeline\n\nI have everything for this post hosted in this [gihub repo](https://github.com/WaylonWalker/mini-kedro-pipeline), you can fork it, clone it, or just follow along.\n\n## Installation\n\n``` bash\npip install git+https://github.com/WaylonWalker/mini-kedro-pipeline\n```\n\n## Caveats\n\nThis repo represents the minimal amount of structure to build a kedro pipeline that can be shared across projects.  Its installable, and drops right into your `hooks.py` or `run.py` modules.  It is not a runnable pipeline.  At this point\nI think the config loader requires to have a logging config file.\n\nThis is a sharable pipeline that can be used across many different projects.\n\n## Usage\n\n``` python\n# hooks.py\n\nimport mini_kedro_project as mkp\n\nclass ProjectHooks:\n    @hook_impl\n    def register_pipelines(self) -> Dict[str, Pipeline]:\n        \"\"\"Register the project's pipeline.\n\n        Returns:\n            A mapping from a pipeline name to a ``Pipeline`` object.\n\n        \"\"\"\n\n        return {\"__default__\": Pipeline([]), \"mkp\": mkp.pipeline}\n```\n\n## Implemantation\n\nThis builds on another post that I made about creating the minimal python package.  I am not sure if it should be called a package, it's a module, but what do you call it after you build it and host it on pypi?\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/minimal-python-package/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/minimal-python-package-og_250x140.png\" alt=\"article cover for \n Minimal Python Package\n\"/>\n          <p><strong>\n Minimal Python Package\n</strong></p>\n      </a>\n  </div>\n\n\n## Directory structure\n\n``` bash\n.\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 my_pipeline.py\n```\n\n## setup.py\n\nThis is a very minimal `setup.py`.  This is enough to get you started with a package that you can share across your team.  In practice, there is a bit more that you might want to include as your project grows.\n\n``` python\nfrom setuptools import setup\n\nsetup(\n    name=\"MiniKedroPipeline\",\n    version=\"0.1.0\",\n    py_modules=[\"mini_kedro_pipeline\"],\n    install_requires=[\"kedro\"],\n)\n```\n\n## mini_kedro_pipeline.py\n\nThe mini kedro pipeline looks like any set of nodes in your project.  Many projects will separate nodes and functions, I prefer to keep them close together.  The default recommendation is also to have a `create_pipelines` function that returns the pipeline.\n\nThis pattern creates a singleton, if you were to reference the same pipeline in multiple places within the same running interpreter and modify the one you would run into issues.  I don't foresee myself running into this issue, but maybe as more features become available I will change my mind.\n\n``` python\n\"\"\"\nAn example of a minimal kedro pipeline project\n\"\"\"\nfrom kedro.pipeline import Pipeline, node\n\n__version__ = \"0.1.0\"\n__author__ = \"Waylon S. Walker\"\n\nnodes = []\n\n\ndef create_data():\n    \"creates a dictionary of sample data\"\n    return {\"beans\": range(10)}\n\n\nnodes.append(node(create_data, None, \"raw_data\", name=\"create_raw_data\"))\n\n\ndef mult_data(data):\n    \"multiplies each record of each item by 100\"\n    return {item: [i * 100 for i in data[item]] for item in data}\n\n\nnodes.append(node(mult_data, \"raw_data\", \"mult_data\", name=\"create_mult_data\"))\n\npipeline = Pipeline(nodes)\n```\n## Kedro in scripts\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-in-scripts/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-in-scripts-og_250x140.png\" alt=\"article cover for \n Using Kedro In Scripts\n\"/>\n          <p><strong>\n Using Kedro In Scripts\n</strong></p>\n      </a>\n  </div>\n\n\n> If you enjoyed this one check out this companion article where I build a fully runnable kedro project in a single script.\n\n## Share your pipelines\n\nGo forth and share your pipelines across projects.  Let me know, do you share pipelines or catalogs across projects?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/minimal-python-package'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Minimal Python Package</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/master-no-more'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Master No More</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-20", "edit_link": "https://github.com/edit/main/pages/blog/minimal-kedro-pipeline.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572768", "datetime": "2021-01-20 00:00:00+00:00", "slug": "minimal-kedro-pipeline", "jinja": false, "output_html": "markout/minimal-kedro-pipeline/index.html", "long_description": "How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It \ud83d\udcdd Note this is only a composable pipeline, not a full project, it does not contain a catalog or runner. I have everything for this po", "super_description": "How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It \ud83d\udcdd Note this is only a composable pipeline, not a full project, it does not contain a catalog or runner. I have everything for this post hosted in this  This repo represents the minimal amount of structure to build a kedro pipeline that can be shared across projects.  Its installable, and drops right into your  This is a sharable pipeline that can be used across many different proj", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685fa0>, next=<frontmatter.Post object at 0x7f34506b3d30>)"}, {"cover": "", "title": "tmux zoom", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-zoom.md", "description": "https://youtu.be/Rn6mOarCQ-Y Zooming into the current split in tmux is a valuable tool to give yourself some Default key bindings for zooming the current split ", "content": "https://youtu.be/Rn6mOarCQ-Y\n\nZooming into the current split in tmux is a valuable tool to give yourself some\nscreen real estate.  These days I am almost always presenting, streaming, or\npairing up with a co-worker over a video call.  Since I am always sharing my\nscreen I am generally zoomed in to a level that is just a bit uncomfortable, so\nanytime I make a split it is really uncomfortable, being able to zoom into the\nsplit I am focused on is a big help, and also help anyone watching follow where\nI am currently working.\n\n\nDefault key bindings for zooming the current split\n\n``` bash\nbind-key          z resize-pane -Z\n```\n\n\nI have rebound this to match the default binding with mod+z rather so that I\nget that single keystroke experience.\n\n``` bash\nbind -n M-z resize-pane -Z\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/trim-branches'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Trim unused git branches</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-targeted-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux targeted session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-25", "edit_link": "https://github.com/edit/main/pages/blog/tmux-zoom.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572776", "datetime": "2021-07-25 00:00:00+00:00", "slug": "tmux-zoom", "jinja": false, "output_html": "markout/tmux-zoom/index.html", "long_description": "https://youtu.be/Rn6mOarCQ-Y Zooming into the current split in tmux is a valuable tool to give yourself some Default key bindings for zooming the current split I have rebound this to match the default binding with mod+z rather so that I https://waylo", "super_description": "https://youtu.be/Rn6mOarCQ-Y Zooming into the current split in tmux is a valuable tool to give yourself some Default key bindings for zooming the current split I have rebound this to match the default binding with mod+z rather so that I https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685b20>, next=<frontmatter.Post object at 0x7f345064cd30>)"}, {"cover": "", "title": "Todo", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/todo.md", "description": "Overrated underrated command line applications Get started on daily kedro shorts, these are indended to be short clips that how I kedro 8/16 what is kedro 8/17 ", "content": "Overrated underrated command line applications\n\n\n## kedro YouTube series\n\nGet started on daily kedro shorts, these are indended to be short clips that\npeople can watch a playlist and learn about kedro concepts at their own pace.\nThis is meant to be low barrier to entry for me to create.  Like the tmux\nseries, I hope to make a sub three minute video within one or two takes, no\nedits, all straight from obs.\n\n## written\n* how I kedro 8/16\n* what is kedro 8/17\n* kedro new 8/18\n* three ways to create a kedro environment 8/19\n* git init 8/20\n* kedro install 8/21\n* kedro pipeline create 8/22\n\n## staging\n\n* making your first nodes in kedro 8/23\n* kedro run 8/24\n* kedro catalog create 8/25\n* add new dependencies 8/26\n* listing things from the kedro cli 8/27\n* Storing catalog entries 8/30\n\n* Comprehensive nodes\n* modular piplines 8/29\n    * kedro pipeline package\n    * kedro pipeline pull\n\n* parameters\n* pipeline registry\n* find-kedro\n* lambdas in kedro nodes\n* built in pipeline filters from the\n* filtering pipelines with list comps\n* globbing for catalog entries in the repl\n* activate-nbstripout\n* build-docs\n* build-reqs\n* kedro package\n* kedro lint\n* kedro test\n* kedro ipython\n* kedro jupyter\n* kedro spaceflights the gold standard of tutorials\n* speed up your kedro pipeline with a sane `__default__`\n* create custom kedro cli commands\n* override kedro cli commands\n* accessing the kedro session\n* installing kedro hooks\n* creating your first kedro hook\n* mu-repo to update many projects\n* Custom DataSets\n* Setting up pre-commit\n* Visidata\n* Logging\n* Custom logger\n* kedro-lsp\n* find-kedro\n* Kedro-diff\n* Docker\n\n* pip-tools\n\nsony 205ms\ncannon 370ms\n\n## background glow\n\n* e1af66\n* c122ac\n\n## stream ideas\n\n\nauto pyflyby\n\n``` python\ndir(getattr(getattr(pd, \"util\"), 'version'))\ndef replace(text):\n    return re.sub(\"as.*\", \"\", re.sub(\".*import \", \"\", text))\nexisting_flies = [replace(t) for t in Path(\"/home/u_walkews/.pyflyby\").read_text().split(\"\\n\")]\n```\n\n## Description\n\nAvoid serious version conflict issues, and use a virtual environment anytime you are running python, here are three ways you can setup a kedro virtual environment.\n\nFull Post \ud83d\udc49 https://waylonwalker.com/kedro-environment/\n\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 Kedro \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\nAll of my kedro aticles: https://waylonwalker.com/kedro/\n\nFull kedro series https://www.youtube.com/watch?v=bw5_FWDVRpU&list=PLTRNG6WIHETCoPt5gAKYSH_HCZvE_r41n\n\nDocs: https://kedro.readthedocs.io/en/stable/\n\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 Socials \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\ntwitter:  https://twitter.com/_WaylonWalker\ntwitch: https://www.twitch.tv/waylonwalker\ngithub: https://github.com/waylonwalker/\ntwitch: https://www.twitch.tv/waylonwalker\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/create-og-image-covers-using-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create Og Image Covers Using Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-zoom'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux zoom</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-01", "edit_link": "https://github.com/edit/main/pages/blog/todo.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572782", "datetime": "2021-01-01 00:00:00+00:00", "slug": "todo", "jinja": false, "output_html": "markout/todo/index.html", "long_description": "Overrated underrated command line applications Get started on daily kedro shorts, these are indended to be short clips that how I kedro 8/16 what is kedro 8/17 kedro new 8/18 three ways to create a kedro environment 8/19 git init 8/20 kedro install 8", "super_description": "Overrated underrated command line applications Get started on daily kedro shorts, these are indended to be short clips that how I kedro 8/16 what is kedro 8/17 kedro new 8/18 three ways to create a kedro environment 8/19 git init 8/20 kedro install 8/21 kedro pipeline create 8/22 making your first nodes in kedro 8/23 kedro run 8/24 kedro catalog create 8/25 add new dependencies 8/26 listing things from the kedro cli 8/27 Storing catalog entries 8/30 Comprehensive nodes modular piplines 8/29 kedr", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679310>, next=<frontmatter.Post object at 0x7f3450679160>)"}, {"cover": "", "title": "Create Og Image Covers Using Python", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/create-og-image-covers-using-python.md", "description": "There are so many tutorials out there for creating OG images with ", "content": "There are so many tutorials out there for creating OG images with `nodejs` or\n`puppeteer`, but I have yet to see many using python.\n\n## PIL\n\n## Template\n\n## Text\n\n\n## Overlays\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/bind-dynamic-lambdas'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>TIL: Bind arguments to dynamically generated lambdas in python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/todo'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Todo</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-22", "edit_link": "https://github.com/edit/main/pages/blog/create-og-image-covers-using-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572787", "datetime": "2021-01-22 00:00:00+00:00", "slug": "create-og-image-covers-using-python", "jinja": false, "output_html": "markout/create-og-image-covers-using-python/index.html", "long_description": "There are so many tutorials out there for creating OG images with ", "super_description": "There are so many tutorials out there for creating OG images with ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679790>, next=<frontmatter.Post object at 0x7f3450679550>)"}, {"cover": "", "title": "TIL: Bind arguments to dynamically generated lambdas in python", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/bind-dynamic-lambdas.md", "description": "This past week I had a really weird bug in my After a few days of looking at it off and on, I pinpointed that it was all the way down in the raw layer. Right as", "content": "This past week I had a really weird bug in my\n[kedro](https://kedro.readthedocs.io/) pipeline.  For some reason data running\nthrough my pipeline was coming out completely made no sense, but if I manually\nrequest raw data outside of the pipeline it matched expectations.\n\n**NOTE** While this story is about a kedro pipeline, it can be applied anywhere closures are put into an iterable.\n\n## ![Debugger to the rescue](https://images.waylonwalker.com/bind-dynamic-lambdas-1.png)\n\nAfter a few days of looking at it off and on, I pinpointed that it was all the way down in the raw layer. Right as data is coming off of the database.  For this I already had existing `sql` files stored and a `read_sql` function to get the data so I opted to just set up the pipeline to utilize the existing code as much as possible, leaning on the [kedro](https://kedro.readthedocs.io/) framework a bit less.\n\nI have dynamically created lists of pipeline nodes many times in the past, but typically I take data from [kedro](https://kedro.readthedocs.io/) input and use it in the lambda.  I prefer the simplicity of using lambdas over `functools.partial`.  It typically looks something like this.\n\n``` python\n# \ud83d\udc4d  I do this all the time\nfrom kedro.pipeline import node\nfrom my_generic_project_lib import clean\n\ndatasets_to_clean = ['sales', 'production', 'inventory']\nnodes = []\nfor dataset in datasets_to_clean:\n   nodes.append(\n      node(\n         func=lambda x: clean(x)\n         inputs = f'raw_{dataset}'\n         outputs=f'int_{dataset}'\n         tags=['int', dataset]\n         name=f'create_int_{dataset}'\n      )\n   )\n```\n\nWhat was different this time is that I needed to pass in the name of the dataset to my read_sql function, not the data loaded in the framework.\n\n``` python\n# \u274c This does not work\nfrom kedro.pipeline import node\nfrom my_generic_project_lib import read_sql\n\ndatasets_to_read = ['sales', 'production', 'inventory']\nnodes = []\nfor dataset in datasets_to_clean:\n   nodes.append(\n      node(\n         func=lambda: read_sql(dataset) # \ud83d\udca5 The major issue\n         inputs = f'dummy'\n         outputs=f'int_{dataset}'\n         tags=['int', dataset]\n         name=f'create_int_{dataset}'\n      )\n   )\n```\n\n## ![Seriously](https://images.waylonwalker.com/bind-dynamic-lambdas-2.png)\n\nAs I am still oblivious to what has happened I pop in a `breakpoint()` and quickly see that during the first run the dataset passed into `read_sql` was `'inventory'`, in fact, every single one was `'inventory'`.  The lambda is just using the latest value of dataset from outside and has no `local` `dataset` attached to it.\n\n## ![The simple fix ](https://images.waylonwalker.com/bind-dynamic-lambdas-3.png)\n\n``` python\n# \ud83d\udc4d Much Better\nfrom kedro.pipeline import node\nfrom my_generic_project_lib import read_sql\n\ndatasets_to_read = ['sales', 'production', 'inventory']\nnodes = []\nfor dataset in datasets_to_clean:\n   nodes.append(\n      node(\n         func=lambda dataset=dataset: read_sql(dataset) # dataset is now bound to the lambda \u2728\n         inputs = f'dummy'\n         outputs=f'int_{dataset}'\n         tags=['int', dataset]\n         name=f'create_int_{dataset}'\n      )\n   )\n```\n\n## ![Try it yourself](https://images.waylonwalker.com/bind-dynamic-lambdas-4.png)\n\nI made a slightly more simple example so that you can try it and play with it yourself, edit it, share it with your friends, laugh at my mistake, whatever you like.\n\n<iframe height=\"400px\" width=\"100%\" src=\"https://replit.com/@WaylonWalker/BindDynamicLambdas?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/blogging-for-me'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Blogging For Me</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/bash'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udcdd Bash Notes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-04-27", "edit_link": "https://github.com/edit/main/pages/blog/bind-dynamic-lambdas.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572793", "datetime": "2020-04-27 00:00:00+00:00", "slug": "bind-dynamic-lambdas", "jinja": false, "output_html": "markout/bind-dynamic-lambdas/index.html", "long_description": "This past week I had a really weird bug in my After a few days of looking at it off and on, I pinpointed that it was all the way down in the raw layer. Right as data is coming off of the database.  For this I already had existing  I have dynamically ", "super_description": "This past week I had a really weird bug in my After a few days of looking at it off and on, I pinpointed that it was all the way down in the raw layer. Right as data is coming off of the database.  For this I already had existing  I have dynamically created lists of pipeline nodes many times in the past, but typically I take data from  What was different this time is that I needed to pass in the name of the dataset to my read As I am still oblivious to what has happened I pop in a  I made a slig", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a11f0>, next=<frontmatter.Post object at 0x7f345065ed60>)"}, {"cover": "", "title": "tmux join-pane", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-join-pane.md", "description": "https://youtu.be/Vm5rRtcVXLw Join-pane allows you to join panes that you have broken away from your window, Before you can join a pane you must first have a pan", "content": "https://youtu.be/Vm5rRtcVXLw\n\nJoin-pane allows you to join panes that you have broken away from your window,\nor created in a different window to the window you want it in.  As far as I\nknow there is not a default keybinding for it.\n\nBefore you can join a pane you must first have a pane marked to join.  Once you\nmark a pane, go back to the window you want to join it to and join-pane.\n\nMy keybindings, you must add this to your `~/.tmux.conf` file to use them.\n\n``` python\n# Mark and swap panes\n#\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nbind -n M-m select-pane -m # mark\nbind -n M-M select-pane -M # unmark\n\nbind -n M-< join-pane\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-killing-tmux'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>killing tmux</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-has-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux has-session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-27", "edit_link": "https://github.com/edit/main/pages/blog/tmux-join-pane.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572798", "datetime": "2021-07-27 00:00:00+00:00", "slug": "tmux-join-pane", "jinja": false, "output_html": "markout/tmux-join-pane/index.html", "long_description": "https://youtu.be/Vm5rRtcVXLw Join-pane allows you to join panes that you have broken away from your window, Before you can join a pane you must first have a pane marked to join.  Once you My keybindings, you must add this to your  https://waylonwalke", "super_description": "https://youtu.be/Vm5rRtcVXLw Join-pane allows you to join panes that you have broken away from your window, Before you can join a pane you must first have a pane marked to join.  Once you My keybindings, you must add this to your  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506961f0>, next=<frontmatter.Post object at 0x7f345067f550>)"}, {"cover": "", "title": "What's New in Kedro 0.16.6", "tags": ["python", "kedro"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/whats-new-in-kedro-0166.md", "description": "This version of kedro releases a new set of supported deployment options and the spaceflights pipeline is officially added as a starter alias.", "content": "Kedro [0.16.6](https://github.com/quantumblacklabs/kedro/releases) is out! Let's take a look through the release notes\n\n## Deployment Docs\n\nThis is really exciting to see more deployment options coming from the kedro team. It really shows the power of the framework. The power of some of these orchestrations options is incredible.\n\n* [Argo](https://kedro.readthedocs.io/en/stable/10_deployment/04_argo.html)\n* [Prefect](https://kedro.readthedocs.io/en/stable/10_deployment/05_prefect.html)\n* [Kubeflow](https://kedro.readthedocs.io/en/stable/10_deployment/06_kubeflow.html)\n* [Batch](https://kedro.readthedocs.io/en/stable/10_deployment/07_aws_batch.html)\n* [SageMaker](https://kedro.readthedocs.io/en/stable/10_deployment/09_aws_sagemaker.html)\n\nMost of them hinge on a sweet combination of the kedro cli, docker image, and the pipeline knowing your nodes dependencies. \n\nArgo, Prefect, and Kubeflow have an interesting technique where they translate the pipeline and its dependencies from kedro to their language.\n\nBatch uses the aws cli to submit jobs, one node per job, and listen for them to complete. It will submit all nodes with completed dependencies at once, meaning that we can get some massive parallelization.\n\n\nI did a quick and dirty test of one of these by simulating the technique in a bash script and saw a 40 hr pipeline finish in about 1 hour. I am excited to get this working in my production workflow.\n\n## Spaceflight starter\n\nThey have officially added the spaceflights pipeline as a starter. I have not yet had a chance to try this out, but I anticipate this will be a great pipeline to teach from as it is a bit more complex than the iris pipeline. \n\nI tell folks all the time the best way to learn something new like kedro is to **practice, practice, practice**. Having this at their fingertips will give an easy way to fire up a pipeline that is ok to break try out some new ideas and leave it. I see this helping me testing out plugins on more complex pipelines and writing blog posts with examples that readers can more easily follow along with.\n\n- practice\n- testing\n- blog posts\n- tutorials\n\n## Better Error Messages\n\nShameless pug, my PR landed in kedro, but fell off of the release.md in a merge issue. I was frustrated working on large projects when the wrong arguments were passed into a node and it did not give you any information in the Error to figure out where the error was thrown. Now it will at least give the name of the function that caused the error. This was a simple fix as all of the information was already there.\n\n## Overall\n\nLove the progress that the project is seeing and the focus on all of the deployment options.\n\n## Thanks for supporting contributions\n\n[Deepyaman Datta](https://github.com/deepyaman), Bhavya Merchant, [Lovkush Agarwal](https://github.com/Lovkush-A), [Varun Krishna S](https://github.com/vhawk19), [Sebastian Bertoli](https://github.com/sebastianbertoli), [noklam](https://github.com/noklam), [Daniel Petti](https://github.com/djpetti), [Waylon Walker](https://github.com/waylonwalker)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/whats-on-your-github-profile'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83e\udd13 What's on your GitHub Profile</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/whats-new-in-kedro-0164'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What's New in Kedro 0.16.4</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-25", "edit_link": "https://github.com/edit/main/pages/blog/whats-new-in-kedro-0166.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572804", "datetime": "2020-10-25 00:00:00+00:00", "slug": "whats-new-in-kedro-0166", "jinja": false, "output_html": "markout/whats-new-in-kedro-0166/index.html", "long_description": "Kedro  This is really exciting to see more deployment options coming from the kedro team. It really shows the power of the framework. The power of some of these orchestrations options is incredible. Most of them hinge on a sweet combination of the ke", "super_description": "Kedro  This is really exciting to see more deployment options coming from the kedro team. It really shows the power of the framework. The power of some of these orchestrations options is incredible. Most of them hinge on a sweet combination of the kedro cli, docker image, and the pipeline knowing your nodes dependencies. Argo, Prefect, and Kubeflow have an interesting technique where they translate the pipeline and its dependencies from kedro to their language. Batch uses the aws cli to submit j", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f580>, next=<frontmatter.Post object at 0x7f3450679e50>)"}, {"cover": "", "title": "Refactoring your blog urls", "tags": ["webdev", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/gracefully-redirect.md", "description": "I just did a quick refactoring of my JAMStack blog urls.  Some didn https://waylonwalker.com/refactor-in-cli When refactorings similar to this get really big I ", "content": "I just did a quick refactoring of my JAMStack blog urls.  Some didn't fit with\nmy style, some had `_` that I wanted to switch to `-`, and others were\nridiculously long.  I've been using forestry as my CMS, I write many of my\nposts there, and sometimes it picks some crazy file names (based on my titles).\nIt was time to refactor.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/refactor-in-cli/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/refactor-in-cli-og_250x140.png\" alt=\"article cover for \n Large Refactor At The Command Line\n\"/>\n          <p><strong>\n Large Refactor At The Command Line\n</strong></p>\n      </a>\n  </div>\n\n\n> When refactorings similar to this get really big I often need to do some\n> project wide find an replace, I usually do this right from the command line.\n\n## \ud83d\udd8a Rename posts _change the filename_\n\nMy post urls are based on the file name of my markdown file, so I can simply go\nthrough my filesystem and rename anything I want.  From here its probably best\nto only commit the addition of the new file name, until the redirects clear,\nbut these are all low traffic posts for me so I just commited both at once.\n\n> Safely redirect without breaking links\n\n## _redirects \u2934 _/redirects_\n\nI am hosted on netlify, which automatically puts very \u26a1 performant redirects\non the edge based on a `/_redirects` route on your site.  So I added a redirect\nfrom the old route to the new route there.\n\n## rename long posts\n\n``` bash \n/blog/i-finally-fixed-my-styled-components-in-gatsby-js\n/blog/fix-styled-components-in-gatsby\n/blog/interrogate-is-a-pretty-awesome-brand-new-cli-for-python-packages\n/blog/interrogate\n```\n\n## pedantic \ud83e\udd14 _probably_\n\nThis is probably being a bit pedantic.  Realistically my urls were probably ok.\nThese posts probably aren't going to be topping the google search charts\nanyways, but I wanted to do it without killing off any links that I may have\nhappened to post somewhere.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/happy'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Do More of What Brings You Joy</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/graceful-kedro-catalog'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gracefully adopt kedro, the catalog</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-11", "edit_link": "https://github.com/edit/main/pages/blog/gracefully-redirect.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572810", "datetime": "2020-06-11 00:00:00+00:00", "slug": "gracefully-redirect", "jinja": false, "output_html": "markout/gracefully-redirect/index.html", "long_description": "I just did a quick refactoring of my JAMStack blog urls.  Some didn https://waylonwalker.com/refactor-in-cli When refactorings similar to this get really big I often need to do some My post urls are based on the file name of my markdown file, so I ca", "super_description": "I just did a quick refactoring of my JAMStack blog urls.  Some didn https://waylonwalker.com/refactor-in-cli When refactorings similar to this get really big I often need to do some My post urls are based on the file name of my markdown file, so I can simply go Safely redirect without breaking links I am hosted on netlify, which automatically puts very \u26a1 performant redirects This is probably being a bit pedantic.  Realistically my urls were probably ok.", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3280>, next=<frontmatter.Post object at 0x7f34506a1f70>)"}, {"cover": "", "title": "Build A Portfolio", "tags": ["soft"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/build-a-portfolio.md", "description": "https://twitter.com/oliverjumpertz/status/1395689074594287625 Follow this over time.  If you want to use code repositories for your portfolio. They don Make sur", "content": "<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Build your portfolio.<br><br>3 working projects, with documentation and CI/CD. That&#39;s enough.<br><br>Those projects are your business card. They tell every potential employer or contractor who you are and what they can expect from you.</p>&mdash; Oliver Jumpertz (@oliverjumpertz) <a href=\"https://twitter.com/oliverjumpertz/status/1395689074594287625?ref_src=twsrc%5Etfw\">May 21, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\nFollow this over time.  If you want to use code repositories for your portfolio.\nMake sure that you have made it unique in some way.  Think about what kind of\nsignal you are sending to hiring managers if you are linking to a project with\nno docs, and one commit from 3 days ago.  \n\nThey don't have to be PERFECT either, it's likely that it's not something you\nwere paid to do, hence not able to put your full time into. Just having\nsomething that generally follows some GOOD practice will set you above most\nother candidates. \n\nMake sure that it reflects you as a person.  The worst that can happen is for\nyou to hire in based on some false pretense and hate where you end up.\n\n\n\n\ud83c\udfa8 Make it unique\n\n\ud83d\udc4c It does not need to be perfect\n\n\ud83e\udd0fIt does not matter how small it is\n\n\u23f3 Don't wait till the last minute\n\n\ud83d\udc47 Follow Oliver's advice\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/whats-new-in-kedro-0164'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What's New in Kedro 0.16.4</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gracefully-redirect'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Refactoring your blog urls</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-21", "edit_link": "https://github.com/edit/main/pages/blog/build-a-portfolio.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572818", "datetime": "2021-05-21 00:00:00+00:00", "slug": "build-a-portfolio", "jinja": false, "output_html": "markout/build-a-portfolio/index.html", "long_description": "https://twitter.com/oliverjumpertz/status/1395689074594287625 Follow this over time.  If you want to use code repositories for your portfolio. They don Make sure that it reflects you as a person.  The worst that can happen is for \ud83c\udfa8 Make it unique \ud83d\udc4c I", "super_description": "https://twitter.com/oliverjumpertz/status/1395689074594287625 Follow this over time.  If you want to use code repositories for your portfolio. They don Make sure that it reflects you as a person.  The worst that can happen is for \ud83c\udfa8 Make it unique \ud83d\udc4c It does not need to be perfect \ud83e\udd0fIt does not matter how small it is \u23f3 Don \ud83d\udc47 Follow Oliver", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679e50>, next=<frontmatter.Post object at 0x7f3450679670>)"}, {"cover": "", "title": "What's New in Kedro 0.16.4", "tags": ["python", "kedro"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/whats-new-in-kedro-0164.md", "description": "If we take a look at the  This one comes a bit surprising as it was just casually mentioned in  As mentioned in  It feels a bit crazy that simply installing a p", "content": "If we take a look at the [release notes](https://github.com/quantumblacklabs/kedro/blob/master/RELEASE.md) I see one **major** feature improvement on the list, auto-discovery of hooks.\n\n``` markdown\n## Major features and improvements\n\n* Enabled auto-discovery of hooks implementations coming from installed plugins.\n```\n\nThis one comes a bit surprising as it was just casually mentioned in [#435](https://github.com/quantumblacklabs/kedro/issues/435)\n\n[![auto enabled plugins mentioned in issue 435](https://images.waylonwalker.com/kedro-435.png)](https://github.com/quantumblacklabs/kedro/issues/435)\n\n## Think pytest\n\nAs mentioned in [#435](https://github.com/quantumblacklabs/kedro/issues/435) this is the model that pytest uses. Not all plugins automatically start doing things right out of the box but require a CLI argument.\n\n## simplicity\n\nIt feels a bit crazy that simply installing a package will change the way that your pipeline gets executed. I do like that it requires just a bit less reaching into the framework stuff for the average user. Most folks will be able to write in the catalog and nodes without much change to the rest of the project.\n\n## Implementation\n\nReading through the [docs](https://kedro.readthedocs.io/en/stable/07_extend_kedro/04_plugins.html#hooks), they show us that we can make our hooks automatically register by adding a `kedro.hooks` endpoint that points to a _singleton_ instance of our hook.\n\n_from the docs_\n\n``` python\nsetup(\n    ...\n    entry_points={\"kedro.hooks\": [\"plugin_name = plugin_name.plugin:hooks\"]},\n)\n\nimport logging\n\nfrom kedro.framework.hooks import hook_impl\n\nclass MyHooks:\n    @hook_impl\n    def after_catalog_created(self, catalog): # pylint: disable=unused-argument\n        logging.info(\"Reached after_catalog_created hook\")\n\nhooks = MyHooks()\n```\n\n## Careful with the singletons\n\n_hook authors beware_\n\nI will be a bit cautious before installing a plugin that is automatically registered. I know its not a common pattern, but if you were to leverage any part of two kedro projects at the same time, and project-specific data was stored in the instance of the hook it will likely be broken.\n\nAs long as the hook doesn't store data on the instance you will be ok. Hooks like what they have in the examples will be ok. They generally just take some information from the lifecycle arguments and do something at their prescribed lifecycle point.\n\nMany of the hooks I am seeing in the wild are already more complicated and require the hooks author to utilize an ` __init__ ` method and store data on the instance. If you were to do this on two pipelines simultaneously it would break.\n\n## Can my hook be auto-discovered\n\nIf your hook doesn't include a `__init__` method its a fairly easy yes, otherwise be aware of the potential dangers of passing singleton on to your users.\n\n## Use Virtual environments\n\nWhatever virtual environment manager you use, it is more important than ever to make sure you **DO NOT** install plugins in your global environment. Generally, you should always run projects _even toys or tests_ in a **virtual**  **environemnt**.\n\n_I use conda_\n\n``` bash\nconda create -n my-sample-env python=3.8 -y\n```\n\n## Overall\n\nI think this is a really interesting direction for the project to go to. Hooks are still really early. The implementation is good, but I foresee us getting some more functionality that may require us to rely on the ` __init__ ` method a little less.  I think there are going to be some really cool hooks that can leverage the simplicity of auto-discoverability.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/whats-new-in-kedro-0166'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What's New in Kedro 0.16.6</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/what-is-kedro-1'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What is Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-01", "edit_link": "https://github.com/edit/main/pages/blog/whats-new-in-kedro-0164.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572823", "datetime": "2020-08-01 00:00:00+00:00", "slug": "whats-new-in-kedro-0164", "jinja": false, "output_html": "markout/whats-new-in-kedro-0164/index.html", "long_description": "If we take a look at the  This one comes a bit surprising as it was just casually mentioned in  As mentioned in  It feels a bit crazy that simply installing a package will change the way that your pipeline gets executed. I do like that it requires ju", "super_description": "If we take a look at the  This one comes a bit surprising as it was just casually mentioned in  As mentioned in  It feels a bit crazy that simply installing a package will change the way that your pipeline gets executed. I do like that it requires just a bit less reaching into the framework stuff for the average user. Most folks will be able to write in the catalog and nodes without much change to the rest of the project. Reading through the  I will be a bit cautious before installing a plugin t", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679430>, next=<frontmatter.Post object at 0x7f345065e1f0>)"}, {"cover": "./flex.png", "title": "Conda Build", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/condabuild.md", "description": "none", "content": "# Conda Build\n\n## Install Conda Build\n``` bash\nconda update conda\nconda install conda-build\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-nav-2021'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I navigate tmux in 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/whats-new-in-kedro-0164'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What's New in Kedro 0.16.4</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-01", "summary": "setting up conda build", "edit_link": "https://github.com/edit/main/pages/blog/condabuild.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572829", "datetime": "2020-01-01 00:00:00+00:00", "slug": "condabuild", "jinja": false, "output_html": "markout/condabuild/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679d30>, next=<frontmatter.Post object at 0x7f3450679e50>)"}, {"cover": "", "title": "How I navigate tmux in 2021", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-nav-2021.md", "description": "In 2021 I changed the way I navigate between tmux sessions big time.  Now I can Since making this post, I have made ~20 other posts in short form that all have ", "content": "<script>\nchange_speed = (speed) => [...document.querySelectorAll('video')].map(v => v.playbackRate=v.playbackRate+speed)\n</script>\n<style>\n</style>\n\nIn 2021 I changed the way I navigate between tmux sessions big time.  Now I can\ncreate, kill, switch with ease, and generally keep work separated into logical\ngroups.\n\n## Update\n\nSince making this post, I have made ~20 other posts in short form that all have a YouTube video to go along with them you can find them all on my\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr).\n\n\n## [Chris Toomey's](https://twitter.com/christoomey) Tmux Course\n\nI took Chris's [tmux course](https://thoughtbot.com/upcase/tmux) in December\n2020 and it was fantastic.  Even as a seasoned tmux user, I learned quite a bit.\nBefore the course, I was proficient in navigating within each of my tmux\nsessions but rarely started more than one session.  A few months later, I have\nadopted a lot of what I learned from Chris and made it my own.\n\nI am now keeping projects to their own session and can move between them\nfluidly with just a few keystrokes.  For high-traffic projects, I have them\nbound to a single keystroke for instant switching.  This change has been a\ngame-changer from the mess of windows I used to have and the nightmare it was\nto find work I was doing and end up duplicating project work in two separate\nwindows.\n\n> \ud83d\udcdd **NOTE:** Some of my config comes straight from the course, and some of it has\n> been extended to my liking.\n\nLet's take a quick look at how I am navigating through tmux on a day-to-day basis.\n\n<!-- ![overview of how I switch and manage tmux sessions](https://images.waylonwalker.com/tmux-navigation-2021.gif \"overview\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n> \ud83d\udc46 Overview of how I navigate tmux\n\n## tmux ls\n\nThroughout this article, I have several recordings showing how I use manage\nsessions with my keybindings.  I will often run a `tmux ls` command to\nhighlight running sessions at various points to help guide the viewer.\n\n\n## ta\n_my attach/session switch script_\n\nAt the heart of my tmux navigation is a highly customized version of Chris's\ntat script that I renamed `ta`.  Many folks add this to their bashrc `alias\nta=tmux attach`.  Simply calling ta will do the same thing as shown below.  If\nyou're in a tmux session, it does nothing, and if you're not in one, it will\nattach you to the first one.\n\n> get the full [script](https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta) from GitHub.\n\n<!-- ![overview of how I switch and manage tmux sessions](https://images.waylonwalker.com/tmux-navigation-2021-ta.gif \"overview\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-ta.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-ta.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n> \ud83d\udc46 attaching to a session by default\n\nIn my `~/.bashrc` or `~/.zshrc` I add the `ta` command to keep myself in a tmux\nsession at all times.  Whenever I open my terminal, I am automatically dropped\ninto a tmux session, but if I am opening a split while in tmux it's smart\nenough to know not to nest tmux sessions.\n\n``` bash\nta\n```\n\nAnother article can dive into my `ta` command. This one is more about the\nmethodology, workflow, and keybindings to get me there.  It's available in my\n[script](https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta).\n\n### but there's more\n\n_gettin fuzzy_\n\nGive it a directory, and a `fzy` dropdown will let you choose a subdirectory to\nstart your session in, and name the session after that directory.\n\n``` bash\nta ~/git\n```\n\n> \ud83d\udd25 Bonus, use direnv to automatically set settings, echo your git status,\n> activate your environment or whatever else you need.\n\n<!-- ![overview of how I switch and manage tmux sessions](https://images.waylonwalker.com/tmux-navigation-2021-ta-directory.gif \"overview\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-ta-directory.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-ta-directory.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n> \ud83d\udc46 give it a directory, it will ask for input to which project and start a new\n> named session in that directory.\n\nNote that starting from outside currently does not start in a split layout like\nit does when starting from within tmux.  I am still playing with this, but\ngenerally, I want my terminal session to be plain when I first start my\nterminal. I usually am starting work after the first default session.\n\n\n> \ud83e\udd14 I still use both fzy and fzf. It probably doesn't make sense to use both,\n> but I am currently giving fzy a try.\n\n## prefix+w\n\n_tmux choose-tree_\n\nBy default, tmux comes with a `tmux choose-tree` command bound to `prefix+w`,\nwhich opens in full screen.  The upper section of the screen will show every\nwindow opened.  While selected, you can show the splits in each window by\nhitting l, or fold it with h. You can search for a session name by hitting /.\n\n<!-- ![jump to existing sessions with prefix+w](https://images.waylonwalker.com/tmux-navigation-2021-prefix+w.gif \"using prefix+w\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-prefix+w.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-prefix+w.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n``` bash\n# ~/.tmux.conf\n\n# expanded to show all splits\nbind s choose-tree\n# simpler window to show only sessions\nbind S choose-session\n```\n\n### Keybindings in choose-tree/choose-session\n\nThe default keybindings of the tmux `choose-tree` and `choose-session` that I\nuse are listed below.  J/K are very intuitive, but I just learned about h,l,/.\nWhen I do use one of these, the / (search) can be super helpful to find\nsessions/windows faster.\n\n| action | key |\n|--------|-----|\n| fold   | h   |\n| unfold | l   |\n| up     | k   |\n| down   | j   |\n| search | /   |\n\n## prefix+c-w prefix+c-g\n\n_open a project_\n\nI have set up to make it easy to open my non-work projects _(in my ~/git directory)_\nand my work projects _(in my ~/work directory)_.  I bound `prefix+c-g` and\n`prefix+c-w` to open a new session in their respective directories.  I like\nmapping common prefix commands with control to keep my pinky mashed on\nthat control key.\n\n``` bash\n# ~/.tmux.conf\n\nbind C-w new-window -n \"work-session-picker\" \"ta ~/work\"\nbind C-g new-window -n \"git-session-picker\" \"ta ~/git\"\n```\n\n<!-- ![create a new session from my ~/git directory](https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-g.gif \"using prefix+c-g\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-g.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-g.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## prefix+c-j\n\n_jump to session_\n\nNow that I have `ta` rocking with a good create or attach setup, I am rarely\ntoggling through a list of running sessions, but I am doing it with\n`prefix+c-j` when I do it. Keeping my finger on control and pressing `<space>+j`.\nThis keybinding uses fzf to fuzzy match to an existing session and attach.\n\n``` bash\nbind C-j new-window -n \"session-switcher\" \"tmux list-sessions | sed -E 's/:.*$//' | grep -v \\\"^$(tmux display-message -p '#S')\\$\\\" | fzf --reverse | xargs tmux switch-client -t\"\n```\n\n<!-- ![jump to existing sessions with prefix+c-j](https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.gif \"using prefix+c-j\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## M-N M-P\n\n_next/prev_\n\nNext and Previous sessions.  This is super handy when working with under 3\nsessions to be able to cycle through sessions holding `shift+alt` and pressing\n`n` or `p`.\n\n<!-- ![jump to next or previous sessions with m-N or m-P](https://images.waylonwalker.com/tmux-navigation-2021-m-N-M-P.gif \"using m-N and m-P\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-m-N-M-P.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-m-N-M-P.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## tkill\n\n_time to clean up_\n\nIt's easy to get a long crufty list of sessions running throughout the day.\nTypically this is not too bad on system resources compared to running vscode in\nevery working project, but it does make it more challenging to manage and wade\nthrough the sessions list.  I use a handy shell alias that's been in my zshrc\nfor quite some time.\n\n``` bash\nalias tkill=\"for s in \\$(tmux list-sessions | awk '{print \\$1}' | rg ':' -r '' | fzy); do tmux kill-session -t \\$s; done;\"\n```\n\nI don't have this one set up with a nice hotkey, but it works for my\nfingers.  I often pop open a lower split(`M-s`), run `tkill`, and close (`M-x`).\n\n\n<!-- ![create a new session git-diff switch back to original session with prefix+c-g then use tkill to kill the git-diff session](https://images.waylonwalker.com/tmux-navigation-2021-tkill.gif \"tkill example\") -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-tkill.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-tkill.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## Last Session\n\n_back_\n\nWhile `M-n` and `M-p` work well with a small, focused number of sessions, I often\nend up with too many sessions open, and it's not efficient to remember a double\n`M-N` followed by a triple `M-P` to get back and forth.  Most often, I want to\nget between two sessions quickly, no matter what the order is.\n\n``` bash\nbind -n M-B switch-client -l\nbind -n M-b switch-client -l\n```\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-m-b.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-m-b.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n> Once I get two sessions back to back, I can switch between them with insane\n> speed and precision.\n\n## More Precision\n_one keystroke_\n\nThe final layer of precision is for my most current project. I need to get\nto these with a single keystroke.  These are bound to a set of keybindings that were\nreadily available, just above the home row.\n\n``` bash\nbind C-t new-session -A -s todo \"cd ~/work/todo && nvim -O backlog.md doing.md done.md\"\nbind -n M-i new-session -A -s ww3 \"cd ~/git/ww3/ && nvim\"\nbind -n M-o new-session -A -s images_waylonwalker_com \"cd ~/git/images.waylonwalker.com/ && nvim\"\n```\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-m-i-m-o.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-m-i-m-o.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n> These few directories are always at my fingertips, encouraging me to keep better notes\n\nAnd yes, I did steal this last one from [Harpoon-man](https://twitter.com/ThePrimeagen) By The Way.\n\n\n## Hub and Spoke\n\n_M-i M-b_\n\nI have really been digging this hub and spoke workflow where I am rocking away\non a project hit `M-I`, take some notes then hit `M-b` to get back to where I\nwas.\n\n\n![hub and spoke](https://images.waylonwalker.com/tmux-nav-hub-spoke.png)\n\n> Model of my current workflow\n\n### Example\n\nHere is an example of how I use the hub and spoke model to get to notes on my\nblog and back to my project quickly.\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-quickly-access-notes.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/tmux-navigation-2021-quickly-access-notes.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## Example workflow\n\n1. open tmux session with ta\n2. `prefix+c-g` start work in a project using a fuzzy matcher\n3. `M-t` over to my todo list\n4. `M-b` back to my project\n5. `M-i` to my blog to look up notes/make notes\n6. `M-b` back to my project\n7. `prefix+c-g` start work in another project using a fuzzy matcher\n8. `M-t` over to my todo list\n9. `M-b` back to my project\n10. `prefix+c-j` fuzzy back to the first project\n11. `M-b` back to the second project\n\n\n---\n\nPlease let me know your thoughts.\n[@waylonwalker](https://twitter.com/_WaylonWalker), this one took me a bit\nlonger to put together with all of the animated gif's, but I think it helps\nvisually show how I navigate tmux every day.\n\n## Please give it a share if you liked it\n\nIf you liked it, give it a share and tag me on\n[twitter](https://twitter.com/_WaylonWalker).  I don't often ask but this\narticle took a bit more to put together than my normal post.\n\n---\n\n## Related Links\n\n* [Chris Toomey's](https://twitter.com/christoomey) Tmux Course\n* my [ta script](https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta).\n* my [.tmux.conf](https://github.com/WaylonWalker/devtainer/blob/main/tmux/.tmux.conf)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-new-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux new-session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-ls'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux ls</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-11", "edit_link": "https://github.com/edit/main/pages/blog/tmux-nav-2021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572836", "datetime": "2021-05-11 00:00:00+00:00", "slug": "tmux-nav-2021", "jinja": false, "output_html": "markout/tmux-nav-2021/index.html", "long_description": "In 2021 I changed the way I navigate between tmux sessions big time.  Now I can Since making this post, I have made ~20 other posts in short form that all have a YouTube video to go along with them you can find them all on my I took Chris I am now ke", "super_description": "In 2021 I changed the way I navigate between tmux sessions big time.  Now I can Since making this post, I have made ~20 other posts in short form that all have a YouTube video to go along with them you can find them all on my I took Chris I am now keeping projects to their own session and can move between them \ud83d\udcdd  Let \ud83d\udc46 Overview of how I navigate tmux Throughout this article, I have several recordings showing how I use manage At the heart of my tmux navigation is a highly customized version of Ch", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c8b0>, next=<frontmatter.Post object at 0x7f34506a9af0>)"}, {"cover": "", "title": "Open files FAST from zsh | or bash if thats your thing", "tags": ["linux", "bash"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/fuzzy-edit-zsh.md", "description": "https://youtu.be/PQw I am often in a set of tmux splits flying back and forth, accidentally close my Make sure you check out the YouTube video to see all of my ", "content": "https://youtu.be/PQw_is7rQSw\n\nI am often in a set of tmux splits flying back and forth, accidentally close my\neditor, so when I come back to that split and hit my keybinds to edit files I\nenter them into zsh rather than into nvim like I intended.  Today I am going to\nsand off that rough edge and get as similar behavior to nvim as I can with a\ncouple of aliases.\n\n\nMake sure you check out the YouTube video to see all of my improvements.\n\n## what's an alias\n\nIf you have never heard of an alias before it's essentially a shortcut to a\ngiven command.  You can pass additional flags to the underlying command and\nthey will get passed in.  Most of the time they are just shorter versions of\ncommands that you run often or even like in this case a common muscle memory\ntypo that occurs for you.\n\n\n## My new alias's for fuzzy editing files from zsh\n\nHere are the new aliases that I came up with to smooth out my workflow.  These\ngive me a similar feel to how these keys work in neovim but from zsh.\n\n``` bash\n# fuzzy select file to edit\nalias p='nvim `fzf --preview=\"bat --color always {}\"`'\n\n# give me the same syntax as edit while in neovim\nalias :e='nvim '\n```\n\nFollow the [YouTube channel](https://youtube.com/waylonwalker) or the [rss\nfeed](https://waylonwalker/rss/) to stay up to date.\n\n\n## Related links\n\n* [playlist for my dotfiles challenge](https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gatsby-remark-embedder'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>gatsby-remark-embedder</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/four-github-actions-website'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Four github actions for your website</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-02", "edit_link": "https://github.com/edit/main/pages/blog/fuzzy-edit-zsh.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572841", "datetime": "2021-12-02 00:00:00+00:00", "slug": "fuzzy-edit-zsh", "jinja": false, "output_html": "markout/fuzzy-edit-zsh/index.html", "long_description": "https://youtu.be/PQw I am often in a set of tmux splits flying back and forth, accidentally close my Make sure you check out the YouTube video to see all of my improvements. If you have never heard of an alias before it Here are the new aliases that ", "super_description": "https://youtu.be/PQw I am often in a set of tmux splits flying back and forth, accidentally close my Make sure you check out the YouTube video to see all of my improvements. If you have never heard of an alias before it Here are the new aliases that I came up with to smooth out my workflow.  These Follow the ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506911f0>, next=<frontmatter.Post object at 0x7f34506b3430>)"}, {"cover": "", "title": "Variables names don't need their type", "tags": ["python", "dicuss"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/variable-names-don-t-need-their-type.md", "description": "So often I see a variables  Pandas  Sometimes vanilla structures too It Always name your containers plural, so that naming while iterating is simple. Before I s", "content": "So often I see a variables `type()` inside of its name and it hurts me a little\ninside.  Tell me I'm right or prove me wrong below.\n\n## Examples\n\nPandas `DataFrames` are probably the worst offender that I see\n\n``` python\n# bad\nsales_df = get_sales()\n\n# good\nsales = get_sales()\n```\n\nSometimes vanilla structures too!\n\n``` python\n# bad\nitems_list = ['sneakers', 'pencils', 'paper', ]\n\n# good\nitems = ['sneakers', 'pencils', 'paper', ]\n```\n\n## Edge Cases?\n\nIt's so common when you need to get inside a data structure in a special way that itsn't provided by the library.... I am not exactly sure of a good way around it.\n\n``` python\n# bad ??\nsales = get_sales()\nsales_dict = sales.to_dict()\n\n# good\n\ud83e\udd37\u200d\u2640\ufe0f\n```\n\n## Containers are plural\n\nAlways name your containers plural, so that naming while iterating is simple.\n\n``` python\nprices = {}\nitems = ['sneakers', 'pencils', 'paper', ]\nfor item in items:\n   prices[item] = get_price(item)\n```\n\nBefore I start fights \ud83e\udd4a in code review, am I inline here or just being pedantic?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/vim-augroup'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>You must use augroup with autocmd in vim | Here's how</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/twitter-deepdives'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Twitter deepdives</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-04-08", "edit_link": "https://github.com/edit/main/pages/blog/variable-names-don-t-need-their-type.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572847", "datetime": "2020-04-08 00:00:00+00:00", "slug": "variable-names-don-t-need-their-type", "jinja": false, "output_html": "markout/variable-names-don-t-need-their-type/index.html", "long_description": "So often I see a variables  Pandas  Sometimes vanilla structures too It Always name your containers plural, so that naming while iterating is simple. Before I start fights \ud83e\udd4a in code review, am I inline here or just being pedantic?", "super_description": "So often I see a variables  Pandas  Sometimes vanilla structures too It Always name your containers plural, so that naming while iterating is simple. Before I start fights \ud83e\udd4a in code review, am I inline here or just being pedantic?", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506aeb20>, next=<frontmatter.Post object at 0x7f3450663e50>)"}, {"cover": "", "title": "Markdown Cli", "tags": ["python", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/markdown-cli.md", "description": "This is a post that may be a work in progress for awhile, Its a collections of posts tags draft posts frontmatter filepath content template html Markdown.Markdo", "content": "This is a post that may be a work in progress for awhile, Its a collections of\nthoughts on managing my blog, but could be translated into anythiung that is\njust a collection of markdown.\n\n## Listing things\n\n* posts\n* tags\n* draft posts\n\n## data\n\n* frontmatter\n* filepath\n* content\n* template\n* html\n\n## render content\n\n* Markdown.Markdown\n* support extentsions\n\n## frontmatter cleaning.\n\n* provide ways to hook in or clean up the frontmatter\n\n## Markata.Markata methods\n\n* load\n* render\n* save\n\n## Markata.Post methods\n\n* load\n* render\n* save\n\n## Markata plugins\n\n* before_load\n* before_post_load\n* after_load\n* after_post_load\n* before_save\n* before_post_save\n* after_save\n* after_post_save\n\n\n## Markata plugins\n\n* cleanse_frontmatter\n* html_feed\n* json_feed\n* rss_feed\n* save_posts\n\n\n\n\n## CLI\n\n``` bash\n$ markata list tags\n\npython\ndata\n```\n\n``` bash\n$ markata\n\n[\n  { \n    \"title\": \"post title\",\n    \"description\": \"this is a post\",\n    \"filepath\": \"path_to.md\",\n    \"content\": \"the content of the post\",\n    \"html\": \"<p>the content of the post</p>\"\n    },\n    ...\n]\n```\n\n``` bash\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/master-no-more'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Master No More</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/markata-todoui-live-replay-4-6-2022'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>LIVE-REPLAY - Python dev | Markata todoui | 4/6/2022</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-20", "edit_link": "https://github.com/edit/main/pages/blog/markdown-cli.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572853", "datetime": "2021-01-20 00:00:00+00:00", "slug": "markdown-cli", "jinja": false, "output_html": "markout/markdown-cli/index.html", "long_description": "This is a post that may be a work in progress for awhile, Its a collections of posts tags draft posts frontmatter filepath content template html Markdown.Markdown support extentsions provide ways to hook in or clean up the frontmatter load render sav", "super_description": "This is a post that may be a work in progress for awhile, Its a collections of posts tags draft posts frontmatter filepath content template html Markdown.Markdown support extentsions provide ways to hook in or clean up the frontmatter load render save load render save before before after after before before after after cleanse html json rss save", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3d30>, next=<frontmatter.Post object at 0x7f345064c0d0>)"}, {"cover": "", "title": "Kedro Spaceflights - part 1 | Stream replay June 4, 2021", "tags": ["kedro", "python", "stream"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-spaceflights-stream1.md", "description": "This was my first time ever streaming on https://youtu.be/Y07UBr9Ccjs It all started with", "content": "This was my first time ever streaming on\n[twitch.tv/waylonwalker](https://twitch.tv/waylonwalker).  I am excited to get going.\nI have been streaming early in the morning while I am still waking up, so still\na bit groggy as I go.\n\nhttps://youtu.be/Y07UBr9Ccjs\n\n## Kedro Spaceflights\n\nIt all started with\n[kedro/issues/606](https://github.com/quantumblacklabs/kedro/issues/606), Yetu\ncalled out for users of kedro to record themselves doing a walk through of\ntheir tutorials.  I wanted to do this, but was really stuck at the fact that\nrecording or editing somewhat polished vide is quite time consuming for me.\n\n![kedro-issue-606](https://images.waylonwalker.com/kedro-issue-606.png)\n\n## Notes\n\n``` bash\npipx run kedro new\ncd project\npython -m venv .venv\nsource .venv/bin/activate\npip install kedro\nkedro install\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-spaceflights-stream2'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Spaceflights - part 2 | Stream replay June 7, 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-silence'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Silence Kedro Logs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-04", "edit_link": "https://github.com/edit/main/pages/blog/kedro-spaceflights-stream1.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572859", "datetime": "2021-06-04 00:00:00+00:00", "slug": "kedro-spaceflights-stream1", "jinja": false, "output_html": "markout/kedro-spaceflights-stream1/index.html", "long_description": "This was my first time ever streaming on https://youtu.be/Y07UBr9Ccjs It all started with", "super_description": "This was my first time ever streaming on https://youtu.be/Y07UBr9Ccjs It all started with", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658220>, next=<frontmatter.Post object at 0x7f34506f2af0>)"}, {"cover": "", "title": "How to find things in your kedro catalog", "tags": ["kedro", "python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-catalog-search.md", "description": "kedro 0.16.2 just dropped last week with a long-awaited feature...  The kedro data catalog is a key component to the kedro framework.  It handles all data loadi", "content": "kedro 0.16.2 just dropped last week with a long-awaited feature... **catalog search**!  I went as far as monkey patching this into each of my projects.  I work jump between a few really big projects that have tons of datasets.  Being able to quickly search for what I need is so useful.\n\n## The Catalog\n\nThe kedro data catalog is a key component to the kedro framework.  It handles all data loading and saving for you.  It is configurable and hackable.  Having all your data connections listed in one place make it so easy to pick your project up and move it to a completely new environment.  That sweet imperative loading style saves so much read/write overhead.  I can load all my data with a single command whether it's in amazon s3, google cloud platform, or a local file.\n\n## Kick start a toy project\n\nJust like with most of these articles, I am going to create a conda environment so that I don't break any existing projects and scaffold up a toy project to learn from.\n\n``` bash\nconda create -n kedro0162 python=3.8 -y\nactivate kedro0162\npip install kedro\nkedro new # call it Kedro 0162 and click-through\ncd kedro-0162\nkedro install\n```\n\nExpect this set of commands to take a few minutes depending on your system, connection speed, and amount of packages already in your local cache.\n\n## Create some catalog\n\nNow the power of the catalog search really starts to shine when your projects grow legs.  You have groups of many datasets containing patterns of data including `layer`, or `source` among other things.\n\n``` bash\nvim conf/base/catalog.yml\n```\n\nIn the catalog, you will see a few lines of instructions followed by\n\n``` yml\nexample_iris_data:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/iris.csv\n```\n\nThis gives us one stored catalog entry called `example_iris_data`, it is a CSV file stored in `data/01_raw/iris.csv`.\n\n\nLet's make up a transportation company that is siloed into three different divisions and it is our job to bring their sales and product metadata into a single report.  This company makes `lifted-trucks`, `primium-scoots`, and `luxy-yahts`.  and we know that we will want `raw`, `int`, `pri` and `modin` layers to start our project so let's scaffold up that catalog real quick.\n\n``` yml\n# \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 lifted-truck \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\nraw_lifted_truck_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/sales/lifted-truck.csv\n\nint_lifted_truck_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_int/sales/lifted-truck.csv\n\npri_lifted_truck_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/sales/lifted-truck.csv\n\nraw_lifted_truck_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/info/lifted-truck.csv\n\nint_lifted_truck_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_int/info/lifted-truck.csv\n\npri_lifted_truck_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/info/lifted-truck.csv\n\n# \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 primium-scoot \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\nraw_primium_scoot_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/sales/primium-scoot.csv\n\nint_primium_scoot_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_int/sales/primium-scoot.csv\n\npri_primium_scoot_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/sales/primium-scoot.csv\n\nraw_primium_scoot_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/info/primium-scoot.csv\n\nint_primium_scoot_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_int/info/primium-scoot.csv\n\npri_primium_scoot_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/info/primium-scoot.csv\n\n# \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 luxy-yaht \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\nraw_luxy_yaht_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/sales/luxy-yaht.csv\n\nint_luxy_yaht_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_int/sales/luxy-yaht.csv\n\npri_luxy_yaht_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/sales/luxy-yaht.csv\n\nraw_luxy_yaht_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/info/luxy-yaht.csv\n\nint_luxy_yaht_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_int/info/luxy-yaht.csv\n\npri_luxy_yaht_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/info/luxy-yaht.csv\n\n\n# \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 combined \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\npri_combined_sales:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/sales/combined.csv\n\npri_combined_info:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/info/combined.csv\n\n# \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015 modin \u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n\nmodin_main:\n  type: pandas.CSVDataSet\n  filepath: data/01_pri/info/combined.csv\n\n```\n\n## Some examples of common regex uses\n\n`regex` gets really complicated fast, but these basic examples are very common use cases and will get you a long way without being very complicated.\n\n* `term` - all catalog entries that include `term` in the catalog entry\n* `^term` - all catalog entries that include `term` at the **beginning** of the catalog entry\n* `term$` - all catalog entries that include `term` at the **end** of the catalog entry\n* `term1.*term2` - include anything in between `term1` and `term2`.\n* `term1|term2` - all catalog entries that include `term1` or `term2`\n\n\n## Let's Search this thing\n\nkedro has long included the `catalog.list()` feature that returns a list of all datasets.  Now the `list` command takes in a `regex_search` keyword argument.  By default, it is empty and returns the entire catalog.\n\n\n``` bash\nkedro ipython\n```\n\n## list out all of the luxy-yahts\n\n``` python\n>>> catalog.list('luxy_yaht`)\n['raw_luxy_yaht_sales',\n 'int_luxy_yaht_sales',\n 'pri_luxy_yaht_sales',\n 'raw_luxy_yaht_info',\n 'int_luxy_yaht_info',\n 'pri_luxy_yaht_info']\n ```\n\n## List out data by layer\n\nEasy just search for the layer name.\n\n### raw\n\n``` python\n>>> catalog.list('raw')\n['raw_lifted_truck_sales',\n 'raw_lifted_truck_info',\n 'raw_primium_scoot_sales',\n 'raw_primium_scoot_info',\n 'raw_luxy_yaht_sales',\n 'raw_luxy_yaht_info']\n```\n\n### pri\n\n``` python\n >>> catalog.list('pri')\n['pri_lifted_truck_sales',\n 'pri_lifted_truck_info',\n 'raw_primium_scoot_sales',\n 'int_primium_scoot_sales',\n 'pri_primium_scoot_sales',\n 'raw_primium_scoot_info',\n 'int_primium_scoot_info',\n 'pri_primium_scoot_info',\n 'pri_luxy_yaht_sales',\n 'pri_luxy_yaht_info',\n 'pri_combined_sales',\n 'pri_combined_info']\n```\n\n\ud83d\ude32 We just included every `primium-scoot` dataset!\n\nHere we just encountered our first need for `regex`.  I'll be the first to admit that I am really bad at regex, it's incredibly confusing, becomes read-only with much complexity, but is super powerful and used in a lot of places.\n\n\n## `^term`\n_beginning of catalog entry_\n\nThe `^` regex operator searches for catalog entries that include the search term at the very beginning.\n\n``` python\n >>> catalog.list('^pri')\n['pri_lifted_truck_sales',\n 'pri_lifted_truck_info',\n 'pri_primium_scoot_sales',\n 'pri_primium_scoot_info',\n 'pri_luxy_yaht_sales',\n 'pri_luxy_yaht_info',\n 'pri_combined_sales',\n 'pri_combined_info']\n```\n\n## `term$`\n_end of catalog entry_\n\nThe `$` operator is the opposite of the `^` operator.  It means give me all that matches that occur at the end of the catalog entry.\n\n``` python\n>>> catalog.list('info$')\n['raw_lifted_truck_info',\n 'int_lifted_truck_info',\n 'pri_lifted_truck_info',\n 'raw_primium_scoot_info',\n 'int_primium_scoot_info',\n 'pri_primium_scoot_info',\n 'raw_luxy_yaht_info',\n 'int_luxy_yaht_info',\n 'pri_luxy_yaht_info',\n 'pri_combined_info']\n\n```\n\n\n## `term1.*term2`\n\nThe `.*` operator in regex means give me all the datasets that include the two terms no matter what is between them.  There is also a `.?` to only allow one character between them.  More often than not I really just want the two patterns to exist in the dataset entry.\n\n``` python\n>>> catalog.list('raw.*info$')\n['raw_lifted_truck_info',\n 'raw_primium_scoot_info',\n  'raw_luxy_yaht_info']\n```\n\n## Some real things that we can do with search\n\nLet's look at a few examples beyond the obvious of just searching for the dataset that we want to load.\n\n## Check Raw Data\n\nWhile migrating pipelines between environments it's important to know if your raw datasets are available.  I will argue that you should also consider looking at `pipeline.inputs` as it cannot lie and gives you a true reading of the pipeline inputs.  But another easy check might be to check all the datasets that the Data Engineers have labeled raw.\n\n``` python\n>>> {dataset: catalog.exists(dataset) for dataset in catalog.list('^raw')}\n{'raw_lifted_truck_sales': False,\n 'raw_lifted_truck_info': False,\n 'raw_primium_scoot_sales': False,\n 'raw_primium_scoot_info': False,\n 'raw_luxy_yaht_sales': False,\n 'raw_luxy_yaht_info': False}\n```\n\nSince we just created a dummy catalog the data does not exist in this example.\n\n## Create a new catalog\n\nLet's say that we have someone on the team who is from the land division of our company and they want a simplified catalog readily available that does not include any marine data.\n\nTo do this we will need to reach a bit into the kedro internals for the `DataCatalog` class and utilize a new regex operator `|`.\n\n\n``` python\n>>> from kedro.io import DataCatalog\n>>> land_catalog = DataCatalog(\n    {\n        dataset: getattr(catalog.datasets, dataset)\n        for dataset in catalog.list('truck|scoot')\n        }\n    )\n>>> land_catalog.list()\n['raw_lifted_truck_sales',\n 'int_lifted_truck_sales',\n 'pri_lifted_truck_sales',\n 'raw_lifted_truck_info',\n 'int_lifted_truck_info',\n 'pri_lifted_truck_info',\n 'raw_primium_scoot_sales',\n 'int_primium_scoot_sales',\n 'pri_primium_scoot_sales',\n 'raw_primium_scoot_info',\n 'int_primium_scoot_info',\n 'pri_primium_scoot_info']\n```\n\n## regex recap\n\n* `^term` - beginning\n* `term$` - end\n* `term1.*term2` - anything in between\n* `term1|term2` - or\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-class-hooks'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create Configurable Kedro Hooks</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-catalog-create-cli'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>kedro catalog create</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-22", "edit_link": "https://github.com/edit/main/pages/blog/kedro-catalog-search.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572866", "datetime": "2020-06-22 00:00:00+00:00", "slug": "kedro-catalog-search", "jinja": false, "output_html": "markout/kedro-catalog-search/index.html", "long_description": "kedro 0.16.2 just dropped last week with a long-awaited feature...  The kedro data catalog is a key component to the kedro framework.  It handles all data loading and saving for you.  It is configurable and hackable.  Having all your data connections", "super_description": "kedro 0.16.2 just dropped last week with a long-awaited feature...  The kedro data catalog is a key component to the kedro framework.  It handles all data loading and saving for you.  It is configurable and hackable.  Having all your data connections listed in one place make it so easy to pick your project up and move it to a completely new environment.  That sweet imperative loading style saves so much read/write overhead.  I can load all my data with a single command whether it Just like with ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae100>, next=<frontmatter.Post object at 0x7f345068aa00>)"}, {"cover": "", "title": "Ipython Ninjitsu", "tags": ["python", "bash", "ipython"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/ipython-ninjitsu.md", "description": "?docstring ??sourcecode %run %debug %autoreload %history autoformat %reset ! Stop going to google everytime your stuck and stay in your workflow.  The Docstring", "content": "* ?docstring\n* ??sourcecode\n* %run\n* %debug\n* %autoreload\n* %history\n* autoformat\n* %reset\n* !shell commands\n\n## ?docstring\n\nStop going to google everytime your stuck and stay in your workflow.  The\nipython `?` is a superhero for productivity and staying on task.\n\n``` python\nfrom kedro.pipeline import Pipeline\nPipeline?\n\nInit signature:\nPipeline(\n    nodes: Iterable[Union[kedro.pipeline.node.Node, ForwardRef('Pipeline')]],\n    *,\n    tags: Union[str, Iterable[str]] = None,\n)\nDocstring:\nA ``Pipeline`` defined as a collection of ``Node`` objects. This class\ntreats nodes as part of a graph representation and provides inputs,\noutputs and execution order.\nInit docstring:\nInitialise ``Pipeline`` with a list of ``Node`` instances.\n\nArgs:\n    nodes: The iterable of nodes the ``Pipeline`` will be made of. If you\n        provide pipelines among the list of nodes, those pipelines will\n        be expanded and all their nodes will become part of this\n        new pipeline.\n    tags: Optional set of tags to be applied to all the pipeline nodes.\n\nRaises:\n    ValueError:\n        When an empty list of nodes is provided, or when not all\n        nodes have unique names.\n    CircularDependencyError:\n        When visiting all the nodes is not\n        possible due to the existence of a circular dependency.\n:\n```\n\n**Note** This does jump you into a pager, a j,k or up, down to navigate, q to quit.\n\n\n## ??sourcecode\n\nDocstring not enough for you use case.  I often run into cases where the\ndocstring is not clear enough and I need to see the implementation for myself\nto see what a function does.\n\n## %run\n\nI turned my nose up at this one, prior to seeing the famous [I don't like\nnotebooks](https://www.youtube.com/watch?v=7jiPeIFXb6U) by\n[Joel Grus](https://joelgrus.com/).  My first snobby reaction was that\ndeveloping modules and using autoreload was superior.  I have since realized\nthere is a place for `%run`, and it can cut down on some keystrokes to import,\nsetup, and run even when developing in modules.\n\n## %debug\n\nipython comes with a post-mortem debugger, and it can be a lifesaver.  If we\nhave a long running function that runs into an error it can be a complete buzzkill.\n\n``` python\ndef long_func():\n   import time\n   time.sleep(12)\n   n = 12\n   df = pd.Data({'a': range(n)})\n   return df\n\nlong_func()\n```\n\n## %reset\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/reset-ipython/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/reset-ipython-og_250x140.png\" alt=\"article cover for \n Reclaim memory usage in Jupyter\n\"/>\n          <p><strong>\n Reclaim memory usage in Jupyter\n</strong></p>\n      </a>\n  </div>\n\n\n## %autoreload\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/autoreload-ipython/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/autoreload-ipython-og_250x140.png\" alt=\"article cover for \n Autoreload in Ipython\n\"/>\n          <p><strong>\n Autoreload in Ipython\n</strong></p>\n      </a>\n  </div>\n\n\n``` python\nc.InteractiveShellApp.extensions = [\"autoreload\"]\nc.InteractiveShellApp.exec_lines = [\"%autoreload 2\"]\nc.InteractiveShellApp.exec_lines.append(\n    'print(\"Warning: disable autoreload in ipython_config.py to improve performance.\")'\n)\n```\n\n> place this in your ~/.ipython/profile_default/ipython_config.py to auto reload without needing to run the magic every time\n\n## autoformat\n\nThis is a relatively new feature to ipython.  I really enjoy it, as the time\nthat I need the most help autoformatting my code is riffing on an ad hoc\nanalysis at the command line.\n\n``` python\nc.TerminalInteractiveShell.autoformatter = \"black\"\n```\n\n> place this in your ~/.ipython/profile_default/ipython_config.py to autoformat with black by default\n\n## new prompt\n\n## reverse history search\n\n_Control R_\n\n## Want automatic imports??\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/pyflyby/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/pyflyby-og_250x140.png\" alt=\"article cover for \n Smoother Python with automatic imports | pyflyby\n\"/>\n          <p><strong>\n Smoother Python with automatic imports | pyflyby\n</strong></p>\n      </a>\n  </div>\n\n\n> This article covers how I setup automatic imports in ipython\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/practice-python-online'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udc0d Practice Python Online</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-catalog-search'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to find things in your kedro catalog</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-14", "edit_link": "https://github.com/edit/main/pages/blog/ipython-ninjitsu.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572872", "datetime": "2020-12-14 00:00:00+00:00", "slug": "ipython-ninjitsu", "jinja": false, "output_html": "markout/ipython-ninjitsu/index.html", "long_description": "?docstring ??sourcecode %run %debug %autoreload %history autoformat %reset ! Stop going to google everytime your stuck and stay in your workflow.  The Docstring not enough for you use case.  I often run into cases where the I turned my nose up at thi", "super_description": "?docstring ??sourcecode %run %debug %autoreload %history autoformat %reset ! Stop going to google everytime your stuck and stay in your workflow.  The Docstring not enough for you use case.  I often run into cases where the I turned my nose up at this one, prior to seeing the famous  ipython comes with a post-mortem debugger, and it can be a lifesaver.  If we https://waylonwalker.com/reset-ipython https://waylonwalker.com/autoreload-ipython place this in your ~/.ipython/profile This is a relativ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f040>, next=<frontmatter.Post object at 0x7f345067f8b0>)"}, {"cover": "", "title": "\ud83d\udc0d Practice Python Online", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/practice-python-online.md", "description": "When learning a new skill it When learning a new skill it Here are three different options that I have used in the past to try out something at some various lev", "content": "When learning a new skill it's important to practice along the way. In order\nfor me to show up to practice I need to make it easy to show up. An easy way to\nshow up to practice with python is to use an online repl.  With these you can\ntry out something quick. Sometimes I see snippets from blogs or tweets and I\nneed to try the out for myself to really understand.\n\n\nWhen learning a new skill it's important to practice along the way. In order for me to show up to practice I need to make it easy to show up. An easy way to show up to practice with python is to use an online repl. With these, you can try out something quick. Sometimes I see snippets from blogs or tweets and I need to try them out for myself to really understand.\n\n## Three online REPLS\n\nHere are three different options that I have used in the past to try out something at some various levels. I am sure there are plenty more, but these are three that I have tried. I am not covering all of them, because It's been a while since I have used one other than [replit.com](https://replit.com)\n\n- [python.org/shell/](https://python.org/shell/)\n- [replit.com](https://replit.com)\n- [pythonanywhere.com](https://pythonanywhere.com)\n\n## replit.com\n\n[replit.com](https://replit.com) has been my go-to place to practice python away from my local machine. It's super quick to spin up a new \"project\" add files, install libraries, and run a script. It's not quite as nice as having all of my personal keyboard shortcuts and extensions, but its the closest thing I have found.\n\n## Show up for Practice\n\nThe best way to learn something new in tech is to get your own fingers on the keyboard and start trying new things. Reading and watching videos is great to start, but to get a deep understanding for yourself you need to get your fingers on the keyboard. Make it easy for yourself and find several options that work well for you. [replit.com](https://replit.com) is one tool that works well for me.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pre-commit-is-awesome'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>pre-commit is awesome</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/personal-url-shortener'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Personal URL shortener with Netlify Redirects</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-25", "edit_link": "https://github.com/edit/main/pages/blog/practice-python-online.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572878", "datetime": "2020-07-25 00:00:00+00:00", "slug": "practice-python-online", "jinja": false, "output_html": "markout/practice-python-online/index.html", "long_description": "When learning a new skill it When learning a new skill it Here are three different options that I have used in the past to try out something at some various levels. I am sure there are plenty more, but these are three that I have tried. I am not cove", "super_description": "When learning a new skill it When learning a new skill it Here are three different options that I have used in the past to try out something at some various levels. I am sure there are plenty more, but these are three that I have tried. I am not covering all of them, because It The best way to learn something new in tech is to get your own fingers on the keyboard and start trying new things. Reading and watching videos is great to start, but to get a deep understanding for yourself you need to g", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506468b0>, next=<frontmatter.Post object at 0x7f345065e0d0>)"}, {"cover": "", "title": "How python tools configure", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/how-python-tools-config.md", "description": "Mypy only uses pyproject.toml only uses pyproject.toml", "content": "## mypy\n\nMypy's config parser seems to be one of the most complex.  This is likely in part to it having the largest backwards compatability of all projects that I looked at.\n\n[mypy/config_parser](https://github.com/python/mypy/blob/master/mypy/config_parser.py)\n\n\n## flake8\n\n\n\n[options/config.py](https://github.com/PyCQA/flake8/blob/master/src/flake8/options/config.py)\n\n## black\n\n[black](https://github.com/psf/black/blob/master/src/black/__init__.py#L277-L331)\n\n## portray\n\n* only uses pyproject.toml\n\n[portray/config.py](https://github.com/timothycrosley/portray/blob/main/portray/config.py)\n\n## interrogate\n\n* only uses pyproject.toml\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/if-tmux'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>If Tmux</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/how-i-kedro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-21", "edit_link": "https://github.com/edit/main/pages/blog/how-python-tools-config.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572884", "datetime": "2020-07-21 00:00:00+00:00", "slug": "how-python-tools-config", "jinja": false, "output_html": "markout/how-python-tools-config/index.html", "long_description": "Mypy only uses pyproject.toml only uses pyproject.toml", "super_description": "Mypy only uses pyproject.toml only uses pyproject.toml", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1a00>, next=<frontmatter.Post object at 0x7f3450696670>)"}, {"cover": "", "title": "tmux source-file", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-source-file.md", "description": "https://youtu.be/dDq0depPrTs So you have been tricking out that  Let We can run this command from your shell to re-source your changed  It also works from the t", "content": "https://youtu.be/dDq0depPrTs\n\nSo you have been tricking out that `.tmux.conf`, you're looking for a silky\nsmooth workflow that lets you fly through tmux with super speed, but every time\nyou tweak out that `.tmux.conf` you have to restart your whole session. Not amymore,\n\nLet's add this to the bottom of our tmux.conf so that you can see everytime it\ngets sourced.\n\n``` bash\ndisplay-message \"hello beautiful\"\n```\n\n## command\n\nWe can run this command from your shell to re-source your changed `.tmux.conf`\n\n``` bash\ntmux source-file ~/.tmux.conf\n```\n\nIt also works from the tmux command line.\n\n``` bash\nsource-file ~/.tmux.conf\n```\n\n\n## tmux hotkey\n\nIt's very common to set this up as a keybinding so that you can do it easily\nwithout needing to memorize the exact command.\n\n``` bash\nbind -T prefix r source-file ~/.tmux.conf\nbind -n M-r source-file ~/.tmux.conf\n```\n\n## from vim\n\nThis is my preferred way of re-sourcing my `.tmux.conf`.  It sits quietly in\nthe background, and I dont need to remember to do anything.  If you are a vim\nuser you can automate this process by creating a `autocmd bufwritepost`.  This\nwill shell out the `tmux source-file` everytime you save your `.tmux.conf`.\n\n``` vim\nautocmd bufwritepost .tmux.conf execute ':!tmux source-file %'\nautocmd bufwritepost .tmux.local.conf execute ':!tmux source-file %'\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-splitting-panes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux splitting panes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-show-messages'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux show-messages</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-06", "edit_link": "https://github.com/edit/main/pages/blog/tmux-source-file.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572889", "datetime": "2021-08-06 00:00:00+00:00", "slug": "tmux-source-file", "jinja": false, "output_html": "markout/tmux-source-file/index.html", "long_description": "https://youtu.be/dDq0depPrTs So you have been tricking out that  Let We can run this command from your shell to re-source your changed  It also works from the tmux command line. It This is my preferred way of re-sourcing my  https://waylonwalker.com/", "super_description": "https://youtu.be/dDq0depPrTs So you have been tricking out that  Let We can run this command from your shell to re-source your changed  It also works from the tmux command line. It This is my preferred way of re-sourcing my  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068aaf0>, next=<frontmatter.Post object at 0x7f34506469d0>)"}, {"cover": "", "title": "tmux has-session", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-has-session.md", "description": "https://youtu.be/XucVVgGmesM I see you there, trying to script out your tmux layouts. Tryig to get each The  The command is pretty straight forward, you simply ", "content": "https://youtu.be/XucVVgGmesM\n\nI see you there, trying to script out your tmux layouts. Tryig to get each\nproject setup just perfect with a script, but you keep stumbling over yourself\nwith `duplicate session` error messages\n\nThe `has-session` tmux command is a handy tool to prevent this `duplicate\nsession` error message when scripting your tmux layouts.\n\n## command line\n\nThe command is pretty straight forward, you simply ask tmux if the session name\nyou are looking for exists.\n\n``` bash\ntmux has-session -t \"waylonwalker_com\"\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-join-pane'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux join-pane</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-fzf-session-jump'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux fzf session jumper</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-09", "edit_link": "https://github.com/edit/main/pages/blog/tmux-has-session.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572895", "datetime": "2021-08-09 00:00:00+00:00", "slug": "tmux-has-session", "jinja": false, "output_html": "markout/tmux-has-session/index.html", "long_description": "https://youtu.be/XucVVgGmesM I see you there, trying to script out your tmux layouts. Tryig to get each The  The command is pretty straight forward, you simply ask tmux if the session name https://waylonwalker.com/tmux-nav-2021/ for more information ", "super_description": "https://youtu.be/XucVVgGmesM I see you there, trying to script out your tmux layouts. Tryig to get each The  The command is pretty straight forward, you simply ask tmux if the session name https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679c10>, next=<frontmatter.Post object at 0x7f3450658e80>)"}, {"cover": "", "title": "Vim Fugitive", "tags": ["kedro", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/vim-fugitive.md", "description": ":on This one has nothing to do with fugitive, but is a native vim feature that C-i jump The jumplist is sorted Oldest to newest When navigating the jumplist wit", "content": "``` vim\n:G\n:G status\n:G commit\n:G add %\n:Gdiff\n:G push\n:Glog\n```\n\n\n## Add current file and commit with diff in a split\n\n``` vim\nfunction! s:GitAdd()\n    exe \"G add %\"\n    exe \"G diff --staged\"\n    exe \"only\"\n    exe \"G commit\"\nendfunction\n:command! GitAdd :call s:GitAdd()\nnnoremap gic :GitAdd<CR>\n```\n\n## :on[ly]\n\n_C-W o_\n\n:on[ly] will make the current buffer the only one on the screen.  This is super helpful as many of fugitive commands will open in a split by default.\n\n\n## C-I C-O\n\n_cycle through the jumplist_\n\nThis one has nothing to do with fugitive, but is a native vim feature that\nmakes fugitive glorious.  Before I realized how to utilize `C-i` and `C-o`, I\nwould get completely lost when using fugitive.  Digging deep into the log,\nopening a file from a specific commit, then no way to get back where I was in\nthe log.\n\n\n> C-i jump\n\n### :jump[s]\n\n_show the jumplist_\n\n> The jumplist is sorted Oldest to newest\n\n\n### :Telescope jumplist\n\nWhen navigating the jumplist with `:Telescope jumplist`, it will add a new entry\nto the jumplist and let you get back to where you were with a `C-O`.\n\n> :Telescope jumplist adds to the jumplist\n\n\n## C-W J / C-W L\n\n## :G log\n\n``` bash\n:G log\n:G log -p\n:Glog\n```\n\n## Ggrep\n\n``` bash\n:Ggrep python **/*md\n```\n\nUnlike `:vim[grep]` you don't need to specify a file glob.\n``` bash\n:Ggrep python\n```\n\n## Staging Hunks\n\nIn the file you want to stage hunks of run `:Gdiff`.  Then use vim's diff\ncommands (`dp`, `do`, `:diffput`, `:diffget`) to move the hunk between the\nstage/index.  Then write the file to stage.\n\n``` python\n:Gdiff\ndp\n:w\n:Gcommit\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/manage-many-git-repos'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Manage many git repos with ease</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-has-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux has-session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-08", "edit_link": "https://github.com/edit/main/pages/blog/vim-fugitive.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572901", "datetime": "2021-05-08 00:00:00+00:00", "slug": "vim-fugitive", "jinja": false, "output_html": "markout/vim-fugitive/index.html", "long_description": ":on This one has nothing to do with fugitive, but is a native vim feature that C-i jump The jumplist is sorted Oldest to newest When navigating the jumplist with  :Telescope jumplist adds to the jumplist Unlike  In the file you want to stage hunks of", "super_description": ":on This one has nothing to do with fugitive, but is a native vim feature that C-i jump The jumplist is sorted Oldest to newest When navigating the jumplist with  :Telescope jumplist adds to the jumplist Unlike  In the file you want to stage hunks of run ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506850d0>, next=<frontmatter.Post object at 0x7f345067f550>)"}, {"cover": "", "title": "Manage many git repos with ease", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/manage-many-git-repos.md", "description": "mu-repo", "content": "mu-repo\n\n\n``` bash\npip install mu\n\nmu status --short\nmu rev-parse --abbrev-ref HEAD\nmu diff --color\nmu diff -U0 --color\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gitui'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gitui is a blazing fast terminal git interface</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-fugitive'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Vim Fugitive</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-13", "edit_link": "https://github.com/edit/main/pages/blog/manage-many-git-repos.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572907", "datetime": "2021-06-13 00:00:00+00:00", "slug": "manage-many-git-repos", "jinja": false, "output_html": "markout/manage-many-git-repos/index.html", "long_description": "mu-repo", "super_description": "mu-repo", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067fc10>, next=<frontmatter.Post object at 0x7f345067fd30>)"}, {"cover": "", "title": "Gitui is a blazing fast terminal git interface", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/gitui.md", "description": "Gitui is a terminal-based git user interface (TUI) that will change the way Go to their  It opens blazing fast. Sometimes I edit a number of files and want to c", "content": "Gitui is a terminal-based git user interface (TUI) that will change the way\nthat you work with git. I have been a long-time user of the git cli, and it's\nbeen hard to beat, mostly because there is nothing that keeps my fingers on the\nkeyboard quite like it, except `gitui` which comes with some great ways to very\nquickly walk through a git project.\n\n\n\n## installation\n\nGo to their [releases]https://github.com/extrawurst/gitui/releases) page,\ndownload the latest build, and pop it on your PATH.  I have the following\nstuffed away in some install scripts to get the latest version.\n\n\n_<small>install latest release</small>_\n``` bash\nGITUI_VERSION=$(curl --silent https://github.com/extrawurst/gitui/releases/latest | tr -d '\"' | sed 's/^.*tag\\///g' | sed 's/>.*$//g' | sed 's/^v//')\nwget https://github.com/extrawurst/gitui/releases/download/v${GITUI_VERSION}/gitui-linux-musl.tar.gz -O- -q | sudo tar -zxf - -C /usr/bin/\n```\n\n## run `gitui`\n\nIt opens blazing fast.\n\n``` bash\ngitui\n```\n\n## Quick Commits\n\nSometimes I edit a number of files and want to commit them one at a time, this\nis painful in the git cli and my main use case for `gitui`.  `gitui` shows\nunstaged changes at the top, staged changes on the bottom, and a diff on the\nright.\n\n\n![gitui status](https://images.waylonwalker.com/gitui-status.png)\n\n\n## Navigate with hjkl\n\nBy default, `gitui` uses arrow keys, but simply copying\n[vim_style_key_config.ron](https://github.com/extrawurst/gitui/blob/master/vim_style_key_config.ron)\nto your config directory will get you vim-like keybindings.\n\n## workflow\n\nGenerally, I pop open `gitui`, use j/k to get to the file I want to commit,\nglance at the diff to the right, press enter to stage the file, sc to switch\nfocus to the saged files and commit, write my commit message hit enter and\ndone.\n\n* w/s:   to toggle focus between working and staged changes\n* j/k:   to scroll each section\n* h/l:   switch between left and right side\n* enter: toggle file from working or staging\n* c:     start a commit message\n* p:     push\n* <c-c>: quit\n\n## Other Panes\n\nI am in the `Status [1]` pane 90% of the time, but it also has three other\npanes for `Log [2]`, `Stashing [3]`, and `Stashes [4]`.  I do not really use\nthe stashes panes, but the `Log [2]` pane is quite useful to quickly go through\nthe last set of commits and see the diff for each of them.\n\n## What UI do you use for git\n\nLet me know what ui you use for git, do you stick to the cli, use a gui, or use\na similar `TUI` interface?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/goals-2019'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>2019 goals</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/github-actions-syntax'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Getting Started with GitHub Actions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-17", "edit_link": "https://github.com/edit/main/pages/blog/gitui.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572913", "datetime": "2021-01-17 00:00:00+00:00", "slug": "gitui", "jinja": false, "output_html": "markout/gitui/index.html", "long_description": "Gitui is a terminal-based git user interface (TUI) that will change the way Go to their  It opens blazing fast. Sometimes I edit a number of files and want to commit them one at a time, this By default,  Generally, I pop open  w/s:   to toggle focus ", "super_description": "Gitui is a terminal-based git user interface (TUI) that will change the way Go to their  It opens blazing fast. Sometimes I edit a number of files and want to commit them one at a time, this By default,  Generally, I pop open  w/s:   to toggle focus between working and staged changes j/k:   to scroll each section h/l:   switch between left and right side enter: toggle file from working or staging c:     start a commit message p:     push <c-c> I am in the  Let me know what ui you use for git, do", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691a60>, next=<frontmatter.Post object at 0x7f34506f28e0>)"}, {"cover": "", "title": "Setup a yaml schema | yamlls for a silky smooth setup", "tags": ["linux", "vim", "neovim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/setup-yamlls.md", "description": "I https://youtu.be/xo4HrFoKF4c The video for this one is part of a I have my  You will need the following plugins.  I use plug, if you don Make sure that you ha", "content": "I've gone far too long without a good setup for editing yaml\nfiles, I am missing out on autocomplete and proper diagnostics.\nThis ends today as I setup yaml-language-server in neovim.\n\nhttps://youtu.be/xo4HrFoKF4c\n\nThe video for this one is part of a\n[challenge-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj)\nI put out for myself to constantly improve my dotfiles for all of December.\n\n## init.vim\n\nI have my `init.vim` setup to only source other modules, if you want everything\nin a single config, feel free to do as you wish.  I broke mine up earlier this\nyear as I doubled into nvim and am not going back.\n\n``` vim\nsource ~/.config/nvim/plugins.vim\nlua require'waylonwalker.cmp'\nlua require'waylonwalker.lsp-config'\n```\n\n## Plugin setup\n\nYou will need the following plugins.  I use plug, if you don't you will have to\nconvert the syntax over to the plugin manager you use.\n\n\n[neovim/nvim-lspconfig](https://github.com/neovim/nvim-lspconfig) is for\nconfiguring the lsp.  It comes with a bunch of sane defaults for most servers,\nso you pretty much just have to call setup on that server unless you want to\nchange the defaults.\n\n[hrsh7th/nvim-cmp](https://github.com/hrsh7th/nvim-cmp) is what I use for\nautocomplete. If you are using something else you might need to set that up in\na different way in order to get the autocomplete to work.  You will still get\nthe diagnostics with just lsp-config.\n\n[kabouzeid/nvim-lspinstall](https://github.com/kabouzeid/nvim-lspinstall) will\naide in installing lsp's if you want.  I have chosen not to because I want to\nhave my full setup scripted so when I setup any new machine I just run my\nansible-playbook.  This library is nice to just set things up quick and play\nwith them.\n\n``` vim\n\" /home/u_walkews/.config/nvim/plugins.vim\nPlug 'neovim/nvim-lspconfig'\n\n\" if you want to use nvim-cmp\nPlug 'hrsh7th/nvim-cmp'\nPlug 'hrsh7th/cmp-nvim-lsp'\n\n\" if you want to use lsp-install\nPlug 'kabouzeid/nvim-lspinstall'\n```\n\n## cmp config\n\nMake sure that you have nvim_lsp as a source in your cmp config.  This is my\nconfig as of now, its likely to change in the future, set yours up how you\nlike.  hrsh7th has a really good readme if you want help configuring cmp.\n\n> Again if you don't use cmp you can skip this step, cmp is for autocomplete.\n> You can use a different plugin for autocomplete, or not use a plugin at all\n> if that's your thing.\n\n``` lua\n--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua\n-- Setup nvim-cmp.\nlocal cmp = require'cmp'\n\ncmp.setup({\nsnippet = {\n    expand = function(args)\n    -- For `vsnip` user.\n    vim.fn[\"vsnip#anonymous\"](args.body)\n\n    -- For `luasnip` user.\n    -- require('luasnip').lsp_expand(args.body)\n\n    -- For `ultisnips` user.\n    -- vim.fn[\"UltiSnips#Anon\"](args.body)\n    end,\n},\nmapping = {\n  ['<C-n>'] = cmp.mapping.select_next_item({ behavior = cmp.SelectBehavior.Insert }),\n  ['<C-p>'] = cmp.mapping.select_prev_item({ behavior = cmp.SelectBehavior.Insert }),\n  ['<Down>'] = cmp.mapping.select_next_item({ behavior = cmp.SelectBehavior.Select }),\n  ['<Up>'] = cmp.mapping.select_prev_item({ behavior = cmp.SelectBehavior.Select }),\n  ['<C-d>'] = cmp.mapping.scroll_docs(-4),\n  ['<C-f>'] = cmp.mapping.scroll_docs(4),\n  ['<C-Space>'] = cmp.mapping.complete(),\n  ['<C-e>'] = cmp.mapping.close(),\n  ['<CR>'] = cmp.mapping.confirm({\n    behavior = cmp.ConfirmBehavior.Replace,\n    select = true,\n    })\n},\nsources = {\n    { name = 'nvim_lsp' },\n    { name = 'vsnip' },\n    { name = 'path' },\n    { name = 'buffer' },\n    { name = 'calc' },\n    { name = 'tmux' },\n}\n})\n\n```\n\n## lsp config\n\nNext up is the heart of this post, the lsp-config.lua.  This one is pretty\nstraight forward, require lspconfig (which you need the plugin for), then set\nit up with cmp and the extra schemas.  I'm sure there are yaml schemas for tons\nof things, I'll probably add more in the future, but for now, this is what I\nhave.\n\n\n``` lua\n--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua\nrequire'lspconfig'.yamlls.setup{\n    on_attach=on_attach,\n    capabilities = require('cmp_nvim_lsp').update_capabilities(vim.lsp.protocol.make_client_capabilities()),\n    settings = {\n        yaml = {\n            schemas = {\n                [\"https://raw.githubusercontent.com/quantumblacklabs/kedro/develop/static/jsonschema/kedro-catalog-0.17.json\"]= \"conf/**/*catalog*\",\n                [\"https://json.schemastore.org/github-workflow.json\"] = \"/.github/workflows/*\"\n            }\n        }\n    }\n}\n```\n\n## Related Links\n\n* [my nvim config](https://github.com/WaylonWalker/devtainer/tree/main/nvim/.config/nvim)\n* [nvim-lspconfig GitHub]( https://github.com/neovim/nvim-lspconfig )\n* [nvim-cmp GitHub]( https://github.com/hrsh7th/nvim-cmp )\n* [lspinstall yamlls]( https://github.com/kabouzeid/nvim-lspinstall/blob/main/lua/lspinstall/servers/yaml.lua )\n* [yaml-language-server npm]( https://www.npmjs.com/package/yaml-language-server?activeTab=readme )\n\nFollow the [YouTube channel](https://youtube.com/waylonwalker) or the\n[rss-feed](https://waylonwalker/rss/) to stay up to date.\n\n## Also Check out My python lsp setup\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/setup-pylsp/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/setup-pylsp-og_250x140.png\" alt=\"article cover for \n python lsp setup\n\"/>\n          <p><strong>\n python lsp setup\n</strong></p>\n      </a>\n  </div>\n\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/should-i-switch-to-zeit-now'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Should I switch to Zeit Now</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/serverless-things-to-investigate'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Serverless things to investigate</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-03", "edit_link": "https://github.com/edit/main/pages/blog/setup-yamlls.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572920", "datetime": "2021-12-03 00:00:00+00:00", "slug": "setup-yamlls", "jinja": false, "output_html": "markout/setup-yamlls/index.html", "long_description": "I https://youtu.be/xo4HrFoKF4c The video for this one is part of a I have my  You will need the following plugins.  I use plug, if you don Make sure that you have nvim Again if you don Next up is the heart of this post, the lsp-config.lua.  This one ", "super_description": "I https://youtu.be/xo4HrFoKF4c The video for this one is part of a I have my  You will need the following plugins.  I use plug, if you don Make sure that you have nvim Again if you don Next up is the heart of this post, the lsp-config.lua.  This one is pretty Follow the  https://waylonwalker.com/setup-pylsp/", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae1f0>, next=<frontmatter.Post object at 0x7f3450663ca0>)"}, {"cover": "", "title": "\ud83c\udf31 Digital Gardening | gif to Mp4 | Stream replay June 4, 2021", "tags": ["python", "stream"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/digital-gardening-stream-6-6-2021.md", "description": "https://youtu.be/I4VenHqIEng Doing some Digital Gardening on stream Ahrefs Errors ahrefs large images Automatic gif to mp4 After this stream all gifs on my site", "content": "https://youtu.be/I4VenHqIEng\n\nDoing some Digital Gardening on stream\n\n* Ahrefs Errors\n* ahrefs large images\n* Automatic gif to mp4\n\n## gif to mp4\n\nAfter this stream all gifs on my site are converted to mp4/webm if they exist.\n\n``` markdown\n![tmux-navigation-2021](https://images.waylonwalker.com/tmux-navigation-2021.gif)\n```\n\n![tmux-navigation-2021](https://images.waylonwalker.com/tmux-navigation-2021.gif)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/digital-ocean'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Digital Ocean</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/diffurcate'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Code Review from the comfort of vim | Diffurcate</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-06", "edit_link": "https://github.com/edit/main/pages/blog/digital-gardening-stream-6-6-2021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572926", "datetime": "2021-06-06 00:00:00+00:00", "slug": "digital-gardening-stream-6-6-2021", "jinja": false, "output_html": "markout/digital-gardening-stream-6-6-2021/index.html", "long_description": "https://youtu.be/I4VenHqIEng Doing some Digital Gardening on stream Ahrefs Errors ahrefs large images Automatic gif to mp4 After this stream all gifs on my site are converted to mp4/webm if they exist.", "super_description": "https://youtu.be/I4VenHqIEng Doing some Digital Gardening on stream Ahrefs Errors ahrefs large images Automatic gif to mp4 After this stream all gifs on my site are converted to mp4/webm if they exist.", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c700>, next=<frontmatter.Post object at 0x7f34506b3310>)"}, {"cover": "", "title": "\ud83e\udd13 What's on your GitHub Profile", "tags": ["discuss"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/whats-on-your-github-profile.md", "description": "I ran this post on dev.to and got a great response of great examples,  The GitHub profile feature just went live for a subset of users.  Simply creating a repo ", "content": "I ran this post on dev.to and got a great response of great examples, [check it out](https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3).\n\n[![dev.to whats-on-your-github-profile](https://images.waylonwalker.com/whats-on-your-github-profile.png)](https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3)\n\nThe GitHub profile feature just went live for a subset of users.  Simply creating a repo named after your username, and clicking share to Profile on the sidebar will create a custom profile that shows up just above your pinned projects.\n\nI am still trying to figure out what to put on mine, but this is what I have so far.  I feel like mine is a bit big at the moment, I don't like that my pinned repos end up blow the fold.\n\n[![my github profile](https://dev-to-uploads.s3.amazonaws.com/i/pk1ostnnpn9dmlbs4emv.png)](https://github.com/waylonwalker)\n\n## updated\n\nI tightened mine up and took inspiration from a few others.\n\n[![Alt Text](https://dev-to-uploads.s3.amazonaws.com/i/zl9o2kmxoy2c7xv16pbz.png)](https://github.com/waylonwalker)\n\nShare a screenshot and link of yours [on dev](https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3).\n\n## updated again\n\nUpdated with a list of latest Twitter followers, using GitHub actions.\n\n![waylonwalkers GitHub profile](https://dev-to-uploads.s3.amazonaws.com/i/f8fcm9dvvozj4rzh4376.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/why-use-cms'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Why use a cms</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/whats-new-in-kedro-0166'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What's New in Kedro 0.16.6</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-11", "edit_link": "https://github.com/edit/main/pages/blog/whats-on-your-github-profile.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572932", "datetime": "2020-07-11 00:00:00+00:00", "slug": "whats-on-your-github-profile", "jinja": false, "output_html": "markout/whats-on-your-github-profile/index.html", "long_description": "I ran this post on dev.to and got a great response of great examples,  The GitHub profile feature just went live for a subset of users.  Simply creating a repo named after your username, and clicking share to Profile on the sidebar will create a cust", "super_description": "I ran this post on dev.to and got a great response of great examples,  The GitHub profile feature just went live for a subset of users.  Simply creating a repo named after your username, and clicking share to Profile on the sidebar will create a custom profile that shows up just above your pinned projects. I am still trying to figure out what to put on mine, but this is what I have so far.  I feel like mine is a bit big at the moment, I don I tightened mine up and took inspiration from a few oth", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a8e0>, next=<frontmatter.Post object at 0x7f3450679430>)"}, {"cover": "", "title": "How to crush amazing posts on DEV", "tags": ["catalytic", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/crush-dev-to-posts.md", "description": "Here are a few of my top tips to help make dev.to posts more readable, and drive better engagement.", "content": "This post was inspired by a comment I left on @dsteenman's  post.\n\n\n{% post dsteenman/how-long-should-a-blogpost-be-2k6n %}\n\nMost of the time I prefer short as I am more likely to read the whole thing.  If its setup as a series I am more likely to work my way through the whole series in a matter of a few sessions.  Just my preference\n\nI will say though there are certain articles that fit well to the long format.  They are articles that folks tend to come back to often as a reference again and again.\n\n## Sections\n\n1. [layout is key](#layout-is-key)\n1. [Break it up](#break-it-up)\n1. [Article types](#article-types)\n1. [superpost](#superpost)\n1. [single post](#single-post)\n1. [series](#series)\n1. [discussion](#discussion)\n1. [Post what you want to read](#post-what-you-want-to-read)\n\n## layout is key\n\nEither way, you go **layout is key**.  You are not **Steven King**, no matter how great of a writer you are, you are unlikely to hold attention like he can.  Most folks reading blogs scan articles first.  I often scan, then read.  If the article is really good or pertains well to me I will read everything, otherwise, I go back and read only the sections of interest.  If there are no discernable sections you lost me.\n\nFor this reason, you need to break up your post, into sections and treat the heading for each one like you would a title of a full post.\n\n### <abbr title=\"Table of Contents\">TOC</abbr>\n\n_Table of Contents_\n\nA lot of folks responded to Danny's post suggesting a table of contents.  For some reason I have never included a <abbr title=\"Table of Contents\">TOC</abbr> in my posts.  It's something I am now considering.  I am really good at changing layout right before, or after, shipping a brand new post.\n\n_semi-auto <abbr title=\"Table of Contents\">TOC</abbr>_\n\nAs I am highly allergic to unnecessary rework and potential mistakes I put together this snippet that generates the <abbr title=\"Table of Contents\">TOC</abbr>automatically, just paste this into your console, and paste the results in your article.\n\n``` javascript\n// pres F12\n// paste this in the console\n// get your auto generated DEV TOC\nconsole.log(\n  [...document.querySelectorAll('.anchor')]\n  .map(a =>\n    `1. [${a.parentElement.innerText}](#${a.href.split('#')[1]})`\n  )\n  .join('\\n')\n)\n```\n\n\n## Break it up\n\nUse headings, images, and blockquotes to break your article up and make it scannable.  I treat each heading as an article title.  It should be engaging and pull the reader in, but not be clickbaity and irritate them when they didn't get what they expected.\n\n> make it scannable! ... treat each heading as an article title\n\n### Markdown\n\nGet Familiar with Markdown. Check out this [cheatsheet](https://github.com/adam-p/markdown-here/wiki/Markdown-Here-Cheatsheet) or the reference right in the DEV editor.  This is not an article about markdown, but here are the most common tags you need to break up your article.\n\n``` markdown\n\n# H1\n## H2\n### H3\n... up to H6\n\n* unordered\n* list\n* of\n* things\n\n1. ordered\n1. list\n1. of\n1. things\n\n![Alt text of image](put-link-to-image-here)\n\n**bold**\n_italics_\n~~strikethrough~~\n\n\ud83d\udc47 Horizontal rules are great a making a hard break between sections\n\n---\n\n```\n\nDEV also supports these HTML elements for additional flair, use wisely. Some can make for some really jarring style that really pulls the readers eye to and is hard to focus on the rest.  I'm talking about you `<mark>`.\n\n``` HTML\n<small>small text</small>\n<sup>superscript text</sup>\n<sub>subscript text</sub>\n<mark>highlighted text</mark>\n<abbr title=\"Table of Contents\">TOC</abbr>\n```\n\n### Liquid Tags\n\nWhen Editing a post click the Liquid Tag reference to the right, for a list of everything.  The `post` tag is the retweet of DEV.\n\n``` markdown\n\n{% post helenanders26/sql-series-from-a-to-z-2pk9 %}\n\n{% user helenanders26 %}\n\n{% github forem/forem %}\n\n{% github forem/forem no-readme %}\n\n```\n\n## Article types\n\nAs I can see there are several **article types** on DEV\n\n\n1. [superpost](#superpost)\n1. [single post](#single-post)\n1. [series](#series)\n1. [discussion](#discussion)\n\n## superpost\n\nI think this is what @dsteenman is eluding to with the (+3000) word post.  This is the hardest to pull off in my opinion, but if done right it will land you at the top of the search for a long time, in the top 7, and potentially the top 1 for a given tag.\n\nI used to think that every post needed to be a super post that everyone would rave over.  I have found personally that attempting to do this makes it so I rarely post and way overthink them.  I need to at least make a cutoff time that the post is going to ship.\n\nThis can also be the most frustrating, you have put all of your eggs in one basket.  If you don't title it right, post at the right time, share it at the right time, it might not take off like you had hoped.\n\n{% post helenanders26/sql-series-from-a-to-z-2pk9 %}\n\n@helenanders26 takes the \ud83d\udc51 as the queen of the superpost.  She is the first person who comes to mind when I think of this post type\n\n## single post\n\nYour average post.  There are a lot of great techniques to making the average post great (some added above).  Sometimes they find traction, sometimes they don't.  I don't sweat if they don't.  I like posting shorter content as its achievable for me and my lifestyle.  I can always crosslink them and generate more views/discussion across them.\n\n{% post taillogs/how-to-write-a-good-blog-post-2eom %}\n\n@taillogs has a good article on his process to writing a good post.\n\nFor those struggling to find what to write about, this is a great article from @swyx [learn-in-public-hack](https://swyx.io/puwtpd)\n\n## series\n\nUsing the `series` tag you can break super posts into smaller ones.  This puts fewer of your eggs in the same basket.  I typically start a series when I know that I am going to post about a single topic often, but don't have it all laid out.  I've been told for these to be really successful it needs a bit more pre-thought.\n\nI do notice that I get a bit of engagement back to older posts every time a new one is posted.  so this does help drive engagement by continuously pulling readers in.  I am not sure if its quite as good as a link, or liquid embed.  Keep in mind when doing this the series component will show the first 2 and the last two without clicking.  Make sure that the first two really count, they will likely get the most traffic benefit from the series.\n\n\n{% post waylonwalker/what-are-github-actions-1lhh %}\n\nI personally put a lot of my content into a series.  I don't think through the full series ahead of time very much.  I do it because it helps me organize and retrieve my thoughts.  I find it easier to get back to the post I want to reference if I can find the series it was part of.  I think of it as a tag that no one else can post to.\n\n## discussion\n\nPosts just like this one, where the author leads the discussion with an intriguing question or comment but holds back on their opinion.  The key here is that the author should engage in the discussion, keep the discussion moving, and provide their thoughts here.\n\nSelfishly this is one of my favorite types of posts to make as I learn the most from them.\n\n{% post ben/how-do-you-identify-over-engineering-1oad %}\n\n@ben is the king of the [#discuss](https://dev.to/t/discuss) post.  He is able to get just the right titles that pull people in and generate quite large discussions.\n\n---\n\n## Post what you want to read\n\nAt the end of the day **YOU** are the most important component.  Post what you like to read, post what you are able to write.  If you struggle to wrap your head around concepts in small posts and have a talent at making rockstar super posts do that.  **Do YOU**\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/custom-ipython-prompt'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Custom Ipython Prompt</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/creating-the-kedro-preflight-hook'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>creating the kedro-preflight hook</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-07", "jinja": false, "edit_link": "https://github.com/edit/main/pages/blog/crush-dev-to-posts.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572939", "datetime": "2020-08-07 00:00:00+00:00", "slug": "crush-dev-to-posts", "output_html": "markout/crush-dev-to-posts/index.html", "long_description": "This post was inspired by a comment I left on @dsteenman {% post dsteenman/how-long-should-a-blogpost-be-2k6n %} Most of the time I prefer short as I am more likely to read the whole thing.  If its setup as a series I am more likely to work my way th", "super_description": "This post was inspired by a comment I left on @dsteenman {% post dsteenman/how-long-should-a-blogpost-be-2k6n %} Most of the time I prefer short as I am more likely to read the whole thing.  If its setup as a series I am more likely to work my way through the whole series in a matter of a few sessions.  Just my preference I will say though there are certain articles that fit well to the long format.  They are articles that folks tend to come back to often as a reference again and again. Either w", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691100>, next=<frontmatter.Post object at 0x7f3450640430>)"}, {"cover": "", "title": "\ud83d\udc0d Pluggable Architecture with Python", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/python-pluggable-architecture.md", "description": "pytest has open sourced their amazing plugin framework  My experience so far as a plugin user, and plugin author has been great. A hook is a single function tha", "content": "pytest has open sourced their amazing plugin framework `pluggy`, it allows\nlibrary authors to give their users a way to modify the libaries behavior\nwithout needing to submit a change that may not make sense to the entire\nlibrary.\n\n## Previous Experience\n\nMy experience so far as a plugin user, and plugin author has been great.\nBuilding and using plugins are incredibly intuitive.  I wanted to dive a bit\ndeeper and see how they are implemented inside of a library and its a bit of a\nmind bend the first time you try to do it.\n\n## Plugins vs. Hooks\n\nA hook is a single function that has a specific place that it is ran by the PluginManager.\n\nA Plugin is a collection of one or more hooks.\n\n## Layers\n\n* library author\n* plugin author\n* end user\n\n## Using a plugin\n\nFor a plugin to be registered is must be registered by the PluginManager which\nis implemented by the library author.  It is the job of the library author to\ndetermine what plugins are actively registered or disabled.  There are two\ncommon ways that I have seen that plugins are registered, through entrypoints\nor configuration.\n\n## Using a plugin - entrypoints\n\nPlugins that are implemented with entrypoints are the simplest for the user.\nThey are simply activated by `pip install plugin` or deactivated by `pip\nuninstall plugin`.  The library author will show an entrypoint in their docs\nwhich tells plugin authors how to setup entrypoints so that they will be loaded\nautommatically.\n\n## Using a plugin - config\n\nAnother way to configure plugins is through configuration.  This may come in\nthe form of a list in a python module or listed in a text file in the config.\nThis route requires the user to add the plugin to a list or import it into a\npython module.\n\n## Examples\n\nI really stuggled to find a good example of pluggy to get started.  I found the\nbest way for me to understand was to create one myself.  the pluggy repo has\none simple\n[example](https://github.com/pytest-dev/pluggy/blob/master/docs/examples/toy-example.py),\nbut it is unclear who owns each piece from the example.  The whole point of\npluggy is to pass ownership of  implementation from the library author to the\nplugin author.\n\n## Floris Bruynooghe\n\nhttps://www.youtube.com/watch?v=zZsNPDfOoHU\n\nFloris Bruynooghe has a great talk from [EuroPython\n2015](https://www.youtube.com/watch?v=zZsNPDfOoHU) where he shows how to build\na project thats plugins all the way down.  His [slides](http://devork.be/talks/pluggy) are also available.\n\n## Kedro\n\nKedro is a data pipelining framekwork that includes a hooks based architecture\nthat allows users to modify the behavior of the framework at different points\nthrough the lifecycle.  There is a\n[hooks](https://github.com/quantumblacklabs/kedro/tree/dc1ee8e06b255d4d5a4348ad8a2e78048c547279/kedro/framework/hooks)\nmodule that implements everything, and a\n[test_plugin](https://github.com/quantumblacklabs/kedro/blob/dc1ee8e06b255d4d5a4348ad8a2e78048c547279/features/steps/test_plugin/plugin.py)\nthat is used for testing, but also serves as a good example.\n\n## palantir/python-language-server\n\nAnother example is the palantir python language server.  Check out their\n[hookspec](https://github.com/palantir/python-language-server/blob/91a13687dbd5247374253b245124befb8d9c60c9/pyls/hookspecs.py)\nmodule.\n\n\n## Tutorial\n\n\n## Plugin Components\n\n* project_name\n    * implemented by the library author\n    * gives a namespace for pluggy to store hooks\n* hookspec\n    * created and used by libary author\n* hookimpl\n    * created by libary author\n    * used by plugin author\n* PluginManager\n    * implementation of plugins in the library\n\n## hookspec\n\n_empty hooks created by the library author \n\n\n``` python\n# hookspec.py\nimport pluggy\n\nhookspec = pluggy.HookspecMarker(\"printer\")\n\nclass PrinterHooks:\n    @hookspec\n    def pre_print(msg):\n        \"pre print hook\"\n        pass\n\n    @hookspec\n    def post_print(msg):\n        \"pre print hook\"\n        pass\n```\n\n\n## hookimpl\n_used by the plugin author_\n\nImplementations of plugins much match the name of the spec exactly.\nThey can include some or all of the arguments listed in the spec,\nbut no others.  They can be implemented as a module with functions\nthat match the name of the spec or as a class with methods that\nmatch the name of the spec.\n\n\n### Class Style Plugin\n\n``` python\n# plug.py\n# would be imported from the library authors hookspec\nfrom hookspec import hookimpl\n\n\nclass Pre:\n    @hookimpl\n    def pre_print(msg):\n        msg = msg.upper()\n        return \"BEFORE\"\n\n\nclass Post:\n    @hookimpl\n    def post_print(msg):\n        print(f\"\\033[A\\033[2Knot today\")\n```\n\n### Module Style Plugin\n\n``` python\n# plug/Pre.py\nfrom hookspec import hookimpl\n\n\n@hookimpl\ndef pre_print(msg):\n    msg = msg.upper()\n\n\n# plug/Post.py\nclass Post:\n    @hookimpl\n    def post_print(msg):\n        print(f\"\\033[A\\033[2Knot today\")\n```\n\n**note** These plugins only implement one hook.  Each plugin may\nimplement one or more hooks, a plugin is not required to only\nimplement one hook.\n\n## Plugin Manager\n_implementing the hooks into the library_\n\n### Simple Example\n\n``` python\nimport pluggy\nimport importlib\n\nfrom hookspec import PrinterHooks\nfrom plug import Pre\n\npm = pluggy.PluginManager(\"printer\")\npm.add_hookspecs(PrinterHooks)\npm.register(Pre)\n\ndef printer(msg):\n    pm.hook.pre_print(msg=msg)\n    print(msg)\n    pm.hook.post_print(msg=msg)\n```\n\n## Running the library\n\nNow if we run the printer function as a user we will see this\noutput.\n\n``` pycon\n>>> printer('hello world')\nHELLO WORLD\n```\n\n## Adding Post\n\nNow if we register the Post plugin we will see the following output.\n\n``` python\n\nfrom plug import Pre, Post\n\npm.register(Pre)\npm.register(Post)\n```\n\n``` pycon\n>>> printer('hello world')\nnot today\n```\n\nThe `Post` plugin wipes away the last line from the console and\nprints out `\"not today\"`\n\n## Plugin Manager - with dynamic imports\n\nIn a real library we might want to allow the user to configure their\nplugins through a config file.  If we do this we will need to reach\nfor `importlib` to handle the imports based on a string.\n\n``` python\n\nimport pluggy\nimport importlib\n\n# from hookspec import hookspec\nfrom hookspec import PrinterHooks\n\n# from hookspec import hookimpl\n\nplugins = [\"plug.Pre\", \"plug.Post\"]\npm = pluggy.PluginManager(\"printer\")\npm.add_hookspecs(PrinterHooks)\n\nfor plug in plugins:\n    if isinstance(plug, str):\n        # plug is a str representing a module to import\n        try:\n            # module style plugins\n            plugin = importlib.import_module(plug)\n        except ModuleNotFoundError as e:\n            # class style plugins\n            if \".\" in plug:\n                mod = importlib.import_module(\".\".join(plug.split(\".\")[:-1]))\n                plugin = getattr(mod, plug.split(\".\")[-1])\n            else:\n                raise e\n    else:\n        # plug is a module that is already imported\n        plugin = plug\n\n    pm.register(plugin)\n\n\ndef printer(msg):\n    pm.hook.pre_print(msg=msg)\n    print(msg)\n    pm.hook.post_print(msg=msg)\n```\n\n## EntryPoint plugins\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-push-without-setting-upstream'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>git push without setting upstream</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/crush-dev-to-posts'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to crush amazing posts on DEV</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-23", "edit_link": "https://github.com/edit/main/pages/blog/python-pluggable-architecture.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572944", "datetime": "2021-01-23 00:00:00+00:00", "slug": "python-pluggable-architecture", "jinja": false, "output_html": "markout/python-pluggable-architecture/index.html", "long_description": "pytest has open sourced their amazing plugin framework  My experience so far as a plugin user, and plugin author has been great. A hook is a single function that has a specific place that it is ran by the PluginManager. A Plugin is a collection of on", "super_description": "pytest has open sourced their amazing plugin framework  My experience so far as a plugin user, and plugin author has been great. A hook is a single function that has a specific place that it is ran by the PluginManager. A Plugin is a collection of one or more hooks. library author plugin author end user For a plugin to be registered is must be registered by the PluginManager which Plugins that are implemented with entrypoints are the simplest for the user. Another way to configure plugins is thr", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf460>, next=<frontmatter.Post object at 0x7f345067fe80>)"}, {"cover": "", "title": "git push without setting upstream", "tags": ["git", "cli"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-push-without-setting-upstream.md", "description": "Finally after years of hand typing out a full  This one setting will now ", "content": "Finally after years of hand typing out a full `git push --upstream\nmy_really_long_and_descriptive_branch_name` I found there is a setting to\nautomatcally push to the current branch. More realisitically I just did a `git\npush` let git yell at me, and copying the suggestion.\n\n## git config\n\n``` bash\ngit config --global push.default current\n```\n\nThis one setting will now `git push` to the current branch without yelling at\nyou that your upstream does not match your current branch.  This helps me ship\nchnages faster as I am constantly chnaging projects and branches.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-rewrite-history'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Rewrite History with Git</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-in-depth'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Git in Depth Notes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-04", "edit_link": "https://github.com/edit/main/pages/blog/git-push-without-setting-upstream.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572950", "datetime": "2020-02-04 00:00:00+00:00", "slug": "git-push-without-setting-upstream", "jinja": false, "output_html": "markout/git-push-without-setting-upstream/index.html", "long_description": "Finally after years of hand typing out a full  This one setting will now ", "super_description": "Finally after years of hand typing out a full  This one setting will now ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a90d0>, next=<frontmatter.Post object at 0x7f345068a430>)"}, {"cover": "", "title": "Links", "tags": ["meta"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/links.md", "description": "prev Create New Kedro Project next git push without setting upstream", "content": "* [twitter](https://twitter.com/_WaylonWalker)\n* [twitch](https://twitch.com/WaylonWalker)\n* [github](https://github.com/WaylonWalker)\n* [dev.to](https://dev.to/waylonwalker)\n* [LinkedIn](https://www.linkedin.com/in/waylonwalker/)\n* [YouTube](https://www.youtube.com/waylonwalker)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/create-new-kedro-project'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create New Kedro Project</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-push-without-setting-upstream'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>git push without setting upstream</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-07", "edit_link": "https://github.com/edit/main/pages/blog/links.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572956", "datetime": "2022-05-07 00:00:00+00:00", "slug": "links", "jinja": false, "output_html": "markout/links/index.html", "long_description": "", "super_description": "", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685af0>, next=<frontmatter.Post object at 0x7f34506cf460>)"}, {"cover": "", "title": "Create New Kedro Project", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/create-new-kedro-project.md", "description": "This is a quickstart to getting a new  \ud83e\uddf9 Install  \ud83d\udee2 Create the Example Pipeline \ud83d\udca8 Run the example \ud83d\udcc9 Show the pipeline visualization I use conda to control my vi", "content": "This is a quickstart to getting a new [kedro](https://kedro.readthedocs.io)\npipeline up and running.  After this article you should be able to understand\nhow to get started with [kedro](https://kedro.readthedocs.io).  You can learn\nmore about this [Hello World\nExample](https://kedro.readthedocs.io/en/stable/02_get_started/03_hello_kedro.html)\nin the\n[docs](https://kedro.readthedocs.io/en/stable/02_get_started/03_hello_kedro.html)\n\n\ud83e\uddf9 Install [Kedro](https://kedro.readthedocs.io)\n\n\ud83d\udee2 Create the Example Pipeline\n\n\ud83d\udca8 Run the example\n\n\ud83d\udcc9 Show the pipeline visualization\n\n## Create a Virtual Environment\n\nI use conda to control my virtual environments and will create a new environment called `kedro_iris` with the following command.  **note** the latest compatible version of python is 3.7.\n\n**EDIT**: as of kedro 0.16.0 kedro supports up to 3.8\n\n``` bash\nconda create -n kedro_iris python=3.8 -y\n```\n\n![](https://images.waylonwalker.com/conda-create-kedro-iris.gif)\n\nOptions\n\n## Activate your conda environment\n\nI try to keep my base environment as clean as possible.  I have ran into too many issues installing things in the base environment.  Almost always its some dependency that starts causing issues making it even harder to realize where its coming from as I never even installed it in base.\n\n``` bash\nsource activate kedro_iris\n```\n\n## Install [Kedro](https://kedro.readthedocs.io)\n\nCurrently `kedro==0.15.5` is available on pypi and can be pip installed.\n\n**EDIT** kedro is up to [![PyPI version](https://badge.fury.io/py/kedro.svg)](https://pypi.org/project/kedro/)\n\n``` bash\npip install kedro\n```\n\n## Make sure you are in the directory that you want your project in\n\n``` bash\ncd /mnt/c/temp\n```\n\n## Create a new [Kedro](https://kedro.readthedocs.io) project\n\n``` bash\nkedro new\ncd kedro-iris\ngit init\nkedro install\n```\n\n![](https://images.waylonwalker.com/kedro-new-iris.gif)\n\n## Run the pipeline\n\nThis will tell kedro to run your pipeline.  It will look at all of your nodes and determine the correct execution order for you, then run each one of them.  You can do this from a python script, python terminal session, or from the [kedro](https://kedro.readthedocs.io) cli.\n\n> \u2728 It will look at all of your nodes and determine the correct execution order for you\n\nLets run from the cli while in the same directory as kedro-iris\n\n``` bash\nkedro run\n```\n\n![](https://images.waylonwalker.com/kedro-new-iris.gif)\n\n## Viz\n\n[kedro-viz](https://github.com/quantumblacklabs/kedro-viz) is a priceless feature of [kedro](https://kedro.readthedocs.io).  It's like x-ray vision into your pipeline.  I can't imagine working without it after having it over the past year.  Unlike traditional documentation [kedro-viz](https://github.com/quantumblacklabs/kedro-viz) cannot lie to you.  It will help guarantee your changes line up properly, plan out adding nodes, and identify dependencies of deprecating nodes.\n\n> Unlike traditional documentation [kedro-viz](https://github.com/quantumblacklabs/kedro-viz) cannot lie to you.\n\n## Install [kedro-viz](https://github.com/quantumblacklabs/kedro-viz)\n\n[kedro-viz](https://github.com/quantumblacklabs/kedro-viz) is also on pypi and can be installed just like any other python package with `pip`.\n\n```bash\npip install kedro-viz\n```\n\n## Visualize the pipeline\n\n[kedro-viz](https://github.com/quantumblacklabs/kedro-viz) is ran from the command line in the same directory as your kedro project.  There are ways to store your pipeline data as json, then load them from outside your project, but we will follow the standard practice for now.\n\n``` bash\nkedro viz\n```\n\n![](https://images.waylonwalker.com/kedro-viz-iris.gif)\n\n## \ud83c\udfd7 Docker\n\nThere is another package that makes creating docker images from kedro projects super simple [kedro-docker](https://github.com/quantumblacklabs/kedro-docker).\n\nIf you dont already have docker installed on your machine, feel free to skip this section.\n\n### install [kedro-docker](https://github.com/quantumblacklabs/kedro-docker)\n\n``` bash\npip install kedro-docker\n```\n\n### build the image\n\n``` bash\nkedro docker build\n```\n\n### run the image\n\n``` bash\nkedro docker run\n```\n\n## Simple Huh\n\nGetting up and going with a brand new [kedro](https://kedro.readthedocs.io) project is super simple, thanks to the help of the `kedro new` command.  The ability to add an example pipeline from the start makes it that much easier to get going and have a template to follow for your own projects.\n\n## Recap\n\n``` bash\nconda create -n kedro_iris python=3.7 -y\nsource activate kedro_iris\npip install kedro\ncd /mnt/c/temp\nkedro new\n# give it a project name Kedro Iris\n# accept default package name kedro_iris\n# addept default directory name kedro-iris\n# yes for an example pipeline\ncd kedro-iris\ngit init\ngit add .\ngit commit -m \"initialized new kedro project\"\nkedro install\nkedro run\npip install kedro-viz\nkedro viz\npip install kedro-docker\nkedro docker build\nkedro docker run\n```\n\n## Other resources\n\nThe [kedro docs](https://kedro.readthedocs.io/) have a ton of great resources.  They are searchable, but can be a bit of an overwhelming amount of data.\n\nI keep adding to my [kedro notes](https://waylonwalker.com/notes/kedro/) as I find new and interesting things.\n\nI tweet out most of those snippets as I add them, you can find them all here [#kedrotips](https://twitter.com/search?q=%23kedrotips).\n\n## More to come\n\nI am planning to do more articles like this, you can stay up to date with them by following me on [dev.to](https://dev.to/waylonwalker), subscribing to my [rss feed](https://waylonwalker.com/rss.xml), or subscribe to my [newsletter](https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/creating-the-kedro-preflight-hook'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>creating the kedro-preflight hook</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/create-custom-kedro-dataset'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create Custom Kedro Dataset</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-03-02", "edit_link": "https://github.com/edit/main/pages/blog/create-new-kedro-project.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572961", "datetime": "2020-03-02 00:00:00+00:00", "slug": "create-new-kedro-project", "jinja": false, "output_html": "markout/create-new-kedro-project/index.html", "long_description": "This is a quickstart to getting a new  \ud83e\uddf9 Install  \ud83d\udee2 Create the Example Pipeline \ud83d\udca8 Run the example \ud83d\udcc9 Show the pipeline visualization I use conda to control my virtual environments and will create a new environment called  Options I try to keep my base", "super_description": "This is a quickstart to getting a new  \ud83e\uddf9 Install  \ud83d\udee2 Create the Example Pipeline \ud83d\udca8 Run the example \ud83d\udcc9 Show the pipeline visualization I use conda to control my virtual environments and will create a new environment called  Options I try to keep my base environment as clean as possible.  I have ran into too many issues installing things in the base environment.  Almost always its some dependency that starts causing issues making it even harder to realize where its coming from as I never even instal", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640430>, next=<frontmatter.Post object at 0x7f34506917c0>)"}, {"cover": "", "title": "Notes for second vim-fundamentals course meetup", "tags": ["vim"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/vim-fundamentals-2.md", "description": "newline Mahesh Subrajmanium Venkatachalam - Plugins | Installing a Theme Matthew Fletcher - Registers | Advanced Motions Jump, Delete,  get a plugin manager unl", "content": "newline\nanother\n\n\nMahesh Subrajmanium Venkatachalam - Plugins | Installing a Theme\nHunter Phillips - Quickfix | Offline Ordering with getqflist\nAndrea Wackerle - Search & Replace | Macros\n\nMatthew Fletcher - Registers | Advanced Motions Jump, Delete, & Select | Advanced Motions: Paste & Move\nNicholas Payne - My First Vim Plugin | What Makes a Good Plugin\nZev Averbach - Harpoon | Wrap up\n\n## Plugin-manager\n\n* get a plugin manager\n* unless you are going full lua, most people use vim-plug by the great junegunn\n\nhttps://github.com/junegunn/vim-plug\n\n## Install pluggged\n\n``` bash\ncurl -fLo ~/.vim/autoload/plug.vim --create-dirs \\\n    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim     \n```\n\n``` vim\ncall plug#begin('~/.vim/plugged')\n\nPlug 'junegunn/fzf', { 'do': { -> fzf#install() } }\nPlug 'junegunn/fzf.vim'\n\ncall plug#end()\n```\n\n## Install Plugins\n\n``` vim\n:PlugInstall\n:PlugClean\n:PlugUpdate\n```\n\n## Installing a Theme\n\ninstall using plug\n\n``` vim\nPlug 'ayu-theme/ayu-vim'\n```\n\nset the theme\n\n``` vim\nset termguicolors\nlet ayucolor=\"dark\"\ncolorscheme ayu\n```\n\n## Quickfix\n\nsending things to the quickfix list\n\n``` vim\n:grep SOCKET_OPEN **/*.(c\\|h)\n```\n\nquickfix commands\n\n``` vim\n:copen\n:cnext\n:cdo s/vim/nvim/g\n```\n\n\n## Some remaps to consider\n\n``` vim\nnnoremap <C-k> :cnext<CR>\nnnoremap <C-j> :cprev<CR>\nnnoremap <C-E> :copen<CR>\n```\n\n## Offline Ordering with getqflist\n\n## Search & Replace\n\nWalk through example.\n\n```  bash\ncurl https://raw.githubusercontent.com/ThePrimeagen/vim-fundamentals/master/course-website/lessons/exercise-3-search-and-replace.md > exercise.md && vim exercise.md\n```\n\n## Macros\n\n* Macro Pressure\n\n``` bash\ncurl https://raw.githubusercontent.com/ThePrimeagen/vim-fundamentals/master/course-website/lessons/exercise-4-macros.md > exercise.md && vim exercise.md\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/quickly-edit-posts'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Quickly Edit Posts</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/create-new-kedro-project'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create New Kedro Project</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-27", "edit_link": "https://github.com/edit/main/pages/blog/vim-fundamentals-2.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572969", "datetime": "2021-08-27 00:00:00+00:00", "slug": "vim-fundamentals-2", "jinja": false, "output_html": "markout/vim-fundamentals-2/index.html", "long_description": "newline Mahesh Subrajmanium Venkatachalam - Plugins | Installing a Theme Matthew Fletcher - Registers | Advanced Motions Jump, Delete,  get a plugin manager unless you are going full lua, most people use vim-plug by the great junegunn https://github.", "super_description": "newline Mahesh Subrajmanium Venkatachalam - Plugins | Installing a Theme Matthew Fletcher - Registers | Advanced Motions Jump, Delete,  get a plugin manager unless you are going full lua, most people use vim-plug by the great junegunn https://github.com/junegunn/vim-plug install using plug set the theme sending things to the quickfix list quickfix commands Walk through example. Macro Pressure", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506858b0>, next=<frontmatter.Post object at 0x7f3450685af0>)"}, {"cover": "", "title": "Quickly Edit Posts", "tags": ["bash"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/quickly-edit-posts.md", "description": "Recently I automated starting new posts with a python script.  Today I want to https://waylonwalker.com/automating-my-post-starter Check out this post about set", "content": "Recently I automated starting new posts with a python script.  Today I want to\nwork on the next part that is editing those posts quickly.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/automating-my-post-starter/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/automating-my-post-starter-og_250x140.png\" alt=\"article cover for \n Automating my Post Starter\n\"/>\n          <p><strong>\n Automating my Post Starter\n</strong></p>\n      </a>\n  </div>\n\n\n> Check out this post about setting up my posts with python \ud83d\udc0d\n\n## Enter Bash\n\nFor the process of editing a post I just need to open the file in vim quickly.\nI dont need much in the way of parsing and setting up the frontmatter.  I think\nthis is a simple job for a **bash** script and fzf.\n\n1. change to the root of my blog\n1. fuzzy find the post\n1. open it with vim\n1. change back to the directory I was in\n\n## bash function\n\nFor this I am going to go with a bash function.  This is partly due to being\nable to track where I was and get back.  Also the line with nvim will run fzf\neverytime you source your `~/.alias` file which is not what we want.\n\nLets setup the **boilerplate**.  Its going to create a function called ep\n`\"edit post\"`, track our current directory, create a sub function `_ep`.  Then\ncall that function and cd back to where we were no matter if `_ep` fails or\nsucceeds.\n\n_<small><mark>boilerplate</mark></small>_\n``` bash\nep () {\n    _dir=$(pwd)\n    _ep () {\n        # open file here\n    }\n    _ep && cd $_dir || cd $_dir\n}\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/reusable-bash/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/reusable-bash-og_250x140.png\" alt=\"article cover for \n Creating Reusable Bash Scripts\n\"/>\n          <p><strong>\n Creating Reusable Bash Scripts\n</strong></p>\n      </a>\n  </div>\n\n\n> check out this post for more information about writing reusable bash scripts.\n\n## FZF\n\nLet's focus in on that `_ep` function here that is going to do the bulk of the\nwork to edit the post.\n\n_<small><mark>cd to where I want to edit from</mark></small>_\n``` bash\ncd ~/git/waylonwalkerv2/\n```\n\nNext I need to find all markdown pages within my posts directory.  There is\nprobably a better way to filter with the `find` command directly, but I am not\nworried about perf here and I knew how to do it without google.\n\n_<small><mark>find all markdown</mark></small>_\n``` bash\nfind ~/git/waylonwalkerv2/src/pages/ | grep .md$\n```\n\nNow that we can list all potential posts, sending the selected post back to\nneovim is as easy as piping those files into fzf inside of a command\nsubstitution that is called with neovim.\n\n\n_<small><mark>putting together the edit command</mark></small>_\n``` bash\n$EDITOR $(find ~/git/waylonwalkerv2/src/pages/ | grep .md$ | fzf)\n```\n\n## Final Script\n\n_<small><mark>final ep function</mark></small>_\n``` bash\nep () {\n    _dir=$(pwd)\n    _ep () {\n        cd ~/git/waylonwalkerv2/\n        $EDITOR $(find ~/git/waylonwalkerv2/src/pages/ | grep .md$ | fzf)\n    }\n    _ep && cd $_dir || cd $_dir\n}\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/react-headroom'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>I just added react-headroom to my site</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/quickly-change-conda-env-with-fzf'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Quickly Change Conda Env With Fzf</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-18", "edit_link": "https://github.com/edit/main/pages/blog/quickly-edit-posts.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572975", "datetime": "2021-01-18 00:00:00+00:00", "slug": "quickly-edit-posts", "jinja": false, "output_html": "markout/quickly-edit-posts/index.html", "long_description": "Recently I automated starting new posts with a python script.  Today I want to https://waylonwalker.com/automating-my-post-starter Check out this post about setting up my posts with python \ud83d\udc0d For the process of editing a post I just need to open the f", "super_description": "Recently I automated starting new posts with a python script.  Today I want to https://waylonwalker.com/automating-my-post-starter Check out this post about setting up my posts with python \ud83d\udc0d For the process of editing a post I just need to open the file in vim quickly. change to the root of my blog fuzzy find the post open it with vim change back to the directory I was in For this I am going to go with a bash function.  This is partly due to being Lets setup the  https://waylonwalker.com/reusabl", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658040>, next=<frontmatter.Post object at 0x7f3450696d30>)"}, {"cover": "", "title": "Newsboat", "tags": ["bash", "cli", "linux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/newsboat.md", "description": "Web browsers are a black hole of productivity.  I try to use them as little as I am going to give a terminal rss reader a try for a bit and see how that goes I ", "content": "Web browsers are a black hole of productivity.  I try to use them as little as\npossible when it is time to focus.  I try to use `help`, `?`, or `??` with\nipython, or --help at the command line as much as possible.  What about that\ntime I am trying to see what my online friends are posting on their sites?  I\nused to used google reader quite heavily before that was taken down.\n\n## Newsboat\n\nI am going to give a terminal rss reader a try for a bit and see how that goes\nfor me.  I have really struggled to get into an rss reader since google reader\ndied.\n\n## installation\n\nI installed with the reccomended snap for Ubuntu.\n\n``` bash\nsudo snap install newsboat\n```\n\n## Adding feeds\n_super simple_\n\nRunning help for newsboat directed me towards their config files at the bottom.\n\n``` bash\n\u276f newsboat --help\nnewsboat r2.22\nusage: /snap/newsboat/3849/usr/local/bin/newsboat [-i <file>|-e] [-u <urlfile>] [-c <cachefile>] [-x <command> ...] [-h]\n    -e, --export-to-opml        export OPML feed to stdout\n    -r, --refresh-on-start      refresh feeds on start\n    -i, --import-from-opml=<file>   import OPML file\n    -u, --url-file=<urlfile>    read RSS feed URLs from <urlfile>\n    -c, --cache-file=<cachefile>    use <cachefile> as cache file\n    -C, --config-file=<configfile>  read configuration from <configfile>\n    -X, --vacuum            compact the cache\n    -x, --execute=<command>...  execute list of commands\n    -q, --quiet         quiet startup\n    -v, --version           get version information\n    -l, --log-level=<loglevel>  write a log with a certain loglevel (valid values: 1 to 6)\n    -d, --log-file=<logfile>    use <logfile> as output log file\n    -E, --export-to-file=<file> export list of read articles to <file>\n    -I, --import-from-file=<file>   import list of read articles from <file>\n    -h, --help          this help\n        --cleanup           remove unreferenced items from cache\n\nFiles:\n    - configuration:  /home/nic/snap/newsboat/3849/.newsboat/config\n    - feed URLs:      /home/nic/snap/newsboat/3849/.newsboat/urls\n    - cache:          /home/nic/snap/newsboat/3849/.newsboat/cache.db\n\nSupport at #newsboat at https://freenode.net or on our mailing list https://groups.google.com/g/newsboat\nFor more information, check out https://newsboat.org/\n```\n\nI just need to edit its urls file.\n\n``` bash\nnvim ~/snap/newsboat/3849/.newsboat/urls\n```\n\nThe Urls file is just a list of urls to rss feeds.  Adding mine in allowed me to see all of my posts.\n\n``` bash\nhttps://waylonwalker.com/rss.xml\n```\n\n\n## Config\n\nI took most of my config from a [blog\npost](http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/)\nthat I found by Evan Travers.  It set some sane defaults to the reading width\nand vim keys.\n\n\n``` bash\n# http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/\n# Hide feeds where all the items are read.\nshow-read-feeds no\n\n# Make the text width readable\ntext-width 50\n\n# Use multiple threads to download all the news faster.\nreload-threads 11\n\n# browser ~/bin/newsboat-browser.sh\n# browser \"/usr/bin/brave-browser %u\"\n\n# unbind keys\nunbind-key ENTER\nunbind-key j\nunbind-key k\nunbind-key J\nunbind-key K\nunbind-key ^D\nunbind-key ^U\nunbind-key o\nunbind-key g\nunbind-key G\n\n# bind keys - vim style\nbind-key j down\nbind-key k up\nbind-key l open\nbind-key h quit\nbind-key ^D pagedown\nbind-key ^U pageup\nbind-key b toggle-source-view\nbind-key U toggle-show-read-feeds\nbind-key u show-urls\nbind-key g home\nbind-key G end\nbind-key b open-in-browser-and-mark-read\nbind-key B open-in-browser\nbind-key i sort\nbind-key I rev-sort\n```\n\n## GUI Browser\n\nNo matter how many different guides I tried I keedp getting `error code 127`\nwhen trying to `open-in-browser`.  Please let me know if you know how to fix\nthis. For now I am just going to roll with it.\n\n\n## Here's how it looks\n\n![newsboat feed](https://images.waylonwalker.com/newsboat-feed-waylonwalker-com.png)\n\n> browsing a feed in newsboat\n\n![newsboat article](https://images.waylonwalker.com/newsboat-article.png)\n\n> reading an article in newsboat\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/nvim-ides-are-slow'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>nvim conf 2021 | IDE's are slow | Waylon Walker</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/new-machine-tpio'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>New Machine for developing Tests with TestProject.io</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-02", "edit_link": "https://github.com/edit/main/pages/blog/newsboat.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572980", "datetime": "2021-01-02 00:00:00+00:00", "slug": "newsboat", "jinja": false, "output_html": "markout/newsboat/index.html", "long_description": "Web browsers are a black hole of productivity.  I try to use them as little as I am going to give a terminal rss reader a try for a bit and see how that goes I installed with the reccomended snap for Ubuntu. Running help for newsboat directed me towa", "super_description": "Web browsers are a black hole of productivity.  I try to use them as little as I am going to give a terminal rss reader a try for a bit and see how that goes I installed with the reccomended snap for Ubuntu. Running help for newsboat directed me towards their config files at the bottom. I just need to edit its urls file. The Urls file is just a list of urls to rss feeds.  Adding mine in allowed me to see all of my posts. I took most of my config from a  No matter how many different guides I trie", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506edaf0>, next=<frontmatter.Post object at 0x7f345066c3a0>)"}, {"cover": "", "title": "Trim unused git branches", "tags": ["git", "bash", "linux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/trim-branches.md", "description": "prev Twitter deepdives next tmux zoom", "content": "## Trim branches no longer on origin\n\n```bash\ngit remote prune origin --dry-run\ngit remote prune origin\n```\n\n## Find branches already merged\n\n``` bash\ngit checkout main\n# list remote branches that have already been merged into main\ngit branch -r --merged\n# list local branches that have already been merged into main\ngit branch --merged\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/twitter-deepdives'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Twitter deepdives</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-zoom'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux zoom</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-07", "edit_link": "https://github.com/edit/main/pages/blog/trim-branches.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572986", "datetime": "2021-05-07 00:00:00+00:00", "slug": "trim-branches", "jinja": false, "output_html": "markout/trim-branches/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663e50>, next=<frontmatter.Post object at 0x7f3450679160>)"}, {"cover": "", "title": "What is if __name__ == \"__main___\", and how do I use it.", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/if_name_main.md", "description": "When a python module is called it is assigned the  Let I have set this module up to execute one of two if statements based on whether Note it is not common to h", "content": "<script>\nchange_speed = (speed) => [...document.querySelectorAll('video')].map(v => v.playbackRate=v.playbackRate+speed)\n</script>\n\nWhen a python module is called it is assigned the `__name__` of `__main__`\notherwise if it's imported it will be assigned the `__name__` of the module.\n\n## Concrete example\n\nLet's create a module to play with `__name__` a bit.  We will call this module\n`nodes.py`.  It is a module that we may want to run by it'self or import and use\nin other modules.\n\n```python\n#!python\n# nodes.py\n\nif __name__ == \"nodes\":\n    import sys\n    import __main__\n\n    print(f\"you have imported me {__name__} from {sys.modules['__main__'].__file__}\")\n\nif __name__ == \"__main__\":\n    print(\"you are running me as main\")\n```\n\nI have set this module up to execute one of two if statements based on whether\nthe module it'self is being ran or if the module is being imported.  \n\n> Note it is not common to have a `if __name__ == \"nodes\":` block, this is just\n> for demnonstration purposes.\n\n## running python nodes.py\n\nRunning a python script with the command `python <filename.py>` will execute\nyour script top to bottom.\n\n```bash\npython nodes.py\n```\n\n> This will print out `you are running me as main`\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_python_nodes.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_python_nodes.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/install-miniconda/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/install-miniconda-og_250x140.png\" alt=\"article cover for \n How to Install miniconda on linux (from the command line only)\n\"/>\n          <p><strong>\n How to Install miniconda on linux (from the command line only)\n</strong></p>\n      </a>\n  </div>\n\n\n> If you don't already have python installed try using miniconda or replit.com\n\n## running ./nodes.py\n\nYou can also simply execute the script from bash if you first set the module to\nbe executable.\n\n```\nchmod +x nodes.py\n./nodes.py\n```\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_nodes.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_nodes.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n> Note once you have set the file to be executable, it will remain executable\n> `chmod +x nodes.py` is only needed one time, even if you edit the file.\n\n## pipeline.py\n\nLet's create a second module `pipeline.py` and import the first module `nodes` and see what happens.\n\n``` python\n#!python\n# pipeline.py\nimport nodes\n```\n\nJust like nodes we can run pipeline either way if it's executable\n\n```bash\npython pipeline.py\n# must run chmod +x pipeline.py first.\n./pipeline.py\n```\n\n> Either way it will print out `you have imported me nodes from ./pipeline.py`\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_pipeline.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_pipeline.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## REPL\n\nIf we were to `import nodes` from the repl we would see an error in this case,\ndue to the fact that there is no `__main__` file since it's a repl session.\n\n## Use Cases\n\nThe main use case for `if __name__ == \"__main__\":` is flexibility.  Simply\nimporting a module should not execute any code, print anything to the screen,\nchange your filesystem, or generally have any side effects in most cases. It is\nsomething that most python users would not expect.  We can use this block to\nmake it such that the module can be both imported and executed.\n\n### rich\n\nThe [rich](https://github.com/willmcgugan/rich) library uses it to make\nexamples of each module print to the screen if it's executed.  I personally\nthink this is a fantastic idea.\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_rich.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/if_name_main_rich.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n### etl\n\nIn my world of data analysis we often setup a script of functions that will\nbehave as an etl pipeline of sorts.  Since we may want to reuse some of these\nfunctions in other scripts it's common to hide the actual execution of these\nfunctions in a `if __name__ == \"__main__\":` block so that we don't start making\nchanges to the data simply by importing the module.\n\n### cli\n\nMost cli applications will leverage `if __name__ == \"__main__\":` to run\nsomething when called as a script instead of being imported. This allows us dt\ndo things such as testing much easier.\n\n> Check out the example on the first page of the\n> [click](https://click.palletsprojects.com/en/7.x/) framework's docs\n\n## Recap\n\n`if __name__ == \"__main__\":` is not so cryptic or scary, it's just looking to\nsee if this module was called as a script or imported from somewhere else, and\nexecuting some different behavior based on how it was called.\n\n```python\nif __name__ == \"__main__\":\n    print(\"you are running me as main\")\n```\n\n## Related Links\n\n* example from [rich.live](https://github.com/willmcgugan/rich/blob/master/rich/live.py#L271)\n* [click](https://click.palletsprojects.com/en/7.x/) framework's docs\n* try it yourself in your browser with [replit.com](https://replit.com)\n* StackOverflow: [What does if **name** == \u201c**main**\u201d: do?](https://stackoverflow.com/questions/419163/what-does-if-name-main-do)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/install-micromamba'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to Install micromamba on linux (from the comamnd line only)</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/if-tmux'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>If Tmux</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-07", "edit_link": "https://github.com/edit/main/pages/blog/if_name_main.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572992", "datetime": "2021-05-07 00:00:00+00:00", "slug": "if_name_main", "jinja": false, "output_html": "markout/if_name_main/index.html", "long_description": "When a python module is called it is assigned the  Let I have set this module up to execute one of two if statements based on whether Note it is not common to have a  Running a python script with the command  This will print out  https://waylonwalker", "super_description": "When a python module is called it is assigned the  Let I have set this module up to execute one of two if statements based on whether Note it is not common to have a  Running a python script with the command  This will print out  https://waylonwalker.com/install-miniconda/ If you don You can also simply execute the script from bash if you first set the module to Note once you have set the file to be executable, it will remain executable Let Just like nodes we can run pipeline either way if it Ei", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691670>, next=<frontmatter.Post object at 0x7f34506a1a00>)"}, {"cover": "", "title": "vows", "tags": ["personal"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/vow.md", "description": "I can still rememember the day that we we realized our new baby girl had gone Little did we know what that strong little girl had in store for us.  She was I st", "content": "# Story\n\nI can still rememember the day that we we realized our new baby girl had gone\ndays without a bowel movement.  Holding her while she looked as if she was\nabout to pop at any moment, completely nervous for what was to come.  \n\nLittle did we know what that strong little girl had in store for us.  She was\nperparing us for something much bigger.  Little did we know how much scary\nmedical journeys would soon become a \"normal\" part of our life.  We spent two\nsolid years fighting for this girl every day.\n\nI still remember that Fall day.  That day you drove my car home alone while I\nsat with our kids, patiently awaiting your arrival.  When you arrived, no words\nneeded to be spoken, the minute you opened the car door I knew our lives had\nchanged forever.\n\nScared out of our minds we held it together the best we could for those two\nkids we were holding.  Fast forward 6 weeks, you are recovering from the\nbiggest surgery of your life, and we notice that little girl is now feeding\nenough for herself. No longer in need of the feeding pump the g-tube.  No\nlonger in need to wear a backpack with constant feed.  \n\nAll along she was preparing us for something much bigger, soemthing we could\nnot have imagined, something we could not have taken without the training\nshe had given us.\n\nTogether we are stronger after the battles we have faced.  The long battles we\nhave won.  Stronger than ever we are ready for anything.\n\n\n# Promise\n\nI promise to stay strong and grow with you.\n\nI promise to hold your hand through the scary moments and tell you everything\nwill be ok.  We will find a solution, we always do.\n\nI will check the house in the middle of the night when there are noises no\nmatter how tired I am.  I know that it causes you really strong feelings that\nyou cannot shake until its been checked.\n\nI promise to sit by your side when you are down, no matter how many times we\nre-watch Big Bang Theory it will never be too much.\n\n# support\n\nI will accept support on my bad days.  I know that I try to be the rock of the\nfamily and push until I cannot push anymore, no matter how much you tell me to\nrest.  I really do appreciate when you take notice that things are going harder\nthan normal.\n\nI will accept your coaching in handling social emotional issues that are hard\nfor me to understand on my own.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-pickle'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro - My Data Is Not A Table</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/if_name_main'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What is if __name__ == \"__main___\", and how do I use it.</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-20", "edit_link": "https://github.com/edit/main/pages/blog/vow.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.572998", "datetime": "2021-05-20 00:00:00+00:00", "slug": "vow", "jinja": false, "output_html": "markout/vow/index.html", "long_description": "I can still rememember the day that we we realized our new baby girl had gone Little did we know what that strong little girl had in store for us.  She was I still remember that Fall day.  That day you drove my car home alone while I Scared out of ou", "super_description": "I can still rememember the day that we we realized our new baby girl had gone Little did we know what that strong little girl had in store for us.  She was I still remember that Fall day.  That day you drove my car home alone while I Scared out of our minds we held it together the best we could for those two All along she was preparing us for something much bigger, soemthing we could Together we are stronger after the battles we have faced.  The long battles we I promise to stay strong and grow ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685d30>, next=<frontmatter.Post object at 0x7f3450685a00>)"}, {"cover": "", "title": "Kedro - My Data Is Not A Table", "tags": ["kedro", "python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-pickle.md", "description": "In python data science/engineering most of our data is in the form of some sort These containers for data contain many convenient methods to manipulate table ht", "content": "In python data science/engineering most of our data is in the form of some sort\nof table, typically a DataFrame from a library like pandas, spark, or dask.\n\n## DataFrames are the heart of most pipelines\n\nThese containers for data contain many convenient methods to manipulate table\nlike data structures.  Sometimes we leverage other data types, namely vanilla\ntypes like lists and dicts, or even numpy data types.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> unfamiliar with kedro, check out this post\n\n## Sometimes datasets are not tables\n\nThere are times when our data doesn't fit nicely into a DataFrame. Lucky for us\nKedro has pickle support out of the box.  Pickle is a way to store any python\nobject to disk.  Beware that pickle files coming from an unknown source can run\nmalicous code and are considered unsafe.  For the most part though when you\nread and write your own pickle files they are a good tool to consider.\n\n> See more about [pickle](https://docs.python.org/3/library/pickle.html) from python.org.\n\n## Cataloging Pickle\n\nI may have a dictionary that describes some cars.\n\n``` python\n{\n  'truck-012-abc': {\n    'type': 'truck'\n    'sales': [12, 2, 3, 4, 8]\n    'weight': 9024,\n    'accesories': ['leather', 'audio-1']\n}\n```\n\nIn the catalog we will simply set the type as `pickle.PickleDataSet` and give\nit a filepath.\n\n``` yaml\ncars:\n  filepath: data/cars.pkl\n  type: pickle.PickleDataSet\n```\n\n> This filepath does not have to be on the local filesystem it can be on the\n> cloud thanks to how kedro utilizes fsspec for each of its datasets.\n\n## Loading the dataset\n\nThe benefit of cataloging this dataset compared to leaving it as a\n`MemoryDataSet` is that you can easily load this data back into memory for\nfurther development or debugging without running any of the pipeline.\n\n``` python\ncatalog.load('cars')\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-pipeline-registry'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro pipeline_registry.py</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-parameters'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Setting Parameters in kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-14", "edit_link": "https://github.com/edit/main/pages/blog/kedro-pickle.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573003", "datetime": "2021-01-14 00:00:00+00:00", "slug": "kedro-pickle", "jinja": false, "output_html": "markout/kedro-pickle/index.html", "long_description": "In python data science/engineering most of our data is in the form of some sort These containers for data contain many convenient methods to manipulate table https://waylonwalker.com/what-is-kedro/ unfamiliar with kedro, check out this post There are", "super_description": "In python data science/engineering most of our data is in the form of some sort These containers for data contain many convenient methods to manipulate table https://waylonwalker.com/what-is-kedro/ unfamiliar with kedro, check out this post There are times when our data doesn See more about  I may have a dictionary that describes some cars. In the catalog we will simply set the type as  This filepath does not have to be on the local filesystem it can be on the The benefit of cataloging this data", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640a00>, next=<frontmatter.Post object at 0x7f34506b3af0>)"}, {"cover": "", "title": "\ud83d\ude4b\u200d\u2642\ufe0f Can Anyone Explain Twitter Cards to me?", "tags": ["blog", "twitter"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/explain-twitter-cards.md", "description": "Can someone explain how or why twitter cards render differently from device to device?  I do understand that twitter cards a built from meta tags, the full list", "content": "Can someone explain how or why twitter cards render differently from device to device?  I do understand that twitter cards a built from meta tags, the full list can be found in their [docs](https://developer.twitter.com/en/docs/tweets/optimize-with-cards/overview/markup)\n\n## Rendered on Mobile\n\nMobile Looks fine.\n\n![rendered card](https://images.waylonwalker.com/twitter-card-rendered.png)\n\n## Not Rendered on Desktop\n\nOn Desktop it is not picking up the image.\n\n![not rendered card](https://images.waylonwalker.com/twitter-card-rendered.png)\n\n\n## Twitter Card Validator\n\nThe Validator renders the card correctly.  I tried the official [twitter card validator](https://cards-dev.twitter.com/validator), as well as [heymeta.com](https://www.heymeta.com/url/waylonwalker.com/latest), and [metatags.io](https://metatags.io/).  All look good.\n\n![rendered card with validator](https://images.waylonwalker.com/twitter-card-rendered.png)\n\n## Can Cards be updated?\n_even with a redirect?_\n\nI tried seting up a pinned tweet that uses a netlify redirect to always keep my latest post up to date.  Again this one looks good in the validator, doesnt render the image on desktop, does render the image on mobile, but does not update.  I have heard that you need to hit the card validator to update cards?  I am not sure if this is true, but for me this is not even upating the card.\n\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">\ud83d\udc4b Hello,<br><br>\u2015\u2015\u2015\u2015\u2015\u2015 I&#39;m Waylon Walker \u2015\u2015\u2015\u2015\u2015\u2015<br><br>I work with data using \ud83d\udc0d <a href=\"https://twitter.com/hashtag/python?src=hash&amp;ref_src=twsrc%5Etfw\">#python</a> and utilize <a href=\"https://twitter.com/hashtag/webdev?src=hash&amp;ref_src=twsrc%5Etfw\">#webdev</a> to \u303dvisualize it.<br><br>\u2015\u2015\u2015\u2015\u2015\u2015<br><br>I write about things on my \ud83c\udf31 digital garden<a href=\"https://t.co/rAvD9iw05g\">https://t.co/rAvD9iw05g</a><br><br>\ud83d\udc68\u200d\ud83d\udcbbSome are cross-posted to <a href=\"https://t.co/oRWk7MgUD5\">https://t.co/oRWk7MgUD5</a><br><br>\u2015\u2015\u2015\u2015\u2015\u2015<br>\ud83d\udc8c<a href=\"https://t.co/PilOTWQ9ub\">https://t.co/PilOTWQ9ub</a></p>&mdash; \ud835\ude86\ud835\ude8a\ud835\udea2\ud835\ude95\ud835\ude98\ud835\ude97 \ud835\ude86\ud835\ude8a\ud835\ude95\ud835\ude94\ud835\ude8e\ud835\ude9b (@_WaylonWalker) <a href=\"https://twitter.com/_WaylonWalker/status/1282000623299371008?ref_src=twsrc%5Etfw\">July 11, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/explicit-vs-implicit-returns-in-javascript'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Explicit vs Implicit Returns in Javascript</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/expand-one-line-links'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Expand One Line Links</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-11", "edit_link": "https://github.com/edit/main/pages/blog/explain-twitter-cards.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573011", "datetime": "2020-07-11 00:00:00+00:00", "slug": "explain-twitter-cards", "jinja": false, "output_html": "markout/explain-twitter-cards/index.html", "long_description": "Can someone explain how or why twitter cards render differently from device to device?  I do understand that twitter cards a built from meta tags, the full list can be found in their  Mobile Looks fine. On Desktop it is not picking up the image. The ", "super_description": "Can someone explain how or why twitter cards render differently from device to device?  I do understand that twitter cards a built from meta tags, the full list can be found in their  Mobile Looks fine. On Desktop it is not picking up the image. The Validator renders the card correctly.  I tried the official  I tried seting up a pinned tweet that uses a netlify redirect to always keep my latest post up to date.  Again this one looks good in the validator, doesnt render the image on desktop, does", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e9d0>, next=<frontmatter.Post object at 0x7f34506edc10>)"}, {"cover": "", "title": "Minimal Python Package", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/minimal-python-package.md", "description": "What does it take to create an installable python package that can be hosted on pypi? setup.py my This post is somewhat inspired by the bottle framework, which ", "content": "What does it take to create an installable python package that can be hosted on pypi?\n\n\n## What is the minimal python package\n\n* setup.py\n* my_module.py\n\n\nThis post is somewhat inspired by the bottle framework, which is famously created as a single python module.  Yes, a whole web framework is written in one file.\n\n## Directory structure\n\n``` bash\n\n.\n\u251c\u2500\u2500 setup.py\n\u2514\u2500\u2500 my_pipeline.py\n```\n\n\n## setup.py\n\n``` python\nfrom setuptools import setup\n\nsetup(\n    name=\"\",\n    version=\"0.1.0\",\n    py_modules=[\"my_pipeline\", ],\n    install_requires=[\"kedro\"],\n)\n```\n\n## name\n\nThe name of the package can contain any letters, numbers, \"_\", or \"-\".  Even if it's for internal/personal consumption only I usually check for discrepancy with pypi so that you don't run into conflicts. \n\n> Note that pypi treats \"-\" and \"_\" as the same thing, beware of name clashes\n\n## version\n\nThis is the version number of your package.  Most packages follow\n[semver](https://semver.org).  At a high level its three numbers separated by a `.` that follow the format `major.minor.patch`.  It's a common courtesy to only break APIs on major changes, new releases on minor, and fixes on patch.  This can become much more blurry in practice so checkout [semver.org](https://semver.org/).\n\n## py_modules\n\nTypically most packages use the `packages` argument combined with\n`find_packages`, but for this minimal package, we are only creating one `.py` file.\n\n## Using packages instead\n\n``` python\nfrom setuptools import setup, find_packages\n\nsetup(\n    name=\"\",\n    version=\"0.1.0\",\n    packages=find_packages(),\n    install_requires=[\"kedro\"],\n)\n```\n\n\n## install_requires\nThese are your external dependencies that come from pypi.  They go in this list but are often pulled in from a file called `requirements.txt`.  Other developers may look for this file and want to do a `pip install -r\nrequirements.txt`.\n\n## Clean?\n\nOne thing to be careful of here is that everything sits at the top level API, when you users import your module and hit tab they are going to see a lot of stuff unless you hide all of your internal functions behind an `_`.\n\n## Minimal\n\nCan you create a python package with less than two files and less than 8 lines? Should you?  I really like a minimal point to get started from for quick and simple prototypes.  You can always pull a more complicated `cookiecutter` template later if the project is successful.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/more-itertools-windowed'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Windowing Python Lists</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/minimal-kedro-pipeline'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Minimal Kedro Pipeline</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-10", "edit_link": "https://github.com/edit/main/pages/blog/minimal-python-package.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573017", "datetime": "2021-01-10 00:00:00+00:00", "slug": "minimal-python-package", "jinja": false, "output_html": "markout/minimal-python-package/index.html", "long_description": "What does it take to create an installable python package that can be hosted on pypi? setup.py my This post is somewhat inspired by the bottle framework, which is famously created as a single python module.  Yes, a whole web framework is written in o", "super_description": "What does it take to create an installable python package that can be hosted on pypi? setup.py my This post is somewhat inspired by the bottle framework, which is famously created as a single python module.  Yes, a whole web framework is written in one file. The name of the package can contain any letters, numbers,  Note that pypi treats  This is the version number of your package.  Most packages follow Typically most packages use the  These are your external dependencies that come from pypi.  T", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506aef70>, next=<frontmatter.Post object at 0x7f3450679040>)"}, {"cover": "", "title": "Git in Depth Notes", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-in-depth.md", "description": "These are my notes from taking @nnja git --version", "content": "These are my notes from taking @nnja's FEM course [git-in-depth](https://frontendmasters.com/courses/git-in-depth/).\n\n## requirements\n\n* `git --version` > than 2.0\n\n## creating a git\n\n``` bash\necho \"hello\" | git hash-object --stdin\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-push-without-setting-upstream'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>git push without setting upstream</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-diff-branches'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Today I learned `git diff feature..main`</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-31", "edit_link": "https://github.com/edit/main/pages/blog/git-in-depth.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573023", "datetime": "2021-07-31 00:00:00+00:00", "slug": "git-in-depth", "jinja": false, "output_html": "markout/git-in-depth/index.html", "long_description": "These are my notes from taking @nnja git --version", "super_description": "These are my notes from taking @nnja git --version", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506cf460>, next=<frontmatter.Post object at 0x7f34506528b0>)"}, {"cover": "", "title": "Awesome People", "tags": ["single-page"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/awesome-people.md", "description": "These are awesome people that inspire me every day. http://swyx.io/", "content": "These are awesome people that inspire me every day.\n\nhttp://swyx.io/\nhttps://alanwsmith.com/\nhttps://css-tricks.com/\nhttps://daily-dev-tips.com/\nhttps://daverupert.com/\nhttps://joelhooks.com/\nhttps://joshbranchaud.com/\nhttps://kedrozerotohero.com/\nhttps://maggieappleton.com/\nhttps://mxstbr.com/\nhttps://notes.mxstbr.com/About_these_notes\nhttps://tomcritchlow.com/\nhttps://wesbos.com/\nhttps://www.christopherbiscardi.com/garden\nhttps://www.helenanderson.co.nz/\nhttps://www.scotttolinski.com/\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/compare-directories-in-bash'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Compare Directories In Bash</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-in-depth'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Git in Depth Notes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-05", "edit_link": "https://github.com/edit/main/pages/blog/awesome-people.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573028", "datetime": "2021-06-05 00:00:00+00:00", "slug": "awesome-people", "jinja": false, "output_html": "markout/awesome-people/index.html", "long_description": "These are awesome people that inspire me every day. http://swyx.io/", "super_description": "These are awesome people that inspire me every day. http://swyx.io/", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a310>, next=<frontmatter.Post object at 0x7f345068a430>)"}, {"cover": "", "title": "Compare Directories In Bash", "tags": ["bash", "tip"], "status": "draft", "templateKey": "hot-tip", "path": "pages/blog/compare-directories-in-bash.md", "description": "Today I needed to check for articles that used the same slug from two directories, bash made it super simple.", "content": "Today I needed to check for articles that used the same slug from two directories, bash made it super simple.\n\n``` bash\ndiff -rq src/pages/blog src/pages/notes\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-inputs'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How Kedro handles your inputs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/awesome-people'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Awesome People</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-11", "edit_link": "https://github.com/edit/main/pages/blog/compare-directories-in-bash.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573034", "datetime": "2020-12-11 00:00:00+00:00", "slug": "compare-directories-in-bash", "jinja": false, "output_html": "markout/compare-directories-in-bash/index.html", "long_description": "Today I needed to check for articles that used the same slug from two directories, bash made it super simple.", "super_description": "Today I needed to check for articles that used the same slug from two directories, bash made it super simple.", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a9d0>, next=<frontmatter.Post object at 0x7f345068a0d0>)"}, {"cover": "", "title": "How Kedro handles your inputs", "tags": ["kedro", "python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-inputs.md", "description": "Passing inputs into kedro is a key concept.  Understanding how it accepts a Check out this post for a review of how  https://waylonwalker.com/python-args-kwargs", "content": "Passing inputs into kedro is a key concept.  Understanding how it accepts a\nsingle catalog key as input is quite trivial that easily makes sense, but\npassing a list or dictionary of catalog entries can be a bit confusing.\n\n## *args/**args review\n\nCheck out this post for a review of how `*args` `**kwargs` work in python.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/python-args-kwargs/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/python-args-kwargs-og_250x140.png\" alt=\"article cover for \n understanding python \\*args and \\*\\*kwargs\n\"/>\n          <p><strong>\n understanding python \\*args and \\*\\*kwargs\n</strong></p>\n      </a>\n  </div>\n\n> [python args and kwargs](https://waylonwalker.com/python-args-kwargs) article by [@_waylonwalker](https://twitter.com/_WaylonWalker)\n\n## All Kedro inputs are catalog Entries\n\nWhen kedro runs your pipeline it uses the catalog to imperatively load your data, meaning that you don't tell kedro how to load your data, you tell it where your data is and what type it is.  These catalog entries are like a `key-value` store.  You just need to give the key when setting up a node.\n\n## Single Inputs\n\nThese are fairly straightforward to understand.  In the example below when `kedro` runs the pipeline it will load the input from the catalog, then pass that input to the func, then save the returned value to the output catalog entry.\n\n``` python\nfrom kedro.pipeline import node\n\ndef create_int_sales(sales):\n    \"cleans up raw sales data\"\n    ...\n    return cleaned_sales\n\nmy_node = node(\n    func=create_int_sales,\n    inputs='raw_sales',\n    output='int_sales',\n    )\n```\n\n---\n\n## List of inputs\n\nLet's look at an example node that combines more than one dataset. When kedro has sees a list of catalog entries it will load up each catalog entry sequentially then pass them in order to the `create_sales_report` function.\n\n``` python\nfrom kedro.pipeline import node\n\ndef create_sales_report(sales, products):\n    \"adds product metadata to the sales data\"\n    ...\n\n\nmy_node = node(\n    func=create_sales_report,\n    inputs=['pri_sales', 'pri_products'],\n    output='sales_report',\n    )\n```\n\n## simulating pipeline run using 2 inputs\n\nHere We can simulate what kedro does during the pipeline run by using `*args`.\n\n``` python\n# inputs you gave kedro\ninputs=['pri_sales', 'pri_products']\n# load data\ninput_data = [catalog.load(entry) for entry in  inputs]\n# run the node\nsales_report = create_sales_report(*input_data)\n# save the data to the output\ncatalog.datasets.sales_report.save(sales_report)\n```\n\n## More generalizable functions\n\nWe can also use `*args` to make our functions a little bit more generalizable. The first that\ncomes to my mind is a unioner. The second\n\n``` python\ndef unioner(*dfs: pd.DataFrame): -> pd.DataFrame\n    pd.concat(dfs)\n```\n\nNow we can pass any number of DataFrames into our kedro node to get unioned together, but\ndo we really need a function for a one-liner... No we can use an inline function for this case.\n\n``` python\nmy_node = node(\n    func=lambda *dfs: pd.concat(dfs),\n    input=['sales_2017', 'sales_2018'],\n    output='sales',\n)\n```\n\n## `*args` scares the crap out of me!\n\nIt's great for the `unioner` example where its a collection of similar things where order\ndoes not matter.  But for the `create_sales_report` function.  Those are distinctly different\ninputs.  If someone does some refactoring and changes the order in one place or another it's\ngoing to turn into a bad day real fast.\n\n## **kwargs are a bit better\n\nLet's refactor the `create_sales_report` before someone tries to ruin our day.  We can easily\ndo this by passing a dictionary (keys are the argument name, values are the catalog key)\nof arguments to kedro instead of a list.\n\n``` python\nfrom kedro.pipeline import node\n\ndef create_sales_report(sales, products):\n    \"adds product metadata to the sales data\"\n    ...\n\nmy_node = node(\n    func=create_sales_report,\n    inputs={'sales': 'pri_sales', 'products': 'pri_products'},\n    output='sales_report',\n    )\n```\n\nNow if someone tries to refactor the order of arguments we are safe!\n\n## Simulating the pipeline run with `**kwargs`\n\nPretty much the same as before, except with `**kwargs` and `dictionaries` keeping us a bit\nsafer.\n\n``` python\n# inputs you gave kedro\ninputs={'sales': 'pri_sales', 'products': 'pri_products'},\n# load data\ninput_data = {arg: catalog.load(entry) for arg, entry in inputs.items()}\n# run the node\nsales_report = create_sales_report(**input_data)\n# save the data to the output\ncatalog.datasets.sales_report.save(sales_report)\n```\n\n## Stay Safe\n\nKedro inputs are quite easy to understand if you already have a grasp of `*args` and `**kwargs`\nand if you don't it is still fairly intuitive to pick up.  Stay on the safe side, if your\ncollection of inputs are clearly different things, use a dictionary for safety.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-install'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Install</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-incremental-versioned-datasets'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Incremental Versioned Datasets in Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-19", "edit_link": "https://github.com/edit/main/pages/blog/kedro-inputs.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573040", "datetime": "2020-06-19 00:00:00+00:00", "slug": "kedro-inputs", "jinja": false, "output_html": "markout/kedro-inputs/index.html", "long_description": "Passing inputs into kedro is a key concept.  Understanding how it accepts a Check out this post for a review of how  https://waylonwalker.com/python-args-kwargs/ When kedro runs your pipeline it uses the catalog to imperatively load your data, meanin", "super_description": "Passing inputs into kedro is a key concept.  Understanding how it accepts a Check out this post for a review of how  https://waylonwalker.com/python-args-kwargs/ When kedro runs your pipeline it uses the catalog to imperatively load your data, meaning that you don These are fairly straightforward to understand.  In the example below when  Let Here We can simulate what kedro does during the pipeline run by using  We can also use  Now we can pass any number of DataFrames into our kedro node to get", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9d30>, next=<frontmatter.Post object at 0x7f3450640d60>)"}, {"cover": "", "title": "background tasks in python", "tags": ["python", "data"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/background-1.md", "description": "none", "content": "I have tried most of the different methods in the past and found that copying and pasting the [threadpoolexecutor example](https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example) or the [processpoolexecutor example](https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example) from the standard library documentation to be the most reliable.  Since this is often something that I stuff in the back of a utility module of a library it is not something that I write often enough to be familiar with, which makes it both hard to write and hard to read and debug.  If you are looking for a good overview of the difference concurrency [Raymond Hettinger](https://twitter.com/raymondh) has a great talk about the difference between the various different methods, when to use them and why.\n\nRecently a new python library was released to make running tasks in the background very simple. The [background](https://github.com/ParthS007/background) project by Kenneth Reitz is a high level implementation of python 3's ThreadPoolExecutor.  I have been playing around with this project over the last week and I will say that this is definitely the simplest way to run background tasks in python by far.  It really simplifes the syntax and lets me focus on my job rather than implementing custom concurrent code that is more difficult to debug.\n\n## Background\n\nI have pulled the latest version of the project in Sept 2017.  I found that it had some updates that were important to pass \\*args and \\*\\*kwargs compared to the pypi version.\n\n\n```python\nimport time\nimport background as bg\n\n%load_ext watermark\n%watermark -d -v -p background\n```\n\n    2017-09-16\n\n    CPython 3.6.2\n    IPython 6.1.0\n\n    background n\u0007\n\n\n## Define Worker Functions\n\nEach of these worker functions takes 1s to run, simulating a moderately long calculation that we need to do many times over.\n\n\n```python\ndef work():\n    time.sleep(1)\n    return 1\n\n@bg.task\ndef bg_work():\n    time.sleep(1)\n    return 1\n```\n\n## Run the Worker Functions\n\n## Blocking function\n\nThis function is blocking each time the function runs, thus taking 1 second to run for each calculation.  The example below took exactly **100 s** to run 100 calculations.  Depending on your use case this may not be fast enough.  If the calculations do not rely on the global state\n\n\n```python\n%%time\nfor _ in range(100):\n    work()\n```\n\n    Wall time: 1min 40s\n\n\n### Reaction\n\nI  know what half of you are saying to yourselfs..\n\n>    !!What!! that took 100 s, by now my users have already sent a dozen messages and filed an issue that my feature is down\n\nand the other half\n\n> Seriously that wasnt even enough time to grab a coffee.  Any real time consuming analysis takes at least 3 dats 14 hours 159 seconds before I start to care about concurrency\n\nTo you I say... I am impatient and I got other things to do rather than wait on this maching to finish its work.  Let's get into this concurrency stuff.\n\n## Background Function\n\nThis function spins off worker processes and runs much faster.  By default background sets the number of processes to the number of cpu cores available, Therefore this function should run in n/4 + (inefficiency).  Here we see that the result is just over **13 s**.\n\nNote:_Since there is a bit of inefficiency added by needing to handle all of the threads it is not exactly divided by the number of workers._\n\n\n```python\n%%time\nf_list = [bg_work() for _ in range(100)];\n\nwhile not all([f.done() for f in f_list]):\n    pass\n```\n\n    Wall time: 13.1 s\n\n\n### Reaction\n\nI know what your saying this time.\n\n>really a 7.6x improvement...  Is that really even woth the extra work.\n\n\nFine then lets crank it up to 11!\n\n### Lots of Background\n\nlets set the number of background processes to a value just higher to than the number of workers we need to run in order to start them all simultaneously. With this simple example that is not very CPU intensive we see the result is just over the amount of time that it takes to run 1 worker.\n\n\n```python\nbg.n = 110\n```\n\n\n```python\n%%time\nf_list = [bg_work() for _ in range(100)];\n\nwhile not all([f.done() for f in f_list]):\n    pass\n```\n\n    Wall time: 1.09 s\n\n\n### Reaction\n\n> 91x improvement by putting my calculations into a function, adding a decorator, and some checks, im in.\n\n## On Tap\n\nThis week while taking it up to 11 I was enjoying a super thick and rich cup of El Salvador Finca Rosa from Onyx Coffee Labs.  Check out their love for letting the bean speak for it self and producing a great cup.\n\n[<img src=\"https://cdn.shopify.com/s/files/1/1707/3261/files/coffee_science.png?5305428688827820856\">](https://onyxcoffeelab.com)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/learn-early'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is something you should have learned or understood earlier?</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-inputs'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How Kedro handles your inputs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-09-16", "category": "python", "edit_link": "https://github.com/edit/main/pages/blog/background-1.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573046", "datetime": "2017-09-16 00:00:00+00:00", "slug": "background-1", "jinja": false, "output_html": "markout/background-1/index.html", "long_description": "I have tried most of the different methods in the past and found that copying and pasting the  Recently a new python library was released to make running tasks in the background very simple. The  I have pulled the latest version of the project in Sep", "super_description": "I have tried most of the different methods in the past and found that copying and pasting the  Recently a new python library was released to make running tasks in the background very simple. The  I have pulled the latest version of the project in Sept 2017.  I found that it had some updates that were important to pass  Each of these worker functions takes 1s to run, simulating a moderately long calculation that we need to do many times over. This function is blocking each time the function runs,", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a550>, next=<frontmatter.Post object at 0x7f345068a9d0>)"}, {"cover": "", "title": "What is something you should have learned or understood earlier?", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/learn-early.md", "description": "What is something that you recently learned that you wish you would have learned or understood earlier?", "content": "Mine is the python debugger. I was a long holdout thinking that print statements were sufficient. That was untill I started having errors crop up in functions that took minutes to run. The thing that I most notably wish I would have known about is post_mortem.\n\n## Example\n\n    [ins] In [4]: def repeater(msg, repeats=1):\n             ...:     \"repeats messages {repeats} number of times\"\n             ...:     print(f'{msg}\\n' * repeats)\n\n    [ins] In [5]: repeater('hi', 3)\n    hi\n    hi\n    hi\n\n    [ins] In [6]: repeater('hi', 'a')\n    ---------------------------------------------------------------------------\n    TypeError                                 Traceback (most recent call last)\n    <ipython-input-6-0ec595774c81> in <module>\n    ----> 1 repeater('hi', 'a')\n\n    <ipython-input-4-530890de75cd> in repeater(msg, repeats)\n          1 def repeater(msg, repeats=1):\n          2     \"repeats messages {repeats} number of times\"\n    ----> 3     print(f'{msg}\\n' * repeats)\n          4\n\n# Debug with iPython/Jupyter\n\n    %debug\n\n## Vanilla Debug\n\n    import pdb\n    import sys\n\n    pdb.post_mortem(sys.last_traceback)\n\n## More\n\nFor more information about the debugger checkout the real python article. [https://realpython.com/python-debugging-pdb/](https://realpython.com/python-debugging-pdb/ \"https://realpython.com/python-debugging-pdb/\")\n\nAlso keep a bookmark of the table of pdb commands from the article [https://realpython.com/python-debugging-pdb/#essential-pdb-commands](https://realpython.com/python-debugging-pdb/#essential-pdb-commands \"https://realpython.com/python-debugging-pdb/#essential-pdb-commands\")\n\n# Debug Session\n\n[![debug session](https://res.cloudinary.com/practicaldev/image/fetch/s--ShQ3NN06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/1tnri6wdwimwk7i83cvg.png)](https://res.cloudinary.com/practicaldev/image/fetch/s--ShQ3NN06--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thepracticaldev.s3.amazonaws.com/i/1tnri6wdwimwk7i83cvg.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/maintianing-multiple-git-remotes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Maintianing multiple git remotes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/keyboard-driven-vscode'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Keyboard Driven VSCode</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-10", "edit_link": "https://github.com/edit/main/pages/blog/learn-early.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573052", "datetime": "2020-01-10 00:00:00+00:00", "slug": "learn-early", "jinja": false, "output_html": "markout/learn-early/index.html", "long_description": "Mine is the python debugger. I was a long holdout thinking that print statements were sufficient. That was untill I started having errors crop up in functions that took minutes to run. The thing that I most notably wish I would have known about is po", "super_description": "Mine is the python debugger. I was a long holdout thinking that print statements were sufficient. That was untill I started having errors crop up in functions that took minutes to run. The thing that I most notably wish I would have known about is post For more information about the debugger checkout the real python article.  Also keep a bookmark of the table of pdb commands from the article ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c280>, next=<frontmatter.Post object at 0x7f3450696e50>)"}, {"cover": "", "title": "kedro catalog create", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-catalog-create-cli.md", "description": "I use  https://youtu.be/ https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. The command to ensure there are catalog entries f", "content": "I use `kedro catalog create` to boost my productivity by automatically\ngenerating yaml catalog entries for me.  It will create new yaml files for each\npipeline, fill in missiing catalog entries, and respect already existing\ncatalog entries.  It will reformat the file, and sort it based on catalog key.\n\nhttps://youtu.be/_22ELT4kja4\n\n<!-- syntax highlighting broken after underscore from the link __ -->\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> \ud83d\udc46 Unsure what kedro is?  Check out this post.\n\n\n## Running Kedro Catalog Create\n\nThe command to ensure there are catalog entries for every dataset in the passed\nin pipeline.\n\n``` bash\nkedro catalog create --pipeline history_nodes\n```\n\n* Create's new yaml file, if needed\n* Fills in new dataset entries with the default dataset\n* Keeps existing datasets untouched\n* it will reformat your yaml file a bit\n    * default sorting will be applied\n    * empty newlines will be removed\n\n## CONF_ROOT\n\nKedro will respect your `CONF_ROOT` settings when it creates a new catalog\nfile, or looks for existing catalog files.  You can change the location of your\nconfiguration files by editing your `CONF_ROOT` variable in your projects.\n\n`settings.py`.\n``` python\n# settings.py\n# default settings\nCONF_ROOT = \"conf\"\n\n# I like to package my configuration\nCONF_ROOT = str(Path(__file__).parent / \"conf\")\n```\n\n> I prefer to keep my configuration packaged inside of my project.  This is\n> partly due to how my team operates and deploys pipelines.\n\n\n## File Location\n\nThe `kedro catalog create` command will look for a `yaml` file based on the\nname of the pipeline (`CONF_ROOT/catalog/<pipeline-name>.yml`).  If it does not\nfind one it will create one and make entries for each dataset in the pipeline.\nIt will not look in all of your existing catalog files for entries, only the\none in the exact file for your pipeline.  If you are going to use this command\nits important that you follow this pattern or copy what it generates into your\nown catalog file of choice.\n\n> \u26a0\ufe0f It will not look in all of your existing catalog files for entries, only the\none in the exact file for your pipeline.\n\n## MemoryDataSet's\n\nWhen you run `kedro catalog create` you get `MemoryDataSet`, that's it.  As of\n`0.17.4` its hard coded into the library and not configurable.\n\n``` yaml\nrange12:\n  type: MemoryDataSet\n```\n\n## Your free to use what you want though\n\nLet's switch this dataset over to a `pandas.CSVDataSet` so that the file gets\nstored and we can pick up  and read the file without re-running the whole\npipeline.\n\n``` yaml\nrange12:\n  type: pandas.CSVDataSet\n  filepath: data/range12.csv\n```\n\n## Continue adding nodes\n\nAs we work we will keep adding nodes to our kedro pipeline, in this case we\nadded another node that created a dataset called `range13`.\n\n``` bash\nkedro catalog create --pipeline history_nodes\n```\n\nAfter telling kedro to create new catalog entries for us we will see that it\nleft our `range12` entry alone and created `range13` for us.\n\n``` yaml\nrange12:\n  type: pandas.CSVDataSet\n  filepath: data/range12.csv\nrange13:\n  type: MemoryDataSet\n```\n\n## Formatting is not worthwhile\n\nIf we decide this is too cramped for us we could add some space between\ndatasets.  The next time we run `kedro catalog create` empty lines will be\nremoved.\n\n``` yaml\nrange12:\n  type: pandas.CSVDataSet\n\nrange13:\n  type: MemoryDataSet\n```\n\n## Continuing to work\n\nIf we coninue adding new nodes, and tell kedro to create catalog entries again,\nall of our effort given to formatting will be lost.  I wouldn't worry about it\nunless you have an autoformatter that you can run on your yaml files.  The\nproductivity gains in an semi-automated catalog are worth it.\n\n``` yaml\nrange12:\n  type: pandas.CSVDataSet\n  filepath: data/range12.csv\nrange121:\n  type: MemoryDataSet\nrange13:\n  type: MemoryDataSet\n```\n\n## Sorting Order\n\nNotice the sorting order in the last entry, `range121` comes before `range13`.\nThis is all based on how pythons `yaml.safe_dump` works, kedro has set the\n`default_flow_style` to `False`.  You can see where they write your file in the\nsource code currently\n[here](https://github.com/quantumblacklabs/kedro/blob/master/kedro/framework/cli/catalog.py#L202)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-catalog-search'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to find things in your kedro catalog</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-catalog'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Catalog</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-15", "edit_link": "https://github.com/edit/main/pages/blog/kedro-catalog-create-cli.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573059", "datetime": "2021-11-15 00:00:00+00:00", "slug": "kedro-catalog-create-cli", "jinja": false, "output_html": "markout/kedro-catalog-create-cli/index.html", "long_description": "I use  https://youtu.be/ https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. The command to ensure there are catalog entries for every dataset in the passed Create Fills in new dataset entries with the default datase", "super_description": "I use  https://youtu.be/ https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. The command to ensure there are catalog entries for every dataset in the passed Create Fills in new dataset entries with the default dataset Keeps existing datasets untouched it will reformat your yaml file a bit default sorting will be applied empty newlines will be removed Kedro will respect your  settings.py I prefer to keep my configuration packaged inside of my project.  This is Th", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f8b0>, next=<frontmatter.Post object at 0x7f3450672040>)"}, {"cover": "", "title": "fix crlf for entire git repo", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/fix-crlf-entire-repo.md", "description": "prev Why use a cms next kedro catalog create", "content": "## Final Result\n\n``` bash\ngit checkout main\ngit reset --hard\ngit rm -rf --cached .\necho \"* text=auto\" > .gitattributes\ngit add .\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/why-use-cms'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Why use a cms</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-catalog-create-cli'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>kedro catalog create</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-22", "edit_link": "https://github.com/edit/main/pages/blog/fix-crlf-entire-repo.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573065", "datetime": "2021-03-22 00:00:00+00:00", "slug": "fix-crlf-entire-repo", "jinja": false, "output_html": "markout/fix-crlf-entire-repo/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a8e0>, next=<frontmatter.Post object at 0x7f345068aa00>)"}, {"cover": "", "title": "Why use a cms", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/why-use-cms.md", "description": "When first learning to code its very common to hard code everything right into Hard coding everything right into your code makes it really hard for The cms gene", "content": "When first learning to code its very common to hard code everything right into\nthe code. This happens with most folks in just about any language. Whether its\nHTML or markdown for front end content, or even hardcoding parameters in our\nbackend languages like python, or node.js.\n\n## \ud83e\udd37\u200d\u2640\ufe0f What's wrong with hard coding everything?\n\nHard coding everything right into your code makes it really hard for\nnon-technical collaborators to join. It makes it nearly impossible to hand\nwebsites off to clients without needing to come back for routine updates.\n\nThe cms generally come with a rich content editor that feels more like\nsomething most folks are used to. There are buttons for changing the font,\nfont-size, adding images, bold, italics, etc.\n\n## Sometimes I don't feel technical\n\nEven when you are developing for a technical audience there is a layer of\npolish that comes from giving them a nice interface to edit their content in.\nYouTube doesn't have you manually inserting records into the database to add a\ncomment, or upload a new video, nor would anyone expect you to.\n\n![Edit on GitHub](https://dev-to-uploads.s3.amazonaws.com/i/sgqd23rbbusjpfxqr7bl.PNG)\n\n> I recently added an edit button on my posts that allows me to jump right into\n> edit on GitHub.  I have used this so much, I should have done this long ago!\n\nThere are times when I want to edit my blog on the go from my phone while on\nthe go. I use [forestry.io](https://forestry.io) to do this for the most part.\nIt gives me an image uploader, and a markdown editor to edit this blog right\nfrom my phone.\n\n\n![forestry editor](https://images.waylonwalker.com/2019-05-09 10-40-11_forestry.io.png)\n\n> My Blog on forestry.io\n\n\n## What do they output\n\nThere are a number of different CMS's out there, and I haven't touched most of\nthem. Some write content into a MySQL database while others kick out HTML or\nmarkdown to a git repo. I prefer the ones built off of a git repo for my site\nbecause I am cheap and I am not making anything from this blog yet, but you\nmight want to check into some of the other options if you plan on handing your\nsite off to a client.\n\n## \ud83e\udd11 pricing\n\nBe aware of the various pricing models. They are priced every which way, per\ncontent editor, per site, per number of edits. Some offer free versions. Some\nare open source but require you to host it somewhere. Before you pick one make\nsure that you know your requirements.\n\n## CMS's are more norm than I realized\n\nWhen I was first starting into web development, I was completely unaware of the\nconcept of a CMS. I had thought that content needs to be in HTML, or markdown,\nwith a few specific places that users could edit. This may have been the case\nmany years ago, but not anymore. The first time I ever designed a website for\nsomeone other than myself I got quite a shock when I realized how many edits\nthey wanted, and how un-appealing markdown is for most.\n\n## Where CMS's fall short \ud83c\udf42\n\nPlease correct me if I am wrong here, I would love to be wrong on this. CMS's\nare not for developing the whole site. They hold data for content like site\ntitle, description, menu items, or blog posts. They don't necessarily give the\nuser a full website designer, with drag and drop, and every widget imaginable.\nThe web developer still needs to implement the site design and data\nintegration.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/009'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>009</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/whats-on-your-github-profile'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83e\udd13 What's on your GitHub Profile</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-14", "edit_link": "https://github.com/edit/main/pages/blog/why-use-cms.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573070", "datetime": "2020-07-14 00:00:00+00:00", "slug": "why-use-cms", "jinja": false, "output_html": "markout/why-use-cms/index.html", "long_description": "When first learning to code its very common to hard code everything right into Hard coding everything right into your code makes it really hard for The cms generally come with a rich content editor that feels more like Even when you are developing fo", "super_description": "When first learning to code its very common to hard code everything right into Hard coding everything right into your code makes it really hard for The cms generally come with a rich content editor that feels more like Even when you are developing for a technical audience there is a layer of I recently added an edit button on my posts that allows me to jump right into There are times when I want to edit my blog on the go from my phone while on ![ My Blog on forestry.io There are a number of diff", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506324c0>, next=<frontmatter.Post object at 0x7f345067f580>)"}, {"cover": "", "title": "tmux splitting panes", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-splitting-panes.md", "description": "https://youtu.be/kzgyiHap1nQ splitting panes is a core feature of tmux.  It allows us to split the terminal \ud83d\uddd2\ufe0f note that   https://waylonwalker.com/tmux-nav-202", "content": "https://youtu.be/kzgyiHap1nQ\n\nsplitting panes is a core feature of tmux.  It allows us to split the terminal\nvertically or horizontally into new panes.\n\n``` bash\nbind -n M-s split-window -c '#{pane_current_path}'\nbind -n M-v split-window -h -c '#{pane_current_path}'\nbind -n M-X kill-pane\n```\n\n> \ud83d\uddd2\ufe0f note that  '#{pane_current_path}'will keep the split in the same directory\n> as it's parent, without this it will default to your home directory.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-start-application'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux start application</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-source-file'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux source-file</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-17", "edit_link": "https://github.com/edit/main/pages/blog/tmux-splitting-panes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573076", "datetime": "2021-07-17 00:00:00+00:00", "slug": "tmux-splitting-panes", "jinja": false, "output_html": "markout/tmux-splitting-panes/index.html", "long_description": "https://youtu.be/kzgyiHap1nQ splitting panes is a core feature of tmux.  It allows us to split the terminal \ud83d\uddd2\ufe0f note that   https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "super_description": "https://youtu.be/kzgyiHap1nQ splitting panes is a core feature of tmux.  It allows us to split the terminal \ud83d\uddd2\ufe0f note that   https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506914c0>, next=<frontmatter.Post object at 0x7f345067faf0>)"}, {"cover": "", "title": "How to use git cherry pick", "tags": ["cli", "git"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/cherry-pick.md", "description": "prev D3 Day 3 next tmux splitting panes", "content": "``` bash\n~/git via \ud83d\udc0d v3.8.5\n\u276f mkdir git-cherry-pick-learn\n\n~/git via \ud83d\udc0d v3.8.5\n\u276f cd git-cherry-pick-learn\n\n~/git/git-cherry-pick-learn\n\u276f git init\nInitialized empty Git repository in /home/walkews/git/git-cherry-pick-learn/.git/\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f touch readme.md\n\ngit-cherry-pick-learn on \ue0a0 main [?]\n\u276f git status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n        readme.md\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n\ngit-cherry-pick-learn on \ue0a0 main [?]\n\u276f git add .\n\ngit-cherry-pick-learn on \ue0a0 main [+]\n\u276f git commit -m \"init readme\"\n[main (root-commit) ebd1ff2] init readme\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 readme.md\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f echo \"Learn Cherry Pick\"\nLearn Cherry Pick\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f git add .\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f git commit -m \"add title\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f echo \"# Learn Cherry Pick\" > readme.md\n\ngit-cherry-pick-learn on \ue0a0 main [!]\n\u276f git add .\n\ngit-cherry-pick-learn on \ue0a0 main [+]\n\u276f git diff\n\ngit-cherry-pick-learn on \ue0a0 main [+]\n\u276f git diff --staged\ndiff --git a/readme.md b/readme.md\nindex e69de29..3490cef 100644\n--- a/readme.md\n+++ b/readme.md\n@@ -0,0 +1 @@\n+# Learn Cherry Pick\n\ngit-cherry-pick-learn on \ue0a0 main [+]\n\u276f git commit -m \"add title\"\n[main 148264d] add title\n 1 file changed, 1 insertion(+)\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f git checkout -b trash-branch\nSwitched to a new branch 'trash-branch'\n\ngit-cherry-pick-learn on \ue0a0 trash-branch\n\u276f echo >> readme.md\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!]\n\u276f echo >> readme.md\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!]\n\u276f echo >> \"Cherry Pick is amazing\"\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!?]\n\u276f cat readme.md\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: readme.md\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 # Learn Cherry Pick\n   2 + \u2502\n   3 + \u2502\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!?]\n\u276f echo  \"Cherry Pick is amazing\" >>\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!?]\n\u276f git commit -m \"add whitespace\"\nOn branch trash-branch\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified:   readme.md\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n        Cherry Pick is amazing\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!?]\n\u276f git add .\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [+]\n\u276f git commit -m \"add whitespace\"\n[trash-branch 94f734b] add whitespace\n 2 files changed, 3 insertions(+)\n create mode 100644 Cherry Pick is amazing\n```\n\n``` bash\ngit-cherry-pick-learn on \ue0a0 trash-branch\n\u276f echo \"TRASH\" >> readme.md\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!]\n\u276f git add .\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [+]\n\u276f git commit -m \"add trash\"\n[trash-branch ec43879] add trash\n 1 file changed, 1 insertion(+)\n\ngit-cherry-pick-learn on \ue0a0 trash-branch\n\u276f echo \"Cherry Pick is Amazing\" >> readme.md\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!]\n\u276f git commit -m \"add cherry pick is amazing\"\nOn branch trash-branch\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified:   readme.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [!]\n\u276f git add .\n\ngit-cherry-pick-learn on \ue0a0 trash-branch [+]\n\u276f git commit -m \"add cherry pick is amazing\"\n[trash-branch 6691a34] add cherry pick is amazing\n 1 file changed, 1 insertion(+)\n\ngit-cherry-pick-learn on \ue0a0 trash-branch\n\u276f cat readme.md\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: readme.md\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 # Learn Cherry Pick\n   2   \u2502\n   3   \u2502\n   4   \u2502 TRASH\n   5   \u2502 Cherry Pick is Amazing\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n```\n\n``` bash\ngit-cherry-pick-learn on \ue0a0 trash-branch\n\u276f git log\ncommit 6691a343e0ba35d0700c49ec09a99fa8f1f385b9 (HEAD -> trash-branch)\nAuthor: Waylon Walker <walker_waylon_s@cat.com>\nDate:   Thu May 13 08:54:58 2021 -0500\n\n    add cherry pick is amazing\n\ncommit ec438790af36c23aef8eee2122f0dda95313496b\nAuthor: Waylon Walker <walker_waylon_s@cat.com>\nDate:   Thu May 13 08:54:07 2021 -0500\n\n    add trash\n\ncommit 94f734b1adcee0f503c818c0f6bc9da97a0066e2\nAuthor: Waylon Walker <walker_waylon_s@cat.com>\nDate:   Thu May 13 08:50:35 2021 -0500\n\n    add whitespace\n\ncommit 148264da5641033caa537727c6d5199068d58a4d (main)\nAuthor: Waylon Walker <walker_waylon_s@cat.com>\nDate:   Thu May 13 08:48:58 2021 -0500\n\n    add title\n\ncommit ebd1ff22493d860e001f2b96ec948684d496355b\nAuthor: Waylon Walker <walker_waylon_s@cat.com>\nDate:   Thu May 13 08:47:10 2021 -0500\n\n    init readme\n```\n\n``` bash\ngit-cherry-pick-learn on \ue0a0 trash-branch\n\u276f git checkout main\nSwitched to branch 'main'\n\ngit-cherry-pick-learn on \ue0a0 main\n\u276f cat readme.md\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: readme.md\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 # Learn Cherry Pick\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/d3-day3'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>D3 Day 3</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-splitting-panes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux splitting panes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-13", "edit_link": "https://github.com/edit/main/pages/blog/cherry-pick.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573082", "datetime": "2021-05-13 00:00:00+00:00", "slug": "cherry-pick", "jinja": false, "output_html": "markout/cherry-pick/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068adc0>, next=<frontmatter.Post object at 0x7f345068aaf0>)"}, {"cover": "./d3-cropped.png", "title": "D3 Day 3", "tags": ["webdev"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/d3-day3.md", "description": "none", "content": "<script src='https://cdnjs.cloudflare.com/ajax/libs/d3/4.13.0/d3.min.js'></script>\n<style>\n    #content{\n        max-width: 800px;\n        margin: 0 auto;\n    }\n    .chart {\n        display: block;\n        padding: 10px;\n        background: peachpuff;\n    }\n\n    .bar {\n        height: 30px;\n        margin: 5px;\n        background: teal;\n    }\n    button {\n        background: rgb(240, 196, 211);\n        border: none;\n        font-size: 1.3rem;\n        border-radius: 5px;\n        padding: .2rem 1rem;\n        margin-bottom: 1rem\n    }\n    .on {\n        background: palevioletred;\n    }\n</style>\n\n\n## Learn D3 in 5 days\n\nI recently subscribed to Ben Clinkinbeard's learn D3.js in 5 days, and am currently on day 3.  I read through the first 2 days, and felt fairly comfortable with selecting elements, so I did not follow along on the first two days.  I probably should have, but there are only so many hours in the day.\n\n### Why Learn D3\n\nD3 is the ubiquitous dynamic visualization library for building custom interactive visualizations on the web.  It is a bit low level, and more verbose than many other libraries that build upon it, but if you want full control D3 is the way to go.  I have used a few libraries built upon d3 in the past and have been very happy with the results.  For now I want to start learning a bit about how d3 works.  I know that learning it is going to take a long time, so I want to start working on some simple examples now in order to build my understanding so that I can learn quickly when I am ready to dive in.  If I never decide I need to take the deep dive into d3, I think understanding how it works will only help when I am using higher level libraries.\n\n## Final Result\nI cant express how fun it was to build this example. I always saw d3 as being super low level and that I could never build something in it.  It was so cool to watch the magic happen in such a short period of time.\n\n![final_result](https://images.waylonwalker.com/d3-day3.gif)\n## Prep\n### Load D3\n\nI am going to load d3 from the cloudflare cdn for simplicity\n\n```HTML\n    script src='https://cdnjs.cloudflare.com/ajax/libs/d3/4.13.0/d3.min.js'></script>\n```\n\n### Base Styles\nI will use this as by stylesheet throughout the examples.\n\n\n```html\n    <style>\n        .chart {\n            display: block;\n            padding: 10px;\n            background: peachpuff;\n        }\n\n        .bar {\n            height: 30px;\n            margin: 5px;\n            background: teal;\n        }\n        button {\n            background: rgb(240, 196, 211);\n            border: none;\n            font-size: 1.3rem;\n            border-radius: 5px;\n            padding: .2rem 1rem;\n            margin-bottom: 1rem\n        }\n        .on {\n            background: palevioletred;\n        }\n    </style>\n```\n\n## Example one\n\nThis one is a bit cheaty in that it has the exact number of divs already rendered for us, but it is a good learning point\nso see how to map data to attributes\n\n\nBy the way this is the first chart that I have ever created with d3, and this silly thing is so exciting!!\n\n### Markup\n```HTML\n<div id=\"chart1\" class='chart'>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n</div>\n```\n\n### JavaScript\n```JavaScript\nconst data = [90, 270, 152, 42, 83]\nd3.select('#chart1')\n    .selectAll('div')\n    .data(data)\n    .attr('class', 'bar')\n    .style('width', function (d) {\n        return d + 'px'\n    })\n```\n\n### Result\n\n![d3 day3 example 1](d3-day3-1.png)\n\n_example 1 plot_\n\n<!--\n<div id=\"chart1\" class='chart'>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n</div>\n\n<script>\n    const data = [90, 270, 152, 42, 83]\n    d3.select('#chart1')\n        .selectAll('div')\n        .data(data)\n        .attr('class', 'bar')\n        .style('width', function (d) {\n            return d + 'px'\n        })\n</script>\n -->\n\n\n## Example 2\nThis time we are going to get a bit more dynamic.  The divs will be generated on the fly and will update with the press of a button.\n\n### Markup\n```HTML\n<div id=\"chart2\" class='chart'>\n    <button class='math' onclick=\"render('math')\">Math</button>\n    <button class='science' onclick=\"render('science')\">Science</button>\n</div>\n```\n### JavaScript\n\n```JavaScript\nconst data2 = [\n    { name: 'Alice', math: 93, science: 84},\n    { name: 'Bob', math: 73, science: 82},\n    { name: 'James', math: 92, science: 78},\n    { name: 'Steve', math: 77, science: 93},\n    { name: 'Jordan', math: 80, science: 68},\n]\n\nfunction render(subject) {\n    d3.select('#chart2')\n        .selectAll('button')\n        .classed('on', false)\n    d3.select('.' + subject)\n        .attr('class', subject + ' on')\n    d3.select('#chart2')\n        .selectAll('div')\n        .remove()\n    d3.select('#chart2')\n        .selectAll('div')\n        .data(data2)\n        .enter()\n            .append('div')\n            .attr('class', 'bar')\n            .style('width', function(d) {\n                    return (d[subject]-50)*3 + 'px'\n                })\n}\nrender('math')\n```\n\n### Result\n<!--\n<div id=\"chart2\" class='chart'>\n    <button class='math' onclick=\"render('math')\">Math</button>\n    <button class='science' onclick=\"render('science')\">Science</button>\n</div>\n\n\n\n<script>\n    const data2 = [\n        { name: 'Alice', math: 93, science: 84},\n        { name: 'Bob', math: 73, science: 82},\n        { name: 'James', math: 92, science: 78},\n        { name: 'Steve', math: 77, science: 93},\n        { name: 'Jordan', math: 80, science: 68},\n    ]\n\n    function render(subject) {\n        d3.select('#chart2')\n            .selectAll('button')\n            .classed('on', false)\n        d3.select('.' + subject)\n            .attr('class', subject + ' on')\n        d3.select('#chart2')\n            .selectAll('div')\n            .remove()\n        d3.select('#chart2')\n            .selectAll('div')\n            .data(data2)\n            .enter()\n                .append('div')\n                .attr('class', 'bar')\n                .style('width', function(d) {\n                     return (d[subject]-50)*3 + 'px'\n                    })\n    }\n    render('math')\n</script>\n -->\n\n![d3 day 3 example 2](https://images.waylonwalker.com/d3-day3-2.gif)\n\n_example 2 working buttons_\n\n## Example 3\nIn Example2 the chart jumped from one state to the next with a complete wipe and redraw in betweeen.  In this example we will retain the same bars and only update their width.  This will allow us to transition/animate them.\n\n### Markup\n```html\n<div id=\"chart3\" class='chart'>\n    <button class='math' onclick=\"render3('math')\">Math</button>\n    <button class='science' onclick=\"render3('science')\">Science</button>\n</div>\n```\n\n### JavaScript\n```JavaScript\nconst data3 = [\n    { name: 'Alice', math: 93, science: 84 },\n    { name: 'Bob', math: 73, science: 82 },\n    { name: 'James', math: 92, science: 78 },\n    { name: 'Steve', math: 77, science: 93 },\n    { name: 'Jordan', math: 80, science: 68 },\n]\n\nfunction render3(subject) {\n    d3.select('#chart3')\n        .selectAll('button')\n        .classed('on', false)\n    d3.select('#chart3')\n        .select('.' + subject)\n        .attr('class', subject + ' on')\n\n    const bars = d3.select('#chart3')\n        .selectAll('div')\n        .data(data3, function(d) {\n            return d.name\n        })\n    const newBars = bars.enter()\n        .append('div')\n            .attr('class', 'bar')\n            .style('width', 0)\n    newBars.merge(bars)\n        .transition()\n        .style('width', function(d) {\n            return (d[subject]-50)*3 + 'px'\n        })\n}\nrender3('math')\n```\n\n![d3 day3 example 3](https://images.waylonwalker.com/d3-day3.gif)\n\n_example 3 nice and smooth_\n<!--\n<div id=\"chart3\" class='chart'>\n    <button class='math' onclick=\"render3('math')\">Math</button>\n    <button class='science' onclick=\"render3('science')\">Science</button>\n</div>\n\n\n\n<script>\n    const data3 = [\n        { name: 'Alice', math: 93, science: 84 },\n        { name: 'Bob', math: 73, science: 82 },\n        { name: 'James', math: 92, science: 78 },\n        { name: 'Steve', math: 77, science: 93 },\n        { name: 'Jordan', math: 80, science: 68 },\n    ]\n\n    function render3(subject) {\n        d3.select('#chart3')\n            .selectAll('button')\n            .classed('on', false)\n        d3.select('#chart3')\n            .select('.' + subject)\n            .attr('class', subject + ' on')\n\n        const bars = d3.select('#chart3')\n            .selectAll('div')\n            .data(data3, function(d) {\n                return d.name\n            })\n        const newBars = bars.enter()\n            .append('div')\n                .attr('class', 'bar')\n                .style('width', 0)\n        newBars.merge(bars)\n            .transition()\n            .style('width', function(d) {\n                return (d[subject]-50)*3 + 'px'\n            })\n    }\n    render3('math')\n</script>\n -->\n\n## Final Thoughts\n\nI express how fun this was.  I have always viewed d3 as something so low level I would never be able to touch.  The tutorial was super fun and very approachable.  Any other resources that I have seen to start learning d3 appear to be very time consuming before you start writing code and digging into it yourself. These examples were great, I was able to get started creating visualizations in no more than 5 minutes of reading.  Now that I feel like I have a shallow understanding of how it works I feel better prepared to dive in.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/strip-trailing-whitespace'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Strip Trailing Whitespace from Git projects</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/cherry-pick'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to use git cherry pick</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-05-05", "category": "Viz", "summary": "Creating my First d3.js viz by following along with Ben Clinkinbeard's d3 in 5 days email.", "edit_link": "https://github.com/edit/main/pages/blog/d3-day3.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573088", "datetime": "2018-05-05 00:00:00+00:00", "slug": "d3-day3", "jinja": false, "output_html": "markout/d3-day3/index.html", "long_description": "I recently subscribed to Ben Clinkinbeard D3 is the ubiquitous dynamic visualization library for building custom interactive visualizations on the web.  It is a bit low level, and more verbose than many other libraries that build upon it, but if you ", "super_description": "I recently subscribed to Ben Clinkinbeard D3 is the ubiquitous dynamic visualization library for building custom interactive visualizations on the web.  It is a bit low level, and more verbose than many other libraries that build upon it, but if you want full control D3 is the way to go.  I have used a few libraries built upon d3 in the past and have been very happy with the results.  For now I want to start learning a bit about how d3 works.  I know that learning it is going to take a long time", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506910d0>, next=<frontmatter.Post object at 0x7f345068a580>)"}, {"cover": "", "title": "Strip Trailing Whitespace from Git projects", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/strip-trailing-whitespace.md", "description": "A common linting error thrown by various linters is for trailing whitespace.  I read more about pre-commit ", "content": "A common linting error thrown by various linters is for trailing whitespace.  I\nmost often use flake8.  I generally have\n[pre-commit]([https://waylonwalker.com/pre-commit-is-awesome](https://waylonwalker.com/pre-commit-is-awesome/)\nhooks setup to strip this,\nbut sometimes I run into situations where I jump into a project without it, and\nmy editor lights up with errors.  A simple fix is to run this one-liner.\n\n## One-Liner to strip whitespace\n\n_<small><mark>bash</mark></small>_\n``` bash\ngit grep -I --name-only -z -e '' | xargs -0 sed -i -e 's/[ \\t]\\+\\(\\r\\?\\)$/\\1/'\n```\n\n\n\n<p style='text-align: center' align='center'>\n<a href='https://waylonwalker.com/pre-commit-is-awesome'>\n  <img\n    style='width:400px; max-width:80%; margin: auto;'\n    width='400'\n    src=\"https://images.waylonwalker.com/pre-commit-is-awesome.png\"\n    alt=\"pre-commit article\"\n  />\n  </a>\n</p>\n\nread more about pre-commit [here](https://waylonwalker.com/pre-commit-is-awesome).\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/supercharge-zsh-startup'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Supercharge Zsh Startup</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/stories_10-10-2020_10-21-2020'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>A brain dump of stories</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-09-30", "edit_link": "https://github.com/edit/main/pages/blog/strip-trailing-whitespace.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573094", "datetime": "2020-09-30 00:00:00+00:00", "slug": "strip-trailing-whitespace", "jinja": false, "output_html": "markout/strip-trailing-whitespace/index.html", "long_description": "A common linting error thrown by various linters is for trailing whitespace.  I read more about pre-commit ", "super_description": "A common linting error thrown by various linters is for trailing whitespace.  I read more about pre-commit ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506401f0>, next=<frontmatter.Post object at 0x7f34506a19d0>)"}, {"cover": "", "title": "remove git cruft", "tags": ["git"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/git-rm-cruft.md", "description": "https://blog.ostermiller.org/removing-and-purging-files-from-git-history/", "content": "## inspiration\n\nhttps://blog.ostermiller.org/removing-and-purging-files-from-git-history/\n\n``` bash\ngit log --all --pretty=format: --name-only --diff-filter=D | sed -r 's|[^/]+$||g' | sort -u\n```\n``` bash\ngit filter-branch --tag-name-filter cat --index-filter 'git rm -r --cached --ignore-unmatch FILE_LIST' --prune-empty -f -- --all\n```\n\n``` bash\nrm -rf .git/refs/original/\ngit reflog expire --expire=now --all\ngit gc --aggressive --prune=now\n```\n\n``` bash\ngit push origin --force --all\ngit push origin --force --tags\n```\n\n``` bash\ncd MY_LOCAL_GIT_REPO\ngit fetch origin\ngit rebase\ngit reflog expire --expire=now --all\ngit gc --aggressive --prune=now\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/install-micromamba'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to Install micromamba on linux (from the comamnd line only)</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/strip-trailing-whitespace'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Strip Trailing Whitespace from Git projects</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-21", "edit_link": "https://github.com/edit/main/pages/blog/git-rm-cruft.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573100", "datetime": "2019-01-21 00:00:00+00:00", "slug": "git-rm-cruft", "jinja": false, "output_html": "markout/git-rm-cruft/index.html", "long_description": "https://blog.ostermiller.org/removing-and-purging-files-from-git-history/", "super_description": "https://blog.ostermiller.org/removing-and-purging-files-from-git-history/", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691670>, next=<frontmatter.Post object at 0x7f34506910d0>)"}, {"cover": "", "title": "How to Install micromamba on linux (from the comamnd line only)", "tags": ["bash", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/install-micromamba.md", "description": "I really like using conda ( Mamba is a reimplementation of the conda package manager in C++. parallel downloading of repository data and package files using mul", "content": "I really like using conda (`miniconda`) as my python virtual environment\nmanager of choice.  It's simple and it includes its own python interpreter\nusing the version that I specify at creation.\n\n## Mamba\n\n_from their [readme](https://github.com/mamba-org/mamba)_\n\n---\n\nMamba is a reimplementation of the conda package manager in C++.\n\n* parallel downloading of repository data and package files using multi-threading\n* libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE\n* core parts of mamba are implemented in C++ for maximum efficiency\n\nAt the same time, mamba utilize the same command line parser, package\ninstallation and deinstallation code and transaction verification routines as\nconda to stay as compatible as possible.\n\n---\n\n\n## Installing Micromamba\n\nSimilar to miniconda micromamba can be installed with a few lines of bash\n\n``` bash\nwget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba\n./bin/micromamba shell init -s bash -p ~/micromamba\nsource ~/.bashrc\n```\n\n## Creating Environments with Micromamba\n\nCreating new environments with micromamba is pretty similar to using conda.\n\n``` bash\nmicromamba create -n mamba-new python=3.9 -y -c conda-forge\n```\n\n## -c is required\n\nI was unable to figure out how to configure channels to `micromamba`, so I\nneeded to add `-c conda-forge` to my commands.\n\n\n``` bash\n                                           __\n          __  ______ ___  ____ _____ ___  / /_  ____ _\n         / / / / __ `__ \\/ __ `/ __ `__ \\/ __ \\/ __ `/\n        / /_/ / / / / / / /_/ / / / / / / /_/ / /_/ /\n       / .___/_/ /_/ /_/\\__,_/_/ /_/ /_/_.___/\\__,_/\n      /_/\n\nWARNING No 'channels' specified\nEncountered problems while solving:\n  - nothing provides requested python 3.9**\n\nERROR   Could not solve for environment specs\n```\n\n> \u26a0 micromamba thows this error when `-c conda-forge` is missing from the create command.\n\n## Speed\n\nmicromamba is built for speed.  I tried it out in a replit.com session, while\nit felt quite snappy creating a new environment was still within a few seconds\nof conda on subsequent environment creations.  Their marketing says it should\nbe faster, but for what I use conda for I didn't see it.\n\n## pip\n\nI used conda install years ago while on windows machines struggling to compile\nc-extensions and install certain troublesome packages, but I haven't used a\n`conda install` in years, pip works just fine for my use.\n\n## Useful Links\n\n* GitHub: https://github.com/mamba-org/mamba\n* Gitter: https://gitter.im/QuantStack/Lobby\n* Documentation: https://mamba.readthedocs.io/en/latest/\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/install-miniconda'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to Install miniconda on linux (from the command line only)</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/if_name_main'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What is if __name__ == \"__main___\", and how do I use it.</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-21", "edit_link": "https://github.com/edit/main/pages/blog/install-micromamba.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573108", "datetime": "2021-04-21 00:00:00+00:00", "slug": "install-micromamba", "jinja": false, "output_html": "markout/install-micromamba/index.html", "long_description": "I really like using conda ( Mamba is a reimplementation of the conda package manager in C++. parallel downloading of repository data and package files using multi-threading libsolv for much faster dependency solving, a state of the art library used i", "super_description": "I really like using conda ( Mamba is a reimplementation of the conda package manager in C++. parallel downloading of repository data and package files using multi-threading libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE core parts of mamba are implemented in C++ for maximum efficiency At the same time, mamba utilize the same command line parser, package Similar to miniconda micromamba can be installed with a ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3040>, next=<frontmatter.Post object at 0x7f3450685a00>)"}, {"cover": "", "title": "gatsby-remark-embedder", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/gatsby-remark-embedder.md", "description": "Inspired by discourse's link expansion I am rolling out expansions for one line links on the blog", "content": "<iframe src=\"https://anchor.fm/waylon-walker/embed/episodes/gatsby-remark-embedder-en6l3j\" height=\"102px\" width=\"400px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n\nInspired by discourse's link expansion I am rolling out expansions for one line\nlinks on the blog [waylonwalker](https://waylonwalker.com).  I was able to find\na gatsby plugin\n[gatsby-remark-embedder](https://www.gatsbyjs.com/plugins/gatsby-remark-embedder/?=embed)\nthat expands one line links for social cards for popular platforms like twitter\nand YouTube through a repose from Kyle Mathews to my tweet.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"und\" dir=\"ltr\">yes! <a href=\"https://t.co/IKmXijS9IT\">https://t.co/IKmXijS9IT</a></p>&mdash; Kyle Mathews (@kylemathews) <a href=\"https://twitter.com/kylemathews/status/1329817928666005504?ref_src=twsrc%5Etfw\">November 20, 2020</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n## Use Cases\n\nThis covers a couple of use cases I have with very little effort.\n\n* Twitter\n* YouTube\n\n## install\n\n``` bash\nnpm i gatsby-remark-embedder gatsby-plugin-twitter\n```\n\nThis was super quick and simple to setup, the only thing that was extra was to\ninstall the `gatsby-plugin-twitter` plugin as well as the\n`gatsby-remark-embedder`.\n\n## enable\n\n``` javascript\n// In your gatsby-config.js\n\nmodule.exports = {\n  // Find the 'plugins' array\n  plugins: [\n    `gatsby-plugin-twitter`,\n    {\n      resolve: `gatsby-transformer-remark`,\n      options: {\n        plugins: [\n          {\n            resolve: `gatsby-remark-embedder`,\n            options: {\n              customTransformers: [\n                // Your custom transformers\n              ],\n              services: {\n                // The service-specific options by the name of the service\n              },\n            },\n          },\n\n          // Other plugins here...\n        ],\n      },\n    },\n  ],\n};\n```\n\nThats it, now I can embed tweets and YouTube videos by just leaving the link on a single line.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gatsby-scripts-with-onload'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gatsby Scripts with onload</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/fuzzy-edit-zsh'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Open files FAST from zsh | or bash if thats your thing</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-18", "edit_link": "https://github.com/edit/main/pages/blog/gatsby-remark-embedder.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573113", "datetime": "2020-11-18 00:00:00+00:00", "slug": "gatsby-remark-embedder", "jinja": false, "output_html": "markout/gatsby-remark-embedder/index.html", "long_description": "Inspired by discourse https://twitter.com/kylemathews/status/1329817928666005504 This covers a couple of use cases I have with very little effort. Twitter YouTube This was super quick and simple to setup, the only thing that was extra was to Thats it", "super_description": "Inspired by discourse https://twitter.com/kylemathews/status/1329817928666005504 This covers a couple of use cases I have with very little effort. Twitter YouTube This was super quick and simple to setup, the only thing that was extra was to Thats it, now I can embed tweets and YouTube videos by just leaving the link on a single line.", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452909910>, next=<frontmatter.Post object at 0x7f345067f1f0>)"}, {"cover": "", "title": "\u2699 How Python Tools Are Configured", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/python-tool-config.md", "description": "There are various ways to configure python tools, config files, code, or This will not include how they are implemented, I The motivation of this article is to ", "content": "There are various ways to configure python tools, config files, code, or\nenvironment variables.  Let's look at a few projects that allow users to\nconfigure them through the use of config files and how they do it.\n\n## Motivation\n\nThis will not include how they are implemented, I've looked at a few and its\nnot simple.  This will focus on where config is placed and the order in which\nduplicates are resolved.\n\nThe motivation of this article is to serve as a bit of a reference guide for\nthose who may want to create their own package that needs configuration.\n\n## Flake8\n\n### Global\n\nUser settings can exist in the users `~/.config/flake8` file to configure how\nflake8 runs on their machine.\n\n* `~/.config/flake8`\n\n### Per-Project\n\nOnly One project config file will be considered, but allows for several\noptions.  These files all use the `ini` format and must have a `[flake8]`\nsection  header to be consideered.\n\nSelection of the config file can also be overridden by the `--config` cli option.\n\nAn extra config file may be selected as `--append-config`.  It will be read in\nlast and take highest precedence.\n\n* `tox.ini`\n* `setup.cfg`\n* `.pep8`\n* `.flake8`\n\n## Example Config\n\n_valid in any of the supported files_\n\n``` ini\n[flake8]\nmax-line-length = 88\nextend-ignore = E203, W503\n```\n\n### Options\n\nThe number of options configured through config files is fairly short for `flake8`.\n\n* exclude\n* filename\n* select\n* ignore\n* max-line-length\n* format\n* max-complexity\n\n## Black\n\nBlack only supports `TOML` file formats for configuration.\n\n### Global\n\nBlack provides no global config support.  If you really needed one I guess you\ncould make a cli alias.\n\n### Per-Project\n\nBlack states that it includes sane defaults that do not need configured, but if\nyou need to do so it only supports `pyproject.toml` or cli arguments.\n\nPersonally I believe that a lot of work went into making these sane defaults\nreally good.  I personally do not make any configuration changes to black.\n\n* pyproject.toml\n\n## Example\n\n_pyproject.toml_\n\n``` toml\n[tool.black]\nline-length = 88\ntarget-version = ['py37']\ninclude = '\\.pyi?$'\nexclude = '''\n\n(\n  /(\n      \\.eggs         # exclude a few common directories in the\n    | \\.git          # root of the project\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n  )/\n  | foo.py           # also separately exclude a file named foo.py in\n                     # the root of the project\n)\n'''\n```\n\n## Resolution\n\nBlack will use teh `pyproject.toml` file for configuration, then make any\naddional overrides through the use of command line arguments.\n\n## MyPy\n\n`mypy` takes the cake for the most complex configuration.  Primarily because\nyou can configure how it treats different modules specifically.  These modules\nmay be inside your codebase or installed and imported in.\n\n### Per-Project\n\n* --config-file\n* mypy.ini\n* .mypy.ini\n\n### Global\n\n* $XDG_CONFIG_HOME/mypy/config\n* ~/.config/mypy/config\n* ~/.mypy.ini\n\n### Resolution\n\n* --config-file\n* mypy.ini\n* .mypy.ini\n* setup.cfg\n* $XDG_CONFIG_HOME/mypy/config\n* ~/.config/mypy/config\n* ~/.mypy.ini\n\n### Example\n_mypy.ini_\n\n```\n# Global options:\n\n[mypy]\npython_version = 2.7\nwarn_return_any = True\nwarn_unused_configs = True\n\n# Per-module options:\n\n[mypy-mycode.foo.*]\ndisallow_untyped_defs = True\n\n[mypy-mycode.bar]\nwarn_return_any = False\n\n[mypy-somelibrary]\nignore_missing_imports = True\n```\n\n## Kedro - framework\n\nKedro is a unique one here.  It offers two distinctly different configurations,\none for how the framework behaves and the other for actual project config.\n\nKedro does utilizes a `settings.py` and `pyproject.toml` to define a bit more\nof the framework settings.  These are the outter layer of your project.\n\n\nThese files sit at the root of the project.\n\n### [pyproject.toml](https://github.com/quantumblacklabs/kedro/blob/fb88cc2504ddbfc93b9b859ca436130b396b93c4/docs/source/12_faq/02_architecture_overview.md#pyprojecttoml)\n\nThis replaces much of what used to be specified in run.py.\n\n* package_name\n* project_name\n* project_version\n* source_dir\n\n### [Settings.py](https://github.com/quantumblacklabs/kedro/blob/fb88cc2504ddbfc93b9b859ca436130b396b93c4/docs/source/12_faq/02_architecture_overview.md#settingspy)\n\n* DISABLE_HOOKS_FOR_PLUGINS\n* HOOKS\n* SESSION_STORE_CLASS\n* SESSION_STORE_ARGS\n* CONTEXT_CLASS\n\n## Kedro - project\n\nWithin the project generally in the `src/conf` directory kedro allows you to\nset both local and base configurations.  Local configurations will be git\nignored and most commonly used for credentials.\n\n* catalog\n* logging\n* credentials\n\n\n### Config Loader\n\nKedro lets you setup the config loader if you choose to do so.  You can\nconfigure the directories to look in as well as the glob pattern for files.\n\n``` python\nfrom kedro.config import ConfigLoader\n\nconf_paths = [\"conf/base\", \"conf/local\"]\nconf_loader = ConfigLoader(conf_paths)\nconf_catalog = conf_loader.get(\"catalog*\", \"catalog*/**\")\n```\n\n### additional envs\n\nAdditional to the `base` and `local` config, kedro lets you specify an env at\nruntime through a `--env` argumet or a `KEDRO_ENV` variable.  setting this will\nadditionally tell kedro to reach into `conf/<env-name>` for configuration.\n\n### Resolution Order\n\nkedro will load each config starting from `base`, `local`, then `env` and will\noverrite any colllisions along the way.\n\n\n**precedence heirarchy**\n\n* env\n* local\n* base\n\n### Jinja Support\n\nAs of `0.17.0` kedro supports jinja2 templates in its yml configuration files.\nThis is quite beneficial as catalogs can become incredebly repetative.\n\n``` yaml\n\nfast-trains:\n    type: MemoryDataSet\n\nfast-cars:\n    type: pandas.CSVDataSet\n    filepath: s3://${bucket_name}/fast-cars.csv\n    save_args:\n        index: true\n\n\nslow-trains:\n    type: MemoryDataSet\n\nslow-cars:\n    type: pandas.CSVDataSet\n    filepath: s3://${bucket_name}/slow-cars.csv\n    save_args:\n        index: true\n\n\n```\n\n## pytest\n\nCurrently pytest is configured \n\n## resolution order\n\n`pytest` will look for the existence of each of these files, if its a match it\nwill stop looking for new files, even if the file is empty.\n\n* `pytest.ini`\n* `pyproject.toml` with `[tool.pytest.ini_options]`\n* `tox.ini` with `[pytest]`\n* `setup.cfg` with `[tool:pytest]`\n\n## Multiple Config\n\n`pytest` is a bit unique here in that it allows for multiple configs.  There is\na complex resolution for module specific configuration, but essentially it does\nthe resolution highlighted above through a number of directories and returns\nthe config closest to the test module.\n\n## Example pytest config\n\n\n``` ini\n# pytest.ini\n[pytest]\nminversion = 6.0\naddopts = -ra -q\ntestpaths =\n    tests\n    integration\n```\n\n## Command Line Options\n\nAs far as I am aware every option specified in a config file can also be\nconfigured or overridden at the command line.\n\n## ipython\n\n`Ipython` is configured completely at a system level with python scripts within\nthe users `~/.ipython/` directory.  The user may have multiple profiles that\ncan be created by running `ipython profile create [profilename]` or specified\nby running `ipython --profile=[profilename]`\n\n### Config Directory\n\nBy default this is `~/.ipython`, but an be configured by setting the\n`IPYTHONDIR` environment variable or `--ipython-dir=<path>` command line\noption.\n\n### Example Config\n\n``` python\n# sample ipython_config.py\nc = get_config()\n\nc.TerminalIPythonApp.display_banner = True\nc.InteractiveShellApp.log_level = 20\nc.InteractiveShellApp.extensions = [\n    'myextension'\n]\nc.InteractiveShellApp.exec_lines = [\n    'import numpy',\n    'import scipy'\n]\nc.InteractiveShellApp.exec_files = [\n    'mycode.py',\n    'fancy.ipy'\n]\nc.InteractiveShell.autoindent = True\nc.InteractiveShell.colors = 'LightBG'\nc.InteractiveShell.confirm_exit = False\nc.InteractiveShell.deep_reload = True\nc.InteractiveShell.editor = 'nano'\nc.InteractiveShell.xmode = 'Context'\n\nc.PromptManager.in_template  = 'In [\\#]: '\nc.PromptManager.in2_template = '   .\\D.: '\nc.PromptManager.out_template = 'Out[\\#]: '\nc.PromptManager.justify = True\n\nc.PrefilterManager.multi_line_specials = True\n\nc.AliasManager.user_aliases = [\n ('la', 'ls -al')\n]\n```\n\n### CommandLine Overrides\n\nEvery configurable value can be overridden from the command line.\n\n``` bash\nipython --ClassName.attribute=value\n```\n\n### Config Magic\n\nConfiguration can be overridden at runtime with the `%config` magic.\n\n``` python\n%config IPCompleter.greedy = True\n```\n\n### Startup\n\nEvery ipython profile has a startup directory where it will execute each `.py`\nand `.ipy` file on startup.  You can make additional configuration here, import\nmodules you want readily available, execute literally any python code you want\nto at the startup of that particular profile.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/practice-your-craft'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Practice your craft</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gatsby-remark-embedder'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>gatsby-remark-embedder</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-21", "edit_link": "https://github.com/edit/main/pages/blog/python-tool-config.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573119", "datetime": "2021-01-21 00:00:00+00:00", "slug": "python-tool-config", "jinja": false, "output_html": "markout/python-tool-config/index.html", "long_description": "There are various ways to configure python tools, config files, code, or This will not include how they are implemented, I The motivation of this article is to serve as a bit of a reference guide for User settings can exist in the users  ~/.config/fl", "super_description": "There are various ways to configure python tools, config files, code, or This will not include how they are implemented, I The motivation of this article is to serve as a bit of a reference guide for User settings can exist in the users  ~/.config/flake8 Only One project config file will be considered, but allows for several Selection of the config file can also be overridden by the  An extra config file may be selected as  tox.ini setup.cfg .pep8 .flake8 The number of options configured through", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691790>, next=<frontmatter.Post object at 0x7f34506911f0>)"}, {"cover": "", "title": "Practice your craft", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/practice-your-craft.md", "description": "prev PyOhio CFP's next \u2699 How Python Tools Are Configured", "content": "## Show up For Practice\n\n## how I practice\n\n## What Works for You\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pyohio-cfp'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>PyOhio CFP's</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-tool-config'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\u2699 How Python Tools Are Configured</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-03-04", "edit_link": "https://github.com/edit/main/pages/blog/practice-your-craft.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573125", "datetime": "2020-03-04 00:00:00+00:00", "slug": "practice-your-craft", "jinja": false, "output_html": "markout/practice-your-craft/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f6a0>, next=<frontmatter.Post object at 0x7f3450691310>)"}, {"cover": "", "title": "PyOhio CFP's", "tags": ["python", "python", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/pyohio-cfp.md", "description": "https://pretalx.com/pyohio-2022/cfp Markata is a plugins all the way down static site generator, that covers all Lets build a whole blog site in 5 minutes. Some", "content": "https://pretalx.com/pyohio-2022/cfp\n\n## Idea to blog post in minutes - Shorter\n\nMarkata is a plugins all the way down static site generator, that covers all\nthe things you need to go from markdown to a blog site out of the box.  Since\nit's plugins all the way down you can also rip out all the default plugins, and\ndo something completely different with the lifecycle.\n\nLets build a whole blog site in 5 minutes.\n\n## Add Kedro to your Pandas Workflow - Short\n\nSometimes python scripts/notebooks take a long time to run, let kedro\nautomatically save your datasets so that you can maintain your production code\nwith ease.  Lets take a pipeline with an issue 30 minutes in and solve the\nissue in 5 mintues.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/custom-ipython-prompt'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Custom Ipython Prompt</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/practice-your-craft'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Practice your craft</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-12", "edit_link": "https://github.com/edit/main/pages/blog/pyohio-cfp.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573130", "datetime": "2022-04-12 00:00:00+00:00", "slug": "pyohio-cfp", "jinja": false, "output_html": "markout/pyohio-cfp/index.html", "long_description": "https://pretalx.com/pyohio-2022/cfp Markata is a plugins all the way down static site generator, that covers all Lets build a whole blog site in 5 minutes. Sometimes python scripts/notebooks take a long time to run, let kedro", "super_description": "https://pretalx.com/pyohio-2022/cfp Markata is a plugins all the way down static site generator, that covers all Lets build a whole blog site in 5 minutes. Sometimes python scripts/notebooks take a long time to run, let kedro", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691100>, next=<frontmatter.Post object at 0x7f3450691790>)"}, {"cover": "", "title": "Custom Ipython Prompt", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/custom-ipython-prompt.md", "description": "I If you already have an ipython config you can move on otherwise check out this https://waylonwalker.com/ipython-config/ I want something similar to the starsh", "content": "I've grown tired of the standard ipython prompt as it doesn't do much to give\nme any useful information.  The default one gives out a line number that only\nseems to add anxiety as I am working on a simple problem and see that number\ngrow to several hundred.  I start to question my ability \ud83e\udd26\u200d\u2642\ufe0f.\n\n## Configuration\n\n\nIf you already have an ipython config you can move on otherwise check out this\npost on creating an ipython config.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/ipython-config/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/ipython-config-og_250x140.png\" alt=\"article cover for \n Ipython-Config\n\"/>\n          <p><strong>\n Ipython-Config\n</strong></p>\n      </a>\n  </div>\n\n\n## The Dream Prompt\n\nI want something similar to the starship prompt I am using in the\nshell.  I want to be able to quickly see my python version,\nenvironment name, and git branch.\n\n* python version\n* active environment\n* git branch\n\n![my zsh prompt](https://images.waylonwalker.com/my-zsh-prompt.png)\n\n> This is my zsh prompt I am using for inspiration\n\n## Basic Prompt\n\nThis is mostly boilerplate that I found from various google\nsearches, but this gets me a basic green chevron as my prompt.\n\n``` python\nfrom IPython.terminal.prompts import Prompts, Token\n\nclass MyPrompt(Prompts):\n    def in_prompt_tokens(self, cli=None):\n        return [ ( Token.Prompt, \"\u276f \",), ]\n\n    def out_prompt_tokens(self, cli=None):\n        return []\n\nip = get_ipython()\nip.prompts = MyPrompt(ip)\n\n```\n\n> The rest of this post will build off of this boilerplate and add\n> to the `in_prompt_tokens` method of MyPrompt\n\n## Colors\n\nI mostly set the colors of my prompt throughout this post by guessing and\ntrying different attributes under the Token.\n\n## Red If Error\n\nI found that the `Prompts` subclass has many of the same methods as the ipython\nobject, so I would often use that for inspection.  Looking through the ipython\nclass I found a boolean under `shell.last_execution_succeeded` that would give\nme if the last execution was successful or not.  I did an inline if statemetn\nto set the color to a `Token.Generic.Error` if this was false.\n\n``` python\ndef in_prompt_tokens(self, cli=None):\n    return [\n        (\n            Token.Prompt\n            if self.shell.last_execution_succeeded\n            else Token.Generic.Error,\n            \"\u276f \",\n        ),\n    ]\n```\n\n## Python Version\n\nNext up to list out the python version that is running.  I grabbed the version\nfrom `platform.python_version`, this seemed to get me the most concise version\nthat I was looking for to match the starship prompt.\n\n_<small><mark>update imports</mark></small>_\n``` python\nfrom platform import python_version\n```\n\n_<small><mark>update prompt</mark></small>_\n``` python\ndef in_prompt_tokens(self, cli=None):\n    return [\n        (\n            (Token.Name.Class, \"v\" + python_version()),\n            (Token, \" \"),\n            Token.Prompt\n            if self.shell.last_execution_succeeded\n            else Token.Generic.Error,\n            \"\u276f \",\n        ),\n    ]\n```\n\n## Python environment\n\nSince I use conda for my environments I chose to pull the name of the\nenvironment from the `CONDA_DEFAULT_ENV` environment variable that is set by\nconda when you change your environment.\n\n_<small><mark>update imports</mark></small>_\n``` python\nfrom platform import python_version\nimport os\n```\n\n_<small><mark>update prompt</mark></small>_\n``` python\ndef in_prompt_tokens(self, cli=None):\n    return [\n        (\n            (Token.Prompt, \"\u00a9\"),\n            (Token.Prompt, os.environ[\"CONDA_DEFAULT_ENV\"]),\n            (Token, \" \"),\n            (Token.Name.Class, \"v\" + python_version()),\n            (Token, \" \"),\n            Token.Prompt\n            if self.shell.last_execution_succeeded\n            else Token.Generic.Error,\n            \"\u276f \",\n        ),\n    ]\n```\n\n## Git Branch\n\nGit branch was a bit tricky.  There might be a better way to get it,\nbut I was sticking with things I knew, the git cli and python.  I\ndid need to do a bit of googling to figure out that git has a\n`--show-current` option.\n\n_<small><mark>getting the current git branch</mark></small>_\n``` python\ndef get_branch():\n    try:\n        return (\n            subprocess.check_output(\n                \"git branch --show-current\", shell=True, stderr=subprocess.DEVNULL\n            )\n            .decode(\"utf-8\")\n            .replace(\"\\n\", \"\")\n        )\n    except BaseException:\n        return \"\"\n```\n\n**NOTE**  If this is run form a non-git directory you will quickly find git\nerrors after every command as this function tries to ask for the git branch.\nSending stderr to devnull will avoid this inconvenience.\n\n_<small><mark>add git branch to prompt</mark></small>_\n``` python\ndef in_prompt_tokens(self, cli=None):\n    return [\n        (\n            (Token.Generic.Subheading, \"\u21aa\"),\n            (Token.Generic.Subheading, get_branch()),\n            (Token, \" \"),\n            (Token.Prompt, \"\u00a9\"),\n            (Token.Prompt, os.environ[\"CONDA_DEFAULT_ENV\"]),\n            (Token, \" \"),\n            (Token.Name.Class, \"v\" + python_version()),\n            (Token, \" \"),\n            Token.Prompt\n            if self.shell.last_execution_succeeded\n            else Token.Generic.Error,\n            \"\u276f \",\n        ),\n    ]\n```\n\n## Add current directory name\n\nI am a big fan of pathlib so that is what I will use to get the path. If I\nplanned on using python `<3.6` I would probably use something else, but this is\nwhat I know and I can't think of the last time I used `<3.6>` for anything.\n\n_<small><mark>update imports</mark></small>_\n``` python\nfrom pathlib import Path\n```\n\n\n_<small><mark>add git branch to prompt</mark></small>_\n``` python\ndef in_prompt_tokens(self, cli=None):\n    return [\n        (\n            (Token, \"\"),\n            (Token.OutPrompt, Path().absolute().stem),\n            (Token, \"\"),\n            (Token.Generic.Subheading, \"\u21aa\"),\n            (Token.Generic.Subheading, get_branch()),\n            (Token, \" \"),\n            (Token.Prompt, \"\u00a9\"),\n            (Token.Prompt, os.environ[\"CONDA_DEFAULT_ENV\"]),\n            (Token, \" \"),\n            (Token.Name.Class, \"v\" + python_version()),\n            (Token, \" \"),\n            Token.Prompt\n            if self.shell.last_execution_succeeded\n            else Token.Generic.Error,\n            \"\u276f \",\n        ),\n    ]\n```\n\n## Final Script\n\nThat's it for my prompt at the moment.  I have been using it for about a week.\nIt seems to have everything I need so far, and skips on things I don't need.\n\n\nEnjoy the full script.\n\n_<small><mark>my final prompt</mark></small>_\n``` python\nfrom IPython.terminal.prompts import Prompts, Token\nfrom pathlib import Path\nimport os\nfrom platform import python_version\nimport subprocess\n\ndef get_branch():\n    try:\n        return (\n            subprocess.check_output(\n                \"git branch --show-current\", shell=True, stderr=subprocess.DEVNULL\n            )\n            .decode(\"utf-8\")\n            .replace(\"\\n\", \"\")\n        )\n    except BaseException:\n        return \"\"\n\n\nclass MyPrompt(Prompts):\n    def in_prompt_tokens(self, cli=None):\n        return [\n            (Token, \"\"),\n            (Token.OutPrompt, Path().absolute().stem),\n            (Token, \" \"),\n            (Token.Generic.Subheading, \"\u21aa\"),\n            (Token.Generic.Subheading, get_branch()),\n            (Token, \" \"),\n            (Token.Prompt, \"\u00a9\"),\n            (Token.Prompt, os.environ[\"CONDA_DEFAULT_ENV\"]),\n            (Token, \" \"),\n            (Token.Name.Class, \"v\" + python_version()),\n            (Token, \" \"),\n            (Token.Name.Entity, \"ipython\"),\n            (Token, \"\\n\"),\n            (\n                Token.Prompt\n                if self.shell.last_execution_succeeded\n                else Token.Generic.Error,\n                \"\u276f \",\n            ),\n        ]\n\n    def out_prompt_tokens(self, cli=None):\n        return []\n\n\nip = get_ipython()\nip.prompts = MyPrompt(ip)\n```\n\n## Want automatic imports??\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/pyflyby/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/pyflyby-og_250x140.png\" alt=\"article cover for \n Smoother Python with automatic imports | pyflyby\n\"/>\n          <p><strong>\n Smoother Python with automatic imports | pyflyby\n</strong></p>\n      </a>\n  </div>\n\n\n> This article covers how I setup automatic imports in ipython\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/custom-python-exceptions'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Custom Python Exceptions</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/crush-dev-to-posts'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to crush amazing posts on DEV</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-20", "edit_link": "https://github.com/edit/main/pages/blog/custom-ipython-prompt.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573136", "datetime": "2020-12-20 00:00:00+00:00", "slug": "custom-ipython-prompt", "jinja": false, "output_html": "markout/custom-ipython-prompt/index.html", "long_description": "I If you already have an ipython config you can move on otherwise check out this https://waylonwalker.com/ipython-config/ I want something similar to the starship prompt I am using in the python version active environment git branch This is my zsh pr", "super_description": "I If you already have an ipython config you can move on otherwise check out this https://waylonwalker.com/ipython-config/ I want something similar to the starship prompt I am using in the python version active environment git branch This is my zsh prompt I am using for inspiration This is mostly boilerplate that I found from various google The rest of this post will build off of this boilerplate and add I mostly set the colors of my prompt throughout this post by guessing and I found that the  N", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663580>, next=<frontmatter.Post object at 0x7f345067fe80>)"}, {"cover": "", "title": "My Content Strategy For 2021", "tags": ["blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/2021-content-strategy.md", "description": "I am making another push in 2021 to get my content out in the world and meeting users where they are.  See how I plan to execute. waylonwalker.com Twitter DEV h", "content": "I am making another push in 2021 to get my content out in the world and meeting users where they are.  See how I plan to execute.\n\n## Platforms\n\n* waylonwalker.com\n* Twitter\n* DEV\n* hashnode\n* Medium\n* LinkedIn\n* Anchor\n\n## Markdown\n\nMy content is written in markdown, all markdown.  I find that markdown does a really great job at getting out of the way and letting ideas flow onto the page.  I am never fussing with fonts and formatting while physically writing posts.   Not that I don't spend way more time than I need to tweak these things on my own personal site where everything gets posted.\n\n## Articles\n\nMuch of what I create is inside of short articles that get posted to my personal site [waylonwalker.com](https://waylonwalker.com).  These will get cross-posted to [DEV](https://dev.to/waylonwalker),\n[hashnode](https://h.waylonwalker.com/), [Medium](https://waylonwalker.medium.com/).\n\nI have made cross-posting a bit easier for myself by posting the markdown for each article next to the post on my personal site.  Add .md to any post and there is the source.\n\nShould I be giving my articles to Medium??  Personally, I am not a fan of the bait and switch that they did with adding a paywall years after launch.  From what I can tell authors are not getting paid much from it, users are discouraged when they are blocked, and they really only promote articles that are behind the paywall.\n\nIn the end, I am a fan of meeting users where they are, if they like Medium I don't want them to miss my content.\n\n## More Catalytic\n_soft skills_\n\nMy articles are very code-heavy, I do want to transition over to some more evergreen type of posts that are long-lasting.  I want to create some more content around how to be a good developer, data scientist, engineer, whatever you call yourself.\n\nPersonally, this is some of the content I enjoy consuming, but for some reason is not something I tend to create.\n\n## Slides\n\nI am really enjoying the slide output of my articles on\n[LinkedIn](https://www.linkedin.com/in/waylonwalker/detail/recent-activity/shares/). It makes for something that is unique and easy to digest.  I have a pandoc script that takes in the markdown from my posts and kicks out a set of slides, so it's quick and easy to do.  Not every post works well this way by many have so\nfar.\n\n![my linked in slide\nactivity](https://images.waylonwalker.com/linkedin-activity-slides.gif)\n\n## Threads\n\nWith less success (shares, views, likes) I have been converting articles over to Twitter threads as they are released, again not every article works well this way, but many do.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">What does it take to create an installable python package that can be hosted on pypi?<br><br>.<br>\u251c\u2500\u2500 setup .py<br>\u2514\u2500\u2500 my_module.py<br><br>\ud83e\uddf5\u25b6 <a href=\"https://t.co/G7V84Uk4IO\">pic.twitter.com/G7V84Uk4IO</a></p>&mdash; Waylon Walker \ud83d\udc0d (@_WaylonWalker) <a href=\"https://twitter.com/_WaylonWalker/status/1349716127887347717?ref_src=twsrc%5Etfw\">January 14, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n## Simplicity\n_just write markdown_\n\nIn the end, everything needs to be simple and build off of the original markdown post.  Automation should be in a place where it makes sense.  I am no longer manually creating cover art or article descriptions, those are scripted out of the article itself.\n\nI have come cli tooling in place to simplify my process. Expect more of that to come.\n\n## Audio\n\nI have set up a podcast where I read out my posts, but the time that I have available to read them is very constraining to the process.  It may be something that I figure out how to work out or something that I drop.  It's something that I think would be really nice, but still trying to figure out how to do it.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/audio-for-blog/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/audio-for-blog-og_250x140.png\" alt=\"article cover for \n Adding Audio to my blog posts\n\"/>\n          <p><strong>\n Adding Audio to my blog posts\n</strong></p>\n      </a>\n  </div>\n\n\nI personally really like this as I often find a cool blog article that I want to read, but it's time to cook dinner or drive somewhere.  Articles with audio make it super convenient to consume while doing a task requiring eye contact.\n\n## TLDR\n\nMeet Users Where They are.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/3-things-to-automate-with-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Three things to Automate with Python using Pandas</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/2020-rebrand'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>2020 waylonwalker.com rebrand</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-19", "edit_link": "https://github.com/edit/main/pages/blog/2021-content-strategy.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573144", "datetime": "2021-01-19 00:00:00+00:00", "slug": "2021-content-strategy", "jinja": false, "output_html": "markout/2021-content-strategy/index.html", "long_description": "I am making another push in 2021 to get my content out in the world and meeting users where they are.  See how I plan to execute. waylonwalker.com Twitter DEV hashnode Medium LinkedIn Anchor My content is written in markdown, all markdown.  I find th", "super_description": "I am making another push in 2021 to get my content out in the world and meeting users where they are.  See how I plan to execute. waylonwalker.com Twitter DEV hashnode Medium LinkedIn Anchor My content is written in markdown, all markdown.  I find that markdown does a really great job at getting out of the way and letting ideas flow onto the page.  I am never fussing with fonts and formatting while physically writing posts.   Not that I don Much of what I create is inside of short articles that ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e430>, next=<frontmatter.Post object at 0x7f34506a96a0>)"}, {"cover": "", "title": "2019 goals", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/goals-2019.md", "description": "2019 goals", "content": "<style>\nstrong {\n    /* color: goldenrod; */\n    /* text-shadow: 0rem 1px 1px goldenrod; */\n}\n</style>\n\n_The year of intenionality_\n\nThis is a follow up to my previous post [2018-retrospective](https://waylonwalker.com/2018-retrospective/)\n\n## professional\n\nThis year I will become more productive, by intensionally working on a well thought out plan, learning the right technologies, and leave behind a positive legacy.\n\n### Productivity\n\nLast year I was able to make some great strides in my productivity and focus.  This year I want to be able to bring it up a notch.  **Intentionality** plays a big part in this.  Taking some time to sit down and think about the tasks you realistically want to complete for the day, then focusing on those tasks one at a time.\n\nI started off the year last year using the **pomodoro** system to focus on one task and one task only for 25 minutes at a time.  This worked really well for me but I quickly fell off of the train and fell into my old trap of reacting to the loudest customer over the items I put **intensionally** on my todo list.\n\nA **kanban** system is key to keeping it intentional.  I currently use a very simple trello system, with very few cards.  This helps to stay on track during those 25 minutes.  During the pomodoro session I move an item from todo, to doing, work that item, then move it to done when it is ready.  The only other thing that I can do during that time is to add items to the todo list.\n\n---\n\n* pomodoro\n    * 8 pomodori\n* Daily session planning\n    * Back on inbox zero\n    * todo's go in kanban not inbox\n\n---\n\n### Leave a Legacy\n\nI want to leave behind a legacy that I can be proud of. I want to be known for bringing a positive attitude that inspires others to do their best work, enourage others, and work as a team.  It is in my blood to help as many people as I can.  I am in a unique role and have a unique skill set that allows me to do what would take some hours and days in minutes and hours.  I really enjoy helping these folks, but I know many of them are smart enough to do it on their own, they just do not know where to get started.  For this reason I really want to amp up my docs this year.  I want people to be able to answer 80% of their questions right from the docs before needing to come to me to get started.  I want this to be part of the legacy that I leave with my projects for the next person that encounters them.\n\n---\n\n* better docs\n    * 80% oss questions should be answered\n    * finish pea course\n    * all projects have docs page with link by Feb\n    * consistent docs format\n* bring positivity to the workplace\n* blog weekly (52)\n    * lower barier to entry\n    * consistently work on writing skills\n    * 12 Medium/LinkedIn\n\n---\n\n\n### Educational\n\nLast year I made monumental improvements to my web development while continuing to hone my backend skills.  This year I want to amp up my web front end skills even more. I am finding this to be an area that not very many people in my organization have and I can knock out some simple projects really quick and gain a lot of value.  Last year I started using **react** as a front end framework.  I want to double down learning the intricicies of how it works, and how to effectively layout a react project. I also want to keep upping my design skills.  As I do more layouts I find that they are easier and easier to layout, and as I am able to get them out faster it give me more time to hone in the design. Lastly I want to continue honing in my backend skills.  Working with data pipelines, Linux command line, the cloud, and database architecture.\n\n\n---\n\n* Advanced React _dynamic web applications_\n* Refactoring UI _Rethinking how to layout data in logical ways_\n* Service Workies\n* AWS?? _we are moving to the cloud_\n* Continue Leveling up Linux Command Line\n* Data Pipeline\n\n---\n\n## Personal\n\nAt home I want to continue being a positive person.  Home is much harder to keep up a good attitude.  Mostly because I care more about my family and its harder to walk away and forget about a bad interaction with them.  I want to make sure that we keep up more positive interactions together as that will help everyone keep the positive attitude.  Lastly I would like to keep in touch with family better.  Rhiannon really loves a nice message to boost her day.  I would like to send her a few longer messages per week, and to one other family member at least once per week.  This can be in the form of a text, email, or hard copy letter in the mail.\n\n---\n\n* be your best\n   * +3 positives everyday (300+)\n   * gratitude daily (300+)\n* 5 languages\n* letters to family\n\n---\n\n\n**Bring it on 2019**  I am ready to take it on!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/graceful-kedro-catalog'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gracefully adopt kedro, the catalog</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gitui'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gitui is a blazing fast terminal git interface</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-12", "edit_link": "https://github.com/edit/main/pages/blog/goals-2019.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573150", "datetime": "2019-01-12 00:00:00+00:00", "slug": "goals-2019", "jinja": false, "output_html": "markout/goals-2019/index.html", "long_description": "This is a follow up to my previous post  This year I will become more productive, by intensionally working on a well thought out plan, learning the right technologies, and leave behind a positive legacy. Last year I was able to make some great stride", "super_description": "This is a follow up to my previous post  This year I will become more productive, by intensionally working on a well thought out plan, learning the right technologies, and leave behind a positive legacy. Last year I was able to make some great strides in my productivity and focus.  This year I want to be able to bring it up a notch.   I started off the year last year using the  A  pomodoro 8 pomodori Daily session planning Back on inbox zero todo I want to leave behind a legacy that I can be pro", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1f70>, next=<frontmatter.Post object at 0x7f345067fc10>)"}, {"cover": "", "title": "What Are GitHub Actions", "tags": ["actions"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/what-are-github-actions.md", "description": "GitHub actions are an amazing tool that allows us to run code based on triggers I have been diving deep into Github actions for about a month now and they are w", "content": "GitHub actions are an amazing tool that allows us to run code based on triggers\ninside of our repo.  Their is a large and growing community of actions inside\nthe marketplace to use with very little effort.  Best of all they are free for\npublic repositories, and private repos have a very generous free tier.\n\n<style>\nh2 img { width: 100%; box-shadow: .5rem .5rem 3rem #141F2D, -.5rem -.5rem 3rem rgba(255,255,255,.1);}\nimg{ max-width: 100% !important;}\n</style>\n\nI have been diving deep into Github actions for about a month now and they are wicked good!  They allow you to run any sort of arbitrary code based on events in your repo, webhooks, or schedules.  They are very reasonably priced.  The interface that GitHub hs developed for them is top-notch!  It's so good I have done 90% of my editing of them right from github.com.\n\n## TLDR\n\n> some interaction to your repository **triggers** code to run.\n\n\n## ![Online Editor](https://images.waylonwalker.com/gh-actions-header-online-editor.png)\n\n\nThe online editor for actions is pretty amazing.  When creating a new workflow it automatically sets up a new blank workflow or a workflow from the marketplace for you in your `.github/workflows` directory.  This is all it takes to get an action running, a `yaml` or `yml` file in the `.github/workflows` directory.\n\n\n![github actions online editor](https://images.waylonwalker.com/gh-actions-editor.png \"github actions online editor\")\n\nThe editor does a great job of detecting syntax errors, misplaced keys.  It also does a great job at autocompletion.  As you type it will suggest keys that are accepted by the workflow syntax.  There is an embedded side pannel with docs and the marketplace to the right.\n\n\n## ![Event Triggering](https://images.waylonwalker.com/gh-actions-header-event-triggering.png)\n\n\nsee this article from GitHub for a full set of details: [https://help.github.com/en/actions/reference/events-that-trigger-workflows](https://help.github.com/en/actions/reference/events-that-trigger-workflows \"https://help.github.com/en/actions/reference/events-that-trigger-workflows\")\n\nYou can trigger actions to run based on about any interaction with the repo that you can imagine, push, PR, webhooks, follows, create a branch, delete a branch, deployment, fork, wiki, issues, comments, labels, milestones, just check out the GitHub article for the full list.\n\n\n### ![push/pr](https://images.waylonwalker.com/gh-actions-header-push-pr.png)\n\nThe most common and default trigger you will come across is the `on push`.  This means that on every push/pull_request the given action will run.  This is typically at the start of the file and will trigger the workflow for the whole file.\n\n``` yaml\n# Trigger the workflow on push or pull request\non: [push, pull_request]\n```\n\nYou can also filter to only run on specific branches.  You probably only want to run your release workflow on the main branch, but want linting and testing on all branches.\n\n``` yaml\npush:\n  branches:\n   - main\npull_request:\n  branches:\n    - main\n\n```\n### ![schedule](https://images.waylonwalker.com/gh-actions-header-schedule.png)\n\nIt is also possible to set up your workflows to run on a schedule.  I have set a few of these up myself to do things such as updating/auditing npm dependencies and checking if the site is up.\n\n``` yaml\non:\n  schedule:\n    # * is a special character in YAML so you have to quote this string\n    - cron:  '*/15 * * * *'\n```\n\n### ![watch](https://images.waylonwalker.com/gh-actions-header-watch.png)\n\nOne issue that I have with GitHub actions is that there really isn't a good way to manually run workflows.  A workaround I found is that you can run a workflow when the repo is starred.\n\n``` yaml\non:\n  watch:\n    types: [ started ]\n```\n\nIf you have a public repo with some traction, you might want to avoid this hack, but if you did want to use it on a repo that may potentially get some stars randomly make sure that you filter to only your stars.\n\n``` yaml\non:\n  watch:\n    types: [ started ]\n\njobs:\n  run-on-star:\n    runs-on: ubuntu-latest\n    steps:\n      - name: \u2728 you starred your own repo\n        if: github.actor == 'WaylonWalker'\n```\n\n\n## ![Free for public repositories](https://images.waylonwalker.com/gh-actions-header-free.png)\n\nGitHub offers quite a generous free tier to get you started.\n\n![gh-actions-free-tier](https://images.waylonwalker.com/gh-actions-free-tier.png \"github actions free tier\")\n\nI think that GitHub's pricing just shows its commitment to the open-source.  Any public repo has unlimited build minutes!  I believe this goes for not only Linux actions, but  the more expensive windows and mac actions as well.\n\n![github actions free for public repos](https://images.waylonwalker.com/gh-actions-free--for-public.png \"GitHub actions free for public repos\")\n\n\n## ![Secrets](https://images.waylonwalker.com/gh-actions-header-secrets.png)\n\nYou will find that a lot of actions need things such as a GitHub personal access token.  You may even be hitting a third party API such as twitter or Gmail that require an API key.  These are things that need to be kept secret **DO NOT** put these as raw text inside your action.  The first tutorial I followed to deploy to GitHub pages did this \ud83e\udd26\u200d\u2642\ufe0f and I followed.\n\n\n![github built-in secret store](https://images.waylonwalker.com/gh-actions-built-in-secret-store.png \"GitHub built-in secret store\")\n\nGitHub offers a wonderful secrets manager.  From your repository go to settings > secrets.  You can just add settings/secrets to the URL of your repo to get there as well.  From there add a new secret.  Now your secret is accessible by secret key using `${{ secrets.<your-key> }}` from anywhere in your workflows `yml` file.\n\nGitHub has done an amazing job at hiding these secrets.  Anywhere that I have seen try to echo these secrets out into the console or anywhere just shows ***.  I am not sure if you can 100% rely on this, but they appear to have done a good job with it.\n\n## ![Live Logs](https://images.waylonwalker.com/gh-actions-header-live-logs.png)\n\nOne great feature of actions is the live logs.  As you are developing them it is likely that you are anxiously watching them with anticipation.  Watching those logs go, and turn green is a great experience.\n\n![github actions live logs](https://images.waylonwalker.com/gh-actions-live-logs.png \"github actions live logs\")\n\n\n\n## ![Marketplace](https://images.waylonwalker.com/gh-actions-header-marketplace.png)\n\nAs with all things open source, much of the power of actions comes through the community and in actions case the marketplace.  Reusable actions can be deployed to the github marketplace.  Here they can be found from search, starred, and example workflows can be copied in one click.\n\n![github actions marketplace](https://images.waylonwalker.com/gh-actions-marketplace.png \"github actions marketplace\")\n\nI find that many times while I can write all of the code necessary in a shell script to do most of what I need, there is already an action in the marketplace that takes care of everything for me.  In fact there are usually several to choose from.\n\n\n\n## #Discuss\n\n* What Actions are you excited about?\n* Are you using actions today?\n* What struggles have you encountered with actions?\n* Do you like these silly image headers I used? Do they kill A11y? I attempted to use good alt text to counter.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/what-is-kedro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-wsl-clipboard'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Vim Wsl Clipboard</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-03-16", "jinja": false, "edit_link": "https://github.com/edit/main/pages/blog/what-are-github-actions.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573156", "datetime": "2020-03-16 00:00:00+00:00", "slug": "what-are-github-actions", "output_html": "markout/what-are-github-actions/index.html", "long_description": "GitHub actions are an amazing tool that allows us to run code based on triggers I have been diving deep into Github actions for about a month now and they are wicked good some interaction to your repository  The online editor for actions is pretty am", "super_description": "GitHub actions are an amazing tool that allows us to run code based on triggers I have been diving deep into Github actions for about a month now and they are wicked good some interaction to your repository  The online editor for actions is pretty amazing.  When creating a new workflow it automatically sets up a new blank workflow or a workflow from the marketplace for you in your  The editor does a great job of detecting syntax errors, misplaced keys.  It also does a great job at autocompletion", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae0d0>, next=<frontmatter.Post object at 0x7f3450696040>)"}, {"cover": "", "title": "Create Custom Kedro Dataset", "tags": ["kedro", "python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/create-custom-kedro-dataset.md", "description": "Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For t", "content": "Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For the most part you just need to tell Kedro what connector to use and its filepath.  When running Kedro takes care of all of the read/write, you just reference the catalog key.\n\n## But what is happening behind the scenes\n\nUnder the hood there is an `AbstractDataSet` that each connector inherits from.  It sets up a lot of the behind the scenes structure for us so that we dont have to.  For the most part kedro has connectors for about anything that you want to load, csv, parquet, sql, json, from about anywhere, http, s3, localfile system are just some of the examples.\n\nHere is a DataSet implementation from their docs.  Here you can see the barebones example straight from the docs.  Parameters from the yaml catalog will get passed in\n\n``` python\nfrom pathlib import Path\n\nimport pandas as pd\n\nfrom kedro.io import AbstractDataSet\n\n\nclass MyOwnDataSet(AbstractDataSet):\n    def __init__(self, param1, param2, filepath, version):\n        super().__init__(Path(filepath), version)\n        self._param1 = param1\n        self._param2 = param2\n\n    def _load(self) -> pd.DataFrame:\n        load_path = self._get_load_path()\n        return pd.read_csv(load_path)\n\n    def _save(self, df: pd.DataFrame) -> None:\n        save_path = self._get_save_path()\n        df.to_csv(save_path)\n\n \tdef _exists(self) -> bool:\n        path = self._get_load_path()\n        return path.is_file()\n\n    def _describe(self):\n        return dict(version=self._version, param1=self._param1, param2=self._param2)\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/create-new-kedro-project'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create New Kedro Project</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/codeit-bro-interview'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Codeit Bro Interview</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-15", "edit_link": "https://github.com/edit/main/pages/blog/create-custom-kedro-dataset.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573162", "datetime": "2020-05-15 00:00:00+00:00", "slug": "create-custom-kedro-dataset", "jinja": false, "output_html": "markout/create-custom-kedro-dataset/index.html", "long_description": "Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For the most part you just need to tell Kedro what connector to use and its filepath.  When run", "super_description": "Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For the most part you just need to tell Kedro what connector to use and its filepath.  When running Kedro takes care of all of the read/write, you just reference the catalog key. Under the hood there is an  Here is a DataSet implementation from their docs.  Here you can see the barebones example straight from the docs.  Parameters from the yam", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685af0>, next=<frontmatter.Post object at 0x7f345066c820>)"}, {"cover": "", "title": "tmux start application", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-start-application.md", "description": "https://youtu.be/c-a2Bnv Scripting tmux to open up specific applications can be intimidating your first I used this one for a number of years to take a quick pe", "content": "https://youtu.be/c-a2Bnv_NJ0\n\nScripting tmux to open up specific applications can be intimidating your first\ntime.  It can be tricky to get it to start in the right directory.  If you are\ntrying to assign applictaions to a keybinding it can be easy to mess up and\nhave weird things happen every time your `~/.tmux.conf` gets sourced.\n\n## Open htop in an above split\n\nI used this one for a number of years to take a quick peek into my systems\nperformance while a memory intensive task was running.\n\n``` bash\nbind -n M-t split-window htop \\; swap-pane -U\n```\n\n> \ud83d\uddd2\ufe0f note that the `swap-pane -U` will make the htop split active immediately\n\n## Open htop in a popup\n\nWith the new tmux popup windows I really like the flow of just peeking at\nhtop in a popup and jumping back into what I was doing.  It can have a more\nconsistennt look, and not mess with the window layouts.\n\n``` bash\nbind -n M-t popup -E -h 95% -w 95% -x 100% \"htop\"\n```\n\n## Open an applicaiton in the current directory\n\nOne thing that can be tricky is getting apps that need to be in a specific\ndirectory started in the directory that you want. Here are two examples I use\nto open `vifm` or `gitui`.\n\n``` bash\nbind -n M-e split-window -c '#{pane_current_path}' vifm . .\\; resize-pane -Z;\nbind C-k split-window -c '#{pane_current_path}' 'gitui'\\; resize-pane -Z;\n```\n\n> \ud83d\uddd2\ufe0f note that `split-window` takes in a -c flag before the application you\n> want to run to specify the startup directory.\n\n## Open a popup in a specific directory\n\nI've been converted over to using popups for these as well.  I'll admit that\nthe workflow of creating a new full screen window may have been better, but\nthis can be a bit less jarring, espessially if you have anyone following\nalong with what you are doing.\n\n``` bash\nbind -n M-e display-popup -d '#{pane_current_path}' -E vifm\nbind C-k display-popup -d '#{pane_current_path}' -E 'gitui'\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-status-bar'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux status-bar</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-splitting-panes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux splitting panes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-03", "edit_link": "https://github.com/edit/main/pages/blog/tmux-start-application.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573168", "datetime": "2021-08-03 00:00:00+00:00", "slug": "tmux-start-application", "jinja": false, "output_html": "markout/tmux-start-application/index.html", "long_description": "https://youtu.be/c-a2Bnv Scripting tmux to open up specific applications can be intimidating your first I used this one for a number of years to take a quick peek into my systems \ud83d\uddd2\ufe0f note that the  With the new tmux popup windows I really like the flo", "super_description": "https://youtu.be/c-a2Bnv Scripting tmux to open up specific applications can be intimidating your first I used this one for a number of years to take a quick peek into my systems \ud83d\uddd2\ufe0f note that the  With the new tmux popup windows I really like the flow of just peeking at One thing that can be tricky is getting apps that need to be in a specific \ud83d\uddd2\ufe0f note that  I https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouT", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064ca00>, next=<frontmatter.Post object at 0x7f345068aaf0>)"}, {"cover": "", "title": "Python Find Available Port", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/blog/python-find-available-port.md", "description": "When running a python process that requires a port it", "content": "When running a python process that requires a port it's handy if there is an\noption for it to just run on the next avaialble port.  To do this we can use\nthe socket module to determine if the port is in use or not before starting our\nprocess.\n\n``` python\nimport socket\n\ndef find_port(port=8000):\n    \"\"\"Find a port not in ues starting at given port\"\"\"\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n        if s.connect_ex((\"localhost\", port)) == 0:\n            return find_port(port=port + 1)\n        else:\n            return port\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-functools-total-ordering'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>python functools total ordering</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-deepwatch'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>python-deepwatch</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-15", "edit_link": "https://github.com/edit/main/pages/blog/python-find-available-port.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573173", "datetime": "2022-01-15 00:00:00+00:00", "slug": "python-find-available-port", "jinja": false, "output_html": "markout/python-find-available-port/index.html", "long_description": "When running a python process that requires a port it", "super_description": "When running a python process that requires a port it", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646040>, next=<frontmatter.Post object at 0x7f34506724c0>)"}, {"cover": "", "title": "killing tmux", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-killing-tmux.md", "description": "https://youtu.be/QWPyYx54JbE Now it One viable option is to nuke the whole dang thing.  I actually do this more save and commit your work diligently before  A m", "content": "https://youtu.be/QWPyYx54JbE\n\nNow it's time to switch gears, we are onto a different part of our day and\nthere are just too many sessions running and we need to clean up shop.\n\n## kill-server\n\nOne viable option is to nuke the whole dang thing.  I actually do this more\nthan you might think.\n\n``` bash\ntmux kill-server\n```\n\n> save and commit your work diligently before `kill-server`\n\n## kill-session\n\nA more reasonable option might be to kill a single session.\n\n``` bash\n# kills the current session\ntmux kill-session\n\n# kills the session named scratch\ntmux kill-session -t scratch\n```\n\n## choose-tree\n\nKilling sessions one by one from the command line can be a bit tedious, and\ninvolve more keystrokes than necessary.  Another option built right into tmux\nis `choose-tree`.  By default `choose-tree` is bound to `prefix+s`, that's\npressing control+b then s.  Once you are in `choose-tree`, you can navigate\naround with your configured navigation scheme, press `x` to kill a session, or\npane or window then `y` to confirm.  You can also batch delete by tagging items\nwith t, and killing them all at once with `X`.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-choose-tree/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-choose-tree-og_250x140.png\" alt=\"article cover for \n tmux choose-tree\n\"/>\n          <p><strong>\n tmux choose-tree\n</strong></p>\n      </a>\n  </div>\n\n\n> check out this post for a bit more information on choose-tree\n\n## fuzzy matcher\n\nHere is my preferred way, using a fuzzy matcher.  I recently improved this one\nby making it a popup and cleaning it up based on a repsonse,\n[tmux-output-formatting](https://qmacro.org/autodidactics/2021/08/06/tmux-output-formatting/)\nby [DJ Adams](https://twitter.com/qmacro).  I press prefix+k to bring up a kill-session menu.\n\n``` bash\nbind k display-popup -E \"\\\n    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\\\n    fzf --reverse -m --header=kill-session |\\\n    xargs -I {} tmux kill-session -t {}\"\n```\n\n> note this is setup to multiple sessions all at once.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-last-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux last session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-join-pane'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux join-pane</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-11", "edit_link": "https://github.com/edit/main/pages/blog/tmux-killing-tmux.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573179", "datetime": "2021-08-11 00:00:00+00:00", "slug": "tmux-killing-tmux", "jinja": false, "output_html": "markout/tmux-killing-tmux/index.html", "long_description": "https://youtu.be/QWPyYx54JbE Now it One viable option is to nuke the whole dang thing.  I actually do this more save and commit your work diligently before  A more reasonable option might be to kill a single session. Killing sessions one by one from ", "super_description": "https://youtu.be/QWPyYx54JbE Now it One viable option is to nuke the whole dang thing.  I actually do this more save and commit your work diligently before  A more reasonable option might be to kill a single session. Killing sessions one by one from the command line can be a bit tedious, and https://waylonwalker.com/tmux-choose-tree/ check out this post for a bit more information on choose-tree Here is my preferred way, using a fuzzy matcher.  I recently improved this one note this is setup to m", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2550>, next=<frontmatter.Post object at 0x7f3450679c10>)"}, {"cover": "", "title": "Just Ask Ipython for help", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/ipython-help.md", "description": "We can https://youtu.be/TZrRAP-9UMk In any python repl you can access the docstring of a function by calling for  In Ipython we can even get some syntax highlig", "content": "## It happens to the best of us\n\nWe can't all remember every single function signature out there, it's just not\npossible.  If you want to stay productive while coding without the temptation\nto hit YouTube or Twitter.  Use the built in help.  Here are 5 ways to get help\nwithout leaving your terminal.\n\nhttps://youtu.be/TZrRAP-9UMk\n\n## Docstrings\n\nIn any python repl you can access the docstring of a function by calling for `help`.\n\n``` python\nhelp(df.rolling)\n```\n\nIn Ipython we can even get some syntax highlighting with the `?`.\n\n``` python\ndf.rolling?\n```\n\n## Source Code\n\nSometimes the docstrings are not good enough, and don't give us the content we\nneed, and we just need to look at the source.  Without leaving your terminal\nthere are two ways I often use to get to the source of a function I am trying\nto use.\n\n``` python\nimport inspect\ninspect.getsource(df.rolling)\n```\n\nThe more common way I do it is with the ipython `??`.\n\n```\ndf.rolling??\n```\n\n## Bonus rich.inspect\n\nYou thought the syntax highlighting was good with ipython, check out what\n`rich.inspect` can do! As far as I know there is no way to get to source code,\nbut the results are still fantastic.\n\n\n\n``` bash\npip install rich\n```\n\n> Install rich\n\n``` python\nfrom rich import inspect\ninspect(cars.rolling, help=True)\n```\n\n> then inspect\n\n## Connect with me\n\nIf you liked this one, check out the YouTube Channel, catch me live on twitch,\nor connect on twitter, I'd love to hear from you.\n\ntwitter:  https://twitter.com/_WaylonWalker\ntwitch: https://www.twitch.tv/waylonwalker\ngithub: https://github.com/waylonwalker/\ntwitch: https://www.twitch.tv/waylonwalker\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/journey'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>It's not all about winning</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/ipython-config'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Ipython-Config</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-10", "edit_link": "https://github.com/edit/main/pages/blog/ipython-help.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573185", "datetime": "2021-10-10 00:00:00+00:00", "slug": "ipython-help", "jinja": false, "output_html": "markout/ipython-help/index.html", "long_description": "We can https://youtu.be/TZrRAP-9UMk In any python repl you can access the docstring of a function by calling for  In Ipython we can even get some syntax highlighting with the  Sometimes the docstrings are not good enough, and don The more common way ", "super_description": "We can https://youtu.be/TZrRAP-9UMk In any python repl you can access the docstring of a function by calling for  In Ipython we can even get some syntax highlighting with the  Sometimes the docstrings are not good enough, and don The more common way I do it is with the ipython  You thought the syntax highlighting was good with ipython, check out what Install rich then inspect If you liked this one, check out the YouTube Channel, catch me live on twitch, twitter:  https://twitter.com/", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1af0>, next=<frontmatter.Post object at 0x7f3450658340>)"}, {"cover": "", "title": "30 days dotfile ricing", "tags": ["linux", "bash"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/dotfile-rice-challenge-intro.md", "description": "https://youtu.be/Jq1Y48F I am challenging myself to 30 days of dotfile ricing.  I have been on linux This is primarily going to be focused on productivity, but ", "content": "https://youtu.be/Jq1Y48F_rOU\n\n\nI am challenging myself to 30 days of dotfile ricing.  I have been on linux\ndesktop for a few months now and have a pretty good workflow going, I have the\ncoarse edits done to my workflow, but it has some rough edges that need sanded\ndown.  It's time to squash some of those little annoyances that still exist in\nmy setup.\n\n\nThis is primarily going to be focused on productivity, but may have  a few\nthings to just look better.  This will comprise heavily of aliases, zsh, and\nnvim config.\n\nFollow the [YouTube channel](https://youtube.com/waylonwalker) or the [rss\nfeed](https://waylonwalker/rss/) to stay up to date.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/drawing-ascii-boxes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>drawing ascii boxes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/don-t-waste-your-time-learning-everything'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Don\u2019t waste your time learning everything</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-29", "edit_link": "https://github.com/edit/main/pages/blog/dotfile-rice-challenge-intro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573190", "datetime": "2021-11-29 00:00:00+00:00", "slug": "dotfile-rice-challenge-intro", "jinja": false, "output_html": "markout/dotfile-rice-challenge-intro/index.html", "long_description": "https://youtu.be/Jq1Y48F I am challenging myself to 30 days of dotfile ricing.  I have been on linux This is primarily going to be focused on productivity, but may have  a few Follow the ", "super_description": "https://youtu.be/Jq1Y48F I am challenging myself to 30 days of dotfile ricing.  I have been on linux This is primarily going to be focused on productivity, but may have  a few Follow the ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c790>, next=<frontmatter.Post object at 0x7f34506ae790>)"}, {"cover": "", "title": "D3 Day 5", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/d3-day5.md", "description": "For what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere", "content": "<script src='https://cdnjs.cloudflare.com/ajax/libs/d3/4.13.0/d3.min.js'></script>\n<style>\n    #content{\n        max-width: 800px;\n        margin: 0 auto;\n    }\n    .chart {\n        display: block;\n        padding: 10px;\n        background: peachpuff;\n    }\n\n    .bar {\n        height: 30px;\n        margin: 5px;\n        background: teal;\n    }\n    .bar:hover{\n        background: #444;\n        }\n    button {\n        background: rgb(240, 196, 211);\n        border: none;\n        font-size: 1.3rem;\n        border-radius: 5px;\n        padding: .2rem 1rem;\n        margin-bottom: 1rem\n    }\n    .on {\n        background: palevioletred;\n    }\n    .big {\n    width: 100%\n    }\n    .small {\n    width: 50%\n    }\n</style>\n\n\n## Learn D3 in 5 days\n\nFor what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere!  These are just stepping stones into real custom visualizations that cannot be done in any other tool today.  I still cannot explain how excited I am to say **\"I created that in d3!!!\"**\n### Todays Result\n\n## Recall Example 3 from yesterday\n\n<div id='buttons'>\n    <h3>Subject</h3>\n    <div id='subjects'>\n        <button class='math' onclick=\"render4('math')\">Math</button>\n        <button class='science' onclick=\"render4('science')\">Science</button>\n    </div>\n    <h3>Chart Size</h3>\n    <div id='sizes'>\n        <button class='chart4-big-btn' onclick='chart4_size(\"big\")')>Large</button>\n        <button class='chart4-small-btn' onclick='chart4_size(\"small\")'>Small</button>\n    </div>\n</div>\n\n<div id=\"chart4\" class='chart'></div>\n\n\n\n<script>\n    const data4 = [\n        { name: 'Alice', math: 93, science: 84},\n        { name: 'Bob', math: 73, science: 82 },\n        { name: 'James', math: 92, science: 78},\n        { name: 'Steve', math: 77, science: 93 },\n        { name: 'Jordan', math: 80, science: 68 },\n    ]\n\n    chart4 = document.getElementById('chart4')\n\n\n    let width = function() {\n        return chart4.getBoundingClientRect().width\n        }\n    let height = function() {\n        return chart4.getBoundingClientRect().height\n        }\n    let barHeight = function() {\n        height() /  data4.length + 'px'\n        }\n\n    function chart4_size(size) {\n        d3.select('#sizes')\n            .selectAll('button')\n            .classed('on', false)\n        d3.select('#sizes')\n            .select('.chart4-' + size + '-btn')\n            .classed('on', true)\n        d3.select('#chart4')\n            .attr('class', 'chart ' + size)\n        subject = document\n            .getElementById('subjects')\n            .querySelector('.on')\n            .classList[0]\n        render4(subject)\n    }\n\n    function render4(subject) {\n\n        d3.select('#subjects')\n            .selectAll('button')\n            .classed('on', false);\n\n        d3.select('#subjects')\n            .select('.' + subject)\n            .attr('class', subject + ' on');\n\n        let xScale = d3.scaleLinear()\n            .domain([50, 100])\n            .range([0, width()]);\n\n        const bars5 = d3.select('#chart4')\n            .selectAll('div')\n            .data(data4, function(d) {\n                return d.name\n            })\n        const newBars = bars5.enter()\n            .append('div')\n                .attr('class', 'bar')\n                .style('width', 0)\n\n        newBars.merge(bars5)\n            .transition()\n            .style('width', function(d) {\n                return xScale(d[subject]) + 'px'\n            })\n            .style('height', barHeight())\n    }\n    render4('math')\n    chart4_size('big')\n</script>\n\n\n## Final Result\n\n<div id='buttons5'>\n    <h3>Subject</h3>\n    <div id='subjects5'>\n        <button class='math' onclick=\"render5('math')\">Math</button>\n        <button class='science' onclick=\"render5('science')\">Science</button>\n    </div>\n    <h3>Chart Size</h3>\n    <div id='sizes5'>\n        <button class='chart5-big-btn' onclick='chart5_size(\"big\")')>Large</button>\n        <button class='chart5-small-btn' onclick='chart5_size(\"small\")'>Small</button>\n    </div>\n</div>\n\n<div id=\"chart5\" class='chart'></div>\n\n\n\n<script>\n    const data5 = [\n        { name: 'Alice', math: 93, science: 84},\n        { name: 'Bob', math: 73, science: 82 },\n        { name: 'James', math: 92, science: 78},\n        { name: 'Steve', math: 77, science: 93 },\n        { name: 'Jordan', math: 80, science: 68 },\n    ]\n\n    chart5 = document.getElementById('chart5')\n\n\n    let width5 = function() {\n        return chart5.getBoundingClientRect().width\n        }\n    let height5 = function() {\n        return chart5.getBoundingClientRect().height\n        }\n    let barHeight5 = function() {\n        height5() /  data5.length + 'px'\n        }\n\n\n    function chart5_size(size) {\n        d3.select('#sizes5')\n            .selectAll('button')\n            .classed('on', false)\n        d3.select('#sizes5')\n            .select('.chart5-' + size + '-btn')\n            .classed('on', true)\n        d3.select('#chart5')\n            .attr('class', 'chart ' + size)\n        subject = document\n            .getElementById('subjects5')\n            .querySelector('.on')\n            .classList[0]\n        console.log(subject)\n        render5(subject)\n    }\n\n    function render5(subject) {\n\n        d3.select('#subjects5')\n            .selectAll('button')\n            .classed('on', false);\n\n        d3.select('#subjects5')\n            .select('.' + subject)\n            .attr('class', subject + ' on');\n\n        let xScale = d3\n            .scaleLinear()\n            .domain([50, 100])\n            .range([0, width5()]);\n\n\n        const bars5 = d3.select('#chart5')\n            .selectAll('div')\n            .data(data5, function(d) {\n                return d.name\n            })\n        const newBars = bars5\n            .enter()\n            .append('div')\n                .attr('class', 'bar')\n                .style('width', 0)\n\n        newBars.merge(bars5)\n            .transition()\n            .style('width', function(d) {\n                return xScale(d[subject]) + 'px'\n            })\n            .style('height', barHeight5())\n\n        d3\n         .select('#chart5')\n         .select('svg')\n         .remove()\n\n        const svg5 = d3\n            .select('#chart5')\n            .append('svg')\n            .attr('width', width5())\n            .attr('height', height5())\n            .style('position', 'relative')\n            .append('g')\n            .call(d3.axisBottom(xScale))\n    }\n    render5('math')\n    chart5_size('big')\n</script>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/data-scientist-advice'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is YOUR Advice for New Data Scientists</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/custom-scrollbar-design'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Custom Scrollbar Design</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "slug": "d3-day-5", "date": "2018-05-08", "edit_link": "https://github.com/edit/main/pages/blog/d3-day5.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573197", "datetime": "2018-05-08 00:00:00+00:00", "jinja": false, "output_html": "markout/d3-day-5/index.html", "long_description": "For what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere", "super_description": "For what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9100>, next=<frontmatter.Post object at 0x7f3450652af0>)"}, {"cover": "", "title": "Vim Wsl Clipboard", "tags": ["vim", "bash"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/vim-wsl-clipboard.md", "description": "I wsl can access clip.exe.  You can do some cool things with it, such as Let pipe streams of text into clip.exe I recently made mine feel a bit more natural by ", "content": "I've long used neovim from within windows wsl, and for far too long, I went\nwithout a proper way to get text out of it and into windows.\n\n\n## wsl has access to cmd applications\n\nwsl can access clip.exe.  You can do some cool things with it, such as\ncat a file into the clipboard, sending output from a command to the clipboard,\nor set an autocmd group in vim to send yank to the windows clipboard.\n\n## using clip.exe\n\nLet's say you want to send a teammate the tail of a log file over chat. You can\ntail the file into clip.exe.\n\n``` bash\ntail -n 1 info.log | clip.exe\n```\n\n> pipe streams of text into clip.exe\n\n## make it a bit more natural\n\nI recently made mine feel a bit more natural by aliasing it to clip.\n\n``` bash\nalias clip=clip.exe\n```\n\n> pop this in your ~/.bashrc or ~/.zshrc\n\n## yanking to windows clipboard from vim\n\nI use neovim as my daily text editor and its a pain to share code with a\nteammate over chat, stack overflow, into a gist, or whatever you need.  The\nfollowing snippet has been quite useful and flawless for me.\n\n``` vim\nif system('uname -r') =~ \"Microsoft\"\n    augroup Yank\n        autocmd!\n        autocmd TextYankPost * :call system('/mnt/c/windows/system32/clip.exe ',@\")\n        augroup END\nendif\n```\n\n> add this to your ~/.vimrc or your ~/.config/nvim/init.vim\n\n## Wsl2\n\nBased on some\n[feedback](https://github.com/WaylonWalker/waylonwalker.com/issues/4)\nfrom [l-sannin](https://github.com/l-sannin) the 'uname -r' command now\nreturns `uname -r command returns '5.10.16.3-microsoft-standard-WSL2'`\nSo you will need an all lowercase microsoft.\n\n``` vim\nif system('uname -r') =~ \"microsoft\"\n  augroup Yank\n  autocmd!\n  autocmd TextYankPost * :call system('/mnt/c/windows/system32/clip.exe ',@\")\n  augroup END\nendif\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/what-are-github-actions'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What Are GitHub Actions</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-replace-visual-star'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Vim Replace Visual Star</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-17", "edit_link": "https://github.com/edit/main/pages/blog/vim-wsl-clipboard.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573203", "datetime": "2021-04-17 00:00:00+00:00", "slug": "vim-wsl-clipboard", "jinja": false, "output_html": "markout/vim-wsl-clipboard/index.html", "long_description": "I wsl can access clip.exe.  You can do some cool things with it, such as Let pipe streams of text into clip.exe I recently made mine feel a bit more natural by aliasing it to clip. pop this in your ~/.bashrc or ~/.zshrc I use neovim as my daily text ", "super_description": "I wsl can access clip.exe.  You can do some cool things with it, such as Let pipe streams of text into clip.exe I recently made mine feel a bit more natural by aliasing it to clip. pop this in your ~/.bashrc or ~/.zshrc I use neovim as my daily text editor and its a pain to share code with a add this to your ~/.vimrc or your ~/.config/nvim/init.vim Based on some", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691f70>, next=<frontmatter.Post object at 0x7f34506b31f0>)"}, {"cover": "", "title": "automate your deploys", "tags": [], "status": "false", "templateKey": "blog-post", "path": "pages/blog/automate-your-deploys.md", "description": "prev Mentorship Vs Sponsorship next Vim Wsl Clipboard", "content": "\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/mentorship-vs-sponsorship'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Mentorship Vs Sponsorship</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-wsl-clipboard'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Vim Wsl Clipboard</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-07", "edit_link": "https://github.com/edit/main/pages/blog/automate-your-deploys.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573210", "datetime": "2020-02-07 00:00:00+00:00", "slug": "automate-your-deploys", "jinja": false, "output_html": "markout/automate-your-deploys/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696550>, next=<frontmatter.Post object at 0x7f3450696040>)"}, {"cover": "", "title": "Mentorship Vs Sponsorship", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/mentorship-vs-sponsorship.md", "description": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas", "content": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/interrogate'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Interrogate is a pretty awesome, brand new, cli for Python packages</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/automate-your-deploys'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>automate your deploys</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-17", "edit_link": "https://github.com/edit/main/pages/blog/mentorship-vs-sponsorship.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573216", "datetime": "2021-04-17 00:00:00+00:00", "slug": "mentorship-vs-sponsorship", "jinja": false, "output_html": "markout/mentorship-vs-sponsorship/index.html", "long_description": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas", "super_description": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696c10>, next=<frontmatter.Post object at 0x7f3450696100>)"}, {"cover": "", "title": "Interrogate is a pretty awesome, brand new, cli for Python packages", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/interrogate.md", "description": "dead simple docstring coverage for your python project", "content": "As usual while listening to [python bytes 181](https://pythonbytes.fm/episodes/show/181/it-s-time-to-interrogate-your-python-code) I heard of a tool that I had to try out right away!\n\nThis thing is \ud83d\udd25 hot off the press folks, we're talking the first release only 3 weeks ago. Its something that the python community needed years ago, and it belongs in your CI **today**. I had tried several tools that tried to do docstring coverage in the past but they were a bit cumbersome and were quickly forgotten about. Not interrogate, its dead simple!\n\n> Nothing I have tried has come close to being this good\n\n## Interrogate\n\nIt runs documentation coverage for your python project. It allows you to set the minimum amount of docstring coverage for your project and has some great setup instructions right in the readme.\n\n## Install it\n\nInterrogate is on pypi so it is super simple to install with `pip`\n\n```\npip install interrogate\n```\n\n## run it\n\nThis is the best part, its super easy to run right from the command line! Just call it, and give it a path to run.\n\n```\ninterrogate -v <path>\n```\n\n## \ud83d\ude32 I have some work to do\n\nOne of my new open source packages [find-kedro](https://find.kedro.dev/) only hit 71%.\n\n```\ninterrogate find-kedro -v\n```\n\n![verbose interrogate on find-kedro](https://images.waylonwalker.com/interrogate-python-v.png)\n\nPersonally I really like the **double verbose** output that gives you the names of everything missing a docstring and the line they occur on.\n\n```\ninterrogate find-kedro -vv\n```\n\n![double verbose interrogate on find-kedro](https://images.waylonwalker.com/interrogate-python-vv.png)\n\n## Give it a \u2b50\nEvery project this amazing deserves a big ol \u2b50 on GitHub! Go over to [econchick/interrogate](https://github.com/econchick/interrogate) and give it a one... it deserves it! While you are there check out the **wicked** good readme. It has great examples of how to run it from your command line, as a pre-commit hook, in your ci, with your code, or pyproject.toml.\n\n> While you are there check out the **wicked** good readme!\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/ipython-config'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Ipython-Config</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/install-nvim-skit'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How linux users install a text editor</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-15", "edit_link": "https://github.com/edit/main/pages/blog/interrogate.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573222", "datetime": "2020-05-15 00:00:00+00:00", "slug": "interrogate", "jinja": false, "output_html": "markout/interrogate/index.html", "long_description": "As usual while listening to  This thing is \ud83d\udd25 hot off the press folks, we Nothing I have tried has come close to being this good It runs documentation coverage for your python project. It allows you to set the minimum amount of docstring coverage for ", "super_description": "As usual while listening to  This thing is \ud83d\udd25 hot off the press folks, we Nothing I have tried has come close to being this good It runs documentation coverage for your python project. It allows you to set the minimum amount of docstring coverage for your project and has some great setup instructions right in the readme. Interrogate is on pypi so it is super simple to install with  This is the best part, its super easy to run right from the command line One of my new open source packages  Persona", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658340>, next=<frontmatter.Post object at 0x7f34506ae430>)"}, {"cover": "", "title": "tmux new-window", "tags": ["cli", "linux", "tmux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-new-window.md", "description": "https://youtu.be/YRPZBv-iYyE New window as it sounds makes new windows in tmux.  Windows are kind of like Default key bindings for creating and navigating windo", "content": "https://youtu.be/YRPZBv-iYyE\n\nNew window as it sounds makes new windows in tmux.  Windows are kind of like\ntabs.  They are another screen within your sessions that you can name and make\nnew panes in.\n\n\n\nDefault key bindings for creating and navigating windows in tmux.\n\n``` bash\nbind-key          c new-window\nbind-key          p previous-window\nbind-key          n next-window\n```\n\nAs always I have rebound these keys because I generally prefer a single\nkeystroke over the prefix plus keybinding approach that tmux gives by default.\n\n``` bash\n#\u2015\u2015windows\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nbind -n M-c new-window -c '#{pane_current_path}'\nbind -n M-p previous-window\nbind -n M-n next-window\n```\n\nWhen I started using tmux I did almost everything in one giant session with\nmany panes and windows.  It became a nightmare to manage and quickly get\nbetween two sets work efficiently.  This year I leaned in on sessions quite\nheavily.  Checkout this \ud83d\udc47 post to see that workflow in depth.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-next-prev-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux next/prev session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-new-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux new-session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-24", "edit_link": "https://github.com/edit/main/pages/blog/tmux-new-window.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573228", "datetime": "2021-07-24 00:00:00+00:00", "slug": "tmux-new-window", "jinja": false, "output_html": "markout/tmux-new-window/index.html", "long_description": "https://youtu.be/YRPZBv-iYyE New window as it sounds makes new windows in tmux.  Windows are kind of like Default key bindings for creating and navigating windows in tmux. As always I have rebound these keys because I generally prefer a single When I", "super_description": "https://youtu.be/YRPZBv-iYyE New window as it sounds makes new windows in tmux.  Windows are kind of like Default key bindings for creating and navigating windows in tmux. As always I have rebound these keys because I generally prefer a single When I started using tmux I did almost everything in one giant session with https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063b790>, next=<frontmatter.Post object at 0x7f345069c8b0>)"}, {"cover": "", "title": "I made a neovim plugin", "tags": ["vim", "linux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/telegraph-release.md", "description": "I https://youtu.be/8m5ipBuopPU Check out the project  I want a simple way to make remaps into shell commands that can open new tmux For example I want to make r", "content": "I've slowly adding more and more lua functions into my neovim configuration,\nand recently I noticed a pattern for a class of functions that reach out to run\nshell commands that can be abstracted away.\n\nhttps://youtu.be/8m5ipBuopPU\n\n## Telegraph.nvim\n\nCheck out the project [readme](https://github.com/WaylonWalker/Telegraph.nvim)\nfor the most up to date details on the plugin itself.\n\n## Motivation\n\nI want a simple way to make remaps into shell commands that can open new tmux\nwindows, popups, or just run a command with context from the editor.\n\nFor example I want to make remaps to do things like open the current file in lookatme.\n\n``` vim\n# vim :terminal\nnnoremap <leader>s <cmd>Telegraph pipx run lookatme {filepath} --live-reload --style gruvbox-dark<cmd>\n\n# tmux session\nnnoremap <leader><leader>s <cmd>lua require'telegraph'.telegraph({cmd='pipx run lookatme {filepath} --live-reload --style gruvbox-dark', how='tmux'})<CR>\n\n# tmux popup\nnnoremap <leader><leader>S <cmd>lua require'telegraph'.telegraph({cmd='pipx run lookatme {filepath} --live-reload --style gruvbox-dark', how='tmux_popup'})<CR>\n```\n\nThe main goal here is that remaps become one liners that can just be put\ndirectly in my `init.vim` without creating a whole new lua module for each\nshell command I want to bind.\n\n## how\n\n`telegraph` takes in a `how` argument to determine where to tun the command.j\n\n* `term`(default) runs command in the built in terminal\n* `tmux` runs command in a new tmux session and joins it.\n* `tmux_popup` runs command in a tmux popup window.\n* `tmux_popup_session` runs command in a tmux session and displays it in a popup\n* `subprocess` runs command in a subprocess\n\n## Format strings\n\nThe current set of format strings that can be used with telegraph.  Placing\nthese in braces `{}` within your command will get rendered into something with\ncontext from the editor.\n\n* `cword` - the current word under the cursor\n* `cWORD` - the current BIG Word under the cursor\n* `cline` - the current line under the cursor\n* `filepath` - the filepath of the current file\n* `filename` - the filename of the current file\n* `parent` - the parent directory of the current file\n* `current_session_name` - name of the current tmux session\n* `cwd` - the current working directory\n\n## Give it a \u2b50\n\nCheck out the [repo](https://github.com/WaylonWalker/Telegraph.nvim) and give\nit a star if its something that interests you.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/testproject-io-py-actions'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Integration testing with Python, TestProject.io, and GitHub Actions</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/symlink-gallery'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create a Virtual File Gallery with Symlinks</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-05", "edit_link": "https://github.com/edit/main/pages/blog/telegraph-release.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573234", "datetime": "2021-10-05 00:00:00+00:00", "slug": "telegraph-release", "jinja": false, "output_html": "markout/telegraph-release/index.html", "long_description": "I https://youtu.be/8m5ipBuopPU Check out the project  I want a simple way to make remaps into shell commands that can open new tmux For example I want to make remaps to do things like open the current file in lookatme. The main goal here is that rema", "super_description": "I https://youtu.be/8m5ipBuopPU Check out the project  I want a simple way to make remaps into shell commands that can open new tmux For example I want to make remaps to do things like open the current file in lookatme. The main goal here is that remaps become one liners that can just be put telegraph term tmux tmux_popup tmux_popup_session subprocess The current set of format strings that can be used with telegraph.  Placing cword cWORD cline filepath filename parent current_session_name cwd Che", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c160>, next=<frontmatter.Post object at 0x7f345064c100>)"}, {"cover": "", "title": "Reclaim memory usage in Jupyter", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/reset-ipython.md", "description": "Today I ran into an issue where we had a one-off script that just needed to It started with a colleague asking me How do I clear the memory in a Jupyter How do ", "content": "Today I ran into an issue where we had a one-off script that just needed to\nwork, but it was just chewing threw memory like nothing.\n\nIt started with a colleague asking me How do I clear the memory in a Jupyter\nnotebook, these are the steps we took to debug the issue and free up some\nmemory in their notebook.\n\n> How do I clear the memory in a Jupyter notebook?\n\n## Pre check the status of memory.\n\nThere are a number of ways that you can check the amount of memory on your\nsystem.  The easiest is not necessarily my first go to is free... literally\n`free`.\n\n_<small><mark>check for free space</mark></small>_\n\n``` bash\n$ free -h\n             total       used       free     shared    buffers     cached\nMem:           15G        15G       150M         0B        59M       8.7G\n```\n\nGenerally my first go to is a bit more graphical, and not available on a stock\nstystem, but far more useful.... `htop`.  [`htop`](https://htop.dev) is a\nterminal process explorer that shows cpu usage, mem usage, and running\nprocesses.\n\n_<small><mark>htop</mark></small>_\n\n\n``` bash\nsudo apt-get install htop # install it from your package repo\nhtop\n```\n\n![htop in use](https://images.waylonwalker.com/htop-2.0.png)\n\n## First step throw more swap at it\n\nOften before going through the process of getting a larger instance underneath\nthe notebook you can hobble home with a bit more swap file.  It may not be\npretty or fast, but gets the job done in a pinch.\n\n_<small><mark>Check for free disk</mark></small>_\n\n``` bash\n$ du\n\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/asdasd        200G   50G  150G   25% /\n```\n\n> Make sure you check your free disk space first, filling both memory and disk\n> can be bad news\n\n_<small><mark>make a swap file and activate it</mark></small>_\n\n```bash\nSWAPFILE=~/swaps/swap1-50G\nmkdir ~/swaps\nsudo fallocate -l 50G $SWAPFILE\nsudo chmod 600 $SWAPFILE\nsudo mkswap $SWAPFILE\nsudo swapon $SWAPFILE\n```\n\nYou can see the results with either swapon or free.\n\n``` bash\nsudo swapon --show\nfree -h\n```\n\n<p style='text-align: center'>\n<a href='https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/'>\n  <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/linuxize-how-to-add-swap-space-on-ubuntu-20-04.jpg\"\n    alt=\"How to Add Swap Space on Ubuntu 20.04\"\n  />\n  </a>\n</p>\n\n[linuxize how to add swap space on ubuntu 20.04](https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/)\n\nMore details on creating swapfiles checkout\n[linuxize](https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/).\nIt is my favorite linux tutorial site!\n\n## Refactor - functions\n_keep big datasets inside functions returning aggregations_\n\n\nSometimes there is a clear quick and simple way to just let the python garbage\ncollector.  Often we pull in large datasets to create features then aggregate\nthem down into smaller datasets that can be then joined into other datasets.\nThis pattern of pulling in  `big_data`, processing then aggregating can be a\nsimple one.\n\n_<small><mark>let the garbage collector take care of big data</mark></small>_\n\n``` python\ndef process():\n   big_data = get_big_data()\n   smaller_data = <some aggregation>\n   return smaller_data\ndata = process()\n```\n\nIf your notebook is following this type of pattern a simple `del` won't work\nbecause ipython adds extra references to your `big_data` that you didnt add.\nThese are things that enable features like `_`, `__`, `___`, umong others.\n\n## %reset\n\n_check out more on reset from the [ipython docs](https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-reset)_\n\nThe last resort I would lean on here is an `ipython` specific feature `%reset`\nand `%reset_selective`.  These will flush out all user define variables or\nselecive ones based on a regex respectively.\n\n\nFollowing two example are directly from the [ipython docs](https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-reset)\n\n_<small><mark>%reset</mark></small>_\n\n``` python\nIn [6]: a = 1\n\nIn [7]: a\nOut[7]: 1\n\nIn [8]: 'a' in get_ipython().user_ns\nOut[8]: True\n\nIn [9]: %reset -f\n\nIn [1]: 'a' in get_ipython().user_ns\nOut[1]: False\n\nIn [2]: %reset -f in\nFlushing input history\n\nIn [3]: %reset -f dhist in\nFlushing directory history\nFlushing input history\n```\n\n_<small><mark>%reset_selective</mark></small>_\n\n```\nIn [2]: a=1; b=2; c=3; b1m=4; b2m=5; b3m=6; b4m=7; b2s=8\n\nIn [3]: who_ls\nOut[3]: ['a', 'b', 'b1m', 'b2m', 'b2s', 'b3m', 'b4m', 'c']\n\nIn [4]: %reset_selective -f b[2-3]m\n\nIn [5]: who_ls\nOut[5]: ['a', 'b', 'b1m', 'b2s', 'b4m', 'c']\n\nIn [6]: %reset_selective -f d\n\nIn [7]: who_ls\nOut[7]: ['a', 'b', 'b1m', 'b2s', 'b4m', 'c']\n\nIn [8]: %reset_selective -f c\n\nIn [9]: who_ls\nOut[9]: ['a', 'b', 'b1m', 'b2s', 'b4m']\n\nIn [10]: %reset_selective -f b\n\nIn [11]: who_ls\nOut[11]: ['a']\n```\n\n\n## Develop faster utilizing autoreload in ipython\n\nThe above tips will help you reclaim used memory in ipython, but the following\ntip is one that single handedly is the reason I use Ipython for faster\ndevelopment over anything else.\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/autoreload-ipython/'>\n  <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/autoreload-ipython-rm.png\"\n    alt=\"Autoreload in Ipython\"\n  />\n  </a>\n</p>\n\n[autoreload-ipython](https://waylonwalker.com/autoreload-ipython/) one of my biggest productivity boosts.\n\n## Want automatic imports??\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/pyflyby/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/pyflyby-og_250x140.png\" alt=\"article cover for \n Smoother Python with automatic imports | pyflyby\n\"/>\n          <p><strong>\n Smoother Python with automatic imports | pyflyby\n</strong></p>\n      </a>\n  </div>\n\n\n> This article covers how I setup automatic imports in ipython\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/resume-tips'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Resume Tips</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/refactor-in-cli'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Large Refactor At The Command Line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-01", "edit_link": "https://github.com/edit/main/pages/blog/reset-ipython.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573240", "datetime": "2020-10-01 00:00:00+00:00", "slug": "reset-ipython", "jinja": false, "output_html": "markout/reset-ipython/index.html", "long_description": "Today I ran into an issue where we had a one-off script that just needed to It started with a colleague asking me How do I clear the memory in a Jupyter How do I clear the memory in a Jupyter notebook? There are a number of ways that you can check th", "super_description": "Today I ran into an issue where we had a one-off script that just needed to It started with a colleague asking me How do I clear the memory in a Jupyter How do I clear the memory in a Jupyter notebook? There are a number of ways that you can check the amount of memory on your Generally my first go to is a bit more graphical, and not available on a stock Often before going through the process of getting a larger instance underneath Make sure you check your free disk space first, filling both memo", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663dc0>, next=<frontmatter.Post object at 0x7f34506b3e50>)"}, {"cover": "", "title": "Modal jumping", "tags": ["vim"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/modal-jumping.md", "description": "prev tmux select-layout next Reclaim memory usage in Jupyter", "content": "```\nnnoremap <leader>e :execute getline(\".\")<cr>j\n```\n\n```\nnnoremap <c-j> g,\nnnoremap <c-k> g;\n```\n\n```\nnnoremap <c-j> <c-]>\nnnoremap <c-k> g;\n```\n\n```\nnnoremap <c-j> :cnext<cr>\nnnoremap <c-k> :cprev<cr>\n```\n\n```\nnnoremap <c-j> :lnext<cr>\nnnoremap <c-k> :lprev<cr>\n```\n\n```\nnnoremap <c-j> :tnext<cr>\nnnoremap <c-k> :tprevious<cr>\nnnoremap <c-j> :trewind<cr>\nnnoremap <c-k> :tprevious<cr>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-select-layout'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux select-layout</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reset-ipython'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Reclaim memory usage in Jupyter</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-03", "edit_link": "https://github.com/edit/main/pages/blog/modal-jumping.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573246", "datetime": "2021-06-03 00:00:00+00:00", "slug": "modal-jumping", "jinja": false, "output_html": "markout/modal-jumping/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696c40>, next=<frontmatter.Post object at 0x7f3450696af0>)"}, {"cover": "", "title": "tmux select-layout", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-select-layout.md", "description": "https://youtu.be/F0mHnwTrNNc When you get many splits going in tmux sometimes its time for a new layout. https://waylonwalker.com/tmux-nav-2021/ for more inform", "content": "https://youtu.be/F0mHnwTrNNc\n\nWhen you get many splits going in tmux sometimes its time for a new layout.\nThere are four layout strategies that I use, main-vertical, main-horizontal,\neven-vertical, even-horizontal. Almost always I am useing the main ones with\nmod plus a or mod plus shift a keybindings.\n\n``` bash\n# Select Layouts\n#\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nbind -n M-a select-layout main-vertical\nbind -n M-A select-layout main-horizontal \nbind -n M-E select-layout even-vertical\nbind -n M-V select-layout even-horizontal\n```\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-select-pane'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux slect-pane</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-rotate-window'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux rotate-window</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-21", "edit_link": "https://github.com/edit/main/pages/blog/tmux-select-layout.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573253", "datetime": "2021-07-21 00:00:00+00:00", "slug": "tmux-select-layout", "jinja": false, "output_html": "markout/tmux-select-layout/index.html", "long_description": "https://youtu.be/F0mHnwTrNNc When you get many splits going in tmux sometimes its time for a new layout. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "super_description": "https://youtu.be/F0mHnwTrNNc When you get many splits going in tmux sometimes its time for a new layout. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063b550>, next=<frontmatter.Post object at 0x7f345063b9d0>)"}, {"cover": "", "title": "Quickly Change Conda Env With Fzf", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/quickly-change-conda-env-with-fzf.md", "description": "Changing conda environments is a bit verbose, I use a function with fzf that I have used conda as a virtual environment tool for years now.  I started using Wha", "content": "Changing conda environments is a bit verbose, I use a function with fzf that\nboth lists environments and selects the one I want in one go.\n\n## Conda\n\nI have used conda as a virtual environment tool for years now.  I started using\nconda for its simplicity to install packages on windows, but now that has\ngotten so much better and it's been years since I have run a `conda install`\ncommand.  I'm sure that I could use a different environment manager, but it\nworks for me and makes sense.\n\n> What environment manager do you use for python?\n\nConda environments are stored in a central location such as\n`~/miniconda3/envs/` and not with the project.  They contain both the python\ninterpreter and packages for that env.\n\n## Conda create\n\nConda environments are created with the `conda create` command.  At this point,\nyou will need to name your env and select the python version.\n\n``` bash\nconda create -n my_env python=3.8\n```\n\nAfter running this command you will have a directory `~/miniconda3/envs/my_env`\nwith a base python install.  It will not be active yet.\n\n## List environments\n\nBefore activating an environment I often want to list the environments that I\nhave installed which are often upwards of 70, so it's hard to remember them\nall.\n\n``` bash\nconda info --envs\n```\n\nAfter running this command you will see something like the following.\n\n``` bash\n# conda environments:\n#\nbase                     /home/waylon/miniconda3\nmy_env                   /home/waylon/my_env\n```\n\n## Activating an environment\n\nActivating a conda environment will do some magic to your current shells\n`$PATH` variable to ensure that the environment that you select is preferred\nover the base environment.\n\n``` bash\nconda activate my_env\n```\n\n## Ready to work\n\nNow you can install packages for your project in an isolated environment safe\nfrom wrecking another project or being wrecked by another project.\n\n``` bash\npip install -r requirements.txt\n```\n\n## Using fzf\n\n_a bit less verbose_\n\n[fzf](https://github.com/junegunn/fzf) is an amazing tool for the terminal that\nis a generic fuzzy matcher.  It is super performant and can handle insane\namounts of text and is brilliant at figuring out what you mean with just a few\ncharacters.  We can use it here to list out all of our conda environments and\nselect the one we want to activate with just a few keystrokes.\n\n### Selecting the environment.\n\nPiping our list of environments directly into `fzf` gives us a fuzzy selection\nwhere we can type a few characters and it will return the row we were looking\nfor.\n\n``` bash\nconda info --envs | fzf\n```\n\nThis returns us something like this which also includes the path where it is\nlocated.\n\n``` bash\nmy_env                 /home/walkews/miniconda3/envs/my_env\n```\n\n### getting just the environment name\n\nTo get just the name without the path I pipe the output into awk.  There are\nmany ways to do this in bash, this is the way that worked for me at the time I\nmade this function.\n\n``` bash\nconda info --envs | fzf | awk '{print $1}'\n```\n\n### Time to activate\n\nFunctions that use `fzf` can be a bit odd, running them in a subshell with the\n$() syntax generally makes it super simple to utilize the output.  No matter\nhow many times I have tried without running it in a subshell it's always buggy\nwithout it.\n\n``` bash\nconda activate \"$(conda info --envs | fzf | awk '{print $1}')\"\n```\n\nThis will now run conda activate on the environment that we select with fzf.\n\n### Make it a function\n\nWe don't want to type that out every time we want to activate an environment. I\nkeep a function called `a` in my `~/.bashrc` and `~/.zshrc` so that I can\nactivate an environment with a single character.  Yes, I switch environments\noften enough to justify the valuable namespace of a single character.\n\n``` bash\na () {\n  conda activate \"$(conda info --envs | fzf | awk '{print $1}')\"\n}\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/reusable-bash/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/reusable-bash-og_250x140.png\" alt=\"article cover for \n Creating Reusable Bash Scripts\n\"/>\n          <p><strong>\n Creating Reusable Bash Scripts\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on writing reusable bash scripts check out one of my\n> favorite articles\n\nI am always on the lookout for cool new use cases for `fzf`, if you have one please share it with me.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/quickly-edit-posts'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Quickly Edit Posts</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/quick-progress-bars-in-python-using-tqdm'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Quick Progress Bars in python using TQDM</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-11", "edit_link": "https://github.com/edit/main/pages/blog/quickly-change-conda-env-with-fzf.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573259", "datetime": "2021-01-11 00:00:00+00:00", "slug": "quickly-change-conda-env-with-fzf", "jinja": false, "output_html": "markout/quickly-change-conda-env-with-fzf/index.html", "long_description": "Changing conda environments is a bit verbose, I use a function with fzf that I have used conda as a virtual environment tool for years now.  I started using What environment manager do you use for python? Conda environments are stored in a central lo", "super_description": "Changing conda environments is a bit verbose, I use a function with fzf that I have used conda as a virtual environment tool for years now.  I started using What environment manager do you use for python? Conda environments are stored in a central location such as Conda environments are created with the  After running this command you will have a directory  Before activating an environment I often want to list the environments that I After running this command you will see something like the fol", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506858b0>, next=<frontmatter.Post object at 0x7f34506aed30>)"}, {"cover": "", "title": "How I Kedro", "tags": ["kedro"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/how-i-kedro.md", "description": "https://youtu.be/bw5 I recently switched over to using Ubuntu, it works well pretty much out of the I am still using the built in default gnome terminal, it jus", "content": "https://youtu.be/bw5_FWDVRpU\n\n## Ubuntu\n\nI recently switched over to using Ubuntu, it works well pretty much out of the\nbox for me.  I am using gnome with a dark theme.\n\n\n## Gnome Terminal\n\nI am still using the built in default gnome terminal, it just works.  It does\nall the things that I need it to do.  It supports transparency renders my fonts\nand allows me to highlight things well.\n\n* One Dark Theme\n\n## dotfiles\n\n You can find my\n [dotfiles](https://github.com/waylonwalker/devtainer) on\n github.  Feel free to read through and take anything that you\n find useful.  I would encourage you not to steal them, but to\n integrate the parts that you want into your own dotfiles.\n dotfiles are a very personal thing. They are an extension of\n ones fingertips designed for how you think and type.\n\n## zsh\n\nI use zsh as my default shell.  I like to use it as my\ninteractive shell.  It works, and does a bit better with\nthings like tab completion out of the box.\n\n## starship\n\nI use the starship prompt for my shell.  It works well out of\nthe box.  It looks good and includes all of the information\nthat I would ever need.\n\n![kedro-prompt](https://images.waylonwalker.com/kedro-prompt.png)\n\n## tmux\n\nAs a team lead I am in and out of many projects per day, tmux allows me to get\nin and out of these files with super speed.  I was using a mix of vscode and\ntmux in until October 2020.  At this point I got moved development machines and\npushed myself to use only the terminal.  I felt that vscode was just getting\nslower and slower, and I was getting less benefit from it.  Especially now that\nthe lsp is a part of nvim.\n\n![tmux-prefix+c-j](https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.gif)\n\n## neovim\n\nI really like the raw speed and customizability of neovim.  You can see all the\ncustomization, and plugins I have added in my dotfiles.\n\n* OneBuddy Theme\n* pylsp\n* kedro-lsp\n\n![nvim-kedro](https://images.waylonwalker.com/nvim-kedro.png)\n\n## ipython\n\nI really like ipython, it lets me edit code in my code editor, then import it\nor run it quickly.  Ipython gives me the right level of tooling.  I don't need\nmarkdown mixed in my code, I put those notes into docstrings, a readme, or\nwiki.  When I need to see plots I just store them as png or html and view them\nin my browser.  \n\nI do a bit of customization to my ipython session that you can find in my\ndotfiles repo.  I use a custom prompt and use rich formatting and tracebacks if\nrich is installed.\n\n* custom prompt\n* rich traceback\n\n![kedro-ipython](https://images.waylonwalker.com/kedro-ipython.png)\n\n## Links\n\n* [tmux](https://github.com/tmux/tmux)\n* [dotfiles](https://github.com/waylonWalker/devtainer)\n* [starship.rs](https://starship.rs/)\n* [kedro](https://github.com/quantumblacklabs/kedro)\n* [ipython](https://ipython.readthedocs.io/en/6.5.0/index.html)\n* [rich](https://github.com/willmcgugan/rich)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/how-python-tools-config'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How python tools configure</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/happy'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Do More of What Brings You Joy</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-16", "edit_link": "https://github.com/edit/main/pages/blog/how-i-kedro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573264", "datetime": "2021-08-16 00:00:00+00:00", "slug": "how-i-kedro", "jinja": false, "output_html": "markout/how-i-kedro/index.html", "long_description": "https://youtu.be/bw5 I recently switched over to using Ubuntu, it works well pretty much out of the I am still using the built in default gnome terminal, it just works.  It does One Dark Theme You can find my I use zsh as my default shell.  I like to", "super_description": "https://youtu.be/bw5 I recently switched over to using Ubuntu, it works well pretty much out of the I am still using the built in default gnome terminal, it just works.  It does One Dark Theme You can find my I use zsh as my default shell.  I like to use it as my I use the starship prompt for my shell.  It works well out of As a team lead I am in and out of many projects per day, tmux allows me to get I really like the raw speed and customizability of neovim.  You can see all the OneBuddy Theme ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f8e0>, next=<frontmatter.Post object at 0x7f34506b3280>)"}, {"cover": "", "title": "Kedro-Broken-Urls", "tags": ["kedro"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/kedro-broken-urls.md", "description": "[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [", "content": "## Broken Urls\n\n- [ ] https://github.com/josephhaaga) [ ] https://example.com/file.h5\n- [ ] https://raw.githubusercontent.com/quantumblacklabs/kedro/develop/static/img/pipeline_visualisation.png\n- [ ] https://example.com/file.txt\n- [ ] https://github.com/jmespath/jmespath.py.\n- [ ] https://github.com/tsanikgr)\n- [ ] https://example.com/file.csv\n- [ ] https://kedro.readthedocs.io/en/latest/04_user_guide/15_hooks.html\n- [ ] https://kedro.readthedocs.io/en/stable/07_extend_kedro/04_hooks.html\n- [ ] https://github.com/EbookFoundation/free-programming-books/blob/master/books/free-programming-books.md#python\n- [ ] https://github.com/quantumblacklabs/private-kedro/blob/develop/docs/source/04_user_guide/04_data_catalog.md\n- [ ] http://example.com/api/test\n- [ ] https://example.com/file.parquet\n- [ ] https://kedro.readthedocs.io/en/stable/11_faq/01_faq.html#how-do-i-upgrade-kedro\n- [ ] https://example.com/file.xlsx\n- [ ] https://www.datacamp.com/community/tutorials/docstrings-python\n- [ ] https://github.com/mmchougule)\n- [ ] https://example.com/file.tf\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/13_journal.html\n- [ ] https://example.com/test_tf\n- [ ] http://example.com/test.csv\n- [ ] https://www.britishcouncilfoundation.id/en/english/articles/british-and-american-english\n- [ ] https://mattturck.com/data2020/\n- [ ] https://example.com/file.yaml\n- [ ] https://kedro.readthedocs.io/en/latest/04_user_guide/08_advanced_io.html#partitioned-dataset\n- [ ] https://example.com/file\n- [ ] https://example.com/file.json\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/08_advanced_io.html#incremental-loads-with-incrementaldataset\n- [ ] https://github.com/williamashfordQB\n- [ ] https://urbanlogiq.com/\n- [ ] https://kedro.readthedocs.io/en/stable/11_faq/01_faq.html#what-is-data-engineering-convention\n- [ ] https://github.com/Minyus)\n- [ ] https://example.com/file.png\n- [ ] https://docs.python.org/3/library/json.html%5Cnfor\n- [ ] https://example.com/file.geojson\n- [ ] https://github.com/quantumblacklabs/kedro/tree/master/extras/datasets\n- [ ] https://kedro.readthedocs.io/en/latest/11_faq/02_architecture_overview.html#kedro-yml\n- [ ] https://github.com/mdomarsaleem)\n- [ ] https://kedro.readthedocs.io/en/stable/07_extend_kedro/04_hooks.html#registration-hooks\n- [ ] https://kedro.readthedocs.io/en/stable/07_extend_kedro/01_custom_datasets.html\n- [ ] https://acensi.eu/page/home\n- [ ] https://github.com/yhzqb\n- [ ] https://github.com/kaemo\n- [ ] https://joblib.readthedocs.io/en/latest/generated/joblib.load.html%5CnAll\n- [ ] https://awards.ai/the-awards/previous-awards/the-4th-ai-award-winners/\n- [ ] http://example.com/file.txt\n- [ ] https://github.com/bnmerchant\n- [ ] https://github.com/WaylonWalker)\n- [ ] https://geopandas.org/reference/geopandas.GeoDataFrame.html\n- [ ] https://docs.microsoft.com/en-us/style-guide/a-z-word-list-term-collections/term-collections/cloud-computing-terms).\n- [ ] https://cdn.heapanalytics.com/js/heap-\n- [ ] https://github.com/quantumblacklabs/private-kedro/blob/master/kedro/templates/project/*\n- [ ] https://example.com/file.fasta\n- [ ] https://example.com/test.parquet\n- [ ] https://raw.githubusercontent.com/quantumblacklabs/kedro/master/static/img/kedro_gitflow.svg\n- [ ] https://bitbucket.org/%7B%7B/\n- [ ] https://rackerlabs.github.io/docs-rackspace/tools/rtd-tables.html\n- [ ] https://kedro.readthedocs.io/en/latest/04_user_guide/04_data_catalog.html#specifying-the-location-of-the-dataset\n- [ ] https://www.linkedin.com/feed/update/urn:li:activity:6749338226403766272/updateEntityUrn=urn%3Ali%3Afs_feedUpdate%3A%28V2%2Curn%3Ali%3Aactivity%3A6749338226403766272%29\n- [ ] https://example.com/file.pkl\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html#using-the-data-catalog-with-the-yaml-api\n- [ ] https://github.com/quantumblacklabs/kedro/tree/master/extras\n- [ ] https://example.com/file.feather\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html#transcoding-datasets\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/04_data_catalog.html#transforming-datasets\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/11_ipython.html#ipython-loader\n- [ ] https://joblib.readthedocs.io/en/latest/generated/joblib.dump.html%5CnAll\n- [ ] https://kedro.readthedocs.io/en/stable/04_user_guide/03_configuration.html\n- [ ] https://kedro.readthedocs.io/en/stable/11_faq/01_faq.html#how-can-i-use-a-development-version-of-kedro\n- [ ] https://github.com/intake/filesystem_spec.\n- [ ] https://uktcawards.com/announcing-the-award-winners-for-2020/\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pyflyby'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Smoother Python with automatic imports | pyflyby</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/how-i-kedro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-20", "edit_link": "https://github.com/edit/main/pages/blog/kedro-broken-urls.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573270", "datetime": "2021-10-20 00:00:00+00:00", "slug": "kedro-broken-urls", "jinja": false, "output_html": "markout/kedro-broken-urls/index.html", "long_description": "[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [", "super_description": "[ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c670>, next=<frontmatter.Post object at 0x7f3450696670>)"}, {"cover": "", "title": "Smoother Python with automatic imports | pyflyby", "tags": ["python", "ipython", "terminal"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/pyflyby.md", "description": "This is not a flaky works half the time kind of plugin, it I can https://youtu.be/2QW5DJiEJH4 Give the video a watch, I did not have noise-cancelling on in obs.", "content": "This is not a flaky works half the time kind of plugin, it's a seriously smooth\nediting experience.  I've just started using pyflyby, and it is solid so far.\nI have automatic imports on every save of a python file in neovim, and\nautomatic imports on every command in ipython.\n\nI can't tell you how pumped I am for this, and how good its felt to use over\nthe past few weeks.  It's glorious.\n\n## YouTube video\n_Listen to me rant on how great pyflyby is_\n\nhttps://youtu.be/2QW5DJiEJH4\n\nGive the video a watch, I did not have noise-cancelling on in obs. My\napologies for the background hum and the mic stand bumps. I did my best to fix\nthem up.\n\n\n## Installation\n_How to install pyflyby for automatic python imports_\n\npyflyby is hosted on pypi, so you can get it with pip.  I have had no issues\ninstalling it on 3.8+ so far.\n\n``` bash\npip install flybypy\n```\n\n## Configuration setup with stow\n_always stow your dotfiles_\n\nIf you're going to configure any of your tools the first thing you should do is\nset it up with stow, seriously don't sleep on the stow.  If you don't have stow\ninstalled or choose not to use stow you can skip this part.\n\n``` bash\ncd ~/dotfiles\nmkdir ipython\ntouch ipython/.pyflyby\nstow ipython\n```\n\n> Seriously don't sleep on the stow.\n\n## How to Configure pyflyby\n_it's just a file full of import statements_\n\n`pyflyby` is configured simply by putting all of your import statements that you\nwant to automatically import into your `~/.pyflyby` file.  You can `import\npandas`, `from pandas import DataFrame`, or even `import pandas as pd`, and all\nof these will work pretty much as expected.\n\n``` python\n# comments start with a #\n# import your favorite libraries\nimport visidata as vd\nimport fsspec\nimport difflib\nimport s3fs\nimport seaborn as sns\nimport plotly\n\n# also supports from imports\nfrom rich.layout import Layout\nfrom rich.live import Live\n\n# duplicates are allowed\nimport plotly\nimport plotly\n\n# duplicate names from different libraries are not allowed\nimport copy\nfrom numpy import copy\n\n```\n\n> Add all the things you would like to be imported automatically, just as you\n> would import them.  I went kinda crazy and added over 200 to mine based on\n> packages that I use.\n\n## Commas are even supported\n_yep all the import styles are supported_\n\nThis following example will set up auto import for both DataFrame and Series,\nthey will both work separately.  I removed these from my config as I felt it\nwas cleaner without, but it works with them.\n\n``` python\nfrom pandas import DataFrame, Series\n```\n\n> Even imports with a comma will be treated separately.\n\n\n## Jupyter note!\n_Both work the same, use what your comfortable with_\n\nI only really mention ipython here, but the same all applies to Jupyter as\nwell.  I just really like ipython itself, c'mon its right there in the terminal\nintegrating with the rest of your terminal experience so well.\n\n\n## Ipython setup\n_Automatically import python libraries in ipython with pyflyby_\n\nThe recommended way to set uppyflybyfrom the docs is to run the following\nmagic command.  This works well, but I want even less typing, I want pyflyby\nautomatically installed and importing things without me even thinking about it.\n\n\n``` python\n%load_ext pyflyby\n```\n\n![basic example of pyflyby](https://images.waylonwalker.com/load_ext_pyflyby.gif)\n\n## Ipython setup next level\n_automatically import modules in python **without %load_ext**_\n\nI really want pyflyby to just work in every environment without me thinking\nmuch about it.  I want it to load automatically, and even to attempt to install\nitself if it's missing.\n\n``` python\nfrom IPython import get_ipython\nimport subprocess\n\n\nipython = get_ipython()\n\ntry:\n    ipython.magic(\"load_ext pyflyby\")\nexcept ModuleNotFoundError:\n    print(\"installing pyflyby\")\n    subprocess.Popen(\n        [\"pip\", \"install\", \"pyflyby\"],\n        stdout=subprocess.DEVNULL,\n        stderr=subprocess.DEVNULL,\n    ).wait()\n    ipython.magic(\"load_ext pyflyby\")\n```\n\n> Note: if installation fails you will still make it into ipython, there will\n> just be a traceback to the failed command as you enter.\n\nI've had zero issues with this, but if there ever comes a time when it does\nnot work in certain environments for you.  I'd strongly suggest you to add this\nto a separate profile.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/ipython-config/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/ipython-config-og_250x140.png\" alt=\"article cover for \n Ipython-Config\n\"/>\n          <p><strong>\n Ipython-Config\n</strong></p>\n      </a>\n  </div>\n\n\n> Check out this article for a bit more in depth ipython configuration\n\n\n## ipython auto import examples\n\npyflyby can import all the various import types just fine.\n\n* import something\n* from module import something\n* import something as alias\n\n\n``` python\ndf = pd.read_csv(\"https://waylonwalker.com/cars.csv\")\n[PYFLYBY] import pandas as pd\n```\n\n## Getting Help\n\nWant help on something that you have in your pyflyby config, just give it the\n`?`, `??`, or `help` and pyflyby will import it for you.\n\n``` python\nPopen?\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/ipython-help/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/ipython-help-og_250x140.png\" alt=\"article cover for \n Just Ask Ipython for help\n\"/>\n          <p><strong>\n Just Ask Ipython for help\n</strong></p>\n      </a>\n  </div>\n\n\n## Autocomplete\n_This is next level python auto-import_\n\npyflyby even goes as far as helping tab completion.  If you try to tab complete\n`Pop` it will complete to `Popen` without even adding `Popen` to your local\nnamespace.  If you ask for something inside of a module i.e. `requests.<tab>`,\nthen it will import requests.\n\n\n``` python\n# does not populate the namespace\nPop<tab>\n\n# !!does populate the local namespace\nrequests.<tab>\n```\n\n\n## What happens when a module is not installed\n_ModuleNotFoundError_\n\nWhen you are in an environment where you do not have a module installed that is\nin your pyflyby config, it will throw a `ModuleNotFoundError` when it tries to\nimport, and it will not import or try to install for you.  You will have to\nchange environments or install that module.\n\n``` python\n\u276f pd?\n[PYFLYBY] import pandas as pd\n[PYFLYBY] Error attempting to 'import pandas as pd': ModuleNotFoundError: No module named 'pandas'\n[PYFLYBY] Traceback (most recent call last):\n[PYFLYBY]   File \"/home/u_walkews/.local/lib/python3.8/site-packages/pyflyby/_autoimp.py\", line 1610, in _try_import\n[PYFLYBY]     exec_(stmt, scratch_namespace)\n[PYFLYBY]   File \"<string>\", line 1, in <module>\n[PYFLYBY] ModuleNotFoundError: No module named 'pandas'\nObject `pd` not found.\n\n\u276f df = pd.read_csv(\"https://waylonwalker.com/cars.csv\")\n<ipython-input-3-69b040434562>:1 in <module>\n\nNameError: name 'pd' is not defined\n\n```\n\n\n## nvim pyflyby setup\n_automatically importing python modules in vim, neovim, nvim_\n\nThis is by far the best part of this article.  It makes development so fluid.\nIt's not necessarily all about the speed.  It really helps you move at the\nspeed of your thoughts, without needing to worry about imports.  Remembering\nwhere deeply nested modules are does not need to be a thing.\n\n``` vim\nfunction! s:PyPreSave()\n    Black\nendfunction\n\nfunction! s:PyPostSave()\n    execute \"silent !tidy-imports --black --quiet --replace-star-imports --action REPLACE \" . bufname(\"%\")\n    execute \"e\"\nendfunction\n\n:command! PyPreSave :call s:PyPreSave()\n:command! PyPostSave :call s:PyPostSave()\n\naugroup waylonwalker\n    autocmd!\n    autocmd bufwritepre *.py execute 'PyPreSave'\n    autocmd bufwritepost *.py execute 'PyPostSave'\n    autocmd bufwritepost .tmux.conf execute ':!tmux source-file %'\n    autocmd bufwritepost .tmux.local.conf execute ':!tmux source-file %'\n    autocmd bufwritepost *.vim execute ':source %'\naugroup end\n```\n\n![running pyflyby on save in nvim](https://images.waylonwalker.com/pyflyby-nvim.gif)\n\n## refactoring\n_This is where it really shines_\n\nThis setup really shines when you are refactoring.  You can freely move modules\nand classes around without worrying about bringing imports with them. Often\nwhen refactoring some modules from one file to another the most tedious part is\nediting the imports.  Often you can't even grab whole lines because there are\nseveral imports and some are needed in both places but not all.  pyflyby\nhandles all this like a champ.\n\n![simple refactoring example with pyflyby](https://images.waylonwalker.com/pyflyby-refactoring.gif)\n\n## Where to install for vim\n_just make sure the tidy-imports command is available to vim_\n\npyflyby goes into the environment that you have active at the time that you\nstart neovim.  Typically, this is the virtual environment that I am using for\nthe project I am editing.\n\n\n## What gets imported/removed\n_only give me what I actually use_\n\nAnything within the base config of pyflyby or your own config specified in\n`~/.pyflyby` will get automatically imported if it is used within the\nfile/console.  If you are working in a file, and stop using a module, it will\nautomatically get removed.\n\n* Anything that is used, and found in the config is added\n* Anything that is unused gets removed\n\n## Where does it put imports\n_after the last import_\n\n`pyflyby` does not sort imports into paragraphs or by category.  When it needs\nto add new imports.  It will find the last paragraph of imports in your file,\nadd the new one, and sort that paragraph alphabetically.\n\n``` python\nfrom collections import Counter\n\nimport requests\n\nfrom plugins.custom_seo import post_render\n# <-- pyflyby will put the import here\n```\n\n## What about isort\n_put those imports where they go_\n\nI did not like that I was getting pre-commit issues when using pyflyby, so I\nadded isort to my chain of autocommands to automatically run isort and make my\npre-commit happy.\n\n``` vim\nfunction! s:PyPostSave()\n    execute \"silent !tidy-imports --black --quiet --replace-star-imports --action REPLACE \" . bufname(\"%\")\n    execute \"silent !isort \" . bufname(\"%\")\n    execute \"e\"\nendfunction\n```\n\nLet's write some code\n\n``` python\ndef get():\n    \"\"\"\n    Get all the posts from waylonwalker.com.\n\n    Yes theres an rss feed, you should be subscribed if your not already.\n\n    Oh, and we don't need no stinkin error handing because it's always live\n    \"\"\"\n    r = requests.get(\"https://waylonwalker.com/rss\")\n    return r.content\n```\n\nSave it and pyflyby will inject requests into our file automatically, no need\nto type that out anymore.\n\n``` python\nimport requests\n\ndef get():\n    \"\"\"\n    Get all the posts from waylonwalker.com.\n\n    Yes theres an rss feed, you should be subscribed if your not already.\n\n    Oh, and we don't need no stinkin error handing because it's always live\n    \"\"\"\n    r = requests.get(\"https://waylonwalker.com/rss\")\n    return r.content\n```\n\n## What about __init__ / api's\n_careful to fill in the `__all__` like you are supposed to_\n\n<!-- ` -->\n\nFiles such as __init__.py often import things they do not need, this is simply\nthere for a convenience of the library user and to make the api cleaner.  These\ntype of modules should implement a `__all__` list of all the unused things that\nare imported according to pep8.  Pyflyby will remove any unused modules unless\nthey are in the `__all__` list.\n\n``` python\n# snippet from kedro.extras.datasets.pandas\n\n__all__ = [\n    \"CSVDataSet\",\n    \"ExcelDataSet\",\n    \"FeatherDataSet\",\n    \"GBQTableDataSet\",\n    \"ExcelDataSet\",\n    \"AppendableExcelDataSet\",\n    \"HDFDataSet\",\n    \"JSONDataSet\",\n    \"ParquetDataSet\",\n    \"SQLQueryDataSet\",\n    \"SQLTableDataSet\",\n]\n\n```\n\n![pyflyby in __init__ files](https://images.waylonwalker.com/pyflyby-__all__.gif)\n\n## py command\n_one liners that need imports_\n\npyflyby also comes with a cli command to run one liners.  It's pretty genius,\nI'm sure I will find a use or two for it, but so far it's been more of a novelty\nfor me.\n\n``` bash\npy help pd\npy help pd.DataFrame\n\npy pd.read_csv 'https://waylonwalker.com/cars.csv'\n```\n\n![pyflyby's py command can run one liners from bash or zsh even with imports](https://images.waylonwalker.com/pyflyby-py.gif)\n\n## Links\n\n* [pyflyby repo](https://github.com/deshaw/pyflyby)\n* [docs](https://deshaw.github.io/pyflyby/)\n* [My YouTube Video for pyflyby](https://youtu.be/2QW5DJiEJH4)\n* [configuring ipython](https://waylonwalker.com/ipython-config/)\n* [asking ipython for help??](https://waylonwalker.com/ipython-help/)\n* [sample data I used with pandas](https://waylonwalker.com/cars.csv)\n* [my rss feed](https://waylonwalker.com/rss)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pytest-capsys'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Pytest capsys</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/pre-commit-is-awesome'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pre-commit is awesome</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-20", "edit_link": "https://github.com/edit/main/pages/blog/pyflyby.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573276", "datetime": "2021-12-20 00:00:00+00:00", "slug": "pyflyby", "jinja": false, "output_html": "markout/pyflyby/index.html", "long_description": "This is not a flaky works half the time kind of plugin, it I can https://youtu.be/2QW5DJiEJH4 Give the video a watch, I did not have noise-cancelling on in obs. My pyflyby is hosted on pypi, so you can get it with pip.  I have had no issues If you Se", "super_description": "This is not a flaky works half the time kind of plugin, it I can https://youtu.be/2QW5DJiEJH4 Give the video a watch, I did not have noise-cancelling on in obs. My pyflyby is hosted on pypi, so you can get it with pip.  I have had no issues If you Seriously don pyflyby Add all the things you would like to be imported automatically, just as you This following example will set up auto import for both DataFrame and Series, Even imports with a comma will be treated separately. I only really mention ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae310>, next=<frontmatter.Post object at 0x7f34506468b0>)"}, {"cover": "", "title": "Keyboard Driven VSCode", "tags": ["vscode"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/keyboard-driven-vscode.md", "description": "Reimagining my tmux configuration inside of vscode.", "content": "> Throw that mouse Away its time to setup some keyboard shortcuts.\n\nThese sortcuts were the baseline for switching from tmux/vim to vscode.  Most folks posts I was able to find gave great tips on replacing vim, but very few have focused on the hackability of tmux.  tmux allows me to rapidly fire up a workspace, create new windows and splits.  Then When I switch tasks I can leave that workspace open and and jump right back in later exactly where I left off.  There is nothing quite like it.  The shortcuts listed here make the transition a bit better. The worst thing I found when using vscode at first was no way to switch between the terminal and editor without the mouse.  This first set of keybindings solve that issue.\n\n> The worst thing I found when using vscode at first was no way to switch between the terminal and editor without the mouse.\n\n## Alt+\\[hjkl\\]\n\n_navigation_\n\n\u2b05 jump to **left** split **alt+h**\n\n\u2b07 jump to **terminal** from editor **alt+j**\n\n\u2b06 jump to **editor** from terminal **alt+k**\n\n\u27a1 jump to **right** split **alt+l**\n\nThis is by var the most useful set of keybindings that I use in vscode and is directly replicated from my tmux configuration.  It allows me to quickly jump up, down, left, right.  Do note that if you use vertical splits it does not work as well as tmux \ud83d\ude22.\n\n![navigating vscode with keyboard shortcuts](https://images.waylonwalker.com/alt \\[hjkl\\].gif \"Alt+[hjkl]\")\n\n``` json\n[\n        {\n            \"key\": \"alt+j\",\n            \"command\": \"workbench.action.terminal.focus\",\n            \"when\": \"editorFocus\"\n        },\n\n        {\n            \"key\": \"alt+k\",\n            \"command\": \"workbench.action.focusFirstEditorGroup\",\n            \"when\": \"terminalFocus\"\n        },\n        {\n            \"key\": \"alt+k\",\n            \"command\": \"workbench.action.focusAboveGroup\",\n            \"when\": \"editorFocus\"\n        },\n        {\n            \"key\": \"alt+l\",\n            \"command\": \"-toggleFindInSelection\",\n            \"when\": \"editorFocus\"\n        },\n        {\n            \"key\": \"alt+l\",\n            \"command\": \"workbench.action.focusNextGroup\",\n            \"when\": \"editorFocus\"\n        },\n        {\n            \"key\": \"alt+h\",\n            \"command\": \"workbench.action.focusPreviousGroup\",\n            \"when\": \"editorFocus\"\n        },\n\n        {\n            \"key\": \"alt+l\",\n            \"command\": \"workbench.action.terminal.focusNextPane\",\n            \"when\": \"terminalFocus\"\n        },\n        {\n            \"key\": \"alt+h\",\n            \"command\": \"workbench.action.terminal.focusPreviousPane\",\n            \"when\": \"terminalFocus\"\n        },\n]\n```\n\n## Alt+b\n\n_toggle bloat_\n\nSince closing the sidebar is assigned to `ctrl+b` I thought that it made most sense to simulate the activity bar with `alt+b`.  There are many times when I just want to get as much out of the way as possible and this little bit does help.\n\n![hiding the activity bar ](https://images.waylonwalker.com/alt b.gif \"Alt+b\")\n\n``` json\n[\n    {\n        \"key\": \"alt+b\",\n        \"command\": \"workbench.action.toggleActivityBarVisibility\",\n        \"when\": \"editorFocus\"\n    },\n]\n```\n\n## Alt+\\[svx\\]\n\n_Split it up_\n\n\ud83d\ude4c Split hoizontally **alt+s**\n\n\ud83c\udf4c Vertically **alt+v**\n\n\ud83d\udca5 Close **alt+x**\n\nThis is another one replicated from tmux for quickly creatiting horizontal (s) and vertical (v) splits.  Once I am done with them I can close them with alt+x.\n\n![Make and destroy splits with ease in vscode.](https://images.waylonwalker.com/alt \\[svx\\].gif \"spliting the editor\")\n\n``` json\n[\n    {\n        \"key\": \"alt+s\",\n        \"command\": \"workbench.action.terminal.split\",\n        \"when\": \"terminalFocus\"\n    },\n    {\n        \"key\": \"alt+s\",\n        \"command\": \"workbench.action.splitEditor\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+v\",\n        \"command\": \"workbench.action.splitEditorOrthogonal\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+x\",\n        \"command\": \"workbench.action.terminal.kill\",\n        \"when\": \"terminalFocus\"\n    },\n    {\n        \"key\": \"alt+x\",\n        \"command\": \"workbench.action.closeActiveEditor\",\n        \"when\": \"editorFocus\"\n    }\n]\n```\n## Alt+\\[cnp\\]\n\n\ud83e\udd32 **Create** new workspace **alt+c**\n\n\u23ed jump to **next** workspace **alt+n**\n\n\u23ee jump to **previous** workspace **alt+p**\n\nSometimes the terminal window gets a bit cramped inside of splits and you need to use different panes.  I replicated the cnp pattern from tmux here as well.  I can create (c) new panes, then go to the next (n), or previous (p) without leaving the comfort of my keyboard.\n\nI am often using this one when I have a process running that I watch like gatsby, and I need to quickly pop into a new pane to run a git command and back in to gatsby before jumping up to my editor.\n\n![](https://images.waylonwalker.com/alt \\[cnp\\].gif)\n\n``` json\n[\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"workbench.action.terminal.new\",\n        \"when\": \"terminalFocus\"\n    },\n    {\n        \"key\": \"alt+n\",\n        \"command\": \"workbench.action.terminal.focusNext\",\n        \"when\": \"terminalFocus\"\n    },\n\n    {\n        \"key\": \"alt+p\",\n        \"command\": \"workbench.action.terminal.focusPrevious\",\n        \"when\": \"terminalFocus\"\n    },\n]\n```\n\n## Alt+z\n\n\ud83d\uddfb Zoom into terminal **alt+z**\n\nThis last one doesnt work as well as I would like but it sure does get the job done.  It Zooms (z) into the terminal from anywhere in vscode.  I can be in my editor and zoom out of the terminal to make more room, or zoom in to see what happened from my last edit.\n\n![](https://images.waylonwalker.com/alt z.gif)\n\n``` json\n[\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"workbench.action.toggleMaximizedPanel\",\n    },\n]\n```\n\n## Bonus\n\n## Alt+r\n\n\ud83d\uddb1 right click in place\n\nI recently found this one, and find it quite useful to quickly do things like revert selected range, or extract variable without leaving the keyboard.\n\n``` json\n[\n  {\n    \"key\": \"alt+r\",\n    \"command\": \"editor.action.showContextMenu\",\n  },\n]\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/learn-early'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is something you should have learned or understood earlier?</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/keep-location-list-closed'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Keep Location List Closed</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-07-07", "edit_link": "https://github.com/edit/main/pages/blog/keyboard-driven-vscode.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573282", "datetime": "2019-07-07 00:00:00+00:00", "slug": "keyboard-driven-vscode", "jinja": false, "output_html": "markout/keyboard-driven-vscode/index.html", "long_description": "Throw that mouse Away its time to setup some keyboard shortcuts. These sortcuts were the baseline for switching from tmux/vim to vscode.  Most folks posts I was able to find gave great tips on replacing vim, but very few have focused on the hackabili", "super_description": "Throw that mouse Away its time to setup some keyboard shortcuts. These sortcuts were the baseline for switching from tmux/vim to vscode.  Most folks posts I was able to find gave great tips on replacing vim, but very few have focused on the hackability of tmux.  tmux allows me to rapidly fire up a workspace, create new windows and splits.  Then When I switch tasks I can leave that workspace open and and jump right back in later exactly where I left off.  There is nothing quite like it.  The shor", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a550>, next=<frontmatter.Post object at 0x7f3450652c10>)"}, {"cover": "", "title": "Integration testing with Python, TestProject.io, and GitHub Actions", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/testproject-io-py-actions.md", "description": "As I continue to build out  Running integration tests will not prevent bugs from happening completely, but it will allow me to quickly spot them and rollback. T", "content": "As I continue to build out [waylonwalker.com](https://waylonwalker.com/) I\nsometimes run into some errors that are not caught because I do not have good\ntesting implemented.  I want to explore some integration testing options using\nGitHub's actions.\n\nRunning integration tests will not prevent bugs from happening completely, but it will allow me to quickly spot them and rollback.\n\n\n---\n\n## \ud83e\udd14 What to test first?\n\nThe very first thing that comes to my mind is anything that is loaded or ran client-side.  Two things quickly came to mind here.  I run gatsby so most of my content is statically rendered, and it yells at me if something isn't as expected.  For performance reasons I lazy load cards on my blogroll, loading all of the header images gets heavy and kills lighthouse (if anyone actually cares). I am also loading some information from the top open-source libraries that I have created.  To prevent the need to rebuild the whole site to get the latest information I am just using the GitHub API client-side.\n\n\nthings I was looking for from features to test\n\n* client-side interactions\n* external API\n\nfeatures on my blog to consider testing\n\n* lazy-loaded blog cards\n* GitHub Repos\n\n\n## Repo Cards\n\nI chose to start with the GitHub repos as they seemed a bit more straight forward, and it's been a while since I have done any selenium.\n\n<p style='text-align: center'>\n<img src='https://images.waylonwalker.com/open-source-cards.png' style='width:600px; max-width:80%; margin: auto;' alt='Open Source cards as they look on waylonwalker.com'/>\n</p>\n\n> here is what the GitHub repo cards look like\n\n## TestProject.io\n\nI am trying out [TestProject.io](https://TestProject.io) for the first time on this project.  My experience so far has been top-notch.  There was an existing suite of docker images/files set up to run the TestProject agent in a docker container alongside headless chrome and firefox drivers.  The first thing that you are going to need is a [TP\\_DEV\\_TOKEN ](https://app.TestProject.io/#/integrations/sdk) and [TP\\_API\\_KEY](https://app.TestProject.io/#/integrations/api).  These will give TestProject access to your account so that it can automatically post results to your [dashboard](https://app.TestProject.io/#/reports)\n\n* [TP\\_DEV\\_TOKEN ](https://app.TestProject.io/#/integrations/sdk)\n* [TP\\_API\\_KEY](https://app.TestProject.io/#/integrations/api)\n\n### Put these in secrets in your repo\n\nIn your GitHub repo go to `settings>Secrets`, or append `settings/secrets` to the URL to your repo, and add the tokens.  This will give GitHub safe access to them without them being available to the public, contributors, log files, or anything.\n\n\n<p style='text-align: center'>\n<img src='https://images.waylonwalker.com/test-waylonwalker-com-secrets.png' style='width:600px; max-width:80%; margin: auto;' alt='Secrets panel in the GitHub Repo'/>\n</p>\n\n\n## Setup Dev\n\nTo expedite development I went ahead and set up development environment that I could log into on Digital Ocean.  This allowed me to get all of my tests working a bit quicker than just running them through GitHub, but being as similar as possible.  This allowed me to learn the ins and outs of setting up TestProject without needing to do a full install every time through Github's actions.\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/new-machine-tpio/'>\n  <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/new-machine-tpio-rm.png\"\n    alt=\"Test Project Dev Machine setup notes card\"\n  />\n  </a>\n</p>\n\n> I am not going to go into full dev machine setup here, but you can read my [setup notes](https://waylonwalker.com/new-machine-tpio/).\n\n## \ud83d\udc0d Pytest\n_you can see all of the tests ran with pytest on [github](https://github.com/waylonwalker/waylonwalker-com-tests/tree/main/tests)_\n\nI chose to go down the route of using pytest.  I really liked the idea of utilizing fixtures, automatically running my test functions, and utilizing a bit of the pytest reporting capabilities.\n\n**NOTE** per pytest standard practice I named the directory containing tests `tests`.  While this works, TestProject.io uses this director as the default name for the project.  If I were to go back I would either rename the directory to what I want to show up on TestProject.io or configure the project name inside of the config.\n\n\n## conftest.py\n_You can see the [conftest.py](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/tests/conftest.py) live on GitHub._\n\n\npytest automatically imports [conftest.py](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/tests/conftest.py) modules from the same directory that you are working from.  It's common to place fixtures used across multiple files here.  I placed a driver fixture in this module so that as I create more tests it will be available everywhere by default.\n\n> conftest.py stores fixtures for all modules in a directory.\n\n``` python\n# tests/conftest.py\n\nimport time\nimport pytest\nfrom src.TestProject.sdk.drivers import web driver\n\n@pytest.fixture\ndef driver():\n    \"creates a webdriver and loads the homepage\"\n    driver = webdriver.Chrome()\n    driver.get(\"https://waylonwalker.com/\")\n    yield driver\n    driver.quit()\n```\n> Look at the full version of [conftest.py](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/tests/conftest.py)\n\nThe above sample is a bit **simplified**.  I ran into some inconsistencies in the real version and found that some tests had a better pass rate if I added a wait.  I ended up with a `driver` and a `slow_driver` fixture.\n\n## test_repos.py\n\n_see the full [testrepos.py](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/tests/test_repos.py) on GitHub_\n\n\nI have initially set up 3 different tests for the repo cards.  I set a list of repos that I expect to show up in the cards.  These tests are quite easy to do with TestProject.io as it is using selenium and a headless browser to execute javascript under the hood.\n\nIf you are not familiar a **headless browser** runs the engine as your browser without a graphical user interface.  JavaScript gets fully loaded and parsed, and the dom is completely interactive programmatically.\n\n``` python\n\"\"\"\nTest that GitHub repo data dynamically loads the client-side.\n\"\"\"\n\nREPOS = [\n    \"find-kedro\",\n    \"kedro-static-viz\",\n    \"kedro-action\",\n    \"steel-toes\",\n]\n\ndef test_repos_loaded(slow_driver):\n    \"\"\"\n    Test that each repo-name exists as a title in one of the repo cards.\n\n    On waylonwalker.com repo cards have a title with a class of \"repo-name\"\n    \"\"\"\n    repos = slow_driver.find_elements_by_class_name(\"repo-name\")\n    # get innertext from elements\n    header_text = [\n        header.text for header in repos\n    ]\n    for repo in REPOS:\n        assert repo in header_text\n\n\ndef test_repo_description_loaded(slow_driver):\n    \"\"\"\n    Test that each repo has a description longer than 10 characters\n\n    On waylonwalker.com repo cards have a descriptiion with a class of \"repo-description\"\n    \"\"\"\n    repo_elements = slow_driver.find_elements_by_class_name(\"repo\")\n    for el in repo_elements:\n        desc = el.find_element_by_class_name(\"repo-description\")\n        assert len(desc.text) > 10\n\n\ndef test_repo_stars_loaded(slow_driver):\n    \"\"\"\n    Ensure that stars are properly parsed from the API and loaded client-side\n\n    On waylonwalker.com repo cards have a stars element with a class of \"repo-stars\" and\n    is displayed as \"n stars\"\n    \"\"\"\n    repo_elements = slow_driver.find_elements_by_class_name(\"repo\")\n    for el in repo_elements:\n        stars = el.find_element_by_class_name(\"repo-stars\")\n        num_stars, label = stars.text.split()\n        assert int(num_stars) > 0\n        assert label == 'stars'\n```\n\n## Forum\n_[forum.TestProject.io](https://forum.TestProject.io/t/install-agent-inside-github-actions/2334/3)_\n\nBefore jumping into the real action.  I quickly wanted to mention the **amazing** \u2728  discord server that they have going.\n\nI was a bit confused about how to set up TestProject.io inside of actions.  I was with a prompt response linking me to the exact example I needed.  The tests were written in java, but they had set up the docker-compose steps that I needed.\n\n\n---\n\n## GitHub Actions \ud83c\udfac\n\n_[test-waylonwalker-com.yml](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/.github/workflows/test-waylonwalker-com.yml)_\n\nGitHub actions are a continuous integration, continuous delivery service by GitHub that will spin up a VM and run a set of steps upon a number of triggers including push, pull request, and schedule.\n---\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/github-actions-syntax/'>\n  <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/github-actions-syntax-rm.png\"\n    alt=\"GitHub Actions Syntax article card\"\n  />\n  </a>\n</p>\n\n> If you're new to actions check out this article on using actions.\n\n---\n\nNow that I have my GitHub repo setup with my [tests](https://github.com/WaylonWalker/waylonwalker-com-tests/tree/main/tests) successfully running in pytest, let's get it running inside of GitHub actions automatically.\n\n``` yaml\nname: Test WaylonWalker.com\n\n# Controls when the action will run. Triggers the workflow on push or pull request\n# events but only for the main branch\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n  schedule:\n    - cron: '*/10 * * * *'\n```\n\nYou can see in the section above I have set up to run every time there is a push to or pull request open to main.  I also set a fairly aggressive test schedule to run every **10** **minutes**.  For now, this is just to build confidence in the tests and get more data in the reports to explore.  I will likely turn this down later.\n\n``` yaml\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@main\n    - uses: actions/setup-python@v2\n      with:\n        python-version: '3.8'\n    - run: pip install -r requirements.txt\n    - name: Run TestProject Agent\n      env:\n        TP_API_KEY: ${{ secrets.TP_API_KEY }} # < Let Secrets handle your keys\n      run: |\n        envsubst < .github/ci/docker-compose.yml > docker-compose.yml\n        cat docker-compose.yml\n        docker-compose -f docker-compose.yml up -d\n    - name: Wait for Agent to Register\n      run: bash .github/ci/wait_for_agent.sh\n    - run: pytest\n      env:\n        TP_DEV_TOKEN: ${{ secrets.TP_DEV_TOKEN }} # < Let Secrets handle your tokens\n        TP_AGENT_URL: http://localhost:8585\n```\n\nIn the test job you can see that we have rendered the [TP\\_API\\_KEY](https://app.TestProject.io/#/integrations/api) into the [docker-compose.yml](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/.github/ci/docker-compose.yml) using `envsubst` file so that TestProject has access to it.  We have also exposed our [TP\\_DEV\\_TOKEN ](https://app.TestProject.io/#/integrations/sdk) to pytest.\n\n\n## docker-compose.yml\n\n_[docker-compose.yml](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/.github/ci/docker-compose.yml)_\n\nThe following [docker-compose.yml](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/.github/ci/docker-compose.yml) file was graciously contributed by [@vitalybu](https://github.com/vitalybu) in the [testproject-io/java-sdk](https://github.com/testproject-io/java-sdk/blob/master/.github/ci/docker-compose.yml) repo.  It sets up a template with the **`TP_API_KEY`** as a variable for envsubst, headless browsers for chrome and firefox, and the TestProject.io agent.\n\n``` yaml\nversion: \"3.1\"\nservices:\n  testproject-agent:\n    image: testproject/agent:latest\n    container_name: testproject-agent\n    depends_on:\n      - chrome\n      - firefox\n    environment:\n      TP_API_KEY: \"${TP_API_KEY}\"\n      TP_AGENT_TEMP: \"true\"\n      TP_SDK_PORT: \"8686\"\n      CHROME: \"chrome:4444\"\n      CHROME_EXT: \"localhost:5555\"\n      FIREFOX: \"firefox:4444\"\n      FIREFOX_EXT: \"localhost:6666\"\n    ports:\n    - \"8585:8585\"\n    - \"8686:8686\"\n  chrome:\n    image: selenium/standalone-chrome\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n    - \"5555:4444\"\n  firefox:\n    image: selenium/standalone-firefox\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n    - \"6666:4444\"\n```\n\n## \u231a Waiting for the Agent to register\n_[wait for agent.sh](https://github.com/WaylonWalker/waylonwalker-com-tests/blob/main/.github/ci/wait_for_agent.sh)_\n\nI think the most interesting part of the workflow above is how we wait for the agent to register.  The shell script is a bit terse, but it looks for exceeding the `max_attempts` allowed or that the agent has started by using its `/api/status` rest API.  This prevents us from wasting too much time by setting a big wait, or trying to move on too early and running pytest without a running agent.\n\n``` bash\ntrap 'kill $(jobs -p)' EXIT\nattempt_counter=0\nmax_attempts=100\nmkdir -p build/reports/agent\ndocker-compose -f docker-compose.yml logs -f | tee build/reports/agent/log.txt&\nuntil curl -s http://localhost:8585/api/status | jq '.registered' | grep true; do\n    if [ ${attempt_counter} -eq ${max_attempts} ]; then\n    echo \"Agent failed to register. Terminating...\"\n    exit 1\n    fi\n    attempt_counter=$(($attempt_counter+1))\n    echo\n    sleep 1\ndone\n```\n\n\n## TestProject.io Dashboard \u303d\n\nOne one of the coolest features that you get from TestProject.io are the [reports](https://app.testproject.io/#/reports) dashboard.  To me, this felt like a premium feature for **free**.  Here you can see a time-series plot of your tests success rate over time.  It gives you a bit of an ability to slice in, but not a lot.  Some of the filters are pre-canned, like the past 2 days are past 30 days cannot be customized.\n\n<p style='text-align: center'>\n  <img\n    style='width:800px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/tpio-test-repos.png\"\n    alt=\"My Dashboard for test_repos\"\n  />\n</p>\n\n## A single test flow in the dashboard\n\nAs you drill in you can see individual tests that have been run, select them, and see individual reports for each test.  Personally I really like the layout on the side.  It converts the steps ran by the driver into a human-readable _flowchart_, and each step can be opened up to see their values.  It would be nice if it picked up my pytest assertions, but picking up what it did was great.\n\n\n<p style='text-align: center'>\n  <img\n    style='width:350px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/test_repo_stars_loaded.png\"\n    alt=\"driver flow of test_repo_stars_loaded\"\n  />\n</p>\n\n\n## Overall \ud83d\ude04\nThe experience I had setting up TestProject.io to run inside GitHub's actions was great.  It was fairly simple to set up and get running with many of the greatest integration testing tools of today, selenium, chrome, firefox.\n\nNow I am going to turn the test frequency down a bit.\n\n---\n\n## More Actions\n\nIf you're new to actions check out this article on using actions.\n\n<TABLE>\n<TR>\n   <TD>\n      <a href='https://waylonwalker.com/four-github-actions-website/'>\n      <img\n         style='margin: auto; float: left'\n         src=\"https://images.waylonwalker.com/four-github-actions-website-rm.png\"\n         alt=\"GitHub Actions Syntax article card\"\n         />\n      </a>\n   </TD>\n   <TD>\n      <a href='https://waylonwalker.com/four-github-actions-python/'>\n      <img\n         style='margin: auto; float: right;'\n         src=\"https://images.waylonwalker.com/four-github-actions-python-rm.png\"\n         alt=\"GitHub Actions Syntax article card\"\n         />\n      </a>\n   </TD>\n</TR>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/2-minutes-to-stow'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>2 minutes to stow</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/telegraph-release'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>I made a neovim plugin</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-27", "edit_link": "https://github.com/edit/main/pages/blog/testproject-io-py-actions.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573287", "datetime": "2020-07-27 00:00:00+00:00", "slug": "testproject-io-py-actions", "output_html": "markout/testproject-io-py-actions/index.html", "long_description": "As I continue to build out  Running integration tests will not prevent bugs from happening completely, but it will allow me to quickly spot them and rollback. The very first thing that comes to my mind is anything that is loaded or ran client-side.  ", "super_description": "As I continue to build out  Running integration tests will not prevent bugs from happening completely, but it will allow me to quickly spot them and rollback. The very first thing that comes to my mind is anything that is loaded or ran client-side.  Two things quickly came to mind here.  I run gatsby so most of my content is statically rendered, and it yells at me if something isn things I was looking for from features to test client-side interactions external API features on my blog to consider", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b040>, next=<frontmatter.Post object at 0x7f34506969d0>)"}, {"cover": "", "title": "\ud83d\udcdd Docker Deep Dive - Notes", "tags": ["docker", "linux"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/docker-deep-dive.md", "description": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas A handy way to try weird things in docker is using Installing on Ubuntu. In order to run ", "content": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas\n\n## Play With Docker\n\nA handy way to try weird things in docker is using\n[play-with-docker](play-with-docker.com).  You get a four hour session for\nfree, after four hours everything will be deleted, but you can start a new\nsession.\n\n### Installing Docker on Linux\n\nInstalling on Ubuntu.\n\n``` bash\nwget -qO- https://get.docker.com/ | sh\n```\n\n### Running Docker commands without sudo\n\nIn order to run docker commands without using sudo you need to add docker to\nyour group.\n\n\n``` bash\nsudo usermod -aG docker ubuntu\n```\n\n## Architecture and Theory\n\n\n**Container** - Isolated area of an OS with resource usage limits applied.\n\nNamespaces and Control Groups are hard, which is why containers were unusable\nby mortals before docker.\n\n\n\n## Namespaces\n_Isolation_\n\nEach container looks and feels like a regular OS. It has its own eth0, users,\nkernel.  These are completely isolated from every other container running on\nthe system.\n\nNamespaces are analogous to what Hypervisors do on hardware.\n\n* Process ID (pid)\n* Network (net)\n* Filesystem/mount (mnt)\n* Inter-proc comms (ipc)\n* UTS (uts)\n* User (usr)\n\n##  Control Groups\n_Resource usage limits_\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/update-copier'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Copier < 6.0.0b0 considered dangerous</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/testproject-io-py-actions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Integration testing with Python, TestProject.io, and GitHub Actions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-23", "edit_link": "https://github.com/edit/main/pages/blog/docker-deep-dive.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573295", "datetime": "2021-04-23 00:00:00+00:00", "slug": "docker-deep-dive", "jinja": false, "output_html": "markout/docker-deep-dive/index.html", "long_description": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas A handy way to try weird things in docker is using Installing on Ubuntu. In order to run docker commands without using sudo you need to add docker to Namespaces and Control Groups", "super_description": "https://www.hanselminutes.com/784/doing-open-source-with-brian-douglas A handy way to try weird things in docker is using Installing on Ubuntu. In order to run docker commands without using sudo you need to add docker to Namespaces and Control Groups are hard, which is why containers were unusable Each container looks and feels like a regular OS. It has its own eth0, users, Namespaces are analogous to what Hypervisors do on hardware. Process ID (pid) Network (net) Filesystem/mount (mnt) Inter-pr", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c550>, next=<frontmatter.Post object at 0x7f345069c160>)"}, {"cover": "", "title": "Copier < 6.0.0b0 considered dangerous", "tags": ["python", "python", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/update-copier.md", "description": "Copier is a fantastic templating library written in python, but older versions I Use copier several times per day and get fantastic benefit from this project, h", "content": "Copier is a fantastic templating library written in python, but older versions\nhave a dangerous bug if you are using it inside of existing directories.\n\n## This is a PSA\n\nI Use copier several times per day and get fantastic benefit from this project,\nthis post is not intended to crap all over copier in any way, but is rather a\nPSA for other users who do use copier like I do so that they know the dangers\nof using copier inside an existing directory.\n\n## The issue\n\n## The fix\n\nhttps://github.com/copier-org/copier/pull/273\n\nAs of the time of writing this version is still in beta, if you still want to\nuse copier with existing directtories, I'd strongly encourage you to install\nthe `--pre` release.\n\n``` python\npipx install copier --pip-args='--pre'\n```\n\n## confirm\n\n``` bash\ncopier --version\n# copier 6.0.0b0\n```\n\n\n## My update commit\n\nhttps://github.com/WaylonWalker/devtainer/commit/a06e47462e2c6d26ad69fbdc2e7990a1a73ab4b7\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-environment'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>kedro Virtual Environment</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/docker-deep-dive'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udcdd Docker Deep Dive - Notes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-30", "edit_link": "https://github.com/edit/main/pages/blog/update-copier.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573301", "datetime": "2022-04-30 00:00:00+00:00", "slug": "update-copier", "jinja": false, "output_html": "markout/update-copier/index.html", "long_description": "Copier is a fantastic templating library written in python, but older versions I Use copier several times per day and get fantastic benefit from this project, https://github.com/copier-org/copier/pull/273 As of the time of writing this version is sti", "super_description": "Copier is a fantastic templating library written in python, but older versions I Use copier several times per day and get fantastic benefit from this project, https://github.com/copier-org/copier/pull/273 As of the time of writing this version is still in beta, if you still want to https://github.com/WaylonWalker/devtainer/commit/a06e47462e2c6d26ad69fbdc2e7990a1a73ab4b7", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c9d0>, next=<frontmatter.Post object at 0x7f345069c790>)"}, {"cover": "", "title": "kedro Virtual Environment", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-environment.md", "description": "Avoid serious version conflict issues, and use a virtual environment anytime https://youtu.be/ZSxc5VVCBhM conda venv pipenv I prefer to use conda as my virtual ", "content": "Avoid serious version conflict issues, and use a virtual environment anytime\nyou are running python, here are three ways you can setup a kedro virtual\nenvironment.\n\nhttps://youtu.be/ZSxc5VVCBhM\n\n* conda\n* venv\n* pipenv\n\n## conda\n\nI prefer to use conda as my virtual environment manager of choice as it give me\nboth the interpreter and the packages I install.  I don't have to rely on the\nsystem version of python or another tool to maintain python versions at all, I\nget everything in one tool.\n\n``` python\nconda create -n my-project python=3.8 -y\nconda activate my-project\npython  -m pip install --upgrade pip\npip install -e src\n```\n\n``` python\nconda info --envs\n```\n\n* stores environment in a root directory i.e. `~/miniconda3`\n* conda can use its own way to manage environments `environment.yml`\n* the python interpreter is packaged with the environment\n\n## virtualenv\n\nVirtual env (venv) is another very respectable option that is built right into\npython, and requires no additional installs or using a different distribution\nof pytyhon.\n\n```\npython -m venv .venv\nsource ./.venv/bin/activate\npython  -m pip install --upgrade pip\npip install -e src\n```\n\n* environments are typically stored in the project directory\n* does not package the interpreter\n\n## pipenv\n\nPipenv is another virtual enviroment tool that comes with its own system for\nmanaging dependencies using a `pipfile`.  It's main benefit is that it creates\na lockfile that will allow users to replicate the exact version of all their\npackages.  The typical `requirements.txt` workflow can easily break as new\nversion of dependecies are released between testing  and deplpoyment.\n\n```\npipx run pipenv shell\npython  -m pip install --upgrade pip\npip install -e src\n```\n* stores environment in a root directory i.e. `~/.local/share/virtualenvs/`\n* pipenv can use its own way to manage environments `pipfile`\n* does not package the interpreter\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-git-init'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Git Init</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-class-hooks'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create Configurable Kedro Hooks</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-23", "edit_link": "https://github.com/edit/main/pages/blog/kedro-environment.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573307", "datetime": "2021-08-23 00:00:00+00:00", "slug": "kedro-environment", "jinja": false, "output_html": "markout/kedro-environment/index.html", "long_description": "Avoid serious version conflict issues, and use a virtual environment anytime https://youtu.be/ZSxc5VVCBhM conda venv pipenv I prefer to use conda as my virtual environment manager of choice as it give me stores environment in a root directory i.e.  c", "super_description": "Avoid serious version conflict issues, and use a virtual environment anytime https://youtu.be/ZSxc5VVCBhM conda venv pipenv I prefer to use conda as my virtual environment manager of choice as it give me stores environment in a root directory i.e.  conda can use its own way to manage environments  the python interpreter is packaged with the environment Virtual env (venv) is another very respectable option that is built right into environments are typically stored in the project directory does no", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506916a0>, next=<frontmatter.Post object at 0x7f34506ae100>)"}, {"cover": "", "title": "tmux new-session", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-new-session.md", "description": "https://youtu.be/LbQNdCAUogE This one starts a new chapter in our series that is going to open up a whole https://waylonwalker.com/tmux-nav-2021/ for more infor", "content": "https://youtu.be/LbQNdCAUogE\n\nThis one starts a new chapter in our series that is going to open up a whole\nnew set of workflow productivity options, understanding how the `new-session`\ncommand is a critical command in our adventure into tmux glory.  This is going\nto open the door for some seriously game changing hotkeys and scripting.\n\n``` bash\n# create a new session\ntmux new-session\n\n# create a new session detached\ntmux new-session -d\n\n\n# create a new session and name it\ntmux new-session -s me\n\n# create a new named session and attach to it if one exists\ntmux new-session -As me\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-new-window'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux new-window</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-nav-2021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I navigate tmux in 2021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-01", "edit_link": "https://github.com/edit/main/pages/blog/tmux-new-session.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573313", "datetime": "2021-08-01 00:00:00+00:00", "slug": "tmux-new-session", "jinja": false, "output_html": "markout/tmux-new-session/index.html", "long_description": "https://youtu.be/LbQNdCAUogE This one starts a new chapter in our series that is going to open up a whole https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "super_description": "https://youtu.be/LbQNdCAUogE This one starts a new chapter in our series that is going to open up a whole https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685f70>, next=<frontmatter.Post object at 0x7f3450679d30>)"}, {"cover": "", "title": "Long variable names are good", "tags": [], "status": "false", "templateKey": "blog-post", "path": "pages/blog/long-variable-names-are-good.md", "description": "\ud83c\udff7\ufe0f Long variable names are a good thing.  Self documenting code is more important than poorly documented code.  Simply adding a few characters to your variable ", "content": "\ud83c\udff7\ufe0f Long variable names are a good thing.  Self documenting code is more important than poorly documented code.  Simply adding a few characters to your variable names can go a long ways.\n\n## Containers are plural\n\n## Aliases are welcome\n\nScope is important\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/blogging-for-me'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Blogging For Me</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-new-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux new-session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-24", "edit_link": "https://github.com/edit/main/pages/blog/long-variable-names-are-good.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573319", "datetime": "2020-02-24 00:00:00+00:00", "slug": "long-variable-names-are-good", "jinja": false, "output_html": "markout/long-variable-names-are-good/index.html", "long_description": "\ud83c\udff7\ufe0f Long variable names are a good thing.  Self documenting code is more important than poorly documented code.  Simply adding a few characters to your variable names can go a long ways. Scope is important", "super_description": "\ud83c\udff7\ufe0f Long variable names are a good thing.  Self documenting code is more important than poorly documented code.  Simply adding a few characters to your variable names can go a long ways. Scope is important", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a11f0>, next=<frontmatter.Post object at 0x7f345069c8b0>)"}, {"cover": "", "title": "Blogging For Me", "tags": ["blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/blogging-for-me.md", "description": "I create this blog with one person in mind, me. This is not completely selfish, as there are likely many others out there that I am as accurate as possible.  I ", "content": "I create this blog with one person in mind, me.\n\n## There are others like me\n\nThis is not completely selfish, as there are likely many others out there that\nthink similarly to me.  Everyone comes from different backgrounds and varying\nlevels of experience.  In no way do you need to be an expert to create content\nothers will benefit from.\n\n## Accurate\n\nI am as accurate as possible.  I don't know everything, and If I waited for\nthat to happen I would never post, or write at such a high level no one else\n(including me) would ever want to read.\n\nGenerally I know that I am directionally accurate for most of the article.  In\nfact there is often a part of the article that I don't feel the best about.  It\nmay have been some code that could have been better.  I try to point these\nthings out.  Often when I am and point out where I know there is\nimprovement to be had I get the most welcoming comments, \"that was just fine\nhow you did that\", or \"I tried that myself and saw a better abstraction.\n\n## Create the articles I want to read\n\nGenerally the articles I want to read are directly relatable to things I am\ncurrently working on and vary over time.  Over the last year its been leaning a\nbit more towards automation with\n[bash](https://waylonwalker.com/linux/),\n[python](https://waylonwalker.com/python/),\n[kedro](https://waylonwalker.com/kedro/) tools.\n\n## On Brand\n\nI try to stay on brand to who I am.  I remember writing my first articles.  I\nwas trying to be whitty, and include funny memes.  Thats not me.  I am not a\ncommedian, and generally memes go right over my head.  I can remember back in\nHigh School, I was the one that didn't understand a lot of pop culture and was\nkinda treated as if I was always living under a rock.  I knew it was true and I\nowned it, so no one ever got too mean about it.\n\n## Honest, never fake\n\nI will not try to pretend that I know everything.  You may read my blog on\noccasion and think I know a lot, also possible that you think \"wow what an\nidiot\".  I welcome you to share your thoughts and techniques in a positive way.\nI often cringe at some of my old posts and think about how differently I would\napproach something not that long after posting.  I honest, never fake know what\nI need to know and don't pretend to know anything outside of my wheelhouse.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/brainstorming-kedro-hooks'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Brainstorming Kedro Hooks</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/bind-dynamic-lambdas'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>TIL: Bind arguments to dynamically generated lambdas in python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-21", "edit_link": "https://github.com/edit/main/pages/blog/blogging-for-me.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573325", "datetime": "2021-01-21 00:00:00+00:00", "slug": "blogging-for-me", "jinja": false, "output_html": "markout/blogging-for-me/index.html", "long_description": "I create this blog with one person in mind, me. This is not completely selfish, as there are likely many others out there that I am as accurate as possible.  I don Generally I know that I am directionally accurate for most of the article.  In General", "super_description": "I create this blog with one person in mind, me. This is not completely selfish, as there are likely many others out there that I am as accurate as possible.  I don Generally I know that I am directionally accurate for most of the article.  In Generally the articles I want to read are directly relatable to things I am I try to stay on brand to who I am.  I remember writing my first articles.  I I will not try to pretend that I know everything.  You may read my blog on", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064cc40>, next=<frontmatter.Post object at 0x7f3450679790>)"}, {"cover": "", "title": "tmux command line", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-command-line.md", "description": "https://youtu.be/SNu-4IrkjAs So far we have covered a lot of tmux commands and how they map to keybindings Let Or we can open the tmux command line and run it f", "content": "https://youtu.be/SNu-4IrkjAs\n\nSo far we have covered a lot of tmux commands and how they map to keybindings\nbut these same commands can be executed at the command line.\n\n## From the command line\n\nLet's make a popup that displays our git status for 5s or until we close it\nmanually.  We can run the following command at the command line, in a split.\n\n``` bash\ntmux display-popup -E -d '#{pane_current_path}' 'git status && sleep 5'\n```\n\n## From the tmux command line\n\nOr we can open the tmux command line and run it from tmux's built in command\nline, which is very similar to bim EX mode. By default the tmux command line\ncan be opened with `prefix+[`.\n\n``` bash\ndisplay-popup -E -d '#{pane_current_path}' 'git status && sleep 5'\n```\n> \ud83d\uddd2\ufe0f note that the tmux command is called by default when inside of tmux.\n\n## Make it a keybinding\n\nFinally we can make it a keybinding by adding a bind command ahead of our tmux\ncommand, then we can execute this in the tmux command line or add it to our\n`~/.tmux.conf`.\n\n``` bash\nbind s display-popup -E -d '#{pane_current_path}' 'git status && sleep 5'\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-copy-mode'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux copy-mode</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-choose-tree'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux choose-tree</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-29", "edit_link": "https://github.com/edit/main/pages/blog/tmux-command-line.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573330", "datetime": "2021-07-29 00:00:00+00:00", "slug": "tmux-command-line", "jinja": false, "output_html": "markout/tmux-command-line/index.html", "long_description": "https://youtu.be/SNu-4IrkjAs So far we have covered a lot of tmux commands and how they map to keybindings Let Or we can open the tmux command line and run it from tmux \ud83d\uddd2\ufe0f note that the tmux command is called by default when inside of tmux. Finally w", "super_description": "https://youtu.be/SNu-4IrkjAs So far we have covered a lot of tmux commands and how they map to keybindings Let Or we can open the tmux command line and run it from tmux \ud83d\uddd2\ufe0f note that the tmux command is called by default when inside of tmux. Finally we can make it a keybinding by adding a bind command ahead of our tmux https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f21f0>, next=<frontmatter.Post object at 0x7f3450652310>)"}, {"cover": "", "title": "Writing your first kedro Nodes", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-your-first-nodes.md", "description": "https://youtu.be/-gEwU-MrPuA Before we jump in with anything crazy, let You will need to import node from kedro.pipeline to start creating nodes. The  Inputs an", "content": "https://youtu.be/-gEwU-MrPuA\n\nBefore we jump in with anything crazy, let's make some nodes with some vanilla\ndata structures.\n\n## import node\n\nYou will need to import node from kedro.pipeline to start creating nodes.\n\n``` python\nfrom kedro.pipeline import node\n```\n\n## func\n\nThe `func` is a callable that will take the `inputs` and create the `outputs`.\n\n## inputs / outputs\n\nInputs and outputs can be None, a single catalog entry as a string, mutiple\ncatalog entries as a List of strings, or a dictionary of strings where the key\nis the keyword argument of the func and the value is the catalog entry to use\nfor that keyword.\n\n## our first node\n\nSometimes in our pipelines our data is coming from an api where we already have\npython functions built to pull with.  Thats ok, kedro supposrts that with\n`inputs=None`.\n\n``` python\ndef create_range():\n    return range(100)\n\nmake_range = node(\n    func=create_range,\n    inputs=None,\n    outputs='range'\n    )\n```\n\n## second node\n\nNow we have some data to work from, lets use that as our input.\n\n``` python\ndef square_range():\n    return [i**2 for i in range]\n\nsquare_range = node(\n    func=square_range,\n    inputs='range',\n    outputs='range_squared'\n    )\n```\n\n## Multiple Inputs\n\nKedro can take lists or dicts as either input or output when your function\nneeds more than one input or output.\n\n\n``` python\ndef concat(range, range_two):\n    return [*range, *range_two]\n\nconcat_ranges = node(\n    func=concat,\n    inputs=['range', 'range_squared']\n    outputs='concat'\n    )\n\n## inputs could also be defined as a dict\nconcat_ranges = node(\n    func=concat,\n    inputs={'range': 'range', 'range_two': 'range_squared'}\n    outputs='concat'\n    )\n```\n\n## Links\n\n* [all of my kedro articles](https://waylonwalker.com/kedro/)\n* [kedro playlist on YouTube](https://www.youtube.com/watch?v=bw5_FWDVRpU&list=PLTRNG6WIHETCoPt5gAKYSH_HCZvE_r41n)\n* [node docs](https://kedro.readthedocs.io/en/stable/kedro.pipeline.node.html)\n* [first_nodes.py](https://gist.github.com/WaylonWalker/347b32c6ae7b799d1e0853c3811a98de)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro172_replit'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>kedro replit</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-static-viz-0-3-0'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Static Viz 0.3.0 is out with Hooks Support</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-09-13", "edit_link": "https://github.com/edit/main/pages/blog/kedro-your-first-nodes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573336", "datetime": "2021-09-13 00:00:00+00:00", "slug": "kedro-your-first-nodes", "jinja": false, "output_html": "markout/kedro-your-first-nodes/index.html", "long_description": "https://youtu.be/-gEwU-MrPuA Before we jump in with anything crazy, let You will need to import node from kedro.pipeline to start creating nodes. The  Inputs and outputs can be None, a single catalog entry as a string, mutiple Sometimes in our pipeli", "super_description": "https://youtu.be/-gEwU-MrPuA Before we jump in with anything crazy, let You will need to import node from kedro.pipeline to start creating nodes. The  Inputs and outputs can be None, a single catalog entry as a string, mutiple Sometimes in our pipelines our data is coming from an api where we already have Now we have some data to work from, lets use that as our input. Kedro can take lists or dicts as either input or output when your function", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652460>, next=<frontmatter.Post object at 0x7f3450652550>)"}, {"cover": "", "title": "tmux resize-panes", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-resize-panes.md", "description": "https://youtu.be/hpFYE2LU7xc Resizing panes in tmux can be quite difficult in default tmux, I Most often when I need to resize panes I just grab the edge of the", "content": "https://youtu.be/hpFYE2LU7xc\n\nResizing panes in tmux can be quite difficult in default tmux, I\nuse a set of keybingings to help resize panes in the rare occasions\nthat I do need just a bit more space.  I set the keybinding to the same as my\nsplit navigation bindings but shifted. They are very vim like (h,j,k,l).\n\n``` bash\n# resize panes\n#\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nbind -n M-H resize-pane -L 2\nbind -n M-L resize-pane -R 2\nbind -n M-K resize-pane -U 2\nbind -n M-J resize-pane -D 2\n```\n\nMost often when I need to resize panes I just grab the edge of the pane with my\nmouse.  Yes the mouse, its not that often that I actually need to change the\nsize of a pane.\n\n``` bash\n# Enable mouse control (clickable windows, panes, resizable panes)\nset -g mouse on\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-rotate-window'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux rotate-window</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-rename-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux rename session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-20", "edit_link": "https://github.com/edit/main/pages/blog/tmux-resize-panes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573344", "datetime": "2021-07-20 00:00:00+00:00", "slug": "tmux-resize-panes", "jinja": false, "output_html": "markout/tmux-resize-panes/index.html", "long_description": "https://youtu.be/hpFYE2LU7xc Resizing panes in tmux can be quite difficult in default tmux, I Most often when I need to resize panes I just grab the edge of the pane with my https://waylonwalker.com/tmux-nav-2021/ for more information on how I naviga", "super_description": "https://youtu.be/hpFYE2LU7xc Resizing panes in tmux can be quite difficult in default tmux, I Most often when I need to resize panes I just grab the edge of the pane with my https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063b9d0>, next=<frontmatter.Post object at 0x7f34506a1790>)"}, {"cover": "", "title": "Kedro Git Init", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-git-init.md", "description": "Immediately after  https://youtu.be/IGba3ytf Its as simple as these three commands to get started. I don", "content": "Immediately after `kedro new`, before you start running `kedro install` or your first line of code the first\nthing you should always do after getting a new kedro template created is to\n`git init`.\n\nhttps://youtu.be/IGba3ytf_6U\n\n##  git init\n\nIts as simple as these three commands to get started.\n\n``` bash\ngit init\ngit add .\ngit commit -m init\n```\n\nI don't care if this project is for learning, if it will never have a remote or not, use git.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-in-scripts'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Using Kedro In Scripts</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-environment'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>kedro Virtual Environment</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-20", "edit_link": "https://github.com/edit/main/pages/blog/kedro-git-init.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573350", "datetime": "2021-08-20 00:00:00+00:00", "slug": "kedro-git-init", "jinja": false, "output_html": "markout/kedro-git-init/index.html", "long_description": "Immediately after  https://youtu.be/IGba3ytf Its as simple as these three commands to get started. I don", "super_description": "Immediately after  https://youtu.be/IGba3ytf Its as simple as these three commands to get started. I don", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c460>, next=<frontmatter.Post object at 0x7f345069c9d0>)"}, {"cover": "", "title": "Ubuntu", "tags": ["linux"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/ubuntu.md", "description": "I ran this, but have no idea if it had any effect as the theme did What I think actuagnome terminal showing scrollbar in tmuxlly worked was One thing that I rea", "content": "## gnome-tweaks\n\n``` bash\nsudo apt install gnome-tweaks\n\n```\n\n## nordix gtk theme\n\nI ran this, but have no idea if it had any effect as the theme did\nnot show up until I relogged.\n\n```\ngsettings set org.gnome.desktop.wm.preferences theme Nordic\n```\n\nWhat I think actuagnome terminal showing scrollbar in tmuxlly worked was \n\n\n## emoji support\n\nOne thing that I really missed quite early from windows was the emoji virtual\nkeyboard.  I like being able to quickly toss in those emoji that give just a\nbit of a visual cue \ud83d\udd25, \u26a0\ufe0f,, \ud83c\udf89, \ud83e\udd84, \ud83d\udc9c. \n\n\n### installation\n\nI found an application called emote. that seems to do everything I need it to\nin the snap store.  Installation is a typicall snap install.\n\n```\nsudo snap install emote\n```\n\n\n### default keybinding\n\n\nThe application came with a default keybinding `ctrl+alt+e`, but I could never remember it.\n\n```\nctrl+alt+e\n```\n\n### Windows keybinding\n\nOld habits are hard to break, I opened up the gnome settings and set a hotkey\nto `super+;` to run the command emote.\n\n```\nSuper+;\n```\n\n### How it works\n\n\n\n## Get that dock outta here\n\nI tried to disable the dock and it didn't immediately work for me,\nlikely because I needed to relog.  I really have no use for the\ndock though as I will always open applications with a hotkey or\nsuper + search.\n\n``` bash\nsudo apt remove gnome-shell-extension-ubuntu-dock\n```\n\n## Terminal One Dark Theme\n\nI don't stress too hard on themes, I just want something halfway consistent and\njust works.  I typically have just used a semi-popular theme \"one-dark\"\neverywhere.  This was the default theme in GitHub's Atom text editor that I\nnever used.  I only care that it looks good and is popular enought that it just\nexists everywhere.\n\n``` bash\nbash -c \"$(curl -fsSL https://raw.githubusercontent.com/denysdovhan/gnome-terminal-one/master/one-dark.sh)\"\n```\n\n## Terminal menu and scrollbar\n\nI found these to be ugly ans unnecessary so I turned them off.  You can access\nall the menu items by right clicking on the terminal anyways, so there is no\nreason to let it take up any screen real estate.\n\n### Hiding the scrollbar\n\n![hide the scrollbar](https://images.waylonwalker.com/gnome-terminal-hide-scrollbar)\n\n### Hiding the menubar\n\n![hide the menubar](https://images.waylonwalker.com/gnome-terminal-hide-menubar)\n\n## vim clipboard\n\n``` bash\nsudo apt install xsel\n```\n\n``` vim\nset clipboard+=unnamedplus\n```\n\n## tmux clipboard\n\n``` bash\n# Copy and Paste on Linux\nbind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \"xclip -i -f -selection primary | xclip -i -selection clipboard\"\nset-option -s set-clipboard off\nbind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel \"xclip -selection clipboard -i\"\n```\n\n## Hotkeys\n\n| Key | Desc | \n| --- | ---- |\n| super+j | move to workspace below |\n| super+k | move to workspace above |\n| super+shift+j | move window one workspace down |\n| super+shift+k | move window one workspace up |\n\n\n| Key | Command | Desc | \n| --- | ------- | ---- |\n| Super+e | nautilus | File Browser|\n| Super+Shift+p | Area Screenshot | gnome-screenshot -a |\n| Super+Alt+p | Area Screenshot to clipboard | gnome-screenshot -ac |\n| Super+e | nautilus | File Browser|\n\n### screenshots\n\nI am constantly taking screenshots for my daily workflow, on Windows I had it\nsetup to both send to the clipboard and store in a screenshots directory.\n\n``` bash\n# take a screenshot and Store it as a file.\ngnome-screenshot -a\n\n# take a screenshot and send it to the clipboard\ngnome-screenshot -ac\n```\n\n### obs\n\nAs od Jun 2021 the version of obs-studio installed using the instructions in\ntheir wiki is out of date.  I had success getting the latest version, which\nsupports virtual webcams, using snap.\n\n``` bash\nsudo snap install obs-studio\n```\n\n### virtual webcam\n\nAfter getting the latest version of obs-studio whixh supports virtual webcam it\nstill did not start.  After some searching I found that updating v4l2loopback\nresolved the issue.\n\n``` bash\nsudo apt purge v4l2loopback-dkms\ngit clone https://github.com/umlaeute/v4l2loopback.git ~/git/v4l2loopback/\ncd ~/git/v4l2loopback/\nmake\nsudo make install\n\nsudo modprobe v4l2loopback devices=1 exclusive_caps=1\n```\n\n\n``` bash\nsudo depmod -a\nsudo modprobe v4l2loopback video_nr=10 card_label=\"OBS Video Source\" exclusive_caps=1\n```\n\n## i3\n\nI decided to give i3 a try, simply apt install it, then it shows up under the\ngear icon at the login screen after a reboot.  At this point I don't think I am\nready for i3.  I have just changed a bunch of stuff in my workflow and honestly\nI got a decent gnome config setup in like 10 minutes.\n\n``` bash\nsudo apt install i3\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/locked_diskcache'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python Diskcahe is locked</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-git-init'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Git Init</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-25", "edit_link": "https://github.com/edit/main/pages/blog/ubuntu.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573372", "datetime": "2021-06-25 00:00:00+00:00", "slug": "ubuntu", "jinja": false, "output_html": "markout/ubuntu/index.html", "long_description": "I ran this, but have no idea if it had any effect as the theme did What I think actuagnome terminal showing scrollbar in tmuxlly worked was One thing that I really missed quite early from windows was the emoji virtual I found an application called em", "super_description": "I ran this, but have no idea if it had any effect as the theme did What I think actuagnome terminal showing scrollbar in tmuxlly worked was One thing that I really missed quite early from windows was the emoji virtual I found an application called emote. that seems to do everything I need it to The application came with a default keybinding  Old habits are hard to break, I opened up the gnome settings and set a hotkey I tried to disable the dock and it didn I don I found these to be ugly ans unn", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1430>, next=<frontmatter.Post object at 0x7f34506916a0>)"}, {"cover": "", "title": "Python Diskcahe is locked", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/locked_diskcache.md", "description": "Running multiple processes using the same diskcache object can cause issues Minimum reporducible error is one of my superpowers in development.  I do this Marka", "content": "<script>\nchange_speed = (speed) => [...document.querySelectorAll('video')].map(v => v.playbackRate=v.playbackRate+speed)\n</script>\n<style>\n</style>\n\nRunning multiple processes using the same diskcache object can cause issues\nwith locks.  As I was trying to setup a rich Live display for markata I ran\ninto issues where each part could not nun simultaneusly.  As I had followed the\ninstructions from discache it was not directly aparant to me, so I had to make\na simple example to experiment and play with at a small scale.\n\n## Minimum reproducible error\n\nMinimum reporducible error is one of my superpowers in development.  I do this\nvery often to sus out what is really happening.  My day to day work is\nprocessing data with python, I keep a number of very small data sets handy to\nbreak and fix.  This helps separate complexities of the project and the problem.\n\n## Let's break it\n\nMarkata has a lot going on.  It's a plugins all the way down static site\ngenerator built in python.  Trying to find the root cause through the layers of\nplugin and cli modules can be a pain, but in this case building a very simple\nminimum reporducible error was much easier.\n\n```python\nfrom pathlib import Path\nfrom diskcache import FanoutCache\nimport time\n\nCACHE_DIR = Path(\".\") / \".markata.cache\"\n\nif __name__ == \"__main__\":\n\n    cahe = FanoutCache(CACHE_DIR, statistics=True)\n    item = cache.get(\"me\")\n    print(item)\n    time.sleep(20)\n```\n\n> \ud83d\udcdd `time.sleep(20)` is here to simulate doing some other work, while the cache\n> object is still open.\n\n## Running locked_diskcache.py\n\nHere I have my editor showing the file on the top split and have ran it in the\ntwo lower splits.  Notice that the first (left split) immediately prints out\nthe result, while the second one (right split) does not print out the result\nuntil the first is completely finished.\n\n<!-- ![](https://images.waylonwalker.com/locked_discache.gif) -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/locked_discache.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/locked_discache.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## Using a context manager\n\nThis time lets put the cache in a context manager so that it automatically\ncloses after it gets the item.\n\n``` python\nfrom pathlib import Path\nfrom diskcache import FanoutCache\nimport time\n\nCACHE_DIR = Path(\".\") / \".markata.cache\"\n\nif __name__ == \"__main__\":\n\n    with FanoutCache(CACHE_DIR, statistics=True) as cache:\n        item = cache.get(\"me\")\n    print(item)\n    time.sleep(20)\n```\n\n## Running unlocked_diskcahce.py\n\nNotice when we run this time when I run both splits, they are able to\nimmediatly print out their result and get to work on that sleep statement.\nThis time the right right split only takes ~20s rather than ~40s since it no\nlonger needs to wait for the left one to unlock the cache.\n\n<!-- ![](https://images.waylonwalker.com/unlocked_discache.gif) -->\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/unlocked_discache.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/unlocked_discache.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n## I've learned\n\nKeep your diskcache open for as little as needed, especially if you plan to\nhave it open on multiple processes.  Hopefully this problem solving session\nhelps someone else with their discache problems or find a better way to problem\nsolve with minimum viable errors.\n\n## Useful Links\n\n* [diskcache-pypi](https://pypi.org/project/diskcache/)\n* [diskcache-tutorial](http://www.grantjenks.com/docs/diskcache/tutorial.html)\n* [diskcache-github](https://github.com/grantjenks/python-diskcache) \ud83d\udc48 Give it a star\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-rename-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux rename session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/ubuntu'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Ubuntu</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-14", "edit_link": "https://github.com/edit/main/pages/blog/locked_diskcache.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573378", "datetime": "2021-05-14 00:00:00+00:00", "slug": "locked_diskcache", "jinja": false, "output_html": "markout/locked_diskcache/index.html", "long_description": "Running multiple processes using the same diskcache object can cause issues Minimum reporducible error is one of my superpowers in development.  I do this Markata has a lot going on.  It \ud83d\udcdd  Here I have my editor showing the file on the top split and ", "super_description": "Running multiple processes using the same diskcache object can cause issues Minimum reporducible error is one of my superpowers in development.  I do this Markata has a lot going on.  It \ud83d\udcdd  Here I have my editor showing the file on the top split and have ran it in the This time lets put the cache in a context manager so that it automatically Notice when we run this time when I run both splits, they are able to Keep your diskcache open for as little as needed, especially if you plan to", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1790>, next=<frontmatter.Post object at 0x7f345069caf0>)"}, {"cover": "", "title": "tmux rename session", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-rename-session.md", "description": "https://youtu.be/WRLRiQDjVIA So you have been working on your tmux workflow, you Let There is a default keybinding that you can use  I https://waylonwalker.com/", "content": "https://youtu.be/WRLRiQDjVIA\n\nSo you have been working on your tmux workflow, you've dropped a too many\nwindow workflow for scoping work that belongs together into separate sessions,\nbut you cannot remember what session your work is in. If your diligent you have\nnamed your window when you created it, but sometimes its intent has changed or\nyour were just plain too lazy at the time for the extra characters needed to\nname it.  Don't worry we can still give that session a descriptive name.\n\nLet's rename some sessions in the terminal.\n\n``` bash\n# rename the current session to me\ntmux rename-session me\n\n# rename the me session to scratch\ntmux rename-session -t me scratch\n```\n\nThere is a default keybinding that you can use `<prefix>+$` to rename the\ncurrent session in the tmux command line.\n\n``` bash\nbind-key          $ command-prompt -I #S \"rename-session '%%'\"\n```\n\nI've also had this keybinding kicking around for years, but I rarely use it\nanymore. You will see why in an upcoming video.\n\n``` python\nbind -n M-W command-prompt \"rename-session '%%'\"\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-resize-panes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux resize-panes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-prefix'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux prefix</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-03", "edit_link": "https://github.com/edit/main/pages/blog/tmux-rename-session.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573384", "datetime": "2021-08-03 00:00:00+00:00", "slug": "tmux-rename-session", "jinja": false, "output_html": "markout/tmux-rename-session/index.html", "long_description": "https://youtu.be/WRLRiQDjVIA So you have been working on your tmux workflow, you Let There is a default keybinding that you can use  I https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also ", "super_description": "https://youtu.be/WRLRiQDjVIA So you have been working on your tmux workflow, you Let There is a default keybinding that you can use  I https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506c3b80>, next=<frontmatter.Post object at 0x7f34506a1550>)"}, {"cover": "", "title": "Automating my Post Starter", "tags": ["blog", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/automating-my-post-starter.md", "description": "One thing we all dread is mundane work of getting started, and all the hoops it When I start a new post I need to cd into my blog directory, start neovim in a f", "content": "One thing we all dread is mundane work of getting started, and all the hoops it\ntakes to get going.  This year I want to post more often and I am taking some\nsteps towards making it easier for myself to just get started.\n\nWhen I start a new post I need to cd into my blog directory, start neovim in a\nmarkdown file with a clever name, copy some frontmatter boilerplate, update the\npost date, add tags, a description, and a cover.\n\n## Todo List for starting a post\n\n* frontmatter template\n* Title\n* slug\n* tags\n* date\n* cover\n* description\n* create markdown file\n* open in neovim\n\n\n## Lets Automate this\n\n### This aint no proper cli\n_hot and fast_\n\nAs with many thing running behind the scenes on this site, I am the one and\nonly user, I have limited time, so this is going to be a bit **hot and fast**.\nLet's create a file called new-post.\n\n_<small><mark>start the script new-post</mark></small>_\n``` python\n#!python\n# new-post\n```\n\n> \ud83d\udc46 Works on my machine\n\nIf this were something that had more users than me I would probably use\nsomething like click, but for this I want to get it done quick and avoid any\nneed to manage dependencies.  Be careful if you were to share something with a\n`#!python` as it requries the end user to have the right version of python\nready to go.\n\n### Title\n\nThe title can't really be automated this is the core idea coming out of my \ud83e\udde0,\nbut it will be captured through the cli and put into proper position.  For this\nI'm going super simple and just pulling it out of `sys.argv`\n\n_<small><mark>set the title</mark></small>_\n``` python\nimport sys\n\ntitle = sys.argv[1].title()\n```\n\n>! sys.argv is a list of each argument passed into the script split by spaces.\n\n### slug\n\nThe slug is what I am calling the route and can simply come out of the title\nautomatically, if I want to shorten it later by hand that will be simple enough\nto do manually. All that needs to be done is to lowercase and replace a few\ncharacters with -.\n\n_<small><mark>set the slug</mark></small>_\n``` python\nslug = title.lower)(.replace(\" \", \"-\".replace()\"_\", -\"\")\"\"))\n```\n\n### tags\n\nFor tags I decided I wanted the parser to be as simple as possible and didn't\nwant to dance around any flags.  I am simply just going to look at every\nargument passed into the command and see if any of them contain one of my\ncommon tags.  \n\n\n_<small><mark>parse the tags</mark></small>_\n``` python\nargs = ''.join(sys.argv[1:])\ntags = []\n\nif 'py' in args:\n    tags.append('python')\n\nif 'web' in args:\n    tags.append('webdev')\n\nif 'blog' in args:\n    tags.append('blog')\n\nif 'data' in args:\n    tags.append('data')\n```\n\n\ud83e\udd37\u200d\u2642\ufe0f **antipattern**?? The above section does an initialize then modify.  I generally try to avoid this\npattern with something like a list comprehension, but didn't see an obvious\nsolution so I just went with it.\n\n## Frontmatter Template\n\nNow we have enough information going to assemble the frontmatter I use for my\nposts.  I am going to just insert the values I need into an f-string.  Since\npython 3.6 was released f-strings are my go to templating tool.\n\n_<small><mark>create the markdown</mark></small>_\n``` python\nimport datetime\n\nfrontmatter = f\"\"\"---\ntemplateKey: blog-post\ntags: {tags}\ntitle: {title}\ndate: {datetime.date.today().strftime('%Y-%m-%dT%H:%M:%S')}\nstatus: draft\ndescription: ''\ncover: \"/static/{slug}.png\"\n\n---\n\n\"\"\"\n```\n\n\n### create markdown file\n\nNow its time to get down to business and make the post.  First I want to throw\nan error if the post already exists, I definitely dont want to blow away an\nexisting post if a certain slug is already taken.  I am a big fan of custom\nerror messages and I am going to go ahead and make one here, even though this\nis just a quick script.\n\n_<small><mark>custom error</mark></small>_\n``` python\nclass PostExistsError(FileExistsError):\n    pass\n```\n\nI am a `pathlib` superfan.  It's going to make setting up these paths super\nsimple.  Note I am going to anchor my directory down with the `__file__`\nvariable.  I do this all the time to get paths relative to the module that is\ncurrently running.\n\n_<small><mark>setup paths</mark></small>_\n``` python\ndirectory = pathlib.Path(__file__).parent\npath = pathlib.Path(f\"{directory}/src/pages/blog/{slug}.md\")\n\nif path.exists():\n    raise PostExistsError(f\"Post Already exists at {path}\")\n```\n\n> __file__ is a string that represents the path to the running module\n\nFinally just write the file.  Here we open the file with a context manager so\nthat we don't have to worry about closing it when we are done.  Note that we\nopen it with the `w+` flag for write and creation.\n\n_<small><mark>write the file</mark></small>_\n``` python\nwith open(path, \"w+\") as f:\n    f.write(frontmatter)\n```\n\n### git add\n\nI am not quite ready to pull the trigger on doing an auto commit, but this may\nhappen in a future version.  For now I want this file easily picked up by vims\n`:GFiles` since I have that is one of my most used hot keys.  To do this the\nfile at least needs added.  I'm sure there is a better way to do this with a\nGit library, but I am used to the command line so I am going to just run a\nsubprocess.\n\nI am using the `subprocess.Popen` command since its what I am used to, note\nthat it will run the task in the background so be sure that you wait on it.\nThe `Popen` is great if you have several task that are not dependent on each\nother.\n\n_<small><mark>git add <new-post></mark></small>_\n``` python\ngadd = subprocess.Popen(\n    f'cd {directory} && git add {str(path).replace(str(directory) + \"/\", \"\")} ',\n    shell=True,\n)\ngadd.wait()\n```\n\n### open in neovim\n\nLast step of the script is to start writing, I want to be open in my blogs\ndirectory (hence the cd), with the file open, to the right line (+11), and in\ninsert mode (+star).\n\n_<small><mark>open post in neovim</mark></small>_\n``` python\nnvim = subprocess.Popen(\n    f'cd {directory} && nvim +12 +star {str(path).replace(str(directory) + \"/\", \"\")} ',\n    shell=True,\n)\nnvim.wait()\n```\n\n## Alias\n\nNow I want this script to be available everywhere.  I am going to simply add\nthe following entry to shorten the script and eliminate the need to use the\nfull path.  I added this to my `~/.alias`, for you it may be `~/.bashrc`, or\n`~/.zshrc`.\n\n``` bash\nalias np=~/git/waylonwalkerv2/new-post\n```\n\n## Starting a new post\n\nLets start a new post about automating my posts in python.\n\n``` bash\nnp \"automating my posts\" python\n```\n\n## This is my workflow\n\nAd hoc scripts like this can be a bit of a hot mess, partly due to the just get\nit done nature, but also due to the fact that I am just riffing off the top of\nmy head and utilizing docs as least as possible.\n\nWhile writing the script I would run it after each section or so and print some\nresults to make sure they were looking good. If I ever needed access to a live\nvariable I would pop open ipython and run `%run new-post \"my-new-post\"` and\ninspecting it.\n\n\n## Final Script\n\n_<small><mark>final script</mark></small>_\n``` python\n#!python\n# new-post\n\nimport sys\nimport datetime\nimport pathlib\nimport subprocess\n\n\ntitle = sys.argv[1].titlecase()\nargs = \"\".join(sys.argv[1:])\ntags = []\n\nif \"py\" in args:\n    tags.append(\"python\")\n\nif \"web\" in args:\n    tags.append(\"webdev\")\n\nif \"blog\" in args:\n    tags.append(\"blog\")\n\nif \"data\" in args:\n    tags.append(\"data\")\n\nslug = title.lower().replace(\" \", \"-\").replace(\"_\", \"-\")\nfrontmatter = f\"\"\"---\ntemplateKey: blog-post\ntags: {tags}\ntitle: {title}\ndate: {datetime.date.today().strftime('%Y-%m-%dT%H:%M:%S')}\nstatus: draft\ndescription: ''\ncover: \"/static/{slug}.png\"\n\n---\n\n\n\"\"\"\n\n\nclass PostExistsError(FileExistsError):\n    pass\n\n\ndirectory = pathlib.Path(__file__).parent\npath = pathlib.Path(f\"{directory}/src/pages/blog/{slug}.md\")\n\nif path.exists():\n    raise PostExistsError(f\"Post Already exists at {path}\")\n\nwith open(path, \"w+\") as f:\n    f.write(frontmatter)\n\ngadd = subprocess.Popen(\n    f'cd {directory} && git add {str(path).replace(str(directory) + \"/\", \"\")} ',\n    shell=True,\n)\ngadd.wait()\n\nnvim = subprocess.Popen(\n    f'cd {directory} && nvim +12 +star {str(path).replace(str(directory) + \"/\", \"\")} ',\n    shell=True,\n)\nnvim.wait()\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/quickly-edit-posts/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/quickly-edit-posts-og_250x140.png\" alt=\"article cover for \n Quickly Edit Posts\n\"/>\n          <p><strong>\n Quickly Edit Posts\n</strong></p>\n      </a>\n  </div>\n\n\n> check out the next article in this series where I setup a bash function to quickly edit these posts\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/autoreload-ipython'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Autoreload in Ipython</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/audio-for-blog'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Adding Audio to my blog posts</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-11", "edit_link": "https://github.com/edit/main/pages/blog/automating-my-post-starter.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573653", "datetime": "2020-12-11 00:00:00+00:00", "slug": "automating-my-post-starter", "jinja": false, "output_html": "markout/automating-my-post-starter/index.html", "long_description": "One thing we all dread is mundane work of getting started, and all the hoops it When I start a new post I need to cd into my blog directory, start neovim in a frontmatter template Title slug tags date cover description create markdown file open in ne", "super_description": "One thing we all dread is mundane work of getting started, and all the hoops it When I start a new post I need to cd into my blog directory, start neovim in a frontmatter template Title slug tags date cover description create markdown file open in neovim As with many thing running behind the scenes on this site, I am the one and \ud83d\udc46 Works on my machine If this were something that had more users than me I would probably use The title can ! The slug is what I am calling the route and can simply come", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a99d0>, next=<frontmatter.Post object at 0x7f3450646b80>)"}, {"cover": "", "title": "Creating Reusable Bash Scripts", "tags": ["bash", "linux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/reusable-bash.md", "description": "Bash is a language that is quite useful for automation no matter what language I have three techniques that help me write more composable bash scripts. Function", "content": "Bash is a language that is quite useful for automation no matter what language\nyou write in. Bash can do so many powerful system-level tasks. Even if you are\non windows these days you are likely to come across bash inside a cloud VM,\nContinuous Integration, or even inside of docker.\n\nI have three techniques that help me write more composable bash scripts.\n\n1. [functions](#functions)\n  * [Arguments](#arguments)\n  * [positional arguments](#positional-arguments)\n  * [All Arguments](#all-arguments)\n1. [Error Handling](#error-handling)\n1. [main script](#main-script)\n\n---\n\n## Functions\n_Break scripts down into reusable components_\n\nFunctions in bash are quite simple. They are something that I wish I would have\nstarted using long ago. They make your code much more reusable. I often use\nthem in my aliases as well since they can simplify the process and allow more\nflexibility.\n\n_<small><mark>syntax</mark></small>_\n\n``` bash\n#!/bin/sh\n# hello_world\nhello_world () {\n    echo \"hello world\"\n}\n```\n\nSource the file to load the function and run it from the terminal.\n\n_<small><mark>run it</mark></small>_\n\n``` bash\nsource hello_world\nhello_world\n```\n\n_<small><mark>outputs</mark></small>_\n\n``` bash\nhello world\n```\n---\n\n## Arguments\n_Make functions a little more flexible_\n\nArguments and options are quite a bit more complex in bash. For now, we will\nfocus on the basics which are not all that bad.\n\n### positional arguments\n_easiest and most common to use_\n\nPositional arguments can be pulled out quite easily using `$1` for the first\none, `$2` for the second, and so on.\n\n**note** `$0` is the command that was called. You will see this often used to\nfind the command called to open up your current shell.\n\n_<small><mark>syntax</mark></small>_\n``` bash\n#!/bin/sh\n# hello\nhello () {\n    echo \"hello $1\"\n\n```\n\n_<small><mark>run it</mark></small>_\n\n``` bash\nsource hello\nhello Waylon\n```\n\nNow we have a function that accepts positional arguments and we can call it by\npassing things into it.\n\n_<small><mark>outputs</mark></small>_\n\n``` bash\nhello Waylon\n```\n\nMore than one argument would be ignored since we are only looking at `$1`.\n\n_<small><mark>run it</mark></small>_\n\n``` bash\nsource hello\nhello Waylon Walker\n```\n\n_<small><mark>outputs</mark></small>_\n\n``` bash\nhello Waylon\n```\n\nJust the same as before since we do not use the second argument.\n\n### All Arguments\n\nBash has another special variable `$@` that stores **all arguments** in one.\n\n_<small><mark>syntax</mark></small>_\n\n``` bash\n#!/bin/sh\n# hello\nhello () {\n    echo \"hello $@\"\n}\n```\n\nJust the same as before.\n\n_<small><mark>run it</mark></small>_\n\n``` bash\nsource hello\nhello Waylon Walker\n```\n\nNow the function will output all arguments that are passed into it since we are using the `$@` variable.\n\n_<small><mark>outputs</mark></small>_\n\n``` bash\nhello Waylon Walker\n```\n\n---\n\n## Error Handling\n_Super powers in a single line_\n\nThe easiest and most common way to handle an error in bash is through the use\nof the logical operators `&&` (and) and `||` (or).\n\nHere I have a concrete example from earlier today. I was creating a bash script\nto run a python script from cron. The bash script is there to make sure that we\nhave the python environment, activate it, and run. If it doesn't have it, it\nshould create it.\n\n``` bash\n# creates the conda environment\ncreate_env() {\n    conda create -n \"$1\" python=3.8\n    conda activate \"$1\"\n    pip install -r requirements.txt\n}\n\n\n# checks if the conda environment exists\nenv_exists() {\nconda info --envs | awk '{print $1}' | tail -n +3 | grep -w \"$1\" > /dev/null\n}\n\n\n# creates the conda environment if it doesn't exist\ncreate_if () {\nenv_exists \"$1\" && echo \"environment exists\" || create_env \"$1\"\n}\n\ncreate_if my_env\n```\n\nIf we look at the `create_if` function, it will check if the environment exists\nif there is a passing status code `0`, then it will run `echo \"environment\nexists\"` otherwise it will run `create_env $1`.\n\n**note** Inside of `env_exists` grep will look for whole words if there is a\nmatch it will give a status code 0 if it finds a match and not 0 if there is no\nmatch.\n\n---\n\n## main script\n\n\\_`if __name__ == \" __main__\"`\\_\n\nThe last thing I want to discuss is making a bash script both runnable and\nsourceable. This makes it so that you can `source filename.sh` and run each\nfunction individually, or `bash filename.sh` to run the script. This is a\nsimilar concept to `if __name__ == \" __main__\"` from python.\n\nI did try this from bash and zsh with success. The following is an example that\nwould pass all arguments into a main function.\n\n_<small><mark>syntax</mark></small>_\n\n``` bash\nif [[\"${BASH_SOURCE[0]}\" == \"${0}\" ]]; then\n    main \"$@\"\nfi\n```\n\nExtending the example above that created a python example if necessary we can\ncreate the env if necessary, activate the environment, and run the script.\n\n_<small><mark>syntax</mark></small>_\n\n``` bash\nif [[\"${BASH_SOURCE[0]}\" == \"${0}\" ]]; then\ncreate_if my_env\nconda activate my_env\npython script.py\nfi\n```\n\nUsing this syntax to run our \"main\" functions will allow us to both runs the\nscript or source the script to utilize the functions that we created.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/save-vim-macro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Save Vim Macro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/resume-tips'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Resume Tips</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-13", "edit_link": "https://github.com/edit/main/pages/blog/reusable-bash.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573661", "datetime": "2020-08-13 00:00:00+00:00", "slug": "reusable-bash", "jinja": false, "output_html": "markout/reusable-bash/index.html", "long_description": "Bash is a language that is quite useful for automation no matter what language I have three techniques that help me write more composable bash scripts. Functions in bash are quite simple. They are something that I wish I would have Source the file to", "super_description": "Bash is a language that is quite useful for automation no matter what language I have three techniques that help me write more composable bash scripts. Functions in bash are quite simple. They are something that I wish I would have Source the file to load the function and run it from the terminal. Arguments and options are quite a bit more complex in bash. For now, we will Positional arguments can be pulled out quite easily using  Now we have a function that accepts positional arguments and we c", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646e50>, next=<frontmatter.Post object at 0x7f3450663dc0>)"}, {"cover": "", "title": "tmux ta", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-ta.md", "description": "https://youtu.be/nT0FA1RNZEs Now your creating, jumping, and killing sessions like a boss. You are slicing This script is simply my fork of Chris Toomey My vers", "content": "https://youtu.be/nT0FA1RNZEs\n\nNow your creating, jumping, and killing sessions like a boss. You are slicing\nthrough projects with ease, let me show you one more thing that can be the\ncream on top of this silky smooth setup we have been working towards.\n\n## [Chris Toomey's](https://twitter.com/christoomey) Tmux Course\n\nThis script is simply my fork of Chris Toomey's `tat` script straight out of\nhis course.  It helps us create or jump to project specific sessions with ease.\n\n## a directory of projects\n\nMy version of the `ta` script will let you pass it a directory, and it will\ngive you a fuzzy popup.\n\n``` bash\nta ~/git\n```\n\n## setting up a keybinding\n\n``` bash\nbind C-g display-popup -E \"ta ~/git\"\n```\n\n![ta-git](https://images.waylonwalker.com/ta-git.png)\n\n## default layout\n\nBy default I have my projects open with a vertical split, vim is on top, with\nmy file finder open and the lower split is set to just my terminal.  This is\nwhat I do 90% of the time that I open a project anyways.\n\n![ta-git-layout](https://images.waylonwalker.com/ta-git-layout.png)\n\n## More projects\n\nI also have a directory setup that is a symlink-gallery of all of my projects,\nboth private and public.  This makes it easy to have one key that lets me see\nall of my projects.\n\n```bash\nrm -rf ~/projects\nmkdir ~/projects\nln -sf ~/work/* ~/projects\nln -sf ~/git/* ~/projects\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/symlink-gallery/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/symlink-gallery-og_250x140.png\" alt=\"article cover for \n Create a Virtual File Gallery with Symlinks\n\"/>\n          <p><strong>\n Create a Virtual File Gallery with Symlinks\n</strong></p>\n      </a>\n  </div>\n\n\n> This post covers how I combine all my projects into a single directory.\n\n## Related Links\n\n* [default key bindings](https://gist.github.com/mzmonsour/8791835)\n* [Chris Toomey's](https://twitter.com/christoomey) Tmux Course\n* my [ta script](https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta)\n* my [.tmux.conf](https://github.com/WaylonWalker/devtainer/blob/main/tmux/.tmux.conf)\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-targeted-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux targeted session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-status-bar'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux status-bar</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-13", "edit_link": "https://github.com/edit/main/pages/blog/tmux-ta.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573667", "datetime": "2021-08-13 00:00:00+00:00", "slug": "tmux-ta", "jinja": false, "output_html": "markout/tmux-ta/index.html", "long_description": "https://youtu.be/nT0FA1RNZEs Now your creating, jumping, and killing sessions like a boss. You are slicing This script is simply my fork of Chris Toomey My version of the  By default I have my projects open with a vertical split, vim is on top, with ", "super_description": "https://youtu.be/nT0FA1RNZEs Now your creating, jumping, and killing sessions like a boss. You are slicing This script is simply my fork of Chris Toomey My version of the  By default I have my projects open with a vertical split, vim is on top, with I also have a directory setup that is a symlink-gallery of all of my projects, https://waylonwalker.com/symlink-gallery/ This post covers how I combine all my projects into a single directory. my  my  https://waylonwalker.com/tmux-nav-2021/ for more ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064cd30>, next=<frontmatter.Post object at 0x7f345064ca00>)"}, {"cover": "", "title": "tmux prefix", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-prefix.md", "description": "https://youtu.be/BMkpbfhbkKM The prefix key is an essential part of tmux, by default all of tmux A few of the essential default key-bindings. A more complete li", "content": "https://youtu.be/BMkpbfhbkKM\n\nThe prefix key is an essential part of tmux, by default all of tmux's\nkey-bindings sit behind a prefix.  This prefix is very similar to vim's leader\nkey. It is common for folks to change the default `C-b` (control b) to `C-a` or\nif they are a vim user something to match their vim leader key.\n\n``` bash\nset -g prefix C-Space\nbind Space send-prefix\n```\n\nA few of the essential default key-bindings.\n\n```\n%      vertical split\n\"      horizontal split\nd      detach\n\nup     select up one pane\ndown   select down one pane\nright  select right one pane\nleft   select left one pane\n\nt      clock\no      swap panes\nc      create window\nn      next window\np      previous window\n```\n\nA more complete list of key-bindings can be found in this gist https://gist.github.com/mzmonsour/8791835.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-rename-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux rename session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-popups'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux popups</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-18", "edit_link": "https://github.com/edit/main/pages/blog/tmux-prefix.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573675", "datetime": "2021-07-18 00:00:00+00:00", "slug": "tmux-prefix", "jinja": false, "output_html": "markout/tmux-prefix/index.html", "long_description": "https://youtu.be/BMkpbfhbkKM The prefix key is an essential part of tmux, by default all of tmux A few of the essential default key-bindings. A more complete list of key-bindings can be found in this gist https://gist.github.com/mzmonsour/8791835. ht", "super_description": "https://youtu.be/BMkpbfhbkKM The prefix key is an essential part of tmux, by default all of tmux A few of the essential default key-bindings. A more complete list of key-bindings can be found in this gist https://gist.github.com/mzmonsour/8791835. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1790>, next=<frontmatter.Post object at 0x7f34506e83a0>)"}, {"cover": "", "title": "\ud83d\udce2 Announcing find-kedro", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/find-kedro-release.md", "description": "kedro is an amazing project that allows for super-fast prototyping of data pipelines, yet yielding production-ready pipelines. find-kedro enhances this experience by adding a pytest-like node discovery eliminating the need to bubble up pipelines through modules.", "content": "`find-kedro` is a small library to enhance your kedro experience.  It looks through your modules to find kedro pipelines, nodes, and iterables (lists, sets, tuples) of nodes.  It then assembles them into a dictionary of pipelines, each module will create a separate pipeline, and `__default__` being a combination of all pipelines.  This format is compatible with the kedro `_create_pipelines` format.\n\n\n![Python package](https://github.com/WaylonWalker/find-kedro/workflows/Python%20package/badge.svg)\n\n![Test](https://github.com/WaylonWalker/find-kedro/workflows/Test/badge.svg)\n\n[![Build-Docs](https://github.com/WaylonWalker/find-kedro/workflows/Build-Docs/badge.svg?branch=master)](https://find-kedro.waylonwalker.com)\n\n\n## ![Motivation](https://images.waylonwalker.com/find-kedro-release-1.png)\n\n`kedro` is a \u2728 fantastic project that allows for super-fast prototyping of data pipelines, while yielding production-ready pipelines. `find-kedro` enhances this experience by adding a pytest like node/pipeline discovery eliminating the need to bubble up pipelines through modules.\n\nWhen working on larger pipeline projects, it is advisable to break your project down into different sub-modules which requires knowledge of building python libraries, and knowing how to import each module correctly.  While this is not too difficult, in some cases, it can trip up even the most senior engineers, losing precious feature development time to debugging a library.\n\n## ![Installation](https://images.waylonwalker.com/find-kedro-release-2.png)\n\n`find-kedro` is deployed to pypi and can easily be `pip` installed.\n\n``` bash\npip install find-kedro\n```\n\n## ![Python Usage](https://images.waylonwalker.com/find-kedro-release-3.png)\n\nThe recommended usage of `find-kedro` is to implement it directly into your projects `run.py` module\n\n``` python\nfrom kedro.context import KedroContext\nfrom find_kedro import find_kedro\n\nclass ProjectContext(KedroContext):\n    def _get_pipelines(self) -> Pipeline:\n        return find_kedro()\n```\n\n### Creating nodes\n\n`find-kedro` will not execute any functions.  It will simply look for variables that match the `pattern` and identify if they are a `kedro.pipeline.Pipeline`, `kedro.pipeline.nodes.Node`, or a list of `kedro.pipeline.nodes.  Node`'s.  If so, it will collect them into the dictionary of pipelines.\n\nThere are typically **three** ways that pipelines are constructed with `find-kedro`; **lists**, **single-nodes**, and **pipelines**.\n\n#### Lists\n\nAny pattern matched list will be flattened and collected into the pipeline.  Nodes can be created all at once in the list definition.\n\n``` python\n# my-proj/pipelinies/data_engineering/pipeline\nfrom kedro.pipeline import node\nfrom .nodes import split_data\n\npipeline = [\n    node(\n        split_data,\n        [\"example_iris_data\", \"params:example_test_data_ratio\"],\n        dict(\n            train_x=\"example_train_x\",\n            train_y=\"example_train_y\",\n            test_x=\"example_test_x\",\n            test_y=\"example_test_y\",\n        ),\n    )\n]\n```\n\nIt is also convenient many times to keep the node definition close to the function definition.  Many times I define the list at the top of the file, then append to it as I go.\n\n``` python\n# my-proj/pipelinies/data_engineering/pipeline\nfrom kedro.pipeline import node\nfrom .nodes import split_data\n\nnodes = []\nnodes.append(\n    node(\n        split_data,\n        [\"example_iris_data\", \"params:example_test_data_ratio\"],\n        dict(\n            train_x=\"example_train_x\",\n            train_y=\"example_train_y\",\n            test_x=\"example_test_x\",\n            test_y=\"example_test_y\",\n        ),\n    )\n)\n```\n\n#### Nodes\n\nAll pattern matched `kedro.pipeline.node.Node` objects will get collected into the pipeline.\n\n``` python\n# my-proj/pipelinies/data_engineering/pipeline\nfrom kedro.pipeline import node\nfrom .nodes import split_data\n\nsplit_node = node(\n        split_data,\n        [\"example_iris_data\", \"params:example_test_data_ratio\"],\n        dict(\n            train_x=\"example_train_x\",\n            train_y=\"example_train_y\",\n            test_x=\"example_test_x\",\n            test_y=\"example_test_y\",\n        ),\n    )\n```\n\n#### Pipeline\n\nAll pattern matched `kedro.pipeline.Pipeline` objects will get collected into the pipeline.\n\n``` python\n# my-project/pipelinies/data_engineering/pipeline\nfrom kedro.pipeline import node, Pipeline\nfrom .nodes import split_data\n\nsplit_node = Pipeline(\n    [\n        node(\n            split_data,\n            [\"example_iris_data\", \"params:example_test_data_ratio\"],\n            dict(\n                train_x=\"example_train_x\",\n                train_y=\"example_train_y\",\n                test_x=\"example_test_x\",\n                test_y=\"example_test_y\",\n            ),\n        )\n    ]\n)\n```\n\n\n### Fully Qualified imports\n\nWhen using fully qualified imports `from my_proj.pipelines.data_science.nodes import split_data` instead of\nrelative imports `from .nodes split_data` you will need to make sure that your project is installed, in your current path, or you set the directory\n\n### ![CLI Usage](https://images.waylonwalker.com/find-kedro-release-4.png)\n\nThe CLI provides a handy interface to search your project for nodes\n\n```\nUsage: find-kedro [OPTIONS]\n\nOptions:\n  --file-patterns TEXT       glob-style file patterns for Python node module\n                             discovery\n\n  --patterns TEXT            prefixes or glob names for Python pipeline, node,\n                             or list object discovery\n\n  -d, --directory DIRECTORY  Path to save the static site to\n  --version                  Prints version and exits\n  -v, --verbose              Prints extra information for debugging\n  --help                     Show this message and exit.\n```\n\nExample ran with a slightly modified default `kedro new` project.\n\n``` bash\n\u276f find-kedro\n{\n  \"__default__\": [\n    \"split_data([example_iris_data,params:example_test_data_ratio]) -> [example_test_x,example_test_y,example_train_x,example_train_y]\",\n    \"train_model([example_train_x,example_train_y,parameters]) -> [example_model]\",\n    \"predict([example_model,example_test_x]) -> [example_predictions]\",\n    \"report_accuracy([example_predictions,example_test_y]) -> None\"\n  ],\n  \"src.default_kedro_159.pipelines.data_engineering.pipeline\": [\n    \"split_data([example_iris_data,params:example_test_data_ratio]) -> [example_test_x,example_test_y,example_train_x,example_train_y]\"\n  ],\n  \"src.default_kedro_159.pipelines.data_science.pipeline\": [\n    \"train_model([example_train_x,example_train_y,parameters]) -> [example_model]\",\n    \"predict([example_model,example_test_x]) -> [example_predictions]\",\n    \"report_accuracy([example_predictions,example_test_y]) -> None\"\n  ]\n}\n```\n## ![Contributing](https://images.waylonwalker.com/find-kedro-release-5.png)\n\n**You're Awesome** for considering a contribution!  Contributions are welcome, please check out the [Contributing Guide](https://github.com/WaylonWalker/find-kedro/blob/master/contributing.md) for more information.  Please be a positive member of the community and embrace feedback\n\n## ![Versioning](https://images.waylonwalker.com/find-kedro-release-6.png)\n\nWe use [SemVer](https://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/WaylonWalker/find-kedro/releases).\n\n\n## ![Authors](https://images.waylonwalker.com/find-kedro-release-7.png)\n\n[![Waylon Walker](https://avatars1.githubusercontent.com/u/22648375?s=120&v=4)](https://github.com/WaylonWalker) - Waylon Walker - _Original Author_\n\n[![Zain Patel](https://avatars3.githubusercontent.com/u/30357972?s=120&v=4)](https://github.com/mzjp2) - Zain Patel\n\n## ![License](https://images.waylonwalker.com/find-kedro-release-8.png)\n\nThis project is licensed under the MIT License - see the LICENSE.md file for details\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/find-replace'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Find and Replace in the Terminal.</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/filtering-pandas'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Filtering Pandas</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-04", "edit_link": "https://github.com/edit/main/pages/blog/find-kedro-release.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573682", "datetime": "2020-05-04 00:00:00+00:00", "slug": "find-kedro-release", "jinja": false, "output_html": "markout/find-kedro-release/index.html", "long_description": "find-kedro kedro When working on larger pipeline projects, it is advisable to break your project down into different sub-modules which requires knowledge of building python libraries, and knowing how to import each module correctly.  While this is no", "super_description": "find-kedro kedro When working on larger pipeline projects, it is advisable to break your project down into different sub-modules which requires knowledge of building python libraries, and knowing how to import each module correctly.  While this is not too difficult, in some cases, it can trip up even the most senior engineers, losing precious feature development time to debugging a library. find-kedro The recommended usage of  find-kedro There are typically  Any pattern matched list will be flat", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066ca60>, next=<frontmatter.Post object at 0x7f3452909670>)"}, {"cover": "", "title": "It's not all about winning", "tags": ["catalytic"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/journey.md", "description": "This is my story into data science.", "content": "_This is my story into data science._\n\n## The Journey Begins\n\nI am addicted to the process of learning and improving my skills nearly to a fault. The reason I say nearly is because my addiction is fueled with results. I crave the output of my work enhance the work of others. I jump with joy as I see users gain insights they could have never imagined before. My mouth starts watering as I see their boring repetitive data mining activites be completed in a matter of seconds, opening up their mind to focus on their expertise. The day I stop learning will be the day that I start looking for another career path.\n\n> It's not all about winning.\n\n_~Mom_\n\nThis happened to me in 2014. I have a mechanical engineering degree and had a really good position at the time. I owned full engineering control of a small subset of engine components. The problem was that Everything is so proprietary and hardly documented the process of learning did not click with me. I felt like I had learned a lot about the product early on, and was stuck without any more resources to learn more. On the side, I had started learning python and data science techniques to enhance my job.\n\n<!--\n[mountains in the fog](https://d33wubrfki0l68.cloudfront.net/a093e6c28214bb9556a4e877f5d128cf77b82bd3/9c5c4/static/eberhard-grossgasteiger-382452-unsplash-6f1eb07825ef1b2165ea1a3805fff023.jpg)\n-->\n\n> every time I feel like I have reached the peak of anyone topic the fog clears and I can now see a whole new mountain range that I did not know existed.\n\nI was addicted. I felt like there is so much knowledge easily obtained online in my free time, and I was able to take it back to my job and achieve results. Every time I feel like I have reached the peak of anyone's topic the fog clears and I can now see a whole new mountain range that I did not know existed.\n\n## Love the Journey\n\nBy 2017 I was really good at gaining results for our business and decided to make the jump to the data science team. I have achieved great results, and have been recognized as a high contributor to our business. Still, I do not feel like I have won. My goals are always moving and will always be 3-6 months ahead of me. I truly enjoy the process of learning and providing value so much that I will never let myself sit back and think that I have won and its time to reap the rewards of my hard work. I will say that I am winning. Not because of any results, awards, or recognition, but because I am happy. I have found a career path that I really enjoy the journey and I am not just trying to get on the fast track to a destination.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/just-use-pathlib'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Just Use Pathlib</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/ipython-help'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Just Ask Ipython for help</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-02", "edit_link": "https://github.com/edit/main/pages/blog/journey.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573688", "datetime": "2019-02-02 00:00:00+00:00", "slug": "journey", "jinja": false, "output_html": "markout/journey/index.html", "long_description": "I am addicted to the process of learning and improving my skills nearly to a fault. The reason I say nearly is because my addiction is fueled with results. I crave the output of my work enhance the work of others. I jump with joy as I see users gain ", "super_description": "I am addicted to the process of learning and improving my skills nearly to a fault. The reason I say nearly is because my addiction is fueled with results. I crave the output of my work enhance the work of others. I jump with joy as I see users gain insights they could have never imagined before. My mouth starts watering as I see their boring repetitive data mining activites be completed in a matter of seconds, opening up their mind to focus on their expertise. The day I stop learning will be th", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506720d0>, next=<frontmatter.Post object at 0x7f34506919d0>)"}, {"cover": "", "title": "Building kedro.dev", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/building-kedro-dev.md", "description": "This is my journey to building up the community page.", "content": "Follow along the Journey as I build out [kedro.dev](https://kedro.dev).\n\n## Building a Community\n\nI have really enjoyed my own personal journey as I have started to build all of my data pipeline projects with the kedro framework.  I want to start building a place to share resources with the community.  I want to see this community grow and flourish.  They say in front end web development if you are not using a framework you end up building one.  That's exactly what I was doing before I started using kedro.  I want to build out a set of resources that this community can learn from and start to use the framework at their own pace without needing to develop their own from scratch.\n\n## research\n\nLooking into the front end frameworks to see how they welcome their community.  Much of my inspiration is from them, bringing lessons learned to data.\n\n### pages\n\n* banner\n* nav\n\t* docs -> readthedocs\n    * tutorial -> kedro-examples\n    * blog -> medium\n    * community\n    \t* support\n        * team\n        * courses\n        * examples\n        * meetups\n        * conferences\n        * articles\n        * podcasts\n        * videos\n        * external resources\n\t* search\n* examples\n* footer\n* sponsors\n* newsletter\n* copyright\n*\n\n### components\n\n* edit this page\n* scrolling toc\n\n## Stack Overflow Api\n\nfetch last 5 posts.\n\n```\nhttps://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=stackoverflow&tagged=kedro&pagesize=5\n```\n\n## DEV.to api\n\nfetch last 5 posts\n\n```\nhttps://dev.to/api/articles?tag=kedro&per_page=5&page=1\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/chrome-extensions-i-use'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Chrome Extensions I use</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/building-cli-apps-in-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Building Cli apps in Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-05", "edit_link": "https://github.com/edit/main/pages/blog/building-kedro-dev.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573694", "datetime": "2020-06-05 00:00:00+00:00", "slug": "building-kedro-dev", "jinja": false, "output_html": "markout/building-kedro-dev/index.html", "long_description": "Follow along the Journey as I build out  I have really enjoyed my own personal journey as I have started to build all of my data pipeline projects with the kedro framework.  I want to start building a place to share resources with the community.  I w", "super_description": "Follow along the Journey as I build out  I have really enjoyed my own personal journey as I have started to build all of my data pipeline projects with the kedro framework.  I want to start building a place to share resources with the community.  I want to see this community grow and flourish.  They say in front end web development if you are not using a framework you end up building one.  That Looking into the front end frameworks to see how they welcome their community.  Much of my inspiration", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652d30>, next=<frontmatter.Post object at 0x7f345066c970>)"}, {"cover": "", "title": "A brain dump of stories", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/stories_10-10-2020_10-21-2020.md", "description": "I started making stories as kind of a brain dump a few times per day and I store all the stories on my website with the hopes of doing something with", "content": "I started making stories as kind of a brain dump a few times per day and\nposting them to\n[LinkedIn](https://www.linkedin.com/in/waylonwalker/(https://www.linkedin.com/in/waylonwalker/).\nHere are the last 11 days of stories.\n\n\nI store all the stories on my website with the hopes of doing something with\nthem on my own platform eventually. For now it makes it easy to make these\nposts.\n\n``` bash\ncd static/stories\nls | xargs -I {} echo '![](https://waylonwalker.com/stories/{})'\n```\n\n## Stories 10-10-2020 - 10-21-2020\n\n[![](https://images.waylonwalker.com/stories/TIL-kedro-sorts-nodes.png)](https://waylonwalker.com/stories/TIL-kedro-sorts-nodes.png)\n[![](https://images.waylonwalker.com/stories/disable-base-pip.png)](https://waylonwalker.com/stories/disable-base-pip.png)\n[![](https://images.waylonwalker.com/stories/discovered-social-cards.png)](https://waylonwalker.com/stories/discovered-social-cards.png)\n[![](https://images.waylonwalker.com/stories/find-kedro-de1-contributor.png)](https://waylonwalker.com/stories/find-kedro-de1-contributor.png)\n[![](https://images.waylonwalker.com/stories/hacktoberfest-2020-kedro-538-tests-pass.png)](https://waylonwalker.com/stories/hacktoberfest-2020-kedro-538-tests-pass.png)\n[![](https://images.waylonwalker.com/stories/itertools.product-cars-regions.png)](https://waylonwalker.com/stories/itertools.product-cars-regions.png)\n[![](https://images.waylonwalker.com/stories/kedro-run-only-missing.png)](https://waylonwalker.com/stories/kedro-run-only-missing.png)\n[![](https://images.waylonwalker.com/stories/new-post-designing-kedro-router.png)](https://waylonwalker.com/stories/new-post-designing-kedro-router.png)\n[![](https://images.waylonwalker.com/stories/power-is-nothing-without-control.png)](https://waylonwalker.com/stories/power-is-nothing-without-control.png)\n[![](https://images.waylonwalker.com/stories/progress-over-perfection-comment.png)](https://waylonwalker.com/stories/progress-over-perfection-comment.png)\n[![](https://images.waylonwalker.com/stories/quick-tdb.png)](https://waylonwalker.com/stories/quick-tdb.png)\n[![](https://images.waylonwalker.com/stories/running-ci-for-hacktoberfest-kedro.png)](https://waylonwalker.com/stories/running-ci-for-hacktoberfest-kedro.png)\n[![](https://images.waylonwalker.com/stories/three-ds-openings.png)](https://waylonwalker.com/stories/three-ds-openings.png)\n[![](https://images.waylonwalker.com/stories/use-venv.png)](https://waylonwalker.com/stories/use-venv.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/strip-trailing-whitespace'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Strip Trailing Whitespace from Git projects</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/start-streaming'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>I Started Streaming on Twitch</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-21", "edit_link": "https://github.com/edit/main/pages/blog/stories_10-10-2020_10-21-2020.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573700", "datetime": "2020-10-21 00:00:00+00:00", "slug": "stories_10-10-2020_10-21-2020", "jinja": false, "output_html": "markout/stories_10-10-2020_10-21-2020/index.html", "long_description": "I started making stories as kind of a brain dump a few times per day and I store all the stories on my website with the hopes of doing something with", "super_description": "I started making stories as kind of a brain dump a few times per day and I store all the stories on my website with the hopes of doing something with", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506910d0>, next=<frontmatter.Post object at 0x7f3450652340>)"}, {"cover": "", "title": "Forestry.io", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/forestry-io.md", "description": "Creating Posts from forestry.io.", "content": "Testing out forestry.io\n\n## Sorry Netlify CMS\n\n_I still \u2665\ufe0f your product dont be_\n\n_forestry is simple_\n\nI have been playing with the netlify cms for a while now, and it has been a decent experience, but I **really** struggle configuring it.   Forestry is so simple to setup.  My favorite part is that I can code up my gatsby.js site, storing all editable text in markdown, and come back later and add the CMS based on existing documents.\n\n## Configuration is Simple\n\nForestry.io has this amazing feature to create _create based on existing document_ \ud83e\udd2f.  This is great because it sets up the `.yml` config for me without error.  And If I really want to come back later to customize it more I have that option, too.\n\n![](https://images.waylonwalker.com/Screenshot_20190503-165248.jpg)\n\n> By far my favorite feature is _create based on existing document_\n\n## Multi-File Gallery\n\nI have a use case for a photography site where the owner wants to be able to show off sample photos of each type of work she does.  I got it working in the netlify cms, although it was not very user friendly.  Everything was nested in an accordian \ud83d\ude22.\n\n![](https://images.waylonwalker.com/Screenshot_20190507-144948.png)\n\n> Netlify multi image upload\n\nNext I looked into forestry.io.  I pointed forestry.io at the existing git repo, created a template based on an existing document and **BAM**\ud83d\udca5 a nice image grid appeared.\n\n![](https://images.waylonwalker.com/Screenshot_20190507-145044.png)\n\n> Forestry multi image gallery\n\n## Editor\n\nThe forestry.io editor is on point.  I can choose to edit using the WYSIWYG editor and still use markdown syntax!  I can edit in markdown.  I can add images without fat-fingering the path and screwing up the whole post.  Its amazing!\n\n![](https://images.waylonwalker.com/2019-05-09 10-40-11_forestry.io.png)\n\n## Images\n\nImage upload is on point!  Just click the add image button, it pops you into your media library, choose an image, or upload it, and you're off to the races \ud83c\udfc7.\n\n![](/forestry_image_3.gif)\n\n## Im Sold \ud83d\udcb2\n\nAt this point, I am sold. This blog is now written from Forestry, and I love it.  It's great when I am away from my editor to make some progress on the go.  If I decide I dont like it in 6 months, I can move on. All of my content is still in markdown on the git repo.\n\nForestry.io is missing the nice side-by-side preview that netlify cms has, but honestly, I have struggled to set that up, too.  If I am being honest, I just play front end developer on the side, and setting up a CMS is not something that I plan on doing every day.  I am perfectly happy having some gui tools, like forestry.io, setup all of the configuration for me with just a few clicks.\n\n## Bonus\n\nPreview is Nice \ud83d\udc4c.  Without configuring anything except a bash one-liner, I have a preview that is not quite instant, but does kick out my actual site with updated content quickly.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/four-github-actions-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Four Github Actions for Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/flexbox-zombies'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>FlexBox</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-04-23", "edit_link": "https://github.com/edit/main/pages/blog/forestry-io.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573706", "datetime": "2019-04-23 00:00:00+00:00", "slug": "forestry-io", "jinja": false, "output_html": "markout/forestry-io/index.html", "long_description": "Testing out forestry.io I have been playing with the netlify cms for a while now, and it has been a decent experience, but I  Forestry.io has this amazing feature to create  By far my favorite feature is  I have a use case for a photography site wher", "super_description": "Testing out forestry.io I have been playing with the netlify cms for a while now, and it has been a decent experience, but I  Forestry.io has this amazing feature to create  By far my favorite feature is  I have a use case for a photography site where the owner wants to be able to show off sample photos of each type of work she does.  I got it working in the netlify cms, although it was not very user friendly.  Everything was nested in an accordian \ud83d\ude22. Netlify multi image upload Next I looked int", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e310>, next=<frontmatter.Post object at 0x7f34506b3c10>)"}, {"cover": "", "title": "My experience with a new 3dkeeb corne", "tags": ["keeb"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/3dkeeb-corne.md", "description": "What did I sign myself up for? If the lower typing speed with alpha characters", "content": "## specs\n\n## first days typing\n\n\n## first days working\n\nWhat did I sign myself up for? If the lower typing speed with alpha characters\nwas not enough throw in special characters and keybings I setup long ago and\nonly remember by muscle memory.  I have so far killed my tmux pane instead of\nzooming in (m-x instead of m-z), killed my zsh line instead of paste to the end\nof a command (c-c instead of c-v).\n\n\n## VIA\n\n```\nLT(1, KC_ENT)\nLT(1, KC_TAB)\nLT(1, KC_SHIFT)\n\nMT(MOD_RSHFT, KC_ESC)\nMT(MOD_HYPR, KC_GESC)\n\n```\n\n## setting up qmk cli\n\n``` bash\nconda create -n qmk python=3.8 -y\n\nqmk config compile.keyboard=crkbd/rev1 compile.keymap=default\nqmk config user.keyboard=crkbd/rev1 user.keymap=default\n\n# This will clone into ~/qmk_firmware\n# you can change this behavior by setting QMK_HOME\n# export QMK_HOME=~/custo_qmk_home_dir\nqmk setup\n\n# qmk setup took 10 minutes on my machine with wsl over a mobile network\n```\n\n``` bash\nqmk setup \nImportError: Unable to load any of the following libraries:libhidapi-hidraw.so libhidapi-hidraw.so.0 libhidapi-libusb.so libhidapi-libusb.so.0 libhidapi-iohidmanager.so libhidapi-iohidmanager.so.0 libhidapi.dylib hidapi.dll libhidapi-0.dll\n\npip install hidapi\nsudo apt-get install python-dev libusb-1.0-0-dev libudev-dev\nsudo apt-get update\nsudo apt-get install python-dev libusb-1.0-0-dev libudev-dev\nqmk setup\n# https://pypi.org/project/hid/\napt install libhidapi-hidraw0\nqmk setup\nsudo apt-get install avrdude\n```\n\n## inspiration\n\n``` python\nhttps://github.com/markstos/qmk_firmware/tree/markstos/keyboards/crkbd/keymaps/markstos\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/auto_conda_env'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Automatic Conda Environments</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/forestry-io'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Forestry.io</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-21", "edit_link": "https://github.com/edit/main/pages/blog/3dkeeb-corne.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573712", "datetime": "2021-06-21 00:00:00+00:00", "slug": "3dkeeb-corne", "jinja": false, "output_html": "markout/3dkeeb-corne/index.html", "long_description": "What did I sign myself up for? If the lower typing speed with alpha characters", "super_description": "What did I sign myself up for? If the lower typing speed with alpha characters", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a91f0>, next=<frontmatter.Post object at 0x7f34506be4c0>)"}, {"cover": "", "title": "Automatic Conda Environments", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/auto_conda_env.md", "description": "I have automated my process to create virtual environments in my python I https://waylonwalker.com/tmux-nav-2021/ You can learn more about  direnv is in many pa", "content": "I have automated my process to create virtual environments in my python\nprojects, here is how I did it.\n\nI've really been digging my new tmux session management setup.  Now I have\nleveled it up by adding direnv to my workflow.  It will execute a shell script\nwhenever I cd into a directory.  One thing I wanted to add to this was,\nautomatic activation of python environments whenever I cd into a directory, or\ncreate a new environment if one does not exist.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n## Direnv\n\nYou can learn more about [direnv](https://direnv.net/) on their website.  There\nare several libraries that seem to do a similar concept, _run a bash script\nwhen I cd into a directory_ direnv is the one that I chose to use, but you can\nlikely do the same concept in other ones.\n\n### Installation\n\ndirenv is in many package repos, or can be installed from binary builds with a\none liner. See their [installation](https://direnv.net/docs/installation.html)\ninstructions for more information.\n\n``` bash\ncurl -sfL https://direnv.net/install.sh | bash\n```\n\n### .envrc\n\ndirenv works by executing the contents of known safe `.envrc` files.  Here are\nsome of the basic commands to get you started.\n\n``` bash\n# edit or create a new .envrc and flag it as allowed\ndirenv edit .\n\n# flag a .envrc file as allowed or not\ndirenv allow .\ndirenv deny .\n\n# reexecute a .envrc\ndirenv reload\n```\n\n## Conda\n\nI most often use conda to manage my virtual environments.  I dont use it to\n`conda install` packages, but I really like the convenience of combinging the\npython interpreter with the environment.\n\n\n``` bash\nconda create -n my-project python=3.9 -y\n```\n\n> every time I start a new project I need to create a new environment\n\n``` bash\nconda activate my-project\n# or source depending on if conda init has been ran on the system\nsource activate my-project\n```\n\n> every subsequent time I start work in that project I need to remember to activate\n\n### lazy\n\nI'll admit that sometimes I get lazy and will use an existing environment with\nsimilar dependencies.  This kind of works in a pinch, but almost always I need\nmore packages and start trampling in that other projects environment.\n\n\n## naming the environment\n\nSince I want this process to be easily automated I chose to name my\nenvironments after the name of the directory the project is in.  In bash we can\nget the current directory with `$PWD`, and trim it to just the directory name\nwith the `basename` command.\n\n``` bash\nbasename $PWD\n```\n\n> this will return the name of the current working directory\n\n## condanew\n\nI reates a short bash function that will create a new conda environment,\nactivate it, and install anything extra that the project needs.\n\n``` bash\ncondanew() {\n    conda create -n $(basename $PWD) python=3.8 -y\n    source activate $(basename $PWD)\n    pip install lolcat\n}\n```\n\n> This will create a new python environment named after the current directory.\n\n### project install\n\nOften I will modify the condanew function to install project specific things.\nI leverage editable installs of projects I am working on quite extensively,\nthat's what the `-e` is.\n\n``` bash\ncondanew() {\n    conda create -n $(basename $PWD) python=3.8 -y\n    source activate $(basename $PWD)\n    pip install -e \".[dev]\"\n    # or\n    pip install -r requirements.txt\n}\n```\n\n## Bash error handling\n\nI dive deeper into this subject in this post about creating\n[reusable-bash](https://waylonwalker.com/reusable-bash/#error-handling)\nscripts.  But to auto create the environment I am going to try to activate.  If\nit fails, create a new environment based on the name of the project.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/reusable-bash/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/reusable-bash-og_250x140.png\" alt=\"article cover for \n Creating Reusable Bash Scripts\n\"/>\n          <p><strong>\n Creating Reusable Bash Scripts\n</strong></p>\n      </a>\n  </div>\n\n\n``` bash\nsource activate $(basename $PWD) || condanew\n```\n\n> Try to activate the environment, if it fails make a new one.\n\n## Final Result\n\n\n### Conda\n\n\n```\ndirenv edit .\n```\n\n``` bash\n#!/bin/bash\n# shortcut for creating new conda environments based on the current working directory\ncondanew() {\n    conda create -n $(basename $PWD) python=3.8 -y\n    source activate $(basename $PWD)\n    pip install lolcat\n}\necho $(basename $PWD) | lolcat\nsource activate $(basename $PWD) || condanew\n```\n\n### Venv\n\nHere is a modified version using venv from the standard library.\n\n``` bash\n#!/bin/bash\n# shortcut for creating new virtual environments\nvenvnew() {\n    python -m venv .venv\n    source .venv/bin/activate\n    pip install lolcat\n}\necho $(basename $PWD) | lolcat\nsource .venv/bin/activate || venvnew\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/graceful-kedro-catalog'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gracefully adopt kedro, the catalog</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/3dkeeb-corne'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>My experience with a new 3dkeeb corne</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-22", "edit_link": "https://github.com/edit/main/pages/blog/auto_conda_env.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573722", "datetime": "2021-03-22 00:00:00+00:00", "slug": "auto_conda_env", "jinja": false, "output_html": "markout/auto_conda_env/index.html", "long_description": "I have automated my process to create virtual environments in my python I https://waylonwalker.com/tmux-nav-2021/ You can learn more about  direnv is in many package repos, or can be installed from binary builds with a direnv works by executing the c", "super_description": "I have automated my process to create virtual environments in my python I https://waylonwalker.com/tmux-nav-2021/ You can learn more about  direnv is in many package repos, or can be installed from binary builds with a direnv works by executing the contents of known safe  I most often use conda to manage my virtual environments.  I dont use it to every time I start a new project I need to create a new environment every subsequent time I start work in that project I need to remember to activate I", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1f70>, next=<frontmatter.Post object at 0x7f34506a1d60>)"}, {"cover": "", "title": "Gracefully adopt kedro, the catalog", "tags": ["kedro", "python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/graceful-kedro-catalog.md", "description": "While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For", "content": "## Why use kedro catalog?\n\nWhile using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For me the full benefit of the catalog comes when you combine it with the pipeline and dont even touch read/write steps at all.\n\nTaking a step into kedro by adopting the catalog first will give you a way to organize all of your data loads in one place, and stop manually writing read/write code, which can be different for each data and storage type. You just don't need to think about it.\n\n---\n\n* iperitive loading style\n* organizes your data\n* all file locations can be quickly identified\n* can be dropped into kedro later\n\n---\n\n> \"can be dropped into kedro later\"\n> Let's talk a bit more about that\n\n## 2 Ways to Gracefully adopt the catalog\n_How do I get started with the kedro catalog_\n\n* add with the code api\n* load from yaml (**recommended**)\n\n\n## 1. Adding to the catalog with the code api\n_how to use the kedro catalog code api_\n\nIt is possible to keep everything inside of one single file if you want by utilizing the code api, which defines the kedro catalog inside of your script with python.  I personally like this method as it is a bit more scriptable to create many layers of datasets with a for loop.  It can still be carried right into a kedro project, but is not the normal way that other kedro users will be used to seeing.  I'll leave it up to you which technique to use.\n\n\n``` python\nfrom kedro.io import DataCatalog\nfrom kedro.extras.datasets.pandas import CSVDataSet\n\nio = DataCatalog(\n    {\n        \"bikes\": CSVDataSet(filepath=\"../data/01_raw/bikes.csv\"),\n    }\n)\n\n```\n> taken right from the kedro [docs](https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html)\n\n\ud83d\udc46 This can be done inside of a single Jupyter cell, and pulled out later.\n\n\n\n## 2. Creating a catalog config file\n\n**recommended**\n\nThis reccommended method it great since it will simply drop right in to a full kedro project if you were ever ready to adopt the framework as a whole.  The downside to gracefully adopting the framework is that you need to have a bit of an understanding of the internals to do it.  When using the framework as a whole it seemlessly takes care of everything for you.\n\n``` yaml\n# conf/base/catalog.yml\n# Example 1: Loads / saves a CSV file from / to a local file system\n\nbikes:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/bikes.csv\n```\n\n\n``` python\nfrom kedro.config import ConfigLoader\nfrom kedro.io import DataCatalog\n\nconf_loader = ConfLoader(['conf/base'])\nconf_catalog = conf_loader.get('catalog*', 'catalog/**')\ncatalog = DataCatalog.from_config(conf_catalog)\n```\n\n> You can even do this \ud83d\udc46 from a Jupyter notebook\n\nIf you do happen to be in a module deeper into an existing library I tend to leverage the use of the `__file__` magic.  `__file__` is a string containing the location of the current file.  You can initiate a `Path` object from this and roll up the necessary number of directories with the `parents` attribute then into the `conf/base` directory.  I find this more **more robust** as it does not depend on your current working directory.\n\n``` python\nfrom pathlib import Path\nconf_loader = ConfLoader([Path(__file__).parents[1] / 'conf/base'])\nconf_catalog = conf_loader.get(\"catalog*\", \"catalog/**\")\nnew_catalog = DataCatalog.from_config(conf_catalog)\n```\n\n> I find leveraging the `__file__` magic a bit more robust when possible as it does not depend on your current working directory.\n\n## Adhoc adding to an existing kedro catalog\n\nLet's say that you are already using a kedro project, but you are wanting to develop new features entirely in the context of a notebook.  You can easily create a catalog as shown above.  Since the kedro catalog variable is typically `catalog`, we will call it `new_catalog` and add it to the existing `catalog` below.  If you are not quite sure what that `**catalog` syntax is doing check out my article on `**kwargs`.\n\n``` python\ncatalog.add_feed_dict(new_catalog.datasets.__dict__)\n```\n\n[![python args and kwargs](https://images.waylonwalker.com/python-args-kwargs.png)](https://waylonwalker.com/python-args-kwargs/)\n> [python args and kwargs](https://waylonwalker.com/python-args-kwargs/) article by [@_waylonwalker](https://twitter.com/_WaylonWalker)\n\nThe framework makes appending\n\n``` python\ncatalog = DataCatalog({**catalog.datasets.__dict__, **new_catalog.datasets.__dict__})\n``\n\n\n\n## One word of caution\n\n\nIf you have any hooks running `after_catalog_created`, they will not be run on the appended catalog entries.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gracefully-redirect'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Refactoring your blog urls</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/goals-2019'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>2019 goals</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-29", "edit_link": "https://github.com/edit/main/pages/blog/graceful-kedro-catalog.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573728", "datetime": "2020-06-29 00:00:00+00:00", "slug": "graceful-kedro-catalog", "jinja": false, "output_html": "markout/graceful-kedro-catalog/index.html", "long_description": "While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For me the full benefit of the catalog comes when you combine it with the pipeline and dont e", "super_description": "While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For me the full benefit of the catalog comes when you combine it with the pipeline and dont even touch read/write steps at all. Taking a step into kedro by adopting the catalog first will give you a way to organize all of your data loads in one place, and stop manually writing read/write code, which can be different for each data and storage", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679670>, next=<frontmatter.Post object at 0x7f3450691a60>)"}, {"cover": "", "title": "How to get Dev Comments from an article Url", "tags": ["blog", "javascript"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/devto-comments-from-url.md", "description": "I want to incorporate some of the wonderful comments,  I want to incorporate some of the wonderful comments, \ud83d\udc95, \ud83e\udd84, and \ud83d\udd16 dev.to has an open API that allows us t", "content": "I want to incorporate some of the wonderful comments, \\U0001F495, \\U0001F984,\nand \\U0001F516's that I have been getting on dev.to on my website.  I have\ndabbled once or twice with no avail this time I am taking notes on my journey,\nso follow along and let's get there together.  By the end of this post, I will\nhave a way to get comments from posts on the client-side thanks to the\nwonderfully open dev.to API.\n\nI want to incorporate some of the wonderful comments, \ud83d\udc95, \ud83e\udd84, and \ud83d\udd16's that I have been getting on **dev.to** on my website.  I have dabbled once or twice with no avail this time I am taking notes on my journey, so follow along and let's get there together.  By the end of this post, I will have a way to get comments from posts on the client-side thanks to the wonderfully open dev.to API.\n\n## The API\n\ndev.to has an open API that allows us to easily get comments as HTML.  They have their API hosted at [https://docs.forem.com/api/#tag/comments](https://docs.forem.com/api/#tag/comments), let's take a look at it.\n\n![](https://images.waylonwalker.com/dev-to-api-comments.png)\n\nHere we can see that going to [https://dev.to/api/comments?a_id=270180](https://dev.to/api/comments?a_id=270180) returns us some json, that contains an array of comments.\n\n``` json\n[\n  {body_html: '<the comment rendered as html>',\n   user: {<an array with quite a bit of information about the commenting user>},\n   children: [<an array of child comment objects>]\n   <other stuff we don't care about>\n  },\n  <more comments>\n  ]\n```\n\n## What the heck is that a_id\n\nThat is an `article_id`.  Though a bit of searching I found that it occurs in at least four places on every page as a data attribute.  Using chrome dev tools I found a good place to \"query\" it from.\n\n![](https://images.waylonwalker.com/dev-to-article-id.png)\n\nWith this knowledge, we can fetch the contents of an article and pull the `articleId` from it.\n\n``` javascript\n    async function getDevToAId(url) {\n        // Gets the articleId of a dev.to article\n        const root = 'https://dev.to/'\n        if (!url.includes(root)) {\n            url = root + url\n        }\n        let domparser = new DOMParser()\n        const html = await fetch(url).then(r => r.text())\n        const doc = domparser.parseFromString(html, 'text/html')\n        const articleId = doc.querySelector('#article-body').dataset.articleId\n        return articleId\n    }\n```\n\n**note**  I do check to see if a full URL or slug was given, if it was just the slug I tack on `https://dev.to/` before fetching.\n\n## Now the comments\n\nThe main event is here, what you all have waited for, and it's by far the easiest part.\n\n``` javascript\n    async function getDevToComments(url) {\n        const articleId = await getDevToAId(url)\n        const response = await fetch(`https://dev.to/api/comments?a_id=${articleId}`)\n        const comments = await response.json()\n        return comments\n    }\n```\n\nThe hardest part of this was figuring out what the `a_id` was and how I was going to get it from some more commonly known information about my articles, the URL, or the slug\n\n## Try it out\n\n**F12** pop open your console right in dev tools of this post and try it out.\n\n![](https://images.waylonwalker.com/dev-to-comments-in-devtools.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/diffurcate'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Code Review from the comfort of vim | Diffurcate</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/designing-kedro-router'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Designing a \"Router\" for kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-20", "edit_link": "https://github.com/edit/main/pages/blog/devto-comments-from-url.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573734", "datetime": "2020-05-20 00:00:00+00:00", "slug": "devto-comments-from-url", "jinja": false, "output_html": "markout/devto-comments-from-url/index.html", "long_description": "I want to incorporate some of the wonderful comments,  I want to incorporate some of the wonderful comments, \ud83d\udc95, \ud83e\udd84, and \ud83d\udd16 dev.to has an open API that allows us to easily get comments as HTML.  They have their API hosted at  Here we can see that going ", "super_description": "I want to incorporate some of the wonderful comments,  I want to incorporate some of the wonderful comments, \ud83d\udc95, \ud83e\udd84, and \ud83d\udd16 dev.to has an open API that allows us to easily get comments as HTML.  They have their API hosted at  Here we can see that going to  That is an  With this knowledge, we can fetch the contents of an article and pull the  The main event is here, what you all have waited for, and it The hardest part of this was figuring out what the ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3310>, next=<frontmatter.Post object at 0x7f3450658790>)"}, {"cover": "neonbrand-618322-unsplash.jpg", "title": "Rewrite History with Git", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-rewrite-history.md", "description": "rebase git commit --amend rage quit git reset HEAD~n  removes modifications keeps hitsory of changes and undoes them git checkout HEAD~n --  keeps modifications", "content": "* rebase\n* git commit --amend\n\n## Unstage\n\n``` bash\ngit reset -- <file>\n```\n\n**rage** unstage to wipte out history of staged commit\n``` bash\ngit reset --hard <file>\n```\n\n## Undo file\n\n* rage quit\n* git reset HEAD~n <file>\n    * removes modifications\n    * keeps hitsory of changes and undoes them\n* git checkout HEAD~n -- <file>\n    * keeps modifications\n    * removes history\n\n    * --SOFT\n    * --HARD\n    * --Mixed\n\n## undo n commits back\n\nlocally before push\n``` bash\ngit reset HEAD~n\n```\n\nafter push\n``` bash\ngit revert HEAD~n\n```\n\n## update .gitignore\n\nafter push\n``` bash\ngit rm -r --cached .\ngit commit -am \"Updated .gitignore\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-rewrite-history/git-rewrite-history'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Rewrite History with Git</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-push-without-setting-upstream'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>git push without setting upstream</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-05", "edit_link": "https://github.com/edit/main/pages/blog/git-rewrite-history.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573740", "datetime": "2019-02-05 00:00:00+00:00", "slug": "git-rewrite-history", "jinja": false, "output_html": "markout/git-rewrite-history/index.html", "long_description": "rebase git commit --amend rage quit git reset HEAD~n  removes modifications keeps hitsory of changes and undoes them git checkout HEAD~n --  keeps modifications removes history --SOFT --HARD --Mixed locally before push after push after push", "super_description": "rebase git commit --amend rage quit git reset HEAD~n  removes modifications keeps hitsory of changes and undoes them git checkout HEAD~n --  keeps modifications removes history --SOFT --HARD --Mixed locally before push after push after push", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065eaf0>, next=<frontmatter.Post object at 0x7f34506cf460>)"}, {"cover": "", "title": "What is YOUR Advice for New Data Scientists", "tags": ["data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/data-scientist-advice.md", "description": "Learn the business Learn Git Your code does not need to be amazing Keep Learning You dont have to start out as a git wizard with the cleanest possible commit hi", "content": "* Learn the business\n* Learn Git\n* Your code does not need to be amazing\n* Keep Learning\n\n## Learn Git\n\nYou dont have to start out as a git wizard with the cleanest possible commit history.  At first dont let yourself get too wrapped up in it, the most important part is that you make commits.  You will find needs for more advanced stuff later.\n\n\n``` bash\ngit add .\ngit commit -m \"FEAT added new function to calculate revenue by product family\"\ngit push\n```\n\nGet comfortable with this, then learn how to `branch`, `rebase`, `stash`, etc...\n\n\n## Your code does not need to be amazing\n\nGet the job done.  Keep it in small bite size pieces.  Make readable function definitions and variable names.  You will thank yourself for naming things well later.  Readability counts more than performance in most cases of data science.  If it gets the job done try not to over worry about things like performance.  A few extra seconds to clean a dataset or build a model is not worth hours of your time.  As you go you will have cases that performance is more critical and you will learn what to do from the start to avoid them.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/debugging-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Debugging Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/d3-day-5'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>D3 Day 5</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-26", "edit_link": "https://github.com/edit/main/pages/blog/data-scientist-advice.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573746", "datetime": "2020-02-26 00:00:00+00:00", "slug": "data-scientist-advice", "jinja": false, "output_html": "markout/data-scientist-advice/index.html", "long_description": "Learn the business Learn Git Your code does not need to be amazing Keep Learning You dont have to start out as a git wizard with the cleanest possible commit history.  At first dont let yourself get too wrapped up in it, the most important part is th", "super_description": "Learn the business Learn Git Your code does not need to be amazing Keep Learning You dont have to start out as a git wizard with the cleanest possible commit history.  At first dont let yourself get too wrapped up in it, the most important part is that you make commits.  You will find needs for more advanced stuff later. Get comfortable with this, then learn how to  Get the job done.  Keep it in small bite size pieces.  Make readable function definitions and variable names.  You will thank yours", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066cf70>, next=<frontmatter.Post object at 0x7f3450696280>)"}, {"cover": "", "title": "tmux floating popups", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-floating-popups.md", "description": "https://youtu.be/2ZqFDsJywt8 Tmux popups are actually floating windows that you can drag around the screen.  They always open in the middle (by default) when yo", "content": "https://youtu.be/2ZqFDsJywt8\n\nTmux popups are actually floating windows that you can drag around the screen.  They always open in the middle (by default) when you open them, no matter where you leave them.\n\nHere are a couple of keybindings I use to open up popup windows.\n\n``` bash\nbind C-g display-popup -E \"ta ~/git\"\nbind -n M-g display-popup -E \"tmux new-session -A -s scratch\"\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-fzf-session-jump'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux fzf session jumper</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-display-message'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux display-message</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-15", "edit_link": "https://github.com/edit/main/pages/blog/tmux-floating-popups.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573752", "datetime": "2021-07-15 00:00:00+00:00", "slug": "tmux-floating-popups", "jinja": false, "output_html": "markout/tmux-floating-popups/index.html", "long_description": "https://youtu.be/2ZqFDsJywt8 Tmux popups are actually floating windows that you can drag around the screen.  They always open in the middle (by default) when you open them, no matter where you leave them. Here are a couple of keybindings I use to ope", "super_description": "https://youtu.be/2ZqFDsJywt8 Tmux popups are actually floating windows that you can drag around the screen.  They always open in the middle (by default) when you open them, no matter where you leave them. Here are a couple of keybindings I use to open up popup windows. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658e80>, next=<frontmatter.Post object at 0x7f34506ae9d0>)"}, {"cover": "", "title": "Clean up Your Data Science with Named Tuples", "tags": ["python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/named-tuples-data-science.md", "description": "If you are a regular listener of  As you graduate your scripts into modules and libraries you might start to notice that you need to pass a lot of data around t", "content": "If you are a regular listener of [TalkPython](https://talkpython.fm) or PythonBytes you have hear Michael Kennedy talk about Named Tuples many times, but what are they and how do they fit into my data science workflow.\n\n## Example\n\nAs you graduate your scripts into modules and libraries you might start to notice that you need to pass a lot of data around to all of the functions that you have created. For example if you are running some analysis utilizing `sales`, `inventory`, and `pricing` data.  You may need to calculate total revenue, inventory on hand.  You may need to pass these data sets into various models to drive production or pricing based on predicted volumes.\n\n## Load data\n\nHere we setup functions that can load data from the sales database.  Assume that we also have similar functions to `get_inventory` and `get_pricing`.\n\n``` python\ndef get_engine():\n    engine = create_engine('postgresql://scott:tiger@localhost:5432/mydatabase')\n\ndef get_sales():\n    '''\n    gets sales history from the sales database\n    '''\n    engine = get_engine()\n    with engine.connect() as con:\n        sql = '''select * from sales.history'''\n        df = pd.read_sql(sql, con)\n    engine.dispose()\n    return df\n\ndef get_inventory():\n    ...\n\ndef get_pricing():\n    ...\n```\n\n### Create Metrics\n\nHere we create our first function to calculate some metrics.  There are likely many of these functions that repeat a similar pattern.  They use similar data and have their own custom logic for calculations and joins.\n\n``` python\ndef calculate_total_revenue(sales, pricing):\n    \"\"\"calculates the total sales revenue for all of company XYZ\"\"\"\n    sales = sales.join(pricing.set_index('sku'), on='sku')\n    sales['revenue'] = sales['qty'] * sales['price']\n    return sales['revenue'].sum()\n\ndef calculate_inventory_sale_ratio(sales, inventory, pricing):\n    ...\n\ndef calculate_inventory_sale_ratio(inventory, sales):\n    ...\n```\n\nFurthermore these functions will need to be called somewhere, this might be in a `make_report()` function that puts this data into an html template to be sent out to stakeholders, or to be served on a website. Notice how we have the same data showing up time and time again.  And sometimes we even ask for it in a different order \ud83d\ude32.It is important to recognize this early in the project before this gets our of hand.\n\n```python\ndef make_report():\n    \"\"\"Makes stakeholder report for company XYZ\"\"\"\n    sales = get_sales()\n    inventory = get_inventory()\n    pricing = get_pricing()\n\n    revenue = calculate_total_revenue(sales, pricing)\n    sales_ratio = inventory_sale_ratio(sales, inventory, pricing)\n    inventory_sale_ratio(inventory, sales)\n```\n\n### getting out of hand\n\nAlong the way our features, models, and out supervisors have all had their own needs and we have added new datasets, and several flags. This is the point at which anxiety starts creeping in.  We start spending a lot of time double checking the order of each call to make sure that we dont make a mistake.  And when someone else touches this model, we know what it looks like and cant help but think, \"Oh God I hope they didn't screw up that horrid module!\"\n\n``` python\ndef calculate_total_revenue(sales, pricing, inventory, stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000'):\n    sales = (sales\n                .join(pricing.set_index('sku'), on='sku')\n                .join(inventory.set_index('sku'), on='sku')\n            )\n    sales['revenue'] = sales['qty'] * sales['price']\n    sales  = sales.query(f'price > {min_price}')\n    sales  = sales.query(f'sale_date > {min_date}')\n    sales  = sales.query(f'sale_date < {end_date}')\n    return sales['revenue'].sum()\n\ndef calculate_inventory_sale_ratio(sales, pricing, inventory, stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000'):\n    ...\n\ndef calculate_inventory_sale_ratio(sales, pricing, inventory, stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000'):\n    ...\n\ndef model_new_prices(sales, pricing, inventory, stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000'):\n    ...\n\ndef model_production(sales, pricing, inventory, stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000'):\n    ...\n\ndef completely_custom_metric_for_steve(sales, pricing, inventory, stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000'):\n    \"\"\"Steve has been here 30 years and doesnt trust our metrics unless he can validate against the old metrics\"\"\"\n    ...\n```\n\nIt gets even crazier when you start calling all of these functions! Note that we have a common theme of the same data getting passed into\n\n``` python\ndef make_report(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000', is_for_steve=False):\n    \"\"\"Makes stakeholder report for company XYZ\"\"\"\n    sales = get_sales()\n    inventory = get_inventory()\n    pricing = get_pricing()\n\n    revenue = calculate_total_revenue(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000')\n    sales_ratio = sales_ratio = inventory_sale_ratio(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000')\n    inventory_sale_ratio = inventory_sale_ratio(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000')\n    predicted_prices = model_new_prices(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000')\n    predicted_production_rates = model_production_rate(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000')\n    completely_custom_metric_for_steve(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000')\n\n    # render report\n    ...\n```\n\n### This code Stinks\n\n\u231a _Time for refactoring_\n\nWhile our code started out good it has grown stinky over time.  It will works fine, but it could be better and more enjoyable to work with.  What we have here is a code smell called `data clump`.  This is a group of data that always appears together.  It would be appropriate to formally group this data together.  One way to do this in python is to use nametuples.  It is a very simple technique that allows us to define a data structure that contains a specific set of attributes that we can access using `.attribute_name`.  Replacing this `data clump` with a formal group of data will allow us to reduce the number of arguments in all of our functions. Add new attributes easily. And not rely on positional arguments.  This code will be easier to maintain, read, and write.\n\n> What we have here is a code smell called `data clump`\n\n**create a namedtuple**\n\n```python\nfrom collections import namedtuple\n\nModelData = namedtuple('modin_data', 'sales pricing inventory stored_at min_price start_date end_date')\n```\n\n**use the namedtuple**\n\n```python\ndata = ModelData(\n    sales=get_sales(),\n    pricing=get_pricing(),\n    inventory=get_inventory(),\n    stored_at='LAX'\n    min_price=100\n    start_date = datetime.today() - datetime.timedelta(days=30)\n    end_date = datetime.today()\n    )\n```\n\n**refactor functions**\nNow that we have a clean data object how do we use it.  Simple, we pass in one data object, then access each attribute with the dot operator. These functions are now much cleaner to call and read.  Here I have chosen a poor name for our `data`, but in a real scenario you may have multple `namedtuples`.\n\n``` python\ndef calculate_total_revenue(data):\n    sales = (data.sales\n                .join(data.pricing.set_index('sku'), on='sku')\n                .join(data.inventory.set_index('sku'), on='sku')\n            )\n    sales['revenue'] = sales['qty'] * sales['price']\n    sales  = sales.query(f'price > {data.min_price}')\n    sales  = sales.query(f'sale_date > {data.min_date}')\n    sales  = sales.query(f'sale_date < {data.end_date}')\n    return sales['revenue'].sum()\n\n...\n```\n\n**call the function**\n\nNow that all of the data is store in a single object it is really easy to call each of our functions using one data instance.\n\n``` python\ndef make_report(stored_at='LAX', min_price=100, start_date='01-01-1999', end_date='01-01-3000', is_for_steve=False):\n    \"\"\"Makes stakeholder report for company XYZ\"\"\"\n    data = ModelData(stored_at=stored_at, min_price=min_price, start_date=start_date, end_date=end_date)\n\n    revenue = calculate_total_revenue(data)\n    sales_ratio = sales_ratio = inventory_sale_ratio(data)\n    inventory_sale_ratio = inventory_sale_ratio(data)\n    predicted_prices = model_new_prices(data)\n    predicted_production_rates = model_production_rate(data)\n    completely_custom_metric_for_steve(data)\n\n    # render report\n    ...\n```\n\n### \ud83e\uddf9 Clean up your data science\n\nNamed Tuples are a great way to clean up your data science code and reduce `Data Clumps`.  Anytime you have multiple data sets that almost always get used together `namedtuple`s are a great way to clean up your code, make it more readable and more maintainable.  If you find that you also have functions that are tightly coupled to this data you might want to consider using a `class` instead of a `namedtuple`, but that is for another article.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/neovim-live-substitution'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Live Substitution In Neovim</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/my-github-profile'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I Built My GitHub Profile</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-11", "related_post": null, "edit_link": "https://github.com/edit/main/pages/blog/named-tuples-data-science.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573758", "datetime": "2019-09-11 00:00:00+00:00", "slug": "named-tuples-data-science", "jinja": false, "output_html": "markout/named-tuples-data-science/index.html", "long_description": "If you are a regular listener of  As you graduate your scripts into modules and libraries you might start to notice that you need to pass a lot of data around to all of the functions that you have created. For example if you are running some analysis", "super_description": "If you are a regular listener of  As you graduate your scripts into modules and libraries you might start to notice that you need to pass a lot of data around to all of the functions that you have created. For example if you are running some analysis utilizing  Here we setup functions that can load data from the sales database.  Assume that we also have similar functions to  Here we create our first function to calculate some metrics.  There are likely many of these functions that repeat a simil", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652e80>, next=<frontmatter.Post object at 0x7f3450646790>)"}, {"cover": "", "title": "Autoreload in Ipython", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/autoreload-ipython.md", "description": "Autoreload in python", "content": "I have used `%autoreload` for several years now with great success and \ud83d\udd25 rapid reloads.  It allows me to move super fast when developing libraries and modules.  They have made some great updates this year that allows class modules to be automatically be updated.\n\n## What I like about autoreload\n\n\ud83d\udd25 Blazing Fast\n\n\ud83d\udca5 Keeps me in the comfort of my text editor\n\n\ud83d\udc4f Allows me to use Jupyter when I need\n\n\ud83d\udc5f Extremely Reliable\n\nOne of the biggest benefits that I find is that it shortens the distance between my module/library code and test code inside of a terminal/notebook.  Now I primarily use jupyter notebooks for the presentation aspect.  I develop code from the comfort of my editor with all of the tools I have setup, and run the functions in a notebook to get the output.  From there I might do some aggregations or plots, but the \ud83e\udd69 meat of development is done outside of jupyter.\n\n> Now I primarily use jupyter notebooks for the presentation aspect.\n\n## Enabling Autoreload\n\n\ud83d\udcd0 _config_\n\nThis is a short script that I use to setup ipython so that it automatically reloads modules.  This allows me to use a separate terminal and editor, and keep data in memory while developing functions.\n\n```bash\nipython profile create\n```\n\nThen edit the created file `~/.ipython/profile_default/ipython_config.py`.\n\n```python\nc.InteractiveShellApp.extensions = ['autoreload']\nc.InteractiveShellApp.exec_lines = ['%autoreload 2']\nc.InteractiveShellApp.exec_lines.append('print(\"Warning: disable autoreload in ipython_config.py to improve performance.\")')\n```\n\n## According to the docs\n\n[autoreload caveates](https://ipython.org/ipython-doc/3/config/extensions/autoreload.html#caveats \"IPython caveats\")\n\n> Some of the known remaining caveats are:\n>\n> Replacing code objects does not always succeed: changing a @property in a class to an ordinary method or a method to a member variable can cause problems (but in old objects only).\n> Functions that are removed (eg. via monkey-patching) from a module before it is reloaded are not upgraded.\n> C extension modules cannot be reloaded, and so cannot be autoreloaded.\n\n## So what can gets updated??\n\n\ud83e\udd32 _Nearly everything..._\n\n* new/updated functions\n* new/updated functions\n* new/updated class methods\n* new/updated class attributes\n\n## What does not get updated\n\n\ud83d\udd04 _needs restart_\n\n**config** files that are side loaded with modules typically do not get updated in my experience, and I tend to restart the session.\n\n**init** class methods do not get reran, but the session does not need to be reloaded.  The class instance will just need to be re-instanciated.\n\n## Testing out the capabilities\n\n\ud83d\udca8 _Watch_ it go\n\nHere is a gif of me taking autoreload out for a test drive.  When creating the session test_autoreload.py does not even exist. From there new functions, classes, attributes, and methods are added in the file and all live reload into ipython.\n\n![](https://images.waylonwalker.com/test_autoreload4.gif)\n_for more gifs like these follow me on twitter_ [_@waylonwalker_](https://twitter.com/_WaylonWalker)\n\n## What About Jupyter Notebooks????\n\n\ud83d\udca5 _Exactly the Same_\n\nSince jupyter uses ipython in be background Jupyter will use the same `ipython_config.py` file to have autoreload enabled by default.\n\n![](https://images.waylonwalker.com/test_autoreload_jupyter.gif)\n_for more gifs like these follow me on twitter_ [_@waylonwalker_](https://twitter.com/_WaylonWalker)\n\n## Go use it now\n\nTake the splash into rapid development of python functions with minimal distance between your modules/library and your ipython/jupyter session.\n\n## Want automatic imports??\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/pyflyby/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/pyflyby-og_250x140.png\" alt=\"article cover for \n Smoother Python with automatic imports | pyflyby\n\"/>\n          <p><strong>\n Smoother Python with automatic imports | pyflyby\n</strong></p>\n      </a>\n  </div>\n\n\n> This article covers how I setup automatic imports in ipython\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/bash'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udcdd Bash Notes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/automating-my-post-starter'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Automating my Post Starter</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-08", "edit_link": "https://github.com/edit/main/pages/blog/autoreload-ipython.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573764", "datetime": "2019-09-08 00:00:00+00:00", "slug": "autoreload-ipython", "jinja": false, "output_html": "markout/autoreload-ipython/index.html", "long_description": "I have used  \ud83d\udd25 Blazing Fast \ud83d\udca5 Keeps me in the comfort of my text editor \ud83d\udc4f Allows me to use Jupyter when I need \ud83d\udc5f Extremely Reliable One of the biggest benefits that I find is that it shortens the distance between my module/library code and test code ", "super_description": "I have used  \ud83d\udd25 Blazing Fast \ud83d\udca5 Keeps me in the comfort of my text editor \ud83d\udc4f Allows me to use Jupyter when I need \ud83d\udc5f Extremely Reliable One of the biggest benefits that I find is that it shortens the distance between my module/library code and test code inside of a terminal/notebook.  Now I primarily use jupyter notebooks for the presentation aspect.  I develop code from the comfort of my editor with all of the tools I have setup, and run the functions in a notebook to get the output.  From there I ", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065ed60>, next=<frontmatter.Post object at 0x7f34506a1040>)"}, {"cover": "", "title": "SLIDES - understanding python \\*args and \\*\\*kwargs", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/python-args-kwargs-slides.md", "description": "Python  I generally post these as a carousel on LinkedIn based on a full article.  Let mw know what you think of it shown inside of a blog  See the full article", "content": "Python `*args` and `**kwargs` are super useful tools, that when used properly\ncan make you code much simpler and easier to maintain.  Large manual\nconversions from a dataset to function arguments can be packed and unpacked\ninto lists or dictionaries. Beware though, this power **can** lead to some\nreally unreadable/unusable code if done wrong.\n\nI generally post these as a carousel on LinkedIn based on a full article.  Let mw know what you think of it shown inside of a blog [@_waylonwalker](https://twitter.com/_WaylonWalker).\n\n<iframe src=\"https://www.linkedin.com/embed/feed/update/urn:li:ugcPost:6678285914826911744\" height=\"587\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n\n\n[![python args and kwargs](https://images.waylonwalker.com/python-args-kwargs.png)](https://waylonwalker.com/python-args-kwargs)\n> See the full article [here](https://waylonwalker.com/python-args-kwargs)\n\n## Slides\n\n---\n\n![1](https://images.waylonwalker.com/args-kwargs-slide-1.png)\n\n---\n\n![2](https://images.waylonwalker.com/args-kwargs-slide-2.png)\n\n---\n\n![3](https://images.waylonwalker.com/args-kwargs-slide-3.png)\n\n---\n\n![4](https://images.waylonwalker.com/args-kwargs-slide-4.png)\n\n---\n\n![5](https://images.waylonwalker.com/args-kwargs-slide-5.png)\n\n---\n\n![6](https://images.waylonwalker.com/args-kwargs-slide-6.png)\n\n---\n\n![7](https://images.waylonwalker.com/args-kwargs-slide-7.png)\n\n---\n\n![8](https://images.waylonwalker.com/args-kwargs-slide-8.png)\n\n---\n\n![9](https://images.waylonwalker.com/args-kwargs-slide-9.png)\n\n---\n\n![10](https://images.waylonwalker.com/args-kwargs-slide-10.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-atexit'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python atexit</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-args-kwargs'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>understanding python \\*args and \\*\\*kwargs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-02", "edit_link": "https://github.com/edit/main/pages/blog/python-args-kwargs-slides.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573773", "datetime": "2020-07-02 00:00:00+00:00", "slug": "python-args-kwargs-slides", "jinja": false, "output_html": "markout/python-args-kwargs-slides/index.html", "long_description": "Python  I generally post these as a carousel on LinkedIn based on a full article.  Let mw know what you think of it shown inside of a blog  See the full article ", "super_description": "Python  I generally post these as a carousel on LinkedIn based on a full article.  Let mw know what you think of it shown inside of a blog  See the full article ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f29d0>, next=<frontmatter.Post object at 0x7f3450646460>)"}, {"cover": "./pycon-cityscape.png", "title": "Pycon 2017 Roundup", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/pycon-2017-roundup.md", "description": "none", "content": "# Pycon 2017 Roundup\n\nGood afternoon fellow Data Geeks.  Last week [Pycon](https://www.youtube.com/channel/UCrJhliKNQ8g0qoE_zvL8eVg) released 141 videos of greatness.  Here are my top picks from the event.\n\n\n## \\#3 Kelsey Hightower - Keynote - Pycon 2017\n\nhttp://www.youtube.com/watch?v=u_iAXzy3xBA&t=1795s\n\n## \\#2 Al Sweigart Yes, It's Time to Learn Regular Expressions PyCon 2017\n\nhttp://www.youtube.com/watch?v=abrcJ9MpF60\n\n\n## \\#1 Trey Hunner Readability Counts PyCon 2017\n\n\nhttp://www.youtube.com/watch?v=knMg6G9_XCg\n\n## What's on Tap\n\nThis afternoon we have a cup of from one of my favorite roasters Thirty Thiry Coffee.  This\n\n[![Whats on Tap](https://www.thirty-thirtycoffee.com/wp-content/uploads/2016/09/thirty-thirty-peoria-logo.png)](http://www.thirty-thirtycoffee.com/ \"Whats on Tap\")\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-install'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Install</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-args-kwargs-slides'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>SLIDES - understanding python \\*args and \\*\\*kwargs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-05-30", "category": "Blog", "edit_link": "https://github.com/edit/main/pages/blog/pycon-2017-roundup.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573779", "datetime": "2017-05-30 00:00:00+00:00", "slug": "pycon-2017-roundup", "jinja": false, "output_html": "markout/pycon-2017-roundup/index.html", "long_description": "Good afternoon fellow Data Geeks.  Last week  http://www.youtube.com/watch?v=u http://www.youtube.com/watch?v=abrcJ9MpF60 http://www.youtube.com/watch?v=knMg6G9 This afternoon we have a cup of from one of my favorite roasters Thirty Thiry Coffee.  Th", "super_description": "Good afternoon fellow Data Geeks.  Last week  http://www.youtube.com/watch?v=u http://www.youtube.com/watch?v=abrcJ9MpF60 http://www.youtube.com/watch?v=knMg6G9 This afternoon we have a cup of from one of my favorite roasters Thirty Thiry Coffee.  This", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9d30>, next=<frontmatter.Post object at 0x7f34506a9790>)"}, {"cover": "", "title": "Kedro Install", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-install.md", "description": "Kedro comes with an  https://youtu.be/IWimEs-hHQg You must start by having your kedro project either cloned down https://waylonwalker.com/kedro-new/ this post c", "content": "Kedro comes with an `install` command to install and manage all of your\nprojects dependencies.\n\nhttps://youtu.be/IWimEs-hHQg\n\n## cd into your project directory and activate env\n\nYou must start by having your kedro project either cloned down\nfrom an existing project or created from kedro new.  Then\nactivate your environment.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-new/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-new-og_250x140.png\" alt=\"article cover for \n Kedro New\n\"/>\n          <p><strong>\n Kedro New\n</strong></p>\n      </a>\n  </div>\n\n\n> this post covers kedro new\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-environment/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-environment-og_250x140.png\" alt=\"article cover for \n kedro Virtual Environment\n\"/>\n          <p><strong>\n kedro Virtual Environment\n</strong></p>\n      </a>\n  </div>\n\n\n> This post covers creating your virtual environment for kedro\n\n## install kedro\n\nMake sure you have kedro installed in your current\nenvironment, if you dont already have it.\n\n``` bash\npip install kedro==0.17.4\n```\n\n## pip-tools\n\nKedro uses the `pip-tools` package under the hood to pin\ndependencies in a very robust way to ensure that the project\nwill continue to work on everyone's machine day, including\nproduction, day in and day out.  No matter what happens to the\ndependencies you have installed.\n\n### pip-compile\n\nThe command that kedro uses from `pip-tools` is `pip-compile`.  It will look at\nwhat you have in a `requirements.in` file, compile the dependencies down to\nexact versions, and create a requirements.txt that is fully pinned down, and\nupdatable by re-running `pip-compile`.\n\n## requirements.in\n\nIf kedro does not see a `requirements.in` file it will automatically move your\n`requirements.txt` to `requirements.in` and run `pip-compile`.\n\n``` bash\nNo requirements.in found. Copying contents from requirements.txt...\n```\n\n\n## kedro install\n\nLets go ahead and run kedro install on one of the projects we already create\nand environment for in a previous post, `kedro-conda`.\n\n``` bash\nkedro install\n```\n\nThe first time you run this on a new repo it is likely that you will run into\nthis warning about creating a new `requirements.in` file.\n\n``` bash\nNo requirements.in found. Copying contents from requirements.txt...\n```\n\n## kedro install flags\n\nKedro does let you avoid pip-compile all together, by using the\n`--no-build-reqs` flag.\n\n``` bash\nkedro install --no-build-reqs\n```\n\nIt also lets you upgrade all of your dependencies with build-reqs.  I would\nreccomend doing this on its own branch, and own pull request.  If you are\nworking on a team you want everyone to be on the same page when it comes to\ndependencies.  If you are not, you surely do not want something to break with a\nnew set of dependencies without a way of rolling back.\n\n``` bash\nkedro install --build-reqs\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-new'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro New</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-inputs'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How Kedro handles your inputs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-21", "edit_link": "https://github.com/edit/main/pages/blog/kedro-install.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573785", "datetime": "2021-08-21 00:00:00+00:00", "slug": "kedro-install", "jinja": false, "output_html": "markout/kedro-install/index.html", "long_description": "Kedro comes with an  https://youtu.be/IWimEs-hHQg You must start by having your kedro project either cloned down https://waylonwalker.com/kedro-new/ this post covers kedro new https://waylonwalker.com/kedro-environment/ This post covers creating your", "super_description": "Kedro comes with an  https://youtu.be/IWimEs-hHQg You must start by having your kedro project either cloned down https://waylonwalker.com/kedro-new/ this post covers kedro new https://waylonwalker.com/kedro-environment/ This post covers creating your virtual environment for kedro Make sure you have kedro installed in your current Kedro uses the  The command that kedro uses from  If kedro does not see a  Lets go ahead and run kedro install on one of the projects we already create The first time y", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646b20>, next=<frontmatter.Post object at 0x7f345068a9d0>)"}, {"cover": "", "title": "What is Kedro", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/what-is-kedro.md", "description": "Kedro is an unopinionated Data Engineering framework that comes with a somewhat https://youtu.be/Wf4rnFsaFFU https://waylonwalker.com/what-is-kedro-1/ This is a", "content": "Kedro is an unopinionated Data Engineering framework that comes with a somewhat\nopinionated template. It gives the user a way to build pipelines that\nautomatically take care of io through the use of abstract `DataSets` that the\nuser specifies through `Catalog` entries.  These `Catalog` entries are loaded,\nran through a function, and saved by `Nodes`.  The order that these `Nodes` are\nexecuted are determined by the `Pipeline`, which is a  **DAG**.  It's the\n`runner`'s job to manage the execution of the `Nodes`.\n\nhttps://youtu.be/Wf4rnFsaFFU\n\n---\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro-1/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-1-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> This is an updated version of my original what-is-kedro article\n\n---\n\n\n## Hot Take\n\nIf you are doing a series of operations to data with python, especially if you\nare using something as supported as pandas, you should be using a framework\nthat gives you a pipeline as a DAG and abstracts io.\n\n## Orchestrators\n\nLike I said, `kedro` is unopinionated it does determine where or how your data\nshould be ran.  The kedro team does support the following **Orchestrators**\nwith very little add on to the base template.\n\n* [Argo Workflows](https://kedro.readthedocs.io/en/stable/10_deployment/04_argo.html)\n* [Prefect](https://kedro.readthedocs.io/en/stable/10_deployment/05_prefect.html)\n* [Kubeflow Workflows](https://kedro.readthedocs.io/en/stable/10_deployment/06_kubeflow.html)\n* [AWS Batch](https://kedro.readthedocs.io/en/stable/10_deployment/07_aws_batch.html)\n* [Databricks](https://kedro.readthedocs.io/en/stable/10_deployment/08_databricks.html)\n\n## DataSets\n\nDid I say kedro is unopionated?  Datasets are what allow kedro too be so\nflexible accross a number of different python objects.  Any python object can\nbe made into a kedro dataset.  Kedro comes out of the box with **many** purpose built\n`DataSets` like storing pandas DataFrames to parquet, csv, or a sql table.  If\nkedro does not come with support for the type of python objects you work with\ndon't worry, you can for the closest option they support and build your own.\nOr if you do not want to build your own, you can use a `PickleDataSet` for\nanything.\n\n\n## Catalog\n\nYou will not often be creating your own datasets, most of what you need whould\nalready be taken care of by the kedro framework.  What you will need to do is\nto use the existing `DataSets` to build your data catalog.\n\nKedro takes care of all fo the file io for you, you simply need to use the\ncatalog to tell kedro what type of DataSet to use and any extra information\nthat `DataSet` needs.  Much of the time this is simply a filepath.\n\nTypically the catalog is specified in yaml format.  If you are not familiar\nwith yaml, I suggest\n[learnxinyminutes.com/docs/yaml/](https://learnxinyminutes.com/docs/yaml/) as a\nresource of examples.\n\n``` yaml\ntest:\n  type: pandas.CSVDataSet\n  filepath: s3://your_bucket/test.csv #\n```\n\n> Here is the most basic yaml catalog entry taken from the kedro\n> [docs](https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html?highlight=catalog)\n\n``` yaml\ncars:\n  type: pandas.CSVDataSet\n  filepath: data/01_raw/company/cars.csv\n    sep: ','\n    load_args:\n  save_args:\n    index: False\n    date_format: '%Y-%m-%d %H:%M'\n    decimal: .\n```\n\n> Here is a bit more complex example that takes in `load_args` and `save_args`\n> [docs](https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html?highlight=catalog)\n\n\n## Nodes\n\nNodes are a very core part of kedro to build the **DAG**.  These nodes are what\nprovides the definition of what catalog entries, get passed into which\nfunction, and output to another catalog entry.  \n\n``` python\nimport pandas as pd\nimport numpy as np\n\ndef clean_data(cars: pd.DataFrame,\n               boats: pd.DataFrame) -> Dict[str, pd.DataFrame]:\n    return dict(cars_df=cars.dropna(), boats_df=boats.dropna())\n\ndef halve_dataframe(data: pd.DataFrame) -> List[pd.DataFrame]:\n    return np.array_split(data, 2)\n\nnodes = [\n    node(clean_data,\n         inputs=['cars2017', 'boats2017'],\n         outputs=dict(cars_df='clean_cars2017',\n                      boats_df='clean_boats2017')),\n    node(halve_dataframe,\n         'clean_cars2017',\n         ['train_cars2017', 'test_cars2017']),\n    node(halve_dataframe,\n         dict(data='clean_boats2017'),\n         ['train_boats2017', 'test_boats2017'])\n]\n```\n\n> Here is an example of three nodes taken from their\n> [docs](https://kedro.readthedocs.io/en/stable/kedro.pipeline.node.html?highlight=node)\n\n## Pipeline\n\nThe kedro `Pipeline`, is a DAG (Directed Acyclic Graph).  It is a graph object\nthat flows in one direction.  You can slice into the pipeline using a few built\nin graph method `to_nodes`, `from_nodes`, `to_outputs`, and `from_inputs`.  You\ncan chain up these method calls since each one returns a new `Pipeline` object.\nYou can also ask a pipline for its edges with `inputs`, and `outputs`.  You can\nalso list every dataset along the way with `all_inputs` or `all_outputs`.\nLastly you can convert it back into a list of nodes with `nodes`.\n\n``` python\nfrom kedro.pipeline import Pipeline, node\n\n# using our nodes from last tim\nPipeline(nodes)\n```\n\n## Runner\n\nThe runner is the bridge between kedro and the orchestrators.  The kedro team\nprovides some basic runners for running pipelines locally, built right into the\nframework, but adding on new runners for different orchestrators is done\nthrough the use of adding in a new runner to your project.\n\n## Hooks\n\nKedro allows you to hook into a number of lifecycle methods through the use of\nthe `pluggy` framework.  Yes the one that `pytest` is built on.  There are a\nnumber of different lifecycle methods that allow us to hook in around where\nkedro is running such as `before_pipeline_run` or `after_catalog_loaded`.\n\n## Links\n\n* [Node](https://kedro.readthedocs.io/en/stable/kedro.pipeline.node.html)\n* [Pipeline](https://kedro.readthedocs.io/en/stable/kedro.pipeline.Pipeline.html#kedro.pipeline.Pipeline)\n* [Run a pipeline](https://kedro.readthedocs.io/en/stable/06_nodes_and_pipelines/04_run_a_pipeline.html)\n* [create pipelines](https://kedro.readthedocs.io/en/stable/03_tutorial/04_create_pipelines.html)\n* [kedro deployment](https://kedro.readthedocs.io/en/stable/10_deployment/01_deployment_guide.html)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/what-is-kedro-1'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/what-are-github-actions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What Are GitHub Actions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-17", "edit_link": "https://github.com/edit/main/pages/blog/what-is-kedro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573791", "datetime": "2021-08-17 00:00:00+00:00", "slug": "what-is-kedro", "jinja": false, "output_html": "markout/what-is-kedro/index.html", "long_description": "Kedro is an unopinionated Data Engineering framework that comes with a somewhat https://youtu.be/Wf4rnFsaFFU https://waylonwalker.com/what-is-kedro-1/ This is an updated version of my original what-is-kedro article If you are doing a series of operat", "super_description": "Kedro is an unopinionated Data Engineering framework that comes with a somewhat https://youtu.be/Wf4rnFsaFFU https://waylonwalker.com/what-is-kedro-1/ This is an updated version of my original what-is-kedro article If you are doing a series of operations to data with python, especially if you Like I said,  Did I say kedro is unopionated?  Datasets are what allow kedro too be so You will not often be creating your own datasets, most of what you need whould Kedro takes care of all fo the file io f", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e1f0>, next=<frontmatter.Post object at 0x7f3450691f70>)"}, {"cover": "", "title": "2020 waylonwalker.com rebrand", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/2020-rebrand.md", "description": "I documented the story of my 2020 waylonwalker.com redesign on my blog.  This post walks through the tools and inspiration for the card design.", "content": "Moving into 2020 I have been really leaning on using purple as my theme color\neverywhere more and more.   Its time for an update to my personal site, not\njust because it feels plain, not just because the cover art I am using for\ndev.to doesn't fit my current card layout, but because I feel **inspired** and\nI **want** to.\n\n## Starting point\n\n![This is what we are working with.](https://images.waylonwalker.com/2020-02-10 12-17-43_Start.png)\n\nThis is what we are working with.  It has been my card design for at least a\nyear now.  Its not bad but, its a bit play, doesnt fit my new cover art style,\nand that date is not working over top of the cover art text.\n\n* plain\n* cover art does not fit\n* I am not digging the date on cover art that also has text\n\n## Colors\n\nI have been really into using a deep purple lately.  It is a neutral color that\ndoes not get enough respect, i.e. it's not used as frequently and kinda stands\nout when used.\n\n### How I pick colors\n\nI am really bad at picking colors that go well together so for this I punt to\nutilizing others who have a better eye for this.  I commonly used the\n[instant-eyedropper](https://instant-eyedropper.com/ \"instant-eyedropper\nwebsite\") desktop app to pick colors out of my text editor theme or colors that\n[canva](https://canva.com \"Canva\") recommends.  Really just find soemthing that\nseems to match up with your taste, goes well with a color that you want to\nhighlight or anything that inspires you.\n\n![](https://images.waylonwalker.com/how-i-pick-colors.gif)\n\n### Tweaking colors\n\nOnce I get a couple of colors working well together its very common that I need\nto tweak them slightly.  Generally I hold the hue and change only the\nsaturation and lightness.  It would probably make more sense for me to use\nhsla, but for some reason I always end up with a messy pallet trying to use\nnumbers.  I typically just google color picker and use the one built into\ngoogle search.  There are probably ones built into vscode now, but I have been\ndoing this for years now.\n\n![](https://images.waylonwalker.com/how-i-adjust-colors.gif)\n\n## Gradient editor\n\nI heavily used [cssgradient.io/](https://cssgradient.io/\n\"https://cssgradient.io/\") to tweak in all of the very subtle gradients it was\nvery common for me to put the same color on both sides and slightly pulling the\ncolor a bit darker or lighter until I liked the look.\n\n![](https://images.waylonwalker.com/how-i-create-gradients.gif)\n\n### Matching Gradients\n\nI had a couple of places that needed to but up gradients against each other\nseemlessly.  I am sure there are better ways to do it.  I would likerally take\ninstant eyedropper, get the color right on the border, then plug that into\ncssgradient.io.\n\n## Progress\n\nSo far I have swapped out my card colors, and some of the text colors.  I also\nmoved the date off of the cover image as I have been putting text on my cover\nimages since starting to cross post to dev.to.  I did not like how they clashed\nand moved the text.   I also swapped over from gatsby fixed and gatsby fluid to\nmake sure that the cover art always fits the card correctly.\n\n![](https://images.waylonwalker.com/2020-02-15 09-36-31_Start.png)\n\n## Feeling Inspired\n\nHaving gradients everywhere has been becoming very popular again.  Not the\nheavy highly saturated gradients from 00's presentation software. Gentle barely\nnoticeable gradients, and soft gradients that flow smoothly from one color to\nthe next.  So many splash screens and logos include these now.\n\nI have been really inspired by the **sick** lighting that has been hot on youtube and twitch lately.  As I was gearing up to re-design my cards I saw this post by [@chrisbiscardi](https://twitter.com/chrisbiscardi \"@chrisbiscardi on twitter\") and knew right then that I needed to do a similar lighting effect on my redesign!  This was literally my jumping off point at which I started the re-design.\n\n![](https://images.waylonwalker.com/inspiration-for-new-post-card-2020-Chris-Biscardi.png)\n\n### Shadows\n\nFor this step I did not use any tooling, though I found some that could have\nbeen helpful later.  I literally just started stacking up different colors of\nbox shadow, pulling a big blur, shifting them around, and adjusting the color\nopacity until everything looks just right.  Again I went really subtle here,\ncomparing back to Chris's backdrop I am a bit more subtle than even that.\n\n``` css\nbox-shadow:\n   -8rem -6rem 8rem -6rem rgba(253, 221, 88, .2),\n   4rem 0 8rem rgba(88, 82, 185, .3),\n   .2rem .2rem 1rem rgba(0, 0, 0, .2);\n```\n\n## Complete format\n\n![](https://images.waylonwalker.com/new-post-card-2020.png)\n\n## A few days too late\n\nA few days later I saw this thread of tweets by\n[@sarah_edo](https://twitter.com/sarah_edo) and\n[@swyx](https://twitter.com/swyx) and realized that this style is called\n**neomorphism**.  There are some sweet tools referenced here, check\nthe![](https://images.waylonwalker.com/2020-rebrand-1.png)m out if you are\ngoing for this design style.\n\n[![](https://images.waylonwalker.com/2020-02-15 11-05-55_Microsoft Text Input Application.png)](https://twitter.com/sarah_edo/status/1227694049118679040?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1227694049118679040&ref_url=http%3A%2F%2F127.0.0.1%3A5500%2Findex.html \"neomorphism.io tweet from Sarah Drasner\")\n\n[![](https://images.waylonwalker.com/2020-02-15 11-06-16_Start.png)](https://twitter.com/swyx/status/1227697956587032576 \"follow up list of resources from Shawn swyx Wang\")\n\n## Tool Links\n\nLinks to all of the tools referenced in this article.\n\n[https://instant-eyedropper.com/](https://instant-eyedropper.com/ \"instant-eyedropper\")\n\n[cssgradient.io/](https://cssgradient.io/ \"https://cssgradient.io/\")\n\n[https://neumorphism.io/](https://neumorphism.io/ \"https://neumorphism.io/\")\n\n[https://github.com/sw-yx/spark-joy/blob/master/README.md#pure-css-tricks](https://github.com/sw-yx/spark-joy/blob/master/README.md#pure-css-tricks \"https://github.com/sw-yx/spark-joy/blob/master/README.md#pure-css-tricks\")\n\n[card.surge.sh](https://t.co/EFSSIiSrFj?amp=1 \"https://card.surge.sh/\")\n\n[brumm.af/shadows](https://t.co/0yyw6wMuGO?amp=1 \"https://brumm.af/shadows\")\n\n[components.ai/box-shadows](https://t.co/tQ9NijDzUI?amp=1 \"https://components.ai/box-shadows\")\n\n\n## Shameless \ud83d\udd0c\n\nI just started a newsletter\n[Join-Here](https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe\n\"https://waylonwalker.com/newsletter/\") and lets start the discussion.  I want\nto know about my audience and what they want to hear about from me.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/2021-content-strategy'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>My Content Strategy For 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/2018-retrospective'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>2018 Retrospective</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-17", "edit_link": "https://github.com/edit/main/pages/blog/2020-rebrand.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573797", "datetime": "2020-02-17 00:00:00+00:00", "slug": "2020-rebrand", "jinja": false, "output_html": "markout/2020-rebrand/index.html", "long_description": "Moving into 2020 I have been really leaning on using purple as my theme color ![ This is what we are working with.  It has been my card design for at least a plain cover art does not fit I am not digging the date on cover art that also has text I hav", "super_description": "Moving into 2020 I have been really leaning on using purple as my theme color ![ This is what we are working with.  It has been my card design for at least a plain cover art does not fit I am not digging the date on cover art that also has text I have been really into using a deep purple lately.  It is a neutral color that I am really bad at picking colors that go well together so for this I punt to Once I get a couple of colors working well together its very common that I need I heavily used  I", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691d30>, next=<frontmatter.Post object at 0x7f3450646670>)"}, {"cover": "", "title": "tmux ls", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-ls.md", "description": "https://youtu.be/LY41GLn tmux ls will list the sessions that you have running within the tmux server if https://waylonwalker.com/tmux-attach/ https://waylonwalk", "content": "https://youtu.be/LY41GLn_DGg\n\ntmux ls will list the sessions that you have running within the tmux server if\ntmux is currently running.  This is handy to combine with commands such as `attach`.\n\n``` bash\ntmux ls\n```\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-attach/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-attach-og_250x140.png\" alt=\"article cover for \n tmux attach\n\"/>\n          <p><strong>\n tmux attach\n</strong></p>\n      </a>\n  </div>\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-nav-2021'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I navigate tmux in 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-list-keys'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux list-keys</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-30", "edit_link": "https://github.com/edit/main/pages/blog/tmux-ls.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573802", "datetime": "2021-07-30 00:00:00+00:00", "slug": "tmux-ls", "jinja": false, "output_html": "markout/tmux-ls/index.html", "long_description": "https://youtu.be/LY41GLn tmux ls will list the sessions that you have running within the tmux server if https://waylonwalker.com/tmux-attach/ https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full pos", "super_description": "https://youtu.be/LY41GLn tmux ls will list the sessions that you have running within the tmux server if https://waylonwalker.com/tmux-attach/ https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679d30>, next=<frontmatter.Post object at 0x7f3450640670>)"}, {"cover": "", "title": "How linux users install a text editor", "tags": ["linux", "vim", "neovim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/install-nvim-skit.md", "description": "In honor of the neovim 0.6.0 release, I decided to do a funny skit installing https://youtu.be/64oKLphhBuo The thing that took me the longest to realize was....", "content": "In honor of the neovim 0.6.0 release, I decided to do a funny skit installing\nneovim, and fix up my install script in the process as part of my challenge to\nfix up my dotfiles.  I ran into one snag where I was not updating the repo that\nI cloned.  I moved it to the directory I now keep third-party git repos and set\nit to update with ansible.\n\nhttps://youtu.be/64oKLphhBuo\n\nThe thing that took me the longest to realize was.... I had a path issue\npointing me to an old install of the appimage over the fresh build,  fixed that\nup and now we are on 0.7.0 nightly.\n\n\n## Related Links\n\nhttps://neovim.io/\nhttps://github.com/neovim/neovim\nhttps://github.com/neovim/neovim/releases/tag/v0.6.0\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/interrogate'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Interrogate is a pretty awesome, brand new, cli for Python packages</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/install-miniconda'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to Install miniconda on linux (from the command line only)</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-30", "edit_link": "https://github.com/edit/main/pages/blog/install-nvim-skit.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573809", "datetime": "2021-11-30 00:00:00+00:00", "slug": "install-nvim-skit", "jinja": false, "output_html": "markout/install-nvim-skit/index.html", "long_description": "In honor of the neovim 0.6.0 release, I decided to do a funny skit installing https://youtu.be/64oKLphhBuo The thing that took me the longest to realize was.... I had a path issue https://neovim.io/", "super_description": "In honor of the neovim 0.6.0 release, I decided to do a funny skit installing https://youtu.be/64oKLphhBuo The thing that took me the longest to realize was.... I had a path issue https://neovim.io/", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696c10>, next=<frontmatter.Post object at 0x7f34506b3040>)"}, {"cover": "", "title": "Building Rich a Dev Server", "tags": ["python", "webdev", "markata"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/markata-dev-server.md", "description": "I I am working on a project in which I want to have a dev automatic port number auto-restart display  I am very novice at best when it comes to sockets, the fol", "content": "**Draft Post**\n\nI've really been digging [@willmcgugan's](https://twitter.com/willmcgugan)\n[rich](https://github.com/willmcgugan/rich) library for creating TUI like\ninterfaces in python.  I've only recently started to take full advantage of it.\n\n## Dev Server\n\nI am working on a project in which I want to have a dev\nserver running continuously in the background.  I really\nlike dev servers theat automatically chooose an unused\nport and list out the running pid so that I can kill it if\nI need to.\n\n* automatic port number\n* auto-restart\n* display _( port, pid, uptime )_\n\n\n## finding the port\n\nI am very novice at best when it comes to sockets, the following function came\nfrom searching StackOverflow for how to tell if a port is in use.  I\nrecursively check if a port is being used, if it is I increment by one until I\nfind an unused port to return.\n\n``` python\ndef find_port(port=8000):\n    \"\"\"Find a port not in ues starting at given port\"\"\"\n    import socket\n\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n        if s.connect_ex((\"localhost\", port)) == 0:\n            return find_port(port=port + 1)\n        else:\n            return port\n```\n\n## The Dev Server\n\nI am going super basic here and just running `python -m http.server <port>`.\nIt works for what I need it for, it hosts my files for the browser to display,\nand if I try a route without an index.html it gives me a decent file list.\n\n``` python\nimport subprocess\n\nproc = subprocess.Popen([\"python\", \"-m\", \"http.server\", str(find_port)],)\n```\n\n> Optionally if you wanted a live-reload you could opt into `live-reload` from\n> pypi.\n\nThe above snippet will start my dev server on the first open port starting at\n`8000` and give me a `subprocess.Popen` object.  From there I can see a bit of\ninformation about the process.\n\n``` python\n# returns the process id\nproc.pid\n# returns none if proc is still running\nproc.poll()\n```\n\n## Rich\n\n_a quick aside_\n\n[rich](https://github.com/willmcgugan/rich) will assist in creating a beautiful\nterminal interface with minimal effort.  Here we are going to build a reuable\ncomponent to later use inside of a rich layout.  When using `rich.print` or the\nlive display rich will execute a `__rich__` method on our objects.\n\n\n``` python\nclass Min:\n    def __rich__(self) -> Panel:\n        return Panel(\"hello world\")\n\n\ndef make_min_layout():\n    layout = Layout()\n    layout.split(Layout(name=\"upper\"), Layout(name=\"lower\"))\n    layout[\"upper\"].update(Min())\n    layout[\"lower\"].update(Min())\n\n    return layout\n```\n\n* `__repr__` - custom method\n* `Panel` - box around a renderable\n* `Layout` - split and nest renderables\n\nThere are many components to rich, but the basics I am using so far here are\nmaking my own components with a `__repr__` method, `Panel`, and `Layout`.\nPanel is an object that will by default take up as much space as it can and\ndraw a rounded border around itself.  Layout is an object that accepts other\nrich renderables, can be split and nested.\n\n## Final Result\n\nHere is a image of the final result running.  Here I have\nthe server running on the top split and kill the running\nserver several times.  You will see a quick flash of <span\nstyle='color: red'>server died</span> followed by the\nsever back up and running on a new pid.\n\n<video controls muted autoplay playsinline loop=true width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/markata-dev-server-a1.webm\"\n            type=\"video/webm\">\n    <source src=\"https://images.waylonwalker.com/markata-dev-server-a1.mp4\"\n            type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n<div class='speed-control'>\n    <button onclick=\"change_speed(.25)\" >\n        speed up\n    </button>\n    <button onclick=\"change_speed(-.25)\" >\n        slow down\n    </button>\n</div>\n\n \n``` python\n\nclass Server:\n    def __init__(self, auto_restart=True):\n\n        self.port = find_port()\n        self.start_server()\n        self.auto_restart = auto_restart\n\n    def start_server(self):\n        import subprocess\n\n        self.proc = subprocess.Popen(\n            [\"python\", \"-m\", \"http.server\", str(self.port)],\n            stdout=subprocess.PIPE,\n            stderr=subprocess.PIPE,\n        )\n\n    def __rich__(self) -> Panel:\n        if not self.proc.poll():\n            return Panel(\n                f\"[green]serving on port: [gold1]{self.port} [green]using pid: [gold1]{self.proc.pid}[/]\"\n            )\n        else:\n            if self.auto_restart:\n                self.start_server()\n\n            return Panel(f\"[red]server died\")\n```\n\n## Future State\n\nFuture state this is going to be integrated into the main layout for my\npersonal website SSG markata.\n\n![markata live server](https://images.waylonwalker.com/markata-live-server-a2.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/markata-todoui-live-replay-4-6-2022'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>LIVE-REPLAY - Python dev | Markata todoui | 4/6/2022</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/maintianing-multiple-git-remotes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Maintianing multiple git remotes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-27", "edit_link": "https://github.com/edit/main/pages/blog/markata-dev-server.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573814", "datetime": "2021-03-27 00:00:00+00:00", "slug": "markata-dev-server", "jinja": false, "output_html": "markout/markata-dev-server/index.html", "long_description": "I I am working on a project in which I want to have a dev automatic port number auto-restart display  I am very novice at best when it comes to sockets, the following function came I am going super basic here and just running  Optionally if you wante", "super_description": "I I am working on a project in which I want to have a dev automatic port number auto-restart display  I am very novice at best when it comes to sockets, the following function came I am going super basic here and just running  Optionally if you wanted a live-reload you could opt into  The above snippet will start my dev server on the first open port starting at __repr__ Panel Layout There are many components to rich, but the basics I am using so far here are Here is a image of the final result r", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c0d0>, next=<frontmatter.Post object at 0x7f345066c280>)"}, {"cover": "./d3-cropped.png", "title": "D3 Day 4", "tags": ["webdev"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/d3-day4.md", "description": "none", "content": "<!--\n<script src='https://cdnjs.cloudflare.com/ajax/libs/d3/4.13.0/d3.min.js'></script>\n<style>\n    #content{\n        max-width: 800px;\n        margin: 0 auto;\n    }\n    .chart {\n        display: block;\n        padding: 10px;\n        background: peachpuff;\n        /* transition: all 500ms */\n    }\n\n    .bar {\n        height: 30px;\n        margin: 5px;\n        background: teal;\n    }\n    .bar:hover{\n        background: #444;\n        }\n    button {\n        background: rgb(240, 196, 211);\n        border: none;\n        font-size: 1.3rem;\n        border-radius: 5px;\n        padding: .2rem 1rem;\n        margin-bottom: 1rem\n    }\n    .on {\n        background: palevioletred;\n    }\n    .big {\n    width: 100%\n    }\n    .small {\n    width: 50%\n    }\n</style>\n -->\n\n## Learn D3 in 5 days\n\nFor what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere!  These are just stepping stones into real custom visualizations that cannot be done in any other tool today.  I still cannot explain how excited I am to say **\"I created that in d3!!!\"**\n### Todays Result\n\nToday I will be learning about d3 scales, and adding them to the bar chart that we created yesterday.  Follow along as I try to create something interesting.\n\n![today's_result](https://images.waylonwalker.com/d3-day4.gif)\n\n## Recall Example 3 from yesterday\n_maybe a few days ago.... give me a break I have a lot of other priorities_\n\nIn [yesterdays](https://waylonwalker.com/d3-day3) post we created a working example of a horizontal bar chart that shows grades for a set of 5 students that are all in two classes; 'Math' and 'Science'.  The chart is interactive, and will switch subjects at the press of a button.\n\n\n![d3 day 3 final result](https://images.waylonwalker.com/d3-day3.gif)\n<!--\n<div id=\"chart3\" class='chart'>\n    <button class='math' onclick=\"render3('math')\">Math</button>\n    <button class='science' onclick=\"render3('science')\">Science</button>\n</div>\n\n<script>\n    const data3 = [\n        { name: 'Alice', math: 93, science: 84 },\n        { name: 'Bob', math: 73, science: 82 },\n        { name: 'James', math: 92, science: 78 },\n        { name: 'Steve', math: 77, science: 93 },\n        { name: 'Jordan', math: 80, science: 68 },\n    ]\n\n    function render3(subject) {\n        d3.select('#chart3')\n            .selectAll('button')\n            .classed('on', false)\n        d3.select('#chart3')\n            .select('.' + subject)\n            .attr('class', subject + ' on')\n\n        const bars = d3.select('#chart3')\n            .selectAll('div')\n            .data(data3, function(d) {\n                return d.name\n            })\n        const newBars = bars.enter()\n            .append('div')\n                .attr('class', 'bar')\n                .style('width', 0)\n        newBars.merge(bars)\n            .transition()\n            .style('width', function(d) {\n                return (d[subject]) + 'px'\n            })\n    }\n    render3('math')\n</script>\n -->\n## Add Scales\n\nOne issue with that plot was that the scale was created by hand.  In todays example we will let d3 take care of the scale for us.  We will define a linear scale with an input range and an output range.\n\n```javascript\nlet xScale = d3.scaleLinear()\n    .domain([50, 100])\n    .range([0, width()]);\n```\n\nThen we will change the following .style method call from ```return (d[subject]-50 * 3) + 'px'``` to ```return xScale(d[subject]) = 'px'```.\n\n```javascript\nnewBars.merge(bars)\n    .transition()\n    .style('width', function(d) {\n        return xScale(d[subject]) + 'px'\n    })\n    .style('height', barHeight())\n```\n### Keeping it dry\n\nNote that if we had many different elements using the same scale with this code it would only exist in one place ```xScale``` and not separately in each style function.  This makes our viz much more maintainable as we may see a need to change the scales in the future.\n\n### Adding Some Flair\n\nTo give this viz some simple flair, and a reason that we might want to use scales.  I added a new set of buttons to allow us to change the chart size and see the viz respond.  Check out the markup in the Final Markup section if your interested in that.  I do want to point out that I used the d3 selectors to add the chart size classes to the chart.\n\nThe select api is very jQuery inspired, but the method chaining syntax feels very natural to me as my main data tools is pandas. The d3 methods feel very much like method chaining in python.  In fact, besides the way the function is defined it reads very much like python.  This feels very comfortable to me as I am always loosing track of braces and semicolons when writing javascript!\n\n```javascript\nfunction chart4_size(size) {\n    d3.select('#sizes')\n        .selectAll('button')\n        .classed('on', false)\n    d3.select('#sizes')\n        .select('.chart4-' + size + '-btn')\n        .classed('on', true)\n    d3.select('#chart4')\n        .attr('class', 'chart ' + size)\n    subject = document\n        .getElementById('subjects')\n        .querySelector('.on')\n        .classList[0]\n    render4(subject)\n}\n```\n\nThis is the css that we are using to change the size of our chart figure.  Nothing fancy, just make full width or half width to show the responsiveness of our chart.\n\n``` css\n.big {\nwidth: 100%\n}\n.small {\nwidth: 50%\n}\n```\n\n## Final Result\n<!--\n<div id='buttons'>\n    <h3>Subject</h3>\n    <div id='subjects'>\n        <button class='math' onclick=\"render4('math')\">Math</button>\n        <button class='science' onclick=\"render4('science')\">Science</button>\n    </div>\n    <h3>Chart Size</h3>\n    <div id='sizes'>\n        <button class='chart4-big-btn' onclick='chart4_size(\"big\")')>Large</button>\n        <button class='chart4-small-btn' onclick='chart4_size(\"small\")'>Small</button>\n    </div>\n</div>\n\n<div id=\"chart4\" class='chart'></div>\n\n\n\n<script>\n    const data4 = [\n        { name: 'Alice', math: 93, science: 84},\n        { name: 'Bob', math: 73, science: 82 },\n        { name: 'James', math: 92, science: 78},\n        { name: 'Steve', math: 77, science: 93 },\n        { name: 'Jordan', math: 80, science: 68 },\n    ]\n\n    chart4 = document.getElementById('chart4')\n\n\n    let width = function() {\n        return chart4.getBoundingClientRect().width\n        }\n    let height = function() {\n        return chart4.getBoundingClientRect().height\n        }\n    let barHeight = function() {\n        height() /  data4.length + 'px'\n        }\n\n    function chart4_size(size) {\n        d3.select('#sizes')\n            .selectAll('button')\n            .classed('on', false)\n        d3.select('#sizes')\n            .select('.chart4-' + size + '-btn')\n            .classed('on', true)\n        d3.select('#chart4')\n            .attr('class', 'chart ' + size)\n        subject = document\n            .getElementById('subjects')\n            .querySelector('.on')\n            .classList[0]\n        render4(subject)\n    }\n\n    function render4(subject) {\n\n        d3.select('#subjects')\n            .selectAll('button')\n            .classed('on', false);\n\n        d3.select('#subjects')\n            .select('.' + subject)\n            .attr('class', subject + ' on');\n\n        let xScale = d3.scaleLinear()\n            .domain([50, 100])\n            .range([0, width()]);\n\n        const bars = d3.select('#chart4')\n            .selectAll('div')\n            .data(data4, function(d) {\n                return d.name\n            })\n        const newBars = bars.enter()\n            .append('div')\n                .attr('class', 'bar')\n                .style('width', 0)\n\n        newBars.merge(bars)\n            .transition()\n            .style('width', function(d) {\n                return xScale(d[subject]) + 'px'\n            })\n            .style('height', barHeight())\n    }\n    render4('math')\n    chart4_size('big')\n</script>\n -->\n\n![d3 day4 final result](https://images.waylonwalker.com/d3-day4.gif)\n### Final Markup\n\nMost of the markup here is for the buttons and the callbacks.  This is not really the focus of today's exercise.  I have included the html here so that you can see how the buttons are tied in to the Final Script.\n\n```html\n<div id='buttons'>\n    <h3>Subject</h3>\n    <div id='subjects'>\n        <button class='math' onclick=\"render4('math')\">Math</button>\n        <button class='science' onclick=\"render4('science')\">Science</button>\n    </div>\n    <h3>Chart Size</h3>\n    <div id='sizes'>\n        <button class='chart4-big-btn' onclick='chart4_size(\"big\")')>Large</button>\n        <button class='chart4-small-btn' onclick='chart4_size(\"small\")'>Small</button>\n    </div>\n</div>\n\n<div id=\"chart4\" class='chart'></div>\n```\n### Final Style\n``` css\n#content{\n    max-width: 800px;\n    margin: 0 auto;\n}\n.chart {\n    display: block;\n    padding: 10px;\n    background: peachpuff;\n    /* transition: all 500ms */\n}\n\n.bar {\n    height: 30px;\n    margin: 5px;\n    background: teal;\n}\n.bar:hover{\n    background: #444;\n    }\nbutton {\n    background: rgb(240, 196, 211);\n    border: none;\n    font-size: 1.3rem;\n    border-radius: 5px;\n    padding: .2rem 1rem;\n    margin-bottom: 1rem\n}\n.on {\n    background: palevioletred;\n}\n.big {\nwidth: 100%\n}\n.small {\nwidth: 50%\n}\n```\n### Final script\n\nHere is the final script so that you showing everything put together.  Yes this is a lot of code for a bar chart without scales, click events, titles, tooltips, or anything fancy, but I need to start somewhere.  d3.js is the language that builds fully custom vizualizations like no other tool today, and by doing a bit of practice now I will be ready for some serious stuff in the future.\n\n``` javascript\n// Setup the data\nconst data4 = [\n    { name: 'Alice', math: 93, science: 84},\n    { name: 'Bob', math: 73, science: 82 },\n    { name: 'James', math: 92, science: 78},\n    { name: 'Steve', math: 77, science: 93 },\n    { name: 'Jordan', math: 80, science: 68 },\n]\n\n// Create some vanilla js functions to get the size of the chart\nchart4 = document.getElementById('chart4')\n\nlet width = function() {\n    return chart4.getBoundingClientRect().width\n    }\nlet height = function() {\n    return chart4.getBoundingClientRect().height\n    }\nlet barHeight = function() {\n    height() /  data4.length + 'px'\n    }\n\n// create a function to update the size of the chart\n// Size is updated by adding a css class big or small\n// Note: the  render function is called at the end to ensure the scale is re-rendered\nfunction chart4_size(size) {\n    d3.select('#sizes')\n        .selectAll('button')\n        .classed('on', false)\n    d3.select('#sizes')\n        .select('.chart4-' + size + '-btn')\n        .classed('on', true)\n    d3.select('#chart4')\n        .attr('class', 'chart ' + size)\n    subject = document\n        .getElementById('subjects')\n        .querySelector('.on')\n        .classList[0]\n    render4(subject)\n}\n\n// render the plot\n// Note: I did need to bring the xScale and the width() call  into the render\n// function to ensure that the scale was updated each time\nfunction render4(subject) {\n\n    d3.select('#subjects')\n        .selectAll('button')\n        .classed('on', false);\n\n    d3.seect('#subjects')\n        .select('.' + subject)\n        .attr('class', subject + ' on');\n\n    let xScale = d3.scaleLinear()\n        .domain([0, 100])\n        .range([50, width()]);\n\n    const bars = d3.select('#chart4')\n        .selectAll('div')\n        .data(data4, function(d) {\n            return d.name\n        })\n    const newBars = bars.enter()\n        .append('div')\n            .attr('class', 'bar')\n            .style('width', 0)\n\n    newBars.merge(bars)\n        .transition()\n        .style('width', function(d) {\n            return xScale(d[subject]) + 'px'\n        })\n        .style('height', barHeight())\n}\n\n// create initial render and size\nrender4('math')\nchart4_size('big')\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-auto-commit-action-review'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Review of the git-auto-commit-action</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/markata-dev-server'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Building Rich a Dev Server</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-05-06", "category": "Viz", "summary": "Today we are adding scale to day 3's example horizontal bar chart.", "edit_link": "https://github.com/edit/main/pages/blog/d3-day4.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573820", "datetime": "2018-05-06 00:00:00+00:00", "slug": "d3-day4", "jinja": false, "output_html": "markout/d3-day4/index.html", "long_description": "For what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere Today I will be learning about d3 scales, and adding them to the bar chart that we created yesterday.  Follow along as I try to create somethin", "super_description": "For what we are creating in these posts d3 is way overkill and very verbose, but I need to start somewhere Today I will be learning about d3 scales, and adding them to the bar chart that we created yesterday.  Follow along as I try to create something interesting. In  One issue with that plot was that the scale was created by hand.  In todays example we will let d3 take care of the scale for us.  We will define a linear scale with an input range and an output range. Then we will change the follo", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae460>, next=<frontmatter.Post object at 0x7f34506a9ee0>)"}, {"cover": "", "title": "Review of the git-auto-commit-action", "tags": ["actions"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-auto-commit-action-review.md", "description": "It Check out the repo for  It This has been by far the easiest way to commit back to a repo that I have seen.  Other patterns often require fully setting up the", "content": "It's a really cool GitHub action that will automatically commit files changed\nduring the action. I was using this to render a new readme based on a template.\n\nCheck out the repo for [git-auto-commit-action](https://github.com/stefanzweifel/git-auto-commit-action).\n\nIt's a really cool GitHub action that will automatically commit files changed during the action.  I was using this to render a new readme based on a template.\n\nThis has been by far the easiest way to commit back to a repo that I have seen.  Other patterns often require fully setting up the git user and everything.  While it's not all that hard, this action already has all of that covered.\n\nYou must give it a commit message and thats it.  Optionally you can configure a number of things.  Its possible to configure the `commit_user_name`, `commit_user_email`, and `commit_author`.  I often also scope the `file_pattern` to a certain subset of files.\n\n---\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/github-actions-syntax/'>\n  <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/github-actions-syntax-rm.png\"\n    alt=\"GitHub Actions Syntax article card\"\n  />\n  </a>\n</p>\n\n> If you're new to actions check out this article on using actions.\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/github-actions-syntax/'>\n  <img\n    style='width:500px; max-width:80%; margin: auto;'\n    src=\"https://images.waylonwalker.com/github-actions-syntax-rm.png\"\n    alt=\"GitHub Actions Syntax article card\"\n  />\n  </a>\n</p>\n\n> If you're new to actions check out this article on using actions.\n\n---\n\nYou do need to be careful to checkout the repo just a bit different than normal.\n\n\n## Limitations & Gotchas\n_directly from the repo_\n\n### Checkout the correct branch\n\nYou must use `action/checkout@v2` or later versions to checkout the repository. In non-push events, such as pull_request, make sure to specify the ref to checkout:\n\n``` yaml\n- uses: actions/checkout@v2\n  with:\n    ref: ${{ github.head_ref }}\n```\n\nYou have to do this do avoid that the `checkout`-Action clones your repository in a detached state.\n\n## Usage\n_from the repo_\n\n``` yaml\n- uses: stefanzweifel/git-auto-commit-action@v4\n  with:\n    # Required\n    commit_message: Apply automatic changes\n\n    # Optional branch to push to, defaults to the current branch\n    branch: feature-123\n\n    # Optional options appended to `git-commit`\n    # See https://git-scm.com/docs/git-commit for a list of available options\n    commit_options: '--no-verify --signoff'\n\n    # Optional glob pattern of files which should be added to the commit\n    # See the `pathspec`-documentation for git\n    # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203\n    # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec\n    file_pattern: src/*.js tests/*.js\n\n    # Optional local file path to the repository\n    repository: .\n\n    # Optional commit user and author settings\n    commit_user_name: My GitHub Actions Bot\n    commit_user_email: my-github-actions-bot@example.org\n    commit_author: Author <actions@github.com>\n\n    # Optional tag message\n    # Action will create and push a new tag to the remote repository and the defined branch\n    tagging_message: 'v1.0.0'\n\n    # Optional options appended to `git-push`\n    push_options: '--force'\n\n    # Optional: Disable dirty check and always try to create a commit and push\n    skip_dirty_check: true\n\n  ```\n\n## More Actions\n\nIf you're new to actions check out these articles on using actions.\n\n<TABLE>\n  <TR>\n    <TD>\n      <a href='https://waylonwalker.com/four-github-actions-website/'>\n      <img\n        style='width:250px; max-width:80%; margin: auto; float: left'\n        src=\"https://images.waylonwalker.com/four-github-actions-website-rm.png\"\n        alt=\"GitHub Actions Syntax article card\"\n        />\n      </a>\n    </TD>\n    <TD>\n      <a href='https://waylonwalker.com/four-github-actions-python/'>\n      <img\n        style='width:250px; max-width:80%; margin: auto; float: right;'\n        src=\"https://images.waylonwalker.com/four-github-actions-python-rm.png\"\n        alt=\"GitHub Actions Syntax article card\"\n        />\n      </a>\n    </TD>\n  </TR>\n</TABLE>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-diff-branches'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Today I learned `git diff feature..main`</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gatsby-scripts-with-onload'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gatsby Scripts with onload</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-03", "edit_link": "https://github.com/edit/main/pages/blog/git-auto-commit-action-review.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573828", "datetime": "2020-08-03 00:00:00+00:00", "slug": "git-auto-commit-action-review", "output_html": "markout/git-auto-commit-action-review/index.html", "long_description": "It Check out the repo for  It This has been by far the easiest way to commit back to a repo that I have seen.  Other patterns often require fully setting up the git user and everything.  While it You must give it a commit message and thats it.  Optio", "super_description": "It Check out the repo for  It This has been by far the easiest way to commit back to a repo that I have seen.  Other patterns often require fully setting up the git user and everything.  While it You must give it a commit message and thats it.  Optionally you can configure a number of things.  Its possible to configure the  If you If you You do need to be careful to checkout the repo just a bit different than normal. You must use  You have to do this do avoid that the  If you", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506528b0>, next=<frontmatter.Post object at 0x7f3452909910>)"}, {"cover": "", "title": "Create Configurable Kedro Hooks", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-class-hooks.md", "description": "There are two main ways to create kedro hooks, with modules and classes.  Each Class hooks seem a bit special as they give you a way to configure them so that t", "content": "There are two main ways to create kedro hooks, with modules and classes.  Each\none still uses the same verbiage as the function/method names.\n\nClass hooks seem a bit special as they give you a way to configure them so that they are a bit more generally useful.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n>\n> If you are completely unsure what kedro is be sure to check out my [what is kedro](https://waylonwalker.com/wike) post\n\n## Installation\n\n.create a new environment manager of choice.  Here I will use `conda`. Then we will install `kedro` from pypi.\n\n``` bash\nconda create -n kedro_class_hooks -y\nconda activate kedro_class_hooks # may also be source activate kedro_class_hooks or activate kedro_class_hooks\npip install kedro\n```\n\n## Create a sample project\n\n> ### Kedro new\n>\n> For more details check out my full post on [kedro new](https://waylonwalker.com/knew)\n\nFor this post I really just want a working pipeline as fast as possible.  For this I am going to use iris pipeline that is generated from the `kedro new` command in the cli.  It's **important** that you answer `y` to create an example pipeline.\n\n> ### Hold On \u270b\n>\n> Did you create a separate environment for this?  Please do.\n\n``` bash\nkedro new\n```\n\nAfter you run the `kedro new` command it will ask a series of questions.  \ud83d\udc47 Here is how I answered them.\n\n``` bash\nProject Name:\n=============\nPlease enter a human readable name for your new project.\nSpaces and punctuation are allowed.\n [New Kedro Project]: Kedro Class Hooks\nRepository Name:\n================\nPlease enter a directory name for your new project repository.\nAlphanumeric characters, hyphens and underscores are allowed.\nLowercase is recommended.\n [kedro-class-hooks]:\nPython Package Name:\n====================\nPlease enter a valid Python package name for your project package.\nAlphanumeric characters and underscores are allowed.\nLowercase is recommended. Package name must start with a letter or underscore.\n [kedro_class_hooks]:\nGenerate Example Pipeline:\n==========================\nDo you want to generate an example pipeline in your project?\nGood for first-time users. (default=N)\n [y/N]: y\nChange directory to the project generated in /mnt/c/temp/kedro-hooks/\nA best-practice setup includes initialising git and creating a virtual environment before running `kedro install` to install project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/\n```\n\n### Install the Project\n\nNext install the project itself and all of its dependencies with the `kedro install` command.\n\n``` bash\ncd kedro-hooks\nkedro install\n```\n\n### \ud83c\udfc3\u200d\u2640\ufe0f Run the pipeline\n\nBefore we start developing any hooks lets make sure everything is set up correctly by running the pipeline with `kedro run`.\n\n``` bash\nkedro run\n```\n\n## class hook without `self`\n\nA kedro class-based hook is a class with methods using the kedro lifecycle names, decorated with `@hook_impl`, If we create a class-based kedro hook without `self` in the method calls, we simply pass the hook class itself into the hooks list. And we are off.  Kedro will call each method as it hits that point in its lifecycle.  It will pass any of the possible arguments, see arguments below.  Each method has a different set of possible arguments.  You don't need to ask for all of them, but I did here so that you could see them.\n\n``` python\nfrom kedro.framework.hooks import hook_impl\n\nclass debug_hook:\n    \"\"\"debugs all kedro hook points\"\"\"\n\n\t@staticmethod\n    @hook_impl\n    def before_pipeline_run(run_params, pipeline, catalog):\n        \"pops into a debugger before pipeline run\"\n        print('I hooked in right before the pipeline run')\n        if self.should_before_pipeline_run:\n            breakpoint()\n\n\t@staticmethod\n    @hook_impl\n    def after_pipeline_run(run_params, pipeline, catalog):\n        \"pops into a debugger after pipeline run\"\n        print('I hooked in right after the pipeline run')\n        breakpoint()\n\n\t@staticmethod\n    @hook_impl\n    def on_pipeline_error(error, run_params, pipeline, catalog):\n        \"pops into a debugger on pipeline error\"\n        print('I hooked into the pipeline during an error')\n        breakpoint()\n\n\t@staticmethod\n    @hook_impl\n    def after_catalog_created(catalog, conf_catalog, conf_creds, feed_dict, save_version, load_versions, run_id):\n        \"pops into a debugger after catalog created\"\n        print('I hooked in right after the catalog created')\n        breakpoint()\n\n\t@staticmethod\n    @hook_impl\n    def before_node_run(node, catalog, inputs, is_async, run_id):\n        \"pops into a debugger before node run\"\n        print('I hooked in right before the node run')\n        breakpoint()\n\n\t@staticmethod\n    @hook_impl\n    def after_node_run(node, catalog, inputs, outputs, is_async, run_id):\n        \"pops into a debugger after node run\"\n        print('I hooked in right after the node run')\n        breakpoint()\n\n\t@staticmethod\n    @hook_impl\n    def on_node_error(error, node, catalog, inputs, is_async, run_id):\n        \"pops into a debugger on node error\"\n        print('I hooked into the node during an error')\n        breakpoint()\n```\n\n#### Implement the hook object\n\nWith this version of the hook it gets added to the `ProjectContext` as the class itself, not an instance.\n\n``` python\nclass ProjectContext(KedroContext):\n    \"\"\"Users can override the remaining methods from the parent class here,\n    or create new ones (e.g. as required by plugins)\n    \"\"\"\n\n    project_name = \"kedro_class_hooks\"\n    # `project_version` is the version of kedro used to generate the project\n    project_version = \"0.16.1\"\n    package_name = \"kedro_class_hooks\"\n\n    hooks = [\n        debug_hook\n    ]\n```\n\n## Generalizing debug_hook\n\nIf we want to generalize the debug hook and make it a bit more re-usable across all of our projects, we can include the `self` argument, on each method and a `__init__` method in which we can configure our hook.  This will make the hook configurable.  We can now create an instance of the `debug_hook` class, and tell it which lifecycle points should trigger the debugger.\n\n``` python\n\"\"\" Kedro Debug Hook module \"\"\"\nfrom kedro.framework.hooks import hook_impl\n\nclass debug_hook:\n    \"\"\" Kedro Debug Hook\n\n    Opens a debugger at any hook-able point of your kedro projects lifecycle.\n    debug_hook is applied by adding it to the pipeline and setting the desired\n    debug points to true.\n\n    Examples:\n\n        >>> hooks = [debug_hook(should_debug_all=True)]\n        >>> hooks = [debug_hook(should_debug_before_pipeline_run=True)]\n\n    Args:\n        should_debug_all (bool): overrides all points Defaults to False\n        should_debug_before_pipeline_run (bool): opens a debugger\n            before_pipeline_run if True Defaults to False\n        should_debug_after_pipeline_run (bool): opens a debugger\n            after_pipeline_run if True Defaults to False\n        should_debug_on_pipeline_error (bool): opens a debugger\n            on_pipeline_error if True Defaults to False\n        should_debug_before_node_run (bool): opens a debugger\n            before_node_run if True Defaults to False\n        should_debug_after_node_run (bool): opens a debugger\n            after_node_run if True Defaults to False\n        should_debug_on_node_error (bool): opens a debugger\n            on_node_error if True Defaults to False\n        should_debug_after_catalog_created (bool): opens a debugger\n            after_catalog_created if True Defaults to False\n\n    \"\"\"\n    def __init__(\n        self,\n        should_debug_all=False,\n        should_debug_before_pipeline_run=False,\n        should_debug_after_pipeline_run=False,\n        should_debug_on_pipeline_error=False,\n        should_debug_before_node_run=False,\n        should_debug_after_node_run=False,\n        should_debug_on_node_error=False,\n        should_debug_after_catalog_created=False,\n    ):\n        self.should_debug_before_pipeline_run = (\n            should_debug_before_pipeline_run or should_debug_all\n        )\n        self.should_debug_after_pipeline_run = (\n            should_debug_after_pipeline_run or should_debug_all\n        )\n        self.should_debug_on_pipeline_error = (\n            should_debug_on_pipeline_error or should_debug_all\n        )\n        self.should_debug_before_node_run = (\n            should_debug_before_node_run or should_debug_all\n        )\n        self.should_debug_after_node_run = (\n            should_debug_after_node_run or should_debug_all\n        )\n        self.should_debug_on_node_error = should_debug_on_node_error or should_debug_all\n        self.should_debug_after_catalog_created = (\n            should_debug_after_catalog_created or should_debug_all\n        )\n\n    @hook_impl\n    def before_pipeline_run(self, run_params, pipeline, catalog):\n        \"pops into a debugger before pipeline run\"\n        if self.should_debug_before_pipeline_run:\n            breakpoint()\n\n    @hook_impl\n    def after_pipeline_run(self, run_params, pipeline, catalog):\n        \"pops into a debugger after pipeline run\"\n        if self.should_debug_after_pipeline_run:\n            breakpoint()\n\n    @hook_impl\n    def on_pipeline_error(self, error, run_params, pipeline, catalog):\n        \"pops into a debugger on pipeline error\"\n        if self.should_debug_on_pipeline_error:\n            breakpoint()\n\n    @hook_impl\n    def after_catalog_created(\n        self,\n        catalog,\n        conf_catalog,\n        conf_creds,\n        feed_dict,\n        save_version,\n        load_versions,\n        run_id,\n    ):\n        \"pops into a debugger after catalog created\"\n        if self.should_debug_after_catalog_created:\n            breakpoint()\n\n    @hook_impl\n    def before_node_run(self, node, catalog, inputs, is_async, run_id):\n        \"pops into a debugger before node run\"\n        if self.should_debug_before_node_run:\n            breakpoint()\n\n    @hook_impl\n    def after_node_run(self, node, catalog, inputs, outputs, is_async, run_id):\n        \"pops into a debugger after node run\"\n        if self.should_debug_after_node_run:\n            breakpoint()\n\n    @hook_impl\n    def on_node_error(self, error, node, catalog, inputs, is_async, run_id):\n        \"pops into a debugger on node error\"\n        if self.should_debug_on_node_error:\n            breakpoint()\n```\n\n#### implement the hook instance\n\nWhen `self` is used in the method calls we must pass an instance of the `debug_hook` into the hooks list, not the class itself.\n\n``` python\nclass ProjectContext(KedroContext):\n    \"\"\"Users can override the remaining methods from the parent class here,\n    or create new ones (e.g. as required by plugins)\n    \"\"\"\n\n    project_name = \"kedro_class_hooks\"\n    # `project_version` is the version of kedro used to generate the project\n    project_version = \"0.16.1\"\n    package_name = \"kedro_class_hooks\"\n\n    hooks = [debug_hook(should_debug_all=True)]\n```\n\n## Final thoughts\n\nHooks are an amazing addition to the kedro framework that will allow the community to make big changes to how their kedro project gets ran without needing to change kedro itself.  Using a hook class with self can make them so much more configurable, and reusable across different projects without a lot of extra code. Personally I still really like the module method that we used in [kedro-preflight](https://waylonwalker.com/creating-the-kedro-preflight-hook/).\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-environment'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>kedro Virtual Environment</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-catalog-search'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to find things in your kedro catalog</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-23", "edit_link": "https://github.com/edit/main/pages/blog/kedro-class-hooks.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573834", "datetime": "2020-05-23 00:00:00+00:00", "slug": "kedro-class-hooks", "jinja": false, "output_html": "markout/kedro-class-hooks/index.html", "long_description": "There are two main ways to create kedro hooks, with modules and classes.  Each Class hooks seem a bit special as they give you a way to configure them so that they are a bit more generally useful. https://waylonwalker.com/what-is-kedro If you are com", "super_description": "There are two main ways to create kedro hooks, with modules and classes.  Each Class hooks seem a bit special as they give you a way to configure them so that they are a bit more generally useful. https://waylonwalker.com/what-is-kedro If you are completely unsure what kedro is be sure to check out my  .create a new environment manager of choice.  Here I will use  For more details check out my full post on  For this post I really just want a working pipeline as fast as possible.  For this I am g", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c9d0>, next=<frontmatter.Post object at 0x7f345067f8b0>)"}, {"cover": "", "title": "tmux display-message", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-display-message.md", "description": "https://youtu.be/utfLA6L8o5s You Here is a snippet of  With  Without setting the target-pane  https://waylonwalker.com/tmux-nav-2021/ for more information on ho", "content": "https://youtu.be/utfLA6L8o5s\n\nYou've got some long running tasks, and you're trying to stay productive and\nknock tasks off that board, but you keep finding that your processes finish and\nyou stay on other tasks for longer than you should.  You were in the flow and\njust did not check back in on it.  With `display-message` you can send yourself\na notification when that long running task is complete.\n\n## from the man page\n\nHere is a snippet of `display-message` from the tmux man page.  I rarely need\nto do anything other than just display message, but there are other flags for\nit.\n\n``` bash\ndisplay-message [-aINpv] [-c target-client] [-d delay] [-t target-pane] [message]\n            (alias: display)\n\n        Display a message.  If -p is given, the output is printed to stdout,\n        otherwise it is displayed in the target-client status line for up to\n\n        delay milliseconds.  If delay is not given, the message-time option is\n        used; a delay of zero waits for a key press.  \u2018N\u2019 ignores key presses\n        and closes only after the delay expires.  The format of message is\n        described in the FORMATS section;\n\n        information is taken from target-pane if -t is given, otherwise the\n        active pane.\n\n        -v prints verbose logging as the format is parsed and -a lists the\n        format variables and their values.\n\n        -I forwards any input read from stdin to the empty pane given by\n        target-pane.\n```\n\n## notifier\n\nWith `display-message` we can do things like setup notifications that will work\ncross platform.\n\n``` bash\ncmatrix -t 5 && tmux display-message done\n```\n\nWithout setting the target-pane `display-message` defaults to the active pane.\nThis is a very handy feature that allows us to switch windows, or sessions and\nstill recieve the message.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-floating-popups'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux floating popups</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-copy-mode'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux copy-mode</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-12", "edit_link": "https://github.com/edit/main/pages/blog/tmux-display-message.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573840", "datetime": "2021-08-12 00:00:00+00:00", "slug": "tmux-display-message", "jinja": false, "output_html": "markout/tmux-display-message/index.html", "long_description": "https://youtu.be/utfLA6L8o5s You Here is a snippet of  With  Without setting the target-pane  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "super_description": "https://youtu.be/utfLA6L8o5s You Here is a snippet of  With  Without setting the target-pane  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9040>, next=<frontmatter.Post object at 0x7f34506f21f0>)"}, {"cover": "", "title": "Pytest capsys", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/pytest-capsys.md", "description": "Testing print/log statements in pytest can be a bit tricky, capsys makes it capsys is a builtin pytest fixture that can be passed into any test to capture Simpl", "content": "Testing print/log statements in pytest can be a bit tricky, capsys makes it\nsuper easy, but I often struggle to find it.\n\n\n## capsys\n\ncapsys is a builtin pytest fixture that can be passed into any test to capture\nstdin/stdout.  For a more comprehensive description check out the docs on\n[capsys](https://docs.pytest.org/en/stable/capture.html#accessing-captured-output-from-a-test-function)\n\n## using capsys\n\nSimply create a test function that accepts capsys as an argument and pytest\nwill give you a capsys opject.\n\n```python\ndef test_print(capsys):\n    print('hello')\n    captured = capsys.readouterr()\n    assert 'hello' in captured.out\n    print('world')\n    captured = capsys.readouterr()\n    assert 'world' in captured.out\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-args-kwargs'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>understanding python \\*args and \\*\\*kwargs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/pyflyby'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Smoother Python with automatic imports | pyflyby</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-05", "edit_link": "https://github.com/edit/main/pages/blog/pytest-capsys.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573845", "datetime": "2021-04-05 00:00:00+00:00", "slug": "pytest-capsys", "jinja": false, "output_html": "markout/pytest-capsys/index.html", "long_description": "Testing print/log statements in pytest can be a bit tricky, capsys makes it capsys is a builtin pytest fixture that can be passed into any test to capture Simply create a test function that accepts capsys as an argument and pytest", "super_description": "Testing print/log statements in pytest can be a bit tricky, capsys makes it capsys is a builtin pytest fixture that can be passed into any test to capture Simply create a test function that accepts capsys as an argument and pytest", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646460>, next=<frontmatter.Post object at 0x7f345069c670>)"}, {"cover": "", "title": "Don\u2019t waste your time learning everything", "tags": ["catalytic"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/don-t-waste-your-time-learning-everything.md", "description": "Stick to what you know, and learn a little bit of something new every day.", "content": "> \"Don\u2019t waste your time learning everything.\"\n\n![](https://images.waylonwalker.com/dont-waste-your-time-learning-everythign-post.png)\n\n> Inspired by this [linkedIn post](https://www.linkedin.com/posts/activity-6633818327070326784--Ksl)\n\nI felt that this comment was very powerful. Here are my 2 cents.\n\n## Be Productive\n\nStick to what you know, and learn a little bit of something new every day. If what you know is how to use Excel like a boss, don't fee ashamed that you are missing something. Be proud and use what you know.\n\n## Don't Stagnate\n\nTake small steps enhance what you know now with something new that you get you closer to where you want to be. If you need something that sci-py offers learn how to load in data and use that part. If your sick of waiting for IT to pull data out of the database so you can use it, learn that.\n\n## Dont Overwhelm Yourself\n\nIf you try to drop everything you know now and jump whole hog into these new flashy things its not going to work. Learn what you need to know.  New things crop up very often.  They will come and go.  Some things will get traction, some will never get much traction past an impressive hello world example.\n\n## Keep your finger on new tech\n\nIts important to keep your finger on the state of technology, but dont Overwhelm yourself learning every new thing that comes out.  Make silly hello world examples in these new things and walk away.  When its time to implement something new into a real project you will be ready and understand how to do it.  If that thing dies its good that you didn't waste a lot of time on it, but chances are it inspired the thing that actually takes off.  Then you will have some understanding of what the next thing is doing ahead of everyone else who missed out on the original.\n\n## I'll leave you with this inspirational video by Kitze\n\n[![](https://images.waylonwalker.com/2020-02-16 09-57-03_Microsoft Text Input Application.png)](https://www.youtube.com/watch?v=_kVxXV0TQ7M)\n\n[Navigating the hype-driven frontend development world without going insane - KITZE](https://www.youtube.com/watch?v=_kVxXV0TQ7M)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/dotfile-rice-challenge-intro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>30 days dotfile ricing</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/do-you-hoist'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Do You Hoist</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-19", "edit_link": "https://github.com/edit/main/pages/blog/don-t-waste-your-time-learning-everything.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573851", "datetime": "2020-02-19 00:00:00+00:00", "slug": "don-t-waste-your-time-learning-everything", "jinja": false, "output_html": "markout/don-t-waste-your-time-learning-everything/index.html", "long_description": "\" Inspired by this  I felt that this comment was very powerful. Here are my 2 cents. Stick to what you know, and learn a little bit of something new every day. If what you know is how to use Excel like a boss, don Take small steps enhance what you kn", "super_description": "\" Inspired by this  I felt that this comment was very powerful. Here are my 2 cents. Stick to what you know, and learn a little bit of something new every day. If what you know is how to use Excel like a boss, don Take small steps enhance what you know now with something new that you get you closer to where you want to be. If you need something that sci-py offers learn how to load in data and use that part. If your sick of waiting for IT to pull data out of the database so you can use it, learn ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696430>, next=<frontmatter.Post object at 0x7f34506f20d0>)"}, {"cover": "", "title": "Gitui is a blazing fast terminal git interface", "tags": ["git"], "status": "published", "templateKey": "slides", "path": "pages/blog/gitui.slides.md", "description": "Gitui is a terminal-based git user interface (TUI) that will change the way I have been a long-time user of the git cli, and it Go to their  It opens blazing fa", "content": "## GitUI\n\nGitui is a terminal-based git user interface (TUI) that will change the way\nthat you work with git. \n\n## Works alongside the cli\n\nI have been a long-time user of the git cli, and it's\nbeen hard to beat, mostly because there is nothing that keeps my fingers on the\nkeyboard quite like it, except `gitui` which comes with some great ways to very\nquickly walk through a git project.\n\n## installation\n\nGo to their [releases]https://github.com/extrawurst/gitui/releases) page,\ndownload the latest build, and pop it on your PATH.  I have the following\nstuffed away in some install scripts to get the latest version.\n\n\n_<small>install latest release</small>_\n``` bash\nGITUI_VERSION=$(curl --silent https://github.com/extrawurst/gitui/releases/latest | tr -d '\"' | sed 's/^.*tag\\///g' | sed 's/>.*$//g' | sed 's/^v//')\nwget https://github.com/extrawurst/gitui/releases/download/v${GITUI_VERSION}/gitui-linux-musl.tar.gz -O- -q | sudo tar -zxf - -C /usr/bin/\n```\n\n## run `gitui`\n\nIt opens blazing fast.\n\n``` bash\ngitui\n```\n\n## Quick Commits\n\nSometimes I edit a number of files and want to commit them one at a time, this\nis painful in the git cli and my main use case for `gitui`.  `gitui` shows\nunstaged changes at the top, staged changes on the bottom, and a diff on the\nright.\n\n\n![gitui status](https://images.waylonwalker.com/gitui-status.png)\n\n\n## Navigate with hjkl\n\nBy default, `gitui` uses arrow keys, but simply copying\n[vim_style_key_config.ron](https://github.com/extrawurst/gitui/blob/master/vim_style_key_config.ron)\nto your config directory will get you vim-like keybindings.\n\n## workflow\n\n* pop open `gitui`, \n* use **j/k** to get to the file I want to commit,\n* glance at the diff to the right\n* press enter to stage the file\n* sc to switch focus to the saged files and commit\n* write my commit message hit enter and\n* q to quit\n\n## Keybindings\n\n```\nw/s:   to toggle focus between working and staged changes\nj/k:   to scroll each section\nh/l:   switch between left and right side\nenter: toggle file from working or staging\nc:     start a commit message\np:     push\n<c-c>: quit\n```\n\n## Other Panes\n\nI am in the `Status [1]` pane 90% of the time, but it also has three other\npanes for `Log [2]`, `Stashing [3]`, and `Stashes [4]`.  I do not really use\nthe stashes panes, but the `Log [2]` pane is quite useful to quickly go through\nthe last set of commits and see the diff for each of them.\n\n## What UI do you use for git\n\nLet me know what ui you use for git, do you stick to the cli, use a gui, or use\na similar `TUI` interface?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/vim-augroup'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>You must use augroup with autocmd in vim | Here's how</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/don-t-waste-your-time-learning-everything'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Don\u2019t waste your time learning everything</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-17", "edit_link": "https://github.com/edit/main/pages/blog/gitui.slides.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573857", "datetime": "2021-01-17 00:00:00+00:00", "slug": "gitui.slides", "jinja": false, "output_html": "markout/gitui.slides/index.html", "long_description": "Gitui is a terminal-based git user interface (TUI) that will change the way I have been a long-time user of the git cli, and it Go to their  It opens blazing fast. Sometimes I edit a number of files and want to commit them one at a time, this By defa", "super_description": "Gitui is a terminal-based git user interface (TUI) that will change the way I have been a long-time user of the git cli, and it Go to their  It opens blazing fast. Sometimes I edit a number of files and want to commit them one at a time, this By default,  pop open  use  glance at the diff to the right press enter to stage the file sc to switch focus to the saged files and commit write my commit message hit enter and q to quit I am in the  Let me know what ui you use for git, do you stick to the ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506aeb20>, next=<frontmatter.Post object at 0x7f34506ae790>)"}, {"cover": "", "title": "You must use augroup with autocmd in vim | Here's how", "tags": ["linux", "vim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/vim-augroup.md", "description": "If you are running vim autocmd https://youtu.be/2ITTn4Dl0lc For  Lets create a new file called  I What you need to do is clear out all commands in the augroup w", "content": "If you are running vim autocmd's without a group, you're killing your\nperformance.  Granted your probably not sourcing your vimscript files with\nautocmd's too often, but every time you source that vimscript you are adding\nanother command that needs to run redundantly.\n\nhttps://youtu.be/2ITTn4Dl0lc\n\n## This is what I had\n_Not silky smooth_\n\nFor **WAAY** too long I have had something like this in my  vimrc or init.vim.\nIt formats my python for me on every save, works great except if I source my\ndotfiles more than once I start adding how many times black runs.\n\n``` vim\nautocmd bufwritepre *.py execute 'Black'\n```\n\n## Why is a bare autocmd bad\n_let me demonstrate_\n\nLets create a new file called `format.vim` and give it the `:so %`. Works\ngreat, it starts telling me that its formatting.\n\n``` vim\nautocmd bufwritepre *.py :echo(\"formatting with black\")\n```\n\n![too-many-formats](https://images.waylonwalker.com/vim-augroups-too-many-formats.GIF)\n\n**BUT** as every time I give it the `:so %` it formats an extra time on every\nsingle save.\n\n## Setting up an augroup\n\nI've been told I need an `augroup` to prevent duplicates. So I did it, and\nnothing changes, it still ran as many times as it was sources on every save.\n\n``` vim\naugroup black\n    autocmd bufwritepre *.py :echo(\"formatting with black\")\naugroup end\n```\n\n## Clearing out the augroup\n\nWhat you need to do is clear out all commands in the augroup with `autocmd!`\nright at the beginning of the group.\n\n``` vim\naugroup black\n    autocmd!\n    autocmd bufwritepre *.py :echo(\"formatting with black\")\naugroup end\n```\n\n## My Final silky smooth setup\n\nNow this is what I have in my dotfiles for a silky smooth setup that does not\nrun automds like crazy as I am making changes to my dotfiles.\n\n``` vim\naugroup waylonwalker\n    autocmd!\n    autocmd bufwritepre *.py execute 'PyPreSave'\n    autocmd bufwritepost *.py execute 'PyPostSave'\n    autocmd bufwritepost .tmux.conf execute ':!tmux source-file %' autocmd bufwritepost .tmux.local.conf execute ':!tmux source-file %'\n    autocmd bufwritepost *.vim execute ':source %'\naugroup end\n```\n\n\n## Related Links\n\n* [vim-help](https://vimhelp.org/autocmd.txt.html#%3Aaugroup)\n* [youtube video](https://youtu.be/2ITTn4Dl0lc) for this article\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/vim-replace-visual-star'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Vim Replace Visual Star</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/variable-names-don-t-need-their-type'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Variables names don't need their type</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-08", "edit_link": "https://github.com/edit/main/pages/blog/vim-augroup.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573863", "datetime": "2021-12-08 00:00:00+00:00", "slug": "vim-augroup", "jinja": false, "output_html": "markout/vim-augroup/index.html", "long_description": "If you are running vim autocmd https://youtu.be/2ITTn4Dl0lc For  Lets create a new file called  I What you need to do is clear out all commands in the augroup with  Now this is what I have in my dotfiles for a silky smooth setup that does not", "super_description": "If you are running vim autocmd https://youtu.be/2ITTn4Dl0lc For  Lets create a new file called  I What you need to do is clear out all commands in the augroup with  Now this is what I have in my dotfiles for a silky smooth setup that does not", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b31f0>, next=<frontmatter.Post object at 0x7f34506798b0>)"}, {"cover": "./flex.png", "title": "Follow Your Passion", "tags": [], "status": "Draft", "templateKey": "blog-post", "path": "pages/blog/test.md", "description": "none", "content": "## Example\n\n<iframe src='/page2' width='375' height='812' scrolling='no' style='border: 1px solid #333;'>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/should-i-switch-to-zeit-now'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Should I switch to Zeit Now</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-augroup'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>You must use augroup with autocmd in vim | Here's how</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-01", "edit_link": "https://github.com/edit/main/pages/blog/test.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573868", "datetime": "2019-01-01 00:00:00+00:00", "slug": "test", "jinja": false, "output_html": "markout/test/index.html", "long_description": "", "super_description": "", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae1f0>, next=<frontmatter.Post object at 0x7f34506aeb20>)"}, {"cover": "", "title": "Should I switch to Zeit Now", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/should-i-switch-to-zeit-now.md", "description": "Should I switch to Zeit Now.  Netlify build times are starting to creep in.", "content": "## Netlify\n\nI have happily had my personal site [waylonwalker.com](https://waylonwalker.com) hosted on netlify for nearly 2 years now.  In fact I have hosted about a dozen different toy projects to play with on there, 4 of which have gone far enough to get a custom domain name.  They are fast to deploy and consistently do so on every `git push` to main.\n\n\n## Zeit\n\nI have recently started playing with zeit again.  I really like their cli tool, its dead simple and makes sense.  I tried the netlify one early on and dont think I really gave it much of a chance. I was able to backup a site we were modifying by saving everything locally (literally control+s) and running `now` in the command line.\n\nWhile I was on the site I realized that when switching to gatsby v2 I had deployed it to now.sh while testing, before cutting over to the updated one on netlify.  It has been building every version since without issue!\n\n> It has been building every version since without issue!\n\n## What I am using\n\n* gatsby\n* forestry.io\n\nI am using gatsby to build my site, and I do use forestry.io as a cms to be able to edit/manage posts online.  I think forestry is part of my problem in that it has added extra builds.  Every time I upload an image or save a post, even a draft, it pushes to production.\n\n\n## Why Switch\n\nThis is just a side hobby for me.  I do not make any $$ off of it, and I do not want to pay for anything I do not have to.  As I am stepping up my blogging I have already hit 50% of my build quota only 1 week into the month on netlify.  I really like what netlify is doing for the JAMstack community, but I would rather build everything locally and push to GHPages for this project than have to pay for it.\n\n## What Are your suggestions\n\nDo you use Zeit?\n\nWhere do you host your gatsby.js site?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/simple-click'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>simple click</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/setup-yamlls'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Setup a yaml schema | yamlls for a silky smooth setup</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-06", "edit_link": "https://github.com/edit/main/pages/blog/should-i-switch-to-zeit-now.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573876", "datetime": "2020-02-06 00:00:00+00:00", "slug": "should-i-switch-to-zeit-now", "jinja": false, "output_html": "markout/should-i-switch-to-zeit-now/index.html", "long_description": "I have happily had my personal site  I have recently started playing with zeit again.  I really like their cli tool, its dead simple and makes sense.  I tried the netlify one early on and dont think I really gave it much of a chance. I was able to ba", "super_description": "I have happily had my personal site  I have recently started playing with zeit again.  I really like their cli tool, its dead simple and makes sense.  I tried the netlify one early on and dont think I really gave it much of a chance. I was able to backup a site we were modifying by saving everything locally (literally control+s) and running  While I was on the site I realized that when switching to gatsby v2 I had deployed it to now.sh while testing, before cutting over to the updated one on net", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658e50>, next=<frontmatter.Post object at 0x7f345067fe50>)"}, {"cover": "", "title": "Windowing Python Lists", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/more-itertools-windowed.md", "description": "In python data science we often will reach for pandas a bit more than necessary. While pandas can save us so much there are times where there are alternatives t", "content": "In python data science we often will reach for pandas a bit more than necessary. While pandas can save us so much there are times where there are alternatives that are much simpler.  The itertools` and `more-itertools` are full of cases of this.\n\nThis post is a walkthrough of me solving a problem with `more-itertools` rather than reaching for a for loop, or pandas.\n\nI am working on a  one-line-link expander for my blog.  I ended up doing it, just by modifying the markdown with python.  I first split the post into lines with `content.split('\\n')`, then look to see if the line appears to be just a link.  One more safety net that I wanted to add was to check if there was whitespace around the line, this could not simply be done in a list comprehension by itself.  I need just a bit of knowledge of the surrounding lines, enter `more-itertools`.\n\n\n## simplified rendering function\n\nI have a function that will check to see if the line should be expanded, then render the correct template.  Fist step is to check if the line contains no spaces and starts with `https`, if it\ndoes render the template. \n\nThe real expand_line function uses requests to pull some metadata about the post to insert into the card, more on that in another post.\n\n``` python\ndef expand_line(line):\n   \"\"\"\n   Check if line should be expanded then render a template\n   \"\"\"\n\n   if ' ' in line and line.startswith('https'):\n      return line\n\n  return f\"<a href='{line}' class='card'>\"\n```\n\n## initial implementation\n\nMy first implementation was to load in the content as a single string and use a list comprehension to expand each line.\n\n``` python\nexpanded_content = \"\\n\".join(\n    [expand_line(line) for line in content]\n)\n```\n\n## The issue.\n\nSometimes I write my posts in vim without wordwrap on and just use `gq` to wrap them to the current `textwidth`.  If I have a link that happens to be really long it ends up on its own line.  I do not want one line links to expand if they are in the middle of a paragraph.\n\n``` markdown\n## sample paragraph\n\nThis is a paragraph that has a really long link\nhttps://waylonwalker.com/not-a-real-link-just-a-silly-example-for-this-post\ninside of it that ends up on its own line\n```\n\n> I need a bit of knowledge about the lines around the link.\n\n\n## windowing\n\n`more-itertools` comes with a windowing function that will slide over an iterable with a width of n.\n\n``` python\n>>> from more_itertools import windowed\n>>> all_windows = windowed([1, 2, 3, 4, 5], 3)\n>>> list(all_windows)\n[(1, 2, 3), (2, 3, 4), (3, 4, 5)])]\n```\n\n> this example is copied from the [more-itertools docs](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed)\n\n## sliding through my content\n\nThe one extra that we need is padding at the front and back of the list so that we ensure that every value ends up in the middle position at least once.\n\n\n``` python\nexpanded_content = \"\\n\".join(\n    [expand_line(*line) for line in windowed(f'\\n{content}\\n', 3)]\n)\n```\n\n**meta**: \ud83d\udc47  This is an example of a one-line-link card that we are trying to achieve.\n\n\n<a class=\"onelinelink\" href=\"https://waylonwalker.com/python-args-kwargs/\">\n<img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/python-args-kwargs-slides-dev_250x105.png\" alt=\"article cover\">\n<div class=\"right\">\n    <h2>understanding python *args and **kwargs</h2>\n    <p class=\"description\">\n    Python `*args` and `**kwargs` are super useful tools, that when used properly can make you code much simpler and easier to maintain.  Large manual conversions from a dataset to function arguments can be packed and unpacked into lists or dictionaries. Beware though, this power **can** lead to some really unreadable/unusable code if done wrong.\n    </p>\n    <p class=\"url\">\n    <span class=\"read-more\">read more</span>  waylonwalker.com\n    </p>\n</div>\n</a>\n\n\n> Not sure what *line is, check out this article.\n\n\n## update expand_line\n\nNow that we are calling `expand_line` with all three lines.  We need to update the function signature and add a guarding clause to return early if before or after lines are not blank.\n\n``` python\ndef expand_line(before, line, after):\n   \"\"\"\n   Check if line should be expanded then render a template\n   \"\"\"\n    if before != '' and after != '':\n      return line\n\n\n    if ' ' in line and line.startswith('https'):\n      return line\n\n    return f\"<a href='{line}' class='card'>\"\n```\n\n\nHope you liked this walk-through of solving a problem I had with `more-itertools`, If you learned something be sure to share it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/my-github-profile'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I Built My GitHub Profile</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/minimal-python-package'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Minimal Python Package</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-10", "edit_link": "https://github.com/edit/main/pages/blog/more-itertools-windowed.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573883", "datetime": "2020-12-10 00:00:00+00:00", "slug": "more-itertools-windowed", "jinja": false, "output_html": "markout/more-itertools-windowed/index.html", "long_description": "In python data science we often will reach for pandas a bit more than necessary. While pandas can save us so much there are times where there are alternatives that are much simpler.  The itertools This post is a walkthrough of me solving a problem wi", "super_description": "In python data science we often will reach for pandas a bit more than necessary. While pandas can save us so much there are times where there are alternatives that are much simpler.  The itertools This post is a walkthrough of me solving a problem with  I am working on a  one-line-link expander for my blog.  I ended up doing it, just by modifying the markdown with python.  I first split the post into lines with  I have a function that will check to see if the line should be expanded, then render", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646790>, next=<frontmatter.Post object at 0x7f3450685fa0>)"}, {"cover": "", "title": "Four github actions for your website", "tags": ["actions"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/four-github-actions-website.md", "description": "GitHub GitHub actions can give you confidence that your site is up and running, with the latest JavaScript packages, does not have broken links, and can even ta", "content": "GitHub's actions are a new GitHub feature that will trigger GitHub to spin up a\nvirtual machine and run some tasks with some special access to your repo. It\ncan interact with comments/issues, it can clone your repo, You can explicitly\npass in secrets so that it can commit back to the repo or deploy to another\nservice. The environment may be a Linux, windows, or even a mac machine. I\nbelieve this is wildly incredible for the open-source community, putting these\ntools in the same place that we are already collaborating is so convenient.\n\n## What can they do for my personal website? \ud83e\udd14\n\nGitHub actions can give you confidence that your site is up and running, with the latest JavaScript packages, does not have broken links, and can even take screenshots of what your website looks like on different screen sizes and operating systems.\n\n- periodically check that the website is up\n- update npm\n- url checker\n- screenshot website\n\n\n## [srt32/uptime](https://github.com/srt32/uptime)\n\n[srt32/uptime](https://github.com/srt32/uptime) is an action that you can run on any public website. I run this one several times every day and it gives me confidence that my various sites are still up and running. It ensures that my build didn't break something, nothing is wrong with my hosting provider, or my DNS.\n\n``` yaml\nname: check if site is up\non:\n  schedule:\n    - cron: '0 0 * * *'\n\njobs:\n  ping_site:\n    runs-on: ubuntu-latest\n    name: Ping the site\n    steps:\n    - name: Check the site\n      id: hello\n      uses: srt32/uptime@master\n      with:\n        url-to-hit: \"https://waylonwalker.com/\"\n        expected-statuses: \"200,301\"\n```\n\n## [taichi/actions-package-update](https://github.com/taichi/actions-package-update)\n\nHere is another one to make sure that your package.json does not get too far out of date, or have any vulnerabilities. [taichi/actions-package-update](https://github.com/taichi/actions-package-update) will submit a PR back to your repo with any updated dependencies. Since it submits it as a pr, your tests triggered by PRs should also run. giving you confidence that you are ready to update.\n\n<p style='text-align: center'>\n<img src='https://github.com/taichi/actions-package-update/raw/master/docs/actions-package-update.png' style='width:600px; max-width:80%; margin: auto;' alt='image of a PR submitted by actions-package-update'/>\n</p>\n\nExample to update `package.json` every Wednesday night at midnight.\n\n``` yaml\non:\n  schedule:\n  - cron: 0 0 * * 3\nname: Update\njobs:\n  package-update:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@master\n    - name: set remote url\n      run: git remote set-url --push origin https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY\n    - name: package-update\n      uses: taichi/actions-package-update@master\n      env:\n        AUTHOR_EMAIL: john@example.com\n        AUTHOR_NAME: john\n        EXECUTE: \"true\"\n        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        LOG_LEVEL: debug\n      with:\n        args: -u --packageFile package.json --loglevel verbose\n```\n\n## [urlstechie/urlchecker-action](https://github.com/urlstechie/urlchecker-action)\n\n[urlstechie/urlchecker-action](https://github.com/urlstechie/urlchecker-action) is an action to collect and check URLs in a project and report on broken links. This is another one to give yourself some confidence that you are not linking out to a broken site, and can give you a heads up before you have frustrated users.\n\n``` yaml\nname: Check URLs\n\non: [push]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v2\n    - name: urls-checker\n      uses: urlstechie/urlchecker-action@0.2.1\n      with:\n        # A subfolder or path to navigate to in the present or cloned repository\n        subfolder: docs\n\n        # A comma-separated list of file types to cover in the URL checks\n        file_types: .md,.py,.rst\n\n        # Choose whether to include file with no URLs in the prints.\n        print_all: false\n\n        # The timeout seconds to provide to requests, defaults to 5 seconds\n        timeout: 5\n\n        # How many times to retry a failed request (each is logged, defaults to 1)\n        retry_count: 3\n\n        # A comma separated links to exclude during URL checks\n        white_listed_urls: https://github.com/SuperKogito/URLs-checker/issues/1,https://github.com/SuperKogito/URLs-checker/issues/2\n\n        # A comma separated patterns to exclude during URL checks\n        white_listed_patterns: https://github.com/SuperKogito/Voice-based-gender-recognition/issues\n\n        # choose if the force pass or not\n        force_pass : true\n```\n\n## [swinton/screenshot-website](https://github.com/swinton/screenshot-website)\n\n[swinton/screenshot-website](https://github.com/swinton/screenshot-website) will take a screenshot of your website. It can even run a matrix of sizes and os's to check how your site looks on various systems.\n\n``` yaml\nname: screenshot-website\non:\n  schedule:\n    - cron: '0 0 0 * *'\n\njobs:\n  screenshot:\n    name: Screenshot\n    strategy:\n      matrix:\n        os: [ubuntu-latest, macos-latest, windows-latest]\n        width: [1200, 992, 768, 600]\n    runs-on: ${{ matrix.os }}\n\n    steps:\n\n    - name: Screenshot Website\n      uses: swinton/screenshot-website@v1.x\n      with:\n        source: https://waylonwalker.com/\n        destination: screenshot-${{ matrix.os }}-${{ matrix.width }}.png\n        width: ${{ matrix.width }}\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/fuzzy-edit-zsh'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Open files FAST from zsh | or bash if thats your thing</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/four-github-actions-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Four Github Actions for Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-18", "edit_link": "https://github.com/edit/main/pages/blog/four-github-actions-website.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573889", "datetime": "2020-05-18 00:00:00+00:00", "slug": "four-github-actions-website", "output_html": "markout/four-github-actions-website/index.html", "long_description": "GitHub GitHub actions can give you confidence that your site is up and running, with the latest JavaScript packages, does not have broken links, and can even take screenshots of what your website looks like on different screen sizes and operating sys", "super_description": "GitHub GitHub actions can give you confidence that your site is up and running, with the latest JavaScript packages, does not have broken links, and can even take screenshots of what your website looks like on different screen sizes and operating systems. periodically check that the website is up update npm url checker screenshot website Here is another one to make sure that your package.json does not get too far out of date, or have any vulnerabilities.  Example to update ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f1f0>, next=<frontmatter.Post object at 0x7f345065e310>)"}, {"cover": "", "title": "My first eight years as a working professional.", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/eight-years-cat.md", "description": "This day 8 years ago I started my first day as a Mechanical Engineer. I am so My initial career plans were down a completely different path. I have been very fl", "content": "This day 8 years ago I started my first day as a Mechanical Engineer. I am so\ngrateful for this journey that I have been able to have. There is no way that I\ncould have planned this journey from the beginning.\n\n## Keep Learning\n\nMy initial career plans were down a completely different path. I have been very flexible in taking on a new career path. I have been eager to learn new things and respond to life changes that I never would have imagined.\n\n## Life Changes\n\nVery severe chronic health issues from my family restricted my ability to travel to the facilities I served as a Mechanical Engineer. I was able to stay strong and make it work. But in the meantime, I was learning new skills that enabled me to be more effective remotely.\n\n## I was scared.\n\nIt was in these times that I found a love for data, and taking action from insights I found with data. I learned how to use python to enable me to be more effective. I did this primarily from hospital waiting rooms and many overnight stays. This gave my mind a break from some of the really difficult things in life but also catapulted my career in a new direction.\n\n\n\ud83d\udd3c Be flexible\n\n\ud83d\udd3c Always be open and ready for change\n\n\ud83d\udd3c Never stop learning\n\n\ud83d\udd3c Keep a positive attitude\n\n\ud83d\udd3c Be kind to others\n\n---\n\nThis was originally posted on my LinkedIn, if you enjoy it please connect with me and give the post a \ud83d\udc4d\n\n<iframe src=\"https://www.linkedin.com/embed/feed/update/urn:li:share:6679445409351393280\" height=\"813\" width=\"504\" frameborder=\"0\" allowfullscreen=\"\" title=\"Embedded post\"></iframe>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/expand-one-line-links'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Expand One Line Links</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/edit-on-github'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Edit On GitHub</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-19", "edit_link": "https://github.com/edit/main/pages/blog/eight-years-cat.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573895", "datetime": "2020-06-19 00:00:00+00:00", "slug": "eight-years-cat", "jinja": false, "output_html": "markout/eight-years-cat/index.html", "long_description": "This day 8 years ago I started my first day as a Mechanical Engineer. I am so My initial career plans were down a completely different path. I have been very flexible in taking on a new career path. I have been eager to learn new things and respond t", "super_description": "This day 8 years ago I started my first day as a Mechanical Engineer. I am so My initial career plans were down a completely different path. I have been very flexible in taking on a new career path. I have been eager to learn new things and respond to life changes that I never would have imagined. Very severe chronic health issues from my family restricted my ability to travel to the facilities I served as a Mechanical Engineer. I was able to stay strong and make it work. But in the meantime, I ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506edc10>, next=<frontmatter.Post object at 0x7f345064c1f0>)"}, {"cover": "", "title": "Copier Templates", "tags": ["python", "linux", "cli"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/copier-templates.md", "description": "%%include til/copier %%include til/copier-template-variables %%include til/copier-answers", "content": "I was completely stuck for awhile.  copier was not replacing my template\nvariables.  I found out that adding all these `_endops` fixed it.  Now\nIt will support all of these types of variable wrappers\n\n``` yaml\n# copier.yml\n_templates_suffix: .jinja\n_envops:\n  block_end_string: \"%}\"\n  block_start_string: \"{%\"\n  comment_end_string: \"#}\"\n  comment_start_string: \"{#\"\n  keep_trailing_newline: true\n  variable_end_string: \"}}\"\n  variable_start_string: \"{{\"\n```\n\n> !RTFM: Later I read the docs and realized that copier defaults to using `[[`\n> and `]]` for its templates unlike other tools like cookiecutter.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/dedupe-your-shell-paths'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Dedupe your shell paths</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/copier-template-variables'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>copier template variables</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>\n\nI've been looking for a templating tool for awhile that works well with\nsingle files.  My go to templating tool `cookiecutter` does not work for\nsingle files, it needs to put files into a directory underneath of it.\n\n## template variables\n\nBy default copier uses double square brackets for its variables.\nvariables in files, directory_names, or file_names will be substituted\nfor their value once you render them.\n\n``` python\n# hello-py/hello.py.tmpl\nprint('hello-[[name]]')\n```\n\n> note! by default copier will not inject variables into your\n> [[template-strings]] unless you use a .tmpl suffix.\n\nBefore running copier we need to tell copier what variables to ask for,\nwe do this with a copier.yml file.\n\n``` yaml\n# copier.yml\nname:\n  default: my_name\n  type: str\n  help: What is your name\n```\n\n## installing copier\n\nI prefer to install cli tools that I need globally with pipx, this\nalways gives me access to the tool without worrying about dependency\nconflicts, bloating my system site-packages, or managing a separate\nvirtual environment for it myself.\n\n``` bash\npipx install copier\n```\n## running copier\n\nWhen running `copier copy` we pass in the directory of the template, and\nthe directory that we want to render the template into.\n\n``` bash\ncopier copy hello-py .\n```\n\n> note! the directory '.' is often referred to in cli programs to\n> represent the current working directory that we are calling the\n> command from.\n\n## results\n\nThe resulting files will have your variables injected into them if you have\nsetup your template and copier.yml up correctly.\n\n``` python\nprint('hello-you')\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/copier_endops'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Changing copier template strings (_endops)</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/copier-tasks'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Copier Tasks | Python templating post run task</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>\n\nThe copier answers file is a key component to making your templates\nre-runnable.  Let's look at the example for my setup.py.\n\n``` bash\n\u276f tree ~/.copier-templates/setup.py\n/home/walkers/.copier-templates/setup.py\n\u251c\u2500\u2500 [[ _copier_conf.answers_file ]].tmpl\n\u251c\u2500\u2500 copier.yml\n\u251c\u2500\u2500 setup.cfg\n\u2514\u2500\u2500 setup.py.tmpl\n\n0 directories, 4 files\n```\n\nInside of my `[[ _copier_conf.answers_file ]].tmpl` file is this, a\nmessage not to muck around with it, and the ansers in yaml form.  The\nfirst line is just a helper for the blog post.\n\n``` yaml\n# ~/.copier-templates/setup.py/\\[\\[\\ _copier_conf.answers_file\\ \\]\\].tmpl\n# Changes here will be overwritten by Copier; NEVER EDIT MANUALLY\n[[_copier_answers|to_nice_yaml]]\n```\n\nInside my copier.yml I have setup my _answers_file to point to a special\nfile.  This is because this is not a whole projet template, but one just\nfor a single file.\n\n``` yaml\n# copier.yml\n# ...\n_answers_file: .setup-py-copier-answers.yml\n```\n\n> Once I change the _answers_file I was incredibly stuck\n\n## Run it\n\nI'm making a library of personal copier templates in my\n`~/.copier-templates` directory and I am going to run it from there.\n\n``` bash\ncopier copy ~/.copier-templates/setup.py\n```\n## Results\n\nAfter rendering the template we have the following content in our\n`.setup.setup-py-copier-answers.yml` file.  This will allow us to update\nquick if we ever change our template.\n\n``` yaml\n# .setup-py-copier-answers.yml\n# Changes here will be overwritten by Copier; NEVER EDIT MANUALLY\n_src_path: /home/walkers/.copier-templates/setup.py\nauthor_github: waylonwalker\nauthor_name: Waylon Walker\ndescription: awesomeness\nframework: null\nkeywords: null\npackage_name: my-package\n```\n\n## Update it\n\nThis is where I was most stuck, primarily becuase `-a <answers_file>`\nmust come exactly after the base command `copier`.  This felt a bit odd\nto and not where I expected it so it.\n\n``` bash\ncopier -a .setup-py-copier-answers.yml update\n```\n\n## Stop asking all these damn questions\n\nSo the defaults are now changed to our previous results, but it keeps\nasking for them.  To stop asking we can simply add a `-f` flag.\n\n``` bash\ncopier -fa .setup-py-copier-answers.yml update\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/copier-tasks'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Copier Tasks | Python templating post run task</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/convert-markdown-pdf-linux'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Converting markdown to pdf with pandoc on linux</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/quick-progress-bars-in-python-using-tqdm'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Quick Progress Bars in python using TQDM</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/eight-years-cat'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>My first eight years as a working professional.</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-05", "jinja": false, "edit_link": "https://github.com/edit/main/pages/blog/copier-templates.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573901", "datetime": "2022-01-05 00:00:00+00:00", "slug": "copier-templates", "output_html": "markout/copier-templates/index.html", "long_description": "%%include til/copier %%include til/copier-template-variables %%include til/copier-answers", "super_description": "%%include til/copier %%include til/copier-template-variables %%include til/copier-answers", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506aed30>, next=<frontmatter.Post object at 0x7f34506aee50>)"}, {"cover": "", "title": "Quick Progress Bars in python using TQDM", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/quick-progress-bars-in-python-using-tqdm.md", "description": "Quick Progress Bars in python using TQDM", "content": "tqdm is one of my favorite general purpose utility libraries in python.  It\nallows me to see progress of multipart processes as they happen.  I really like\nthis for when I am developing something that takes some amount of time and I am\nunsure of performance.  It allows me to be patient when the process is going\nwell and will finish in sufficient time, and allows me to \ud83d\udca5 kill it and find a\nway to make it perform better if it will not finish in sufficient time.\n\n![](/tqdm2.gif)\n\n> for more gifs like these follow me on twitter\n[@waylonwalker](https://twitter.com/_WaylonWalker)\n\n**Add a simple Progress bar!**\n```python\nfrom tqdm import tqdm\nfrom time import sleep\n\nfor i in tqdm(range(10)):\n\tsleep(1)\n```\n\n**convenience**\n\nTQDM also has a convenience function called trange that wraps the range function with a tqdm progress bar automatically.\n\n```python\nfrom tqdm import trange\nfrom time import sleep\n\nfor i in trange(range(10)):\n\tsleep(1)\n```\n\n\n**notebook support**\n\nThere is also notebook support.  If you are bouncing between ipython and jupyter I recomend importing from the auto module.\n\n```python\nfrom tqdm.auto import tqdm\nfrom time import sleep\n\nfor i in tqdm(range(10)):\n\tsleep(1)\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/autoreload-ipython/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/autoreload-ipython-og_250x140.png\" alt=\"article cover for \n Autoreload in Ipython\n\"/>\n          <p><strong>\n Autoreload in Ipython\n</strong></p>\n      </a>\n  </div>\n\n\n> If you are using notebooks you should enable ipython autoreload \ud83d\udc46\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/quickly-change-conda-env-with-fzf'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Quickly Change Conda Env With Fzf</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-functools-total-ordering'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>python functools total ordering</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-18", "edit_link": "https://github.com/edit/main/pages/blog/quick-progress-bars-in-python-using-tqdm.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573907", "datetime": "2019-09-18 00:00:00+00:00", "slug": "quick-progress-bars-in-python-using-tqdm", "jinja": false, "output_html": "markout/quick-progress-bars-in-python-using-tqdm/index.html", "long_description": "tqdm is one of my favorite general purpose utility libraries in python.  It for more gifs like these follow me on twitter TQDM also has a convenience function called trange that wraps the range function with a tqdm progress bar automatically. There i", "super_description": "tqdm is one of my favorite general purpose utility libraries in python.  It for more gifs like these follow me on twitter TQDM also has a convenience function called trange that wraps the range function with a tqdm progress bar automatically. There is also notebook support.  If you are bouncing between ipython and jupyter I recomend importing from the auto module. https://waylonwalker.com/autoreload-ipython If you are using notebooks you should enable ipython autoreload \ud83d\udc46", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696d30>, next=<frontmatter.Post object at 0x7f3450646040>)"}, {"cover": "", "title": "Out of Space", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/out-of-space.md", "description": "Out of Space! How to remove 65 conda environments in one command.", "content": "This morning I logged into my machine and was nearly out of space\n\n* 64GB miniconda3!\n* 5GB conda cache\n* 4GM pip cache\n* 34GB docker\n\n## Find it\n\n[![Looking for big files when the weeds are too tall](https://res.cloudinary.com/practicaldev/image/fetch/s--0LE2KZJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/je7pxcagfs7m23p98kck.jpg)](https://res.cloudinary.com/practicaldev/image/fetch/s--0LE2KZJW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/je7pxcagfs7m23p98kck.jpg)\n\n> Photo by [Simon Migaj](https://unsplash.com/@simonmigaj?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/find?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\n\nThese are the commands that I often use to reclaim space.  Its so easy to fill up small vm's in the cloud, or in my case today let your dev machine go way too long without a good cleanup.\n\n### Show Remaining Space on Drives\n\nThis shows us where to start and gives a baseline of how much space we have reclaimed.\n\n``` bash\ndf -h\n```\n\n\n### show largest files in current directory\n\nNext keep drilling into directories that are big and running this command to see whats big inside of it.  When you find somethign that you are willing to part with `rm -rf <directory>` it and check `df -h` to see if you have enough reclaimed yet.\n\n``` bash\ndu . -h --max-depth=1\n```\n\nHonestly I rarely bother unless the directory is in the GB's of space.  A super simple filter for that is to just grep for G.\n\n``` bash\ndu . -h --max-depth=1 | grep G\n```\n\n\n## conda\n\n### How Many?\n\nAs a first baseline lets see how many enviroments we are starting with. I started with 71. Yeah I have had this machine for 2 years, and dont regularly remove them.\n\n``` bash\nconda info --envs | tail -n +2 | wc -l\n```\n\n\n\nbash\n\n### Lets batch it out!\n\nWe are devs here surely we can automate this issue! The following four lines will generate a list of existing conda environments, edit them with vim, remove the remaining ones, then remove the text file we created to remove from.\n\nMake sure that you only keep names of environments that you want to **remove** in `conda_envs_to_remove.txt` and delete the environment names you want to keep.\n\n``` bash\nconda info --envs | tail -n +2 | cut -d ' ' -f1 > conda_envs_to_remove.txt\nvim conda_envs_to_remove.txt\ncat ~/.conda_envs_remove | tr '\\n' '\\0' | xargs -l -0 conda remove --all -y -n\nrm conda_envs_to_remove.txt\n```\n\n### \ud83d\udcdd Side note\n\nWhen I am creating one of these complicated bash pipelines including xargs I generally print out the command first and make sure that it does what I want. The following command will test the above script before doing dangerous things!\n\n``` bash\ncat ~/.conda_envs_remove | tr '\\n' '\\0' | xargs -l -0 echo \"conda remove --all -y -n \"\n```\n\n## Cache\n\nIf your feeling really strained for space, you can `rm -rf ~/.cache`. Personally I like the improved speed of installing everything... obviously I install a lot of new environments.\n\n## Docker\n\n[![Alt Text](https://res.cloudinary.com/practicaldev/image/fetch/s--W4NWBxYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/olcef3lh31dtrwa51u7g.jpg)](https://res.cloudinary.com/practicaldev/image/fetch/s--W4NWBxYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/olcef3lh31dtrwa51u7g.jpg)\n\n> Photo by [Henry Be](https://unsplash.com/@henry_be?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/dark-fire?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\nFor more information read this article, [https://docs.docker.com/config/pruning/](https://docs.docker.com/config/pruning/ \"https://docs.docker.com/config/pruning/\"). I have all of the images that I want pushed remotely so I just dumped everything with the following command.\n\n``` bash\ndocker system prune\ndocker system prune --volumes\n```\n\nRunning these two sets of commands cleared up about **70GB** of space for me with very little effort on my behalf. I hope others find the first command helpful to batch remove many conda environments at once.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/packages-to-investigate'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udcdd Packages to Investigate Notes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/nvim-ides-are-slow'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>nvim conf 2021 | IDE's are slow | Waylon Walker</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-01", "edit_link": "https://github.com/edit/main/pages/blog/out-of-space.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573913", "datetime": "2020-02-01 00:00:00+00:00", "slug": "out-of-space", "jinja": false, "output_html": "markout/out-of-space/index.html", "long_description": "This morning I logged into my machine and was nearly out of space 64GB miniconda3 5GB conda cache 4GM pip cache 34GB docker Photo by  These are the commands that I often use to reclaim space.  Its so easy to fill up small vm This shows us where to st", "super_description": "This morning I logged into my machine and was nearly out of space 64GB miniconda3 5GB conda cache 4GM pip cache 34GB docker Photo by  These are the commands that I often use to reclaim space.  Its so easy to fill up small vm This shows us where to start and gives a baseline of how much space we have reclaimed. Next keep drilling into directories that are big and running this command to see whats big inside of it.  When you find somethign that you are willing to part with  Honestly I rarely bothe", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506725e0>, next=<frontmatter.Post object at 0x7f34506edaf0>)"}, {"cover": "", "title": "Vim Replace Visual Star", "tags": ["vim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/vim-replace-visual-star.md", "description": "Replacing text based on whats in the current search register is a quite handy https://www.youtube.com/watch?v=fP If there is one thing that I Like most about vi", "content": "Replacing text based on whats in the current search register is a quite handy\ntool that I use often.  I believe I picked this tip up from Nick Janetakis,\ncheck out his YouTube channel for some amazing vim tips.\n\nhttps://www.youtube.com/watch?v=fP_ckZ30gbs\n\nIf there is one thing that I Like most about vim it's the ability to hack on it\nand make it work well for you.\n\n## Replacing text in vim\n\nVim can often be a bit verbose, but that's ok because we can hack on it, and \nmake our own shortcuts and keybindings.  For instance, finding and replacing \ntext requires using a command at the vim command-line `:`.  Replacing foo with\nbar looks like this `:%s/foo/bar/g`, the final g means all of the foos, not just \nthe first one on the line.\n\n## making it better\n\nI have a keybinding in my `init.vim` that will allow me to search for a pattern\nwith the usual `/` character, page through them as normal with `n` and `N`, but\nwhen I press `<C-R>` it will populate the replace command for me so that all I\nneed to do is type out the new text.\n\n``` vim\nnnoremap <c-r> :%s/<C-R>///g<Left><Left>\n```\n\n## Note on the `<C-R>/`\n\nIn command mode `:` vim allows you to paste any text from any register into the\ncurrent command.  The `<C-R>/` will paste the text from the current search\nregister into the command.\n\n`<C-R>` in command mode can paste text from any register, you can see what\nregisters are in use with the `:reg` command.  There are a lot of them and many\nget populated automatically as you yank text or create macros.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/save-vim-macro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/save-vim-macro-og_250x140.png\" alt=\"article cover for \n Save Vim Macro\n\"/>\n          <p><strong>\n Save Vim Macro\n</strong></p>\n      </a>\n  </div>\n\n\n> Also see how to use <C-R> to save macros to key bindings easily\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/vim-wsl-clipboard'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Vim Wsl Clipboard</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-augroup'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>You must use augroup with autocmd in vim | Here's how</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-10", "edit_link": "https://github.com/edit/main/pages/blog/vim-replace-visual-star.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573919", "datetime": "2021-01-10 00:00:00+00:00", "slug": "vim-replace-visual-star", "jinja": false, "output_html": "markout/vim-replace-visual-star/index.html", "long_description": "Replacing text based on whats in the current search register is a quite handy https://www.youtube.com/watch?v=fP If there is one thing that I Like most about vim it Vim can often be a bit verbose, but that I have a keybinding in my  In command mode  ", "super_description": "Replacing text based on whats in the current search register is a quite handy https://www.youtube.com/watch?v=fP If there is one thing that I Like most about vim it Vim can often be a bit verbose, but that I have a keybinding in my  In command mode  <C-R> https://waylonwalker.com/save-vim-macro/ Also see how to use ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696040>, next=<frontmatter.Post object at 0x7f34506aeb20>)"}, {"cover": "", "title": "Scripting Tmux Layouts", "tags": ["bash", "tmux"], "status": "draft", "templateKey": "hot-tip", "path": "pages/blog/scripting-tmux-layouts.md", "description": "This is how I script a tmux layout", "content": "This is how I script a tmux layout\n\n``` bash\n bash -c \"tmux new-session -t 'editor' -d;\\\n    tmux split-window -v 'zsh';\n    tmux send-keys nvim Space /src/ Space +GFiles C-m; \\\n    tmux rotate-window; \\\n    tmux select-pane -U; \\\n    tmux -2 attach-session -d\n    \"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/install-miniconda'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to Install miniconda on linux (from the command line only)</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/vim-replace-visual-star'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Vim Replace Visual Star</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-13", "edit_link": "https://github.com/edit/main/pages/blog/scripting-tmux-layouts.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573926", "datetime": "2020-12-13 00:00:00+00:00", "slug": "scripting-tmux-layouts", "jinja": false, "output_html": "markout/scripting-tmux-layouts/index.html", "long_description": "This is how I script a tmux layout", "super_description": "This is how I script a tmux layout", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3040>, next=<frontmatter.Post object at 0x7f34506b31f0>)"}, {"cover": "", "title": "How to Install miniconda on linux (from the command line only)", "tags": ["bash", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/install-miniconda.md", "description": "Installing miniconda from only the command line can be a bit of an intimidating task your first time. Lets walk through how to do it.", "content": "miniconda is a python distribution from continuum. It's a slimmed-down version of their very popular anaconda distribution. It comes with its own environment manager and has eased the install process for many that do not have a way to compile c-extensions. It made it much easier to install the data science stack on windows a few years ago. These days windows are much better than it was back then at compiling c-extensions. I still like its environment manager, which installs to a global directory rather than a local directory for your project.\n\n## Installing miniconda on Linux\n\nInstalling miniconda on Linux can be a bit tricky the first time you do it completely from the terminal. The following snippet will create a directory to install miniconda into, download the latest python 3 based install script for Linux 64 bit, run the install script, delete the install script, then add a conda initialize to your bash or zsh shell. After doing this you can restart your shell and conda will be ready to go.\n\n``` bash\nmkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm -rf ~/miniconda3/miniconda.sh\n~/miniconda3/bin/conda init bash\n~/miniconda3/bin/conda init zsh\n```\n\n## Options\n\nThe miniconda.sh script comes with a few basic options.  Most notably we used `-b` to be able to run unattended, which means that all of the agreements are automatically accepted without user prompt.  `-u` updates any existing installation in the directory of install if there is one. `-p` is the directory to install into.\n\n```\nusage: /root/miniconda3/miniconda.sh [options]\n\nInstalls Miniconda3 4.6.14\n\n-b           run install in batch mode (without manual intervention),\n             it is expected the license terms are agreed upon\n-f           no error if install prefix already exists\n-h           print this help message and exit\n-p PREFIX    install prefix, defaults to /root/miniconda3, must not contain spaces.\n-s           skip running pre/post-link/install scripts\n-u           update an existing installation\n-t           run package tests after installation (may install conda-build)\n```\n\n\n## Silent/Logged\n\nA quick and easy way to silence everything or to log it to a file during an automated install is to wrap the script into a bash function, or save it to its own file, and call the file.  I like the function method since I can still copy it right into a terminal, or keep my install script as one single file.\n\n``` bash\ninstall_miniconda () {\nmkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm -rf ~/miniconda3/miniconda.sh\n~/miniconda3/bin/conda init bash\n~/miniconda3/bin/conda init zsh\n}\n```\n\n**normal**\n```\ninstall_miniconda\n```\n\n**silent**\n```\ninstall_miniconda > /dev/null 2>&1\n```\n\n**logged**\n```\ninstall_miniconda > miniconda_install.log 2>&1\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/reusable-bash/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/reusable-bash-og_250x140.png\" alt=\"article cover for \n Creating Reusable Bash Scripts\n\"/>\n          <p><strong>\n Creating Reusable Bash Scripts\n</strong></p>\n      </a>\n  </div>\n\n\n> This posts covers more ways to write reuable bash scripts\n\n## Cross posted to DEV\n\nCheck out this post and many more on [dev.to/waylonwalker](https://dev.to/waylonwalker/installing-miniconda-on-linux-from-the-command-line-4ad7)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/install-nvim-skit'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How linux users install a text editor</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/install-micromamba'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to Install micromamba on linux (from the comamnd line only)</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-10", "edit_link": "https://github.com/edit/main/pages/blog/install-miniconda.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573932", "datetime": "2020-08-10 00:00:00+00:00", "slug": "install-miniconda", "jinja": false, "output_html": "markout/install-miniconda/index.html", "long_description": "miniconda is a python distribution from continuum. It Installing miniconda on Linux can be a bit tricky the first time you do it completely from the terminal. The following snippet will create a directory to install miniconda into, download the lates", "super_description": "miniconda is a python distribution from continuum. It Installing miniconda on Linux can be a bit tricky the first time you do it completely from the terminal. The following snippet will create a directory to install miniconda into, download the latest python 3 based install script for Linux 64 bit, run the install script, delete the install script, then add a conda initialize to your bash or zsh shell. After doing this you can restart your shell and conda will be ready to go. The miniconda.sh sc", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae430>, next=<frontmatter.Post object at 0x7f3450691670>)"}, {"cover": "", "title": "Background Tasks in Python for Data Science", "tags": ["python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/python-data-science-background.md", "description": "This post is intended as an extension/update from  This post is intended as an extension/update from  I use it in more places than I probably should Before we g", "content": "This post is intended as an extension/update from [background tasks in\npython](https://waylonwalker.com/background-1/).  I started using `background`\nthe week that Kenneth Reitz released it.  It takes away so much boilerplate\nfrom running background tasks that I use it in more places than I probably\nshould. After taking a look at that post today, I wanted to put a better data\nscience example in here to help folks get started.\n\nThis post is intended as an extension/update from [background tasks in python](https://waylonwalker.com/background-1/).  I started using `background` the week that Kenneth Reitz released it.  It takes away so much boilerplate from running background tasks that I use it in more places than I probably should. After taking a look at that post today, I wanted to put a better data science example in here to help folks get started.\n\n> I use it in more places than I probably should\n\nBefore we get into it, I want to make a shout out to Kenneth Reitz for making this so easy.  Kenneth is a python God for all that he has given to the community in so many ways, especially with his ideas in building stupid simple api's for very complicated things.\n\n## Installation\n\n### install via pip\n\n    pip install background\n\n### install via github\n\nI believe one of the later pr's to the project fixes the way arguments are passed in.  I generally clone the repo or copy the module directly into my project.\n\n**clone it**\n\n    git clone https://github.com/ParthS007/background.git\n    cd background\n    python setup.py install\n\n**copy the module**\n\n    curl https://raw.githubusercontent.com/ParthS007/background/master/background.py > background.py\n\n## \ud83d\udc0c The Slow Function\n\nImagine that this function is a big one!  This function is fairly realistic as it takes in some input and returns a DataFrame.  This is what a good half of my fuctions do in data science.  The internals of this function generally will include a sql query, load from s3 or a data catalog, an aggregation from another DataFrame.  In general it should do one simple thing.\n\n**Feel Free to copy this \"boilerplate\"**\n\n``` python\nimport background\nfrom time import sleep\nimport pandas as pd\n\n@background.task\ndef long_func(i):\n    \"\"\"\n    Simulates fetching data from a service\n    and returning a pandas DataFrame.\n\n    \"\"\"\n    sleep(10)\n    return pd.DataFrame({'number_squared': [i**2]})\n```\n\n## Calling the Slow Function\n\n_it's the future calling \ud83e\udd19_\n\nIf we were to call this function 10 times it would take 100s.  Not bad for a dumb example, but detrimental when this gets scaled up\ud83d\udca5.  We want to utilize all of our available resources to reduce our development time and get moving on our project.\n\nCalling `long_func` will return a future object.  This object has a number of methods that you can read about in the [cpython docs](https://docs.python.org/3/library/concurrent.futures.html#future-objects).  The main one we are interested in is `result`.  I typically call these functions many times and put them into a list object so that I can track their progress and get their results.  If you needed to map inputs back to the result use a dictionary.\n\n``` python\n%time futures = [long_func(i) for i in range(10)]\n\nCPU times: user 319 \u00b5s, sys: 197 \u00b5s, total: 516 \u00b5s\nWall time: 212 \u00b5s\n```\n\n## Do something with those `results()`\n\nSimply running the function completes in no time! This is because the future objects that are returned are non blocking and will run in a background task using the `ProcessPoolExecutor`.  To get the result back out we need to call the `result` method on the future object.`result` is a blocking function that will not realease until the function has completed.\n\n``` python\n%%time\nfutures = [long_func(i) for i in range(10)]\npd.concat([future.result() for future in futures])\n\nCPU times: user 5.38 ms, sys: 3.53 ms, total: 8.9 ms\nWall time: 10 s\n```\n\nNote that this example completed in `10s`, the time it took for only one run, not all 10! \ud83d\ude0e\n\n## n\n\n\ud83d\ude2b _crank it up_\n\nBy default the number of parallel processes wil be equal to the number of cpu threads on your machine. To increase the number of parallel processes (`max_workers`) set increase `background.n`.\n\n``` python\nbackground.n = 100\n```\n\n## Is it possible to overruse @background.task?\n\nI use this essentially anywhere that I cannot vectorize a python operation and push the compute down into those fast \ud83d\udca8 c extended libraries like numpy, and the operation takes more than a few minutes.  Nearly every big network request I make gets broken down into chunks and multithreaded.  Let me know... is is possible to overruse `@background.task`? Let me know your thoughts [@_WaylonWalker](https://twitter.com/_WaylonWalker).\n\n## Repl.It\n\nPlay with the code here!  Try different values of background.n and n_runs.\n\n<iframe height=\"800px\" width=\"100%\" src=\"https://replit.com/@WaylonWalker/TestRepl?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-deepwatch'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>python-deepwatch</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-atexit'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python atexit</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-10", "edit_link": "https://github.com/edit/main/pages/blog/python-data-science-background.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573938", "datetime": "2019-09-10 00:00:00+00:00", "slug": "python-data-science-background", "jinja": false, "output_html": "markout/python-data-science-background/index.html", "long_description": "This post is intended as an extension/update from  This post is intended as an extension/update from  I use it in more places than I probably should Before we get into it, I want to make a shout out to Kenneth Reitz for making this so easy.  Kenneth ", "super_description": "This post is intended as an extension/update from  This post is intended as an extension/update from  I use it in more places than I probably should Before we get into it, I want to make a shout out to Kenneth Reitz for making this so easy.  Kenneth is a python God for all that he has given to the community in so many ways, especially with his ideas in building stupid simple api I believe one of the later pr Imagine that this function is a big one If we were to call this function 10 times it wou", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506724c0>, next=<frontmatter.Post object at 0x7f34506f29d0>)"}, {"cover": "", "title": "Code Review from the comfort of vim | Diffurcate", "tags": ["linux", "bash", "git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/diffurcate.md", "description": "I often review Pull requests from the browser as it just makes it so easy to see https://youtu.be/5NKaZFavM0E This all stems from the great plugin by First to q", "content": "I often review Pull requests from the browser as it just makes it so easy to see\nthe diffs and navigate through them, but there comes a time when the diffs get\nreally big and hard to follow.  That's when its time to bring in the comforts of\nvim.\n\nhttps://youtu.be/5NKaZFavM0E\n\n## Plugins needed\n\nThis all stems from the great plugin by\n[AndrewRadev](https://github.com/AndrewRadev).  It breaks a down\ninto a project.  So rather than poping into a pager from git diff,\nyou can pipe to diffurcate and it will setup a project in a tmp\ndirectory for you and you  can browse this project just like any\nother except it's just a diff.\n\n``` vim\nPlug 'AndrewRadev/diffurcate.vim'\n```\n\n## My aliases\n\nFirst to quickly checkout PR's from azure devops I have setup an alias to fuzzy\nselect a pr and let the `az` command do the checkout.\n\n``` bash\nalias azcheckout='az repos pr checkout --id $(az repos pr list --output table | tail -n -2 | fzf | cut -d \" \" -f1)'\n```\n\nNext I have a few aliases setup for checking diffs.  The first one checks what\nis staged vs the current branch, the others check the current branch vs main or\nmaster.\n\n```\nalias diffstaged=\"git diff --staged | nvim - +Diffurcate '+Telescope find_files'\"\nalias diffmain=\"git diff main.. | nvim - +Diffurcate '+Telescope find_files'\"\nalias diffmaster=\"git diff master.. | nvim - +Diffurcate '+Telescope find_files'\"\n\ndiffcommit() {\n    git diff $1 | nvim - +Diffurcate '+Telescope find_files'\n}\n\n```\n\n## Links\n\n* [diffurcte.vim](https://github.com/AndrewRadev/diffurcate.vim)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/digital-gardening-stream-6-6-2021'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83c\udf31 Digital Gardening | gif to Mp4 | Stream replay June 4, 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/devto-comments-from-url'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to get Dev Comments from an article Url</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-04", "edit_link": "https://github.com/edit/main/pages/blog/diffurcate.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573944", "datetime": "2021-12-04 00:00:00+00:00", "slug": "diffurcate", "jinja": false, "output_html": "markout/diffurcate/index.html", "long_description": "I often review Pull requests from the browser as it just makes it so easy to see https://youtu.be/5NKaZFavM0E This all stems from the great plugin by First to quickly checkout PR Next I have a few aliases setup for checking diffs.  The first one chec", "super_description": "I often review Pull requests from the browser as it just makes it so easy to see https://youtu.be/5NKaZFavM0E This all stems from the great plugin by First to quickly checkout PR Next I have a few aliases setup for checking diffs.  The first one checks what", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506851f0>, next=<frontmatter.Post object at 0x7f34506a9670>)"}, {"cover": "", "title": "FlexBox", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/flexbox-zombies.md", "description": "I recently finished up the flexbox-zombies course to learn more about flexbox, and to become proficient with it.  I can truly say that this course has changed t", "content": "<style>\n    em {\n        color: #ff9966;\n    }\n    code {\n        background: #FF06050A;\n        color: #6394C8;\n    }\n    .item {\n        color: #6394C8;\n        font-size: 1.5rem;\n        padding: 1rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100px;\n        width: 100px;\n        background: #351D57;\n        margin: 5px;\n        border: 2px solid #A83E75;\n        box-shadow: 5px 5px 10px -5px rgba(0, 0, 0, .6);\n    }\n\n    .flex_container {\n        padding: 1rem;\n        box-shadow: 5px 5px 10px -5px rgba(0, 0, 0, .6);\n        background: rgba(99, 148, 200, .2);\n        animation: animate_container 2s cubic-bezier(.66, -0.0, .28, 1.0) infinite both alternate;\n    }\n\n    .flex_container:hover {\n        animation: none\n    }\n\n    @keyframes animate_container {\n        0%{\n            width: 95%;\n        }\n\n        20% {\n            width: 95%;\n        }\n\n        80% {\n            width: 200px;\n        }\n\n        100% {\n            width: 200px;\n        }\n    }\n\n    h3 {\n        padding: 1rem;\n        margin: 2rem;\n        display: block;\n        width: 100vw;\n        background: white;\n        color: white;\n        background: #333;\n        position: sticky;\n        top: 0px;\n        box-shadow:  0 0 #333,\n                     -100vw 0 #333,\n                     100vw 0 #333;\n    }\n</style>\n\n## Flexbox-zombies\n\nI recently finished up the flexbox-zombies course to learn more about flexbox, and to become proficient with it.  I can truly say that this course has changed the way that I create layouts.  Flexbox is very intuitive now.  What this course does really well at is explaining the concepts and hitting you with a ton of examples that you can work through really quickly.\n\n\n![flexbox-zombies](https://images.waylonwalker.com/flex.png)\n\n> A clip from the final round against Dave\n\n\n## Basic Setup\n\nFlexbox requires a wrapper container to work  I will refer to this as the  flex container, and the items in that container as items.\n\n### Markup\n\nI will use the following markup throughout the article, each with different css applied.\n\n\n**note**  The animated container is inspired by the flexbox-zombies course.  I really like how it allows you to see the responsiveness of each layout.  In the early example the reasoning may not be aparent, but as we go along some of the flexbox parameters will make more sense if we are viewing them on a dynamic layout since flexbox is designed for building responsive design.\n\n\n```HTML\n<div class='flex_container'>\n    <div class='item'>1</div>\n    <div class='item'>2</div>\n    <div class='item'>3</div>\n    <div class='item'>4</div>\n</div>\n```\n\n<div id=\"c0\">\n    <div class='flex_container'>\n        <div class='item'>1</div>\n        <div class='item'>2</div>\n        <div class='item'>3</div>\n        <div class='item'>4</div>\n    </div>\n</div>\n\n### Base Style\n```css\n    .item {\n        color: #6394C8;\n        font-size: 1.5rem;\n        padding: 1rem;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100px;\n        width: 100px;\n        background: #351D57;\n        margin: 5px;\n        border: 2px solid #A83E75;\n        box-shadow: 5px 5px 10px -5px rgba(0, 0, 0, .6);\n    }\n\n    .flex_container {\n        padding: 1rem;\n        box-shadow: 5px 5px 10px -5px rgba(0, 0, 0, .6);\n        background: rgba(99, 148, 200, .2);\n        animation: animate_container 2s cubic-bezier(.66, -0.0, .28, 1.0) infinite both alternate;\n    }\n\n    /* Animate the .flex_container to show responsiveness */\n\n    .flex_container:hover {\n    /* But not on hover, let the user pause the annimation*/\n        animation: none\n    }\n\n    @keyframes animate_container {\n        0%{\n            width: 95%;\n        }\n\n        20% {\n            width: 95%;\n        }\n\n        80% {\n            width: 200px;\n        }\n\n        100% {\n            width: 200px;\n        }\n    }\n```\n## Basic Technique\n\n### 1. Turn on the crossbow\n\n_applied to the flex container_\n```display: flex;```\n\nTurning on flexbox on the flex container will cause all child elements to align in a row at the top left corner of the parent container.  By defualt they will shrink to the minimum content size, but not automatically grow larger than their specified size.\n\n``` css\n    .flex_container {\n                display: flex;\n        }\n```\n<style>\n    .c1 .flex_container {\n            display: flex;\n            flex-direction: row;\n    }\n</style>\n\n<div class='c1'>\n    <div class='c1 flex_container'>\n        <div class='item'>1</div>\n        <div class='item'>2</div>\n        <div class='item'>3</div>\n        <div class='item'>4</div>\n    </div>\n</div>\n\n\n### 2. Aim it if necessary\n_applied to the flex container_\n\nThis parameter determines the direction that the flexbox container will orient the flex items.\n\n**example** ```flex-direction: row```\n**options** = ```('row'(default), 'column',  'row-reverse', 'column-reverse')```\n\n#### row\n\n<style>\n    .c2a .flex_container {\n            display: flex;\n            flex-direction: row;\n    }\n</style>\n\n``` css\n.flex_container {\n            display: flex;\n            flex-direction: row;\n    }\n```\n<div class='c2a'>\n    <div class='c1 flex_container'>\n        <div class='item'>1</div>\n        <div class='item'>2</div>\n        <div class='item'>3</div>\n        <div class='item'>4</div>\n    </div>\n</div>\n\n#### column\n\n<style>\n    .c2b .flex_container {\n            display: flex;\n            flex-direction: column;\n    }\n</style>\n\n``` css\n.flex_container {\n            display: flex;\n            flex-direction: column;\n    }\n```\n<div class='c2b'>\n    <div class='c1 flex_container'>\n        <div class='item'>1</div>\n        <div class='item'>2</div>\n        <div class='item'>3</div>\n        <div class='item'>4</div>\n    </div>\n</div>\n\n#### row-reverse\n\n<style>\n    .c2c .flex_container {\n            display: flex;\n            flex-direction: row-reverse;\n    }\n</style>\n\n``` css\n.flex_container {\n            display: flex;\n            flex-direction: row-reverse;\n    }\n```\n<div class='c2c'>\n    <div class='c1 flex_container'>\n        <div class='item'>1</div>\n        <div class='item'>2</div>\n        <div class='item'>3</div>\n        <div class='item'>4</div>\n    </div>\n</div>\n\n#### column-reverse\n\n<style>\n    .c2d .flex_container {\n            display: flex;\n            flex-direction: column-reverse;\n    }\n</style>\n\n``` css\n.flex_container {\n            display: flex;\n            flex-direction: column-rerverse;\n    }\n```\n<div class='c2d'>\n    <div class='c1 flex_container'>\n        <div class='item'>1</div>\n        <div class='item'>2</div>\n        <div class='item'>3</div>\n        <div class='item'>4</div>\n    </div>\n</div>\n\n### 3. Line them up along the red Justify Laser\n_applied to the flex container_\n\nThis parameter determines justification of the flex items within the flex container.  Think spacing or positioning around the flex items.\n\n**example** ```justify-content: flex-end;```\n**options** = ```('flex-start', 'flex-end', 'space-between', 'space-around', 'space-evenly', 'stretch', 'center', 'start', 'end', 'left', 'right')```\n\n\n<style>.c3a .flex_container { display: flex; justify-content: flex-start; }</style>\n<style>.c3b .flex_container { display: flex; justify-content: flex-end; }</style>\n<style>.c3c .flex_container { display: flex; justify-content: space-between; }</style>\n<style>.c3d .flex_container { display: flex; justify-content: space-around; }</style>\n<style>.c3e .flex_container { display: flex; justify-content: space-evenly; }</style>\n<style>.c3f .flex_container { display: flex; justify-content: center; }</style>\n\n#### flex-start\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: flex-start;\n    }\n```\n\n<div class='c3a'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### flex-end\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: flex-end;\n    }\n```\n\n<div class='c3b'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### space-between\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content:space-between;\n    }\n```\n\n<div class='c3c'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### space-around\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: space-around;\n    }\n```\n\n<div class='c3d'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### space-evenly\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: space-evenly;\n    }\n```\n\n<div class='c3e'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### center\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: center;\n    }\n```\n\n<div class='c3f'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n\n### 3b. Align them along the  blue Alignment Laser\n_applied to the flex container_\n* ```align-items: flex-end;```\n* options = ('flex-start', 'flex-end', 'normal', 'end', 'self-start', 'self-end', 'center', 'start' 'end')\n\n<style>.c4a .flex_container { height: 200px; display: flex; align-items: flex-start; }</style>\n<style>.c4b .flex_container { height: 200px; display: flex; align-items: flex-end; }</style>\n<style>.c4c .flex_container { height: 200px; display: flex; align-items: center; }</style>\n\n#### flex-start\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: flex-start;\n    }\n```\n\n<div class='c4a'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### flex-end\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: flex-end;\n    }\n```\n\n<div class='c4b'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### center\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: center;\n    }\n```\n\n<div class='c4c'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n\n\n### 4. Take care of any one-off alignments\n_applied to items_\n* ```align-self: flex-start;```\n* options = ('flex-start', 'flex-end', 'normal', 'end', 'self-start', 'self-end', 'center', 'start' 'end')\n<style>\n    .c5d .flex_container { height: 200px; display: flex; align-items: stretch; }\n    .c5d .item:nth-of-type(1){ align-self: flex-start  }\n    .c5d .item:nth-of-type(2){ align-self: center}\n    .c5d .item:nth-of-type(3){ height: auto; align-self: stretch;}\n    .c5d .item:nth-of-type(4){ height: auto; align-self: flex-end;}\n</style>\n\n#### combine\n\nthe align-self property is used to take care of one off alignments and is applied to the item itself.  All of the parameters are the same as ```align-items```.  In this example we will apply all of the previous example alignment types into one.\n\n\n``` css\n.flex_container {\n    display: flex;\n     }\n.item:nth-of-type(1){\n     align-self: flex-start\n     }\n.item:nth-of-type(2){\n     align-self: center\n     }\n.item:nth-of-type(3){\n     height: auto; align-self: stretch;\n     }\n.item:nth-of-type(4){\n     height: auto; align-self: flex-end;\n     }\n```\n\n<div class='c5d'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n### 6. growth along the red Justify Laser\n_applied to items_\n* ```flex-grow: 1```\n\n<style>.c6a .flex_container { display: flex; align-items: flex-start; } .c6a .item:nth-of-type(3){background: #B5F685; flex-grow: 1;}</style>\n<style>.c6b .flex_container { display: flex; align-items: flex-start; } .c6b .item:nth-of-type(3){background: #B5F685; flex-grow: 1;} .c6b .item:nth-of-type(1){background: #B5F685; flex-grow: 2;}</style>\n\n#### flex-grow\n\nBy setting ```flex-grow: 1;``` on item ```3``` it will take up any available free space.\n``` css\n.flex_container {\n            display: flex;\n    }\n.item:nth-of-type(3) {\n    flex-grow: 1\n}\n```\n\n<div class='c6a'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### multiple flex-grow\n\nBy setting ```flex-grow: 2;``` on item  ```1``` will take up the available free space 2x faster than ```3```\n\n``` css\n.flex_container {\n            display: flex;\n            justify-content: flex-start;\n    }\n.item:nth-of-type(3) {\n    flex-grow: 1\n}\n.item:nth-of-type(1) {\n    flex-grow: 2\n}\n```\n\n<div class='c6b'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n### 7. setting length of items along the red Justify Laser\n_applied to items_\n_in order of importance_\n* ```min-width```\n* ```max-width```\n* **```flex-basis```**\n* ```width```\n\n### 8. Out of Order\n_applied to items_\n_behaves similar to z-index_\n* ```order``` - takes an integer value\n\n<style>.c8a .flex_container { display: flex;} .c8a .item:nth-of-type(3){background: #B5F685; order: 1;}</style>\n<style>.c8b .flex_container { display: flex;} .c8b .item:nth-of-type(3){background: #B5F685; order: -1;}</style>\n\n#### order 1\n\n``` css\n.flex_container {\n            display: flex;\n    }\n.item:nth-of-type(3) {\n    order: 1\n}\n```\n\n<div class='c8a'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n#### order -1\n\n``` css\n.flex_container {\n            display: flex;\n    }\n.item:nth-of-type(3) {\n    order: -1\n}\n```\n\n<div class='c8b'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n### 9. Get your own Line\n_applied to the flex container_\n\n* ```flex-wrap``` - options= ```(wrap, nowrap(default))```\n* prefers wrap over shrink\n* but will still shrink after fully wraped\n\n<style>.c9a .flex_container { display: flex; flex-wrap: wrap;} .c9a {height: 700px;}</style>\n\n#### wrap\n\n``` css\n.flex_container {\n            display: flex;\n            flex-wrap: wrap;\n    }\n```\n\n<div class='c9a'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n### 10. Aligning wrapped content\n_applied to the flex container_\n\n*  ```align-content``` - same specs as align-items but works on wrapped content.\n\n<style>.c10a .flex_container { display: flex; flex-wrap: wrap; align-content: center;} .c10a .flex_container{height: 700px;}</style>\n\n#### wrap\n\n``` css\n.flex_container {\n            display: flex;\n            height: 700px;\n            flex-wrap: wrap;\n            align-content: center;\n    }\n```\n\n<div class='c10a'> <div class='flex_container'> <div class='item'>1</div> <div class='item'>2</div> <div class='item'>3</div> <div class='item'>4</div> </div> </div>\n\n### 11. Shortcuts\n\n**flex**\n_applied to the flex items_\n*  ```flex: grow, shrink, basis```\n* defaults - ```flex: 1 1 0px```\n* setting ```flex: none``` is equivalent to ```flex: 0 0 auto```\n\n\n**flex-flow**\n_applied to the flex container_\n* ```flex: flex-direction flex-wrap```\n*\n\n### Chapter 7: In a Perfect World (flex-basis)\n\n```flex-basis```\n* Starting point, ideal size, hypothetical size\n* applied to items\n* overrides width\n* shinks if necessary\n\nWhen Shooting Horizontally it controls width\n\nWhen Shooting Vertically it controls height\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/forestry-io'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Forestry.io</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/fix-styled-components-in-gatsby'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>I finally fixed my Styled-Components in gatsby.js</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-04-22", "category": "Blog", "edit_link": "https://github.com/edit/main/pages/blog/flexbox-zombies.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573950", "datetime": "2018-04-22 00:00:00+00:00", "slug": "flexbox-zombies", "jinja": false, "output_html": "markout/flexbox-zombies/index.html", "long_description": "I recently finished up the flexbox-zombies course to learn more about flexbox, and to become proficient with it.  I can truly say that this course has changed the way that I create layouts.  Flexbox is very intuitive now.  What this course does reall", "super_description": "I recently finished up the flexbox-zombies course to learn more about flexbox, and to become proficient with it.  I can truly say that this course has changed the way that I create layouts.  Flexbox is very intuitive now.  What this course does really well at is explaining the concepts and hitting you with a ton of examples that you can work through really quickly. A clip from the final round against Dave Flexbox requires a wrapper container to work  I will refer to this as the  flex container, ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506be4c0>, next=<frontmatter.Post object at 0x7f3450658160>)"}, {"cover": "", "title": "Generating Readme Tables From Pandas", "tags": ["data", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/readme-tables.md", "description": "none", "content": "## Generating Readme Tables From Pandas\n\nI commonly have a need to paste the first few lines of a dataset into a markdown file.  I use two handy packages to do this, ```tabulate``` and ```pyperclip```.  Lets say I have a Pandas DataFrame in memory as ```df``` already.  All I would need to do to convert the first 5 rows to markdown and copy it to the clipboard is the following.\n\n```Python\nfrom tabulate import tabulate\nimport pyperclip\nmd = tabulate.tabulate(df.head(), df.columns, tablefmt='pipe')\npyperclip.copy(md)\n```\n\n\nThis is a super handy snippet that I use a lot.  Folks really appreciate it when they can see a sample of the data without opening the entire file.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-parameters'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Setting Parameters in kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/flexbox-zombies'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>FlexBox</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-05-16", "category": "Blog", "edit_link": "https://github.com/edit/main/pages/blog/readme-tables.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573956", "datetime": "2018-05-16 00:00:00+00:00", "slug": "readme-tables", "jinja": false, "output_html": "markout/readme-tables/index.html", "long_description": "I commonly have a need to paste the first few lines of a dataset into a markdown file.  I use two handy packages to do this,  This is a super handy snippet that I use a lot.  Folks really appreciate it when they can see a sample of the data without o", "super_description": "I commonly have a need to paste the first few lines of a dataset into a markdown file.  I use two handy packages to do this,  This is a super handy snippet that I use a lot.  Folks really appreciate it when they can see a sample of the data without opening the entire file.", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3af0>, next=<frontmatter.Post object at 0x7f34506b3c10>)"}, {"cover": "", "title": "Setting Parameters in kedro", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-parameters.md", "description": "Parameters are a place for you to store variables for your pipeline that can be https://youtu.be/Jj5cQ5bqcjg https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure wh", "content": "Parameters are a place for you to store variables for your pipeline that can be\naccessed by any node that needs it, and can be easily changed by changing your\nenvironment.  Parameters are stored in the repository in yaml files.\n\nhttps://youtu.be/Jj5cQ5bqcjg\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> \ud83d\udc46 Unsure what kedro is?  Check out this post.\n\n## parameters files\n\nYou can have multiple parameters files and choose which ones to load by setting\nyour environment.  By default kedro will give you a `base` and `local`\nparameters file.\n\n* `conf/base/parameters.yml`\n* `conf/local/parameters.yml`\n\n## base\n\nThe base environment should contain all of the default values you want to run.\n\n``` yaml\n# /conf/base/parameters.yml\ntest_size: 0.2\nrandom_state: 3\nfeatures:\n  - engines\n  - passenger_capacity\n  - crew\n  - d_check_complete\n  - moon_clearance_complete\n  - iata_approved\n  - company_rating\n  - review_scores_rating\n```\n\n> **NOTE** base will always be loaded first.\n\n## accessing parameters\n\nParameters can be accessed through context or through the catalog.  Generally\nwhen you are working with nodes it will be loaded through the catalog.\n\nLoding with the context.\n\n``` python\ncontext = session.load_context()\ncontext.params\n```\n\nLoading with the catalog.\n\n``` python\ncatalog.load('parameters')\n```\n\nLoading a specific key with the catalog.\n\n``` python\ncatalog.load('params:test_size')\n```\n\n## using parameters in nodes\n\nHere is an example from the complete spaceflights demo.  The entire parameters\ndict is passed in, then the `features` key is accessed.\n\n``` python\ndef split_data(data: pd.DataFrame, parameters: Dict) -> Tuple:\n    \"\"\"Splits data into features and targets training and test sets.\n\n    Args:\n        data: Data containing features and target.\n        parameters: Parameters defined in parameters.yml.\n    Returns:\n        Split data.\n    \"\"\"\n    X = data[parameters[\"features\"]]\n    y = data[\"price\"]\n    X_train, X_test, y_train, y_test = train_test_split(\n        X, y, test_size=parameters[\"test_size\"], random_state=parameters[\"random_state\"]\n    )\n    return X_train, X_test, y_train, y_test\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-node/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-node-og_250x140.png\" alt=\"article cover for \n Comprehensive guide to creating kedro nodes\n\"/>\n          <p><strong>\n Comprehensive guide to creating kedro nodes\n</strong></p>\n      </a>\n  </div>\n\n\n> \ud83d\udc46 Check out this complete guide to creating kedro nodes.\n\n## local\n\nThe local parameters by default are in `conf/local/parameters.yml`.  They will\noverride the base parameters in a shallow fashion.  If a top level key exists\nin local, it will override that entire key in your parameters.\n\n``` yaml\n# /conf/local/parameters.yml\nenv: local\nfeatures:\n  - company_rating\n  - review_scores_rating\n```\n\n> **NOTE** If you have not explicitly set your environment, local will be the\ndefault environment selected to override base.\n\n## env\n\nYou can also have other environments that override the base environment.\n\n``` yaml\n# /conf/new/parameters.yml\nenv: new\n```\n\n> **NOTE** if you use an env local will not be applied\n\n## Activating this environment\n\nFollowing the [configuration docs](https://kedro.readthedocs.io/en/latest/04_kedro_project_setup/02_configuration.html)\nwe can activate the environment by setting an environment variable in our shell\nor passing in --env to our kedro cli command.\n\nSetting an environment variable.\n\n``` bash\nexport KEDRO_ENV=test\n```\n\nPassing in the env to a kedro cli command.\n\n``` bash\nkedro run --env=test\n```\n\nSetting the Environment Variable in python.\n\n``` python\nimport os\nos.environ['KEDRO_ENV'] = 'new'\n```\n\n## Links\n\n* [all of my kedro articles](https://waylonwalker.com/kedro/)\n* [what is kedro](https://waylonwalker.com/what-is-kedro/)\n* [comprehensive guide to creating kedro nodes](https://waylonwalker.com/kedro-node/)\n* [kedro playlist on YouTube](https://www.youtube.com/watch?v=bw5_FWDVRpU&list=PLTRNG6WIHETCoPt5gAKYSH_HCZvE_r41n)\n* [configuration docs](https://kedro.readthedocs.io/en/latest/04_kedro_project_setup/02_configuration.html)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-pickle'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro - My Data Is Not A Table</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-new'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro New</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-09-19", "edit_link": "https://github.com/edit/main/pages/blog/kedro-parameters.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573962", "datetime": "2021-09-19 00:00:00+00:00", "slug": "kedro-parameters", "jinja": false, "output_html": "markout/kedro-parameters/index.html", "long_description": "Parameters are a place for you to store variables for your pipeline that can be https://youtu.be/Jj5cQ5bqcjg https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. You can have multiple parameters files and choose which", "super_description": "Parameters are a place for you to store variables for your pipeline that can be https://youtu.be/Jj5cQ5bqcjg https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. You can have multiple parameters files and choose which ones to load by setting conf/base/parameters.yml conf/local/parameters.yml The base environment should contain all of the default values you want to run. Parameters can be accessed through context or through the catalog.  Generally Loding with the c", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685d30>, next=<frontmatter.Post object at 0x7f3450646b20>)"}, {"cover": "", "title": "If Tmux", "tags": ["bash", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/if-tmux.md", "description": "I do much of my work from tmux, I love it so much that I want to setup some Bash function to check if the shell is in a tmux session. I often open up vim to do ", "content": "I do much of my work from tmux, I love it so much that I want to setup some\nfunctionality that puts me in tmux even if I didn't ask for it.\n\n\n## Bash Function\n\nBash function to check if the shell is in a tmux session.\n\n``` bash\nin_tmux () {\n  if [ -n \"$TMUX\" ]; then\n    return 0\n  else\n    return 1\n  fi\n  }\n```\n\n## Using the bash function\n\nI often open up vim to do some quite edits, but before I know it I have several\nsplits open and I need access to another shell utility, but I forgot to start\nin tmux.  This function makes sure tht I start in tmux everytime.\n\nUsing `if_tmux` to ensure vim is opened in tmux.\n\n``` bash\nvim () { \n  in_tmux \\\n    && nvim \\\n    || bash -c \"\\\n    tmux new-session -d;\\\n    tmux send-keys nvim Space +GFiles C-m;\\\n    tmux -2 attach-session -d;\n    \"\n  }\n```\n\n\nI am not quite sure if this is proper use of the `&&` and `||`, let me know if\nyou have a better way to do one thing if `in_tmux` returns true and another if\nit returns faslse.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/if_name_main'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is if __name__ == \"__main___\", and how do I use it.</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/how-python-tools-config'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How python tools configure</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-09", "edit_link": "https://github.com/edit/main/pages/blog/if-tmux.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573968", "datetime": "2021-01-09 00:00:00+00:00", "slug": "if-tmux", "jinja": false, "output_html": "markout/if-tmux/index.html", "long_description": "I do much of my work from tmux, I love it so much that I want to setup some Bash function to check if the shell is in a tmux session. I often open up vim to do some quite edits, but before I know it I have several Using  I am not quite sure if this i", "super_description": "I do much of my work from tmux, I love it so much that I want to setup some Bash function to check if the shell is in a tmux session. I often open up vim to do some quite edits, but before I know it I have several Using  I am not quite sure if this is proper use of the ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685a00>, next=<frontmatter.Post object at 0x7f345067f8e0>)"}, {"cover": "", "title": "Master No More", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/master-no-more.md", "description": "It https://waylonwalker.com/refactor-in-cli/ this post follows my method of refactoring code bases from the command line, First off browsing through the content", "content": "It's been a long time coming.  We use some very harsh language within tech so\nmuch sometimes that we become numb to it.  It's time to do my very small part\nin this movement and purge this language from my active repos starting with\nthis blog right here.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/refactor-in-cli/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/refactor-in-cli-og_250x140.png\" alt=\"article cover for \n Large Refactor At The Command Line\n\"/>\n          <p><strong>\n Large Refactor At The Command Line\n</strong></p>\n      </a>\n  </div>\n\n\n> this post follows my method of refactoring code bases from the command line,\n> read more about that in this article.\n\n## c-s-f\n\nFirst off browsing through the content of my blog I found many references to master.  I cannot completely whole-sale find and replace each one of them, because some of them are links that I do not own.  Any set of instructions got upgraded from `master` to `main`\n\n\n``` diff\n-  git checkout master\n+  git checkout main\n```\n\nThere were countless cases of examples like this to comb through, but it feels good to have them purged of old language.\n\n\n## rename routes\n\n\nFollowing yesterdays post, I am going to rename my markdown files\n\n> /static/_redirects\n\n### shorteners\n\n``` diff\n- /gdfm              /blog/today-i-learned-git-diff-feature-master/\n- /blog/gdfm         /blog/today-i-learned-git-diff-feature-master/\n+ /gdfm              /blog/today-i-learned-git-diff-feature-main/\n+ /blog/gdfm         /blog/today-i-learned-git-diff-feature-main/\n```\n\n### redirect posts\n\n``` diff\n+ # master -> main\n+\n+ /blog/today-i-learned-git-diff-feature-master/   /blog/git-diff-feature-main/\n```\n\n### redirect external links to repo\n\n``` diff\n- /redirects      https://github.com/WaylonWalker/waylonwalkerv2/edit/master/static/_redirects\n+ /redirects      https://github.com/WaylonWalker/waylonwalkerv2/edit/main/static/_redirects\n```\n\nMore info on refactoring your blog routes with netlify here.\n\n[![gracefully redirect cover image](https://images.waylonwalker.com/gracefully-redirect.png)](https://waylonwalker.com/gracefully-redirect/)\n\n\n## _\"Edit This post\"_ Links\n\nI literally just added _\"edit this post\"_ links to my rss feed and my blog feed.  This was a simple find and replace inside of my blog template and `gatsby-config.js`\n\n## Don't Forget about CI\n\nIf you have build/deploy processes that specifically run on master or not on master dont forget to change those to main.  I did everything in a single commit and as soon as I pushed to main it started deploying gloriously.\n\n``` diff\nname: \ud83c\udf31 Deploy site\n\non:\n  push:\n    branches:\n-      - master\n+      - main\n```\n\n## Now the fun part\n_removing **master** completely_\n\nI mostly just followed this [post by Scott Hanselman](https://www.hanselman.com/blog/EasilyRenameYourGitDefaultBranchFromMasterToMain.aspx).\n\n``` bash\ngit branch -m master main\ngit push -u origin main\n```\n\nThen from GitHub go to settings>default branch> select main and accept the risk involved.\n\nAfter your default is set to main, you have no use for master in your life anymore, time to purge it completely once and for all.  Go to <repo>/branches and trash it.\n\n![delete master](https://images.waylonwalker.com/delete-master.png)\n\n\n## Stop the Bleeding\n\n\nI like how Scott included this nice alias for starting from main from the beginning.\n\n``` bash\ngit config --global alias.new '!git init && git symbolic-ref HEAD refs/heads/main'\n```\n\n## See the Full Diff\n\nIf you happen to want to see the full diff of my change you can see it [here](https://github.com/WaylonWalker/waylonwalkerv2/commit/4bd26ba8faaf7c72e01cc4946d989e3284302cd0).\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/minimal-kedro-pipeline'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Minimal Kedro Pipeline</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/markdown-cli'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Markdown Cli</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-11", "edit_link": "https://github.com/edit/main/pages/blog/master-no-more.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573974", "datetime": "2020-06-11 00:00:00+00:00", "slug": "master-no-more", "jinja": false, "output_html": "markout/master-no-more/index.html", "long_description": "It https://waylonwalker.com/refactor-in-cli/ this post follows my method of refactoring code bases from the command line, First off browsing through the content of my blog I found many references to master.  I cannot completely whole-sale find and re", "super_description": "It https://waylonwalker.com/refactor-in-cli/ this post follows my method of refactoring code bases from the command line, First off browsing through the content of my blog I found many references to master.  I cannot completely whole-sale find and replace each one of them, because some of them are links that I do not own.  Any set of instructions got upgraded from  There were countless cases of examples like this to comb through, but it feels good to have them purged of old language. Following y", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679040>, next=<frontmatter.Post object at 0x7f345067f0d0>)"}, {"cover": "", "title": "Comprehensive guide to creating kedro nodes", "tags": ["kedro", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/kedro-node.md", "description": "The Kedro node is an essential part of the pipeline.  It defines what catalog https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this po", "content": "The Kedro node is an essential part of the pipeline.  It defines what catalog\nentries get passed in, what function gets ran, and the catalog entry to save\nthe results under.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> \ud83d\udc46 Unsure what kedro is?  Check out this post.\n\n## The node function\n\nThe node function is the most common and reccomended way to define kedro nodes.\nIt is a function that constructs and returns `Node` objects for you.\n\n## Creating your first kedro node\n\n``` python\nfrom kedro.pipeline import node\n\ndef identity(df):\n    \"a function that returns itself\"\n    return df\n\nmy_first_node = node(\n   func=identity,\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['int',]\n   )\n```\n\n### function\n\nThe `func` passed into node can be any callable that accepts the inputs yout\nhave specified, and returns the correct output that you specify as your output.\n\n* any callable\n* a function you write\n* a function from a library\n* class constructor\n* lambda function\n* partial function\n* literally any callable\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-inputs/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-inputs-og_250x140.png\" alt=\"article cover for \n How Kedro handles your inputs\n\"/>\n          <p><strong>\n How Kedro handles your inputs\n</strong></p>\n      </a>\n  </div>\n\n\n> For more information on how kedro passes inputs into your functions check out\n> this post\n\n``` python\nimport pandas as pd\nfrom kedro.pipeline import node\n\nrange_node = node(lambda: range(100), None, \"range\", name=\"range\"),\ndataframe_node = node(pd.DataFrame, \"range\", \"df\"),\n```\n\n#### Using a lambda as a function\n\nI keep my nodes short and sweet.  They do one thing and do it well. I turn\nalmost every DataFrame transformation into its own node.  It makes it must\neasier to pull catalog entries, than firing up the pipeline, running it,\nand starting a debugger.  For this reason many of my nodes are build from\ninline lambdas.\n\n``` python\nfrom kedro.pipeline import node\n\nmy_first_node = node(\n   func=lambda x: x,\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['int',]\n   )\n\nmy_first_node = node(\n   func=lambda cars: cars[['mpg', 'cyl', 'disp',]].query('disp>200'),\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['pri',]\n   )\n```\n\n#### Using a partial function\n\nI prefer the simplicity of lambdas, but many others prefer using a partial as\nit can yield a better docstring, node name, and easier to reuse.  I name all of\nmy nodes anyways, never look at the docstring of a partial, and almost always\nonly use them on a single node or set of nodes constructed together.  So I\nprefer the readablility of the lambda most of the time, but if you like\npartials better, or need to assign it to a variable and reuse it, here are some\npartial examples.\n\n``` python\nfrom kedro.pipeline import node\nfrom functools import partial, update_wrapper\n\ndef divide(array, by):\n    return [i/by for i in array]\n\nhalfer = update_wrapper(partial(divide, by=2), divide)\n\nmy_halfer_node = node(\n   func=halfer,\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['int',]\n   )\n```\n\nWe can achieve the same results that the partial gave with this lambda.\n\n``` python\nmy_halfer_node = node(\n   func=lambda array: divide(array, 2),\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['int',]\n   )\n```\n\nTo further show the point that any callable can be out node's `func`, I have\nmade a partial from the `pd.DataFrame` class that has column names pre\npopulated.\n\n``` python\nfrom kedro.pipeline import node\nimport pandas as pd\nfrom functools import partial, update_wrapper\n\nMyDataFrame = update_wrapper(partial(pd.DataFrame, columns=[\"mycol\"]), pd.DataFrame)\n\nrange_node = node(lambda: range(100), None, \"range\", name=\"range\"),\ndataframe_node = node(MyDataFrame, \"range\", \"df\"),\n```\n\n### inputs/outputs\n\nkedro inputs and outputs can be `None`, a catalog entry, or a dict mapping the functions\nkeyword arguments to catalog entries.  Catalog entries are always represented\nas a string matching the key of the catalog entry you want to load.\n\n#### None\n_no catalog entries_\n\nSometimes you may want to have a node without any inputs.  This node may be\nused to generate some data from scratch, or fetch some data that does not have\nan existing DataSet type setup.  DataSets are easy to setup, simply fork one of\nkedros built in ones and use it, but for one or two nodes the setup may not be\nworth it.\n\n``` python\nfrom kedro.pipeline import node\n\nrandom_100_node = node(\n   func=lambda: random.sample(range(0, 100), 100),\n   inputs=None,\n   output='random_100',\n   name='create_random_100',\n   )\n```\n\n#### str\n_one catalog entry_\n\nThis is by far the most common input that you will use.  This will simply tell\nkedro what dataset to load behind the scenes and passin to the function that\nyou provide.\n\n``` python\nfrom kedro.pipeline import node\n\nrandom_100_node = node(\n   func=lambda random_100: [x**2 for x in random_100],\n   inputs='random_100',\n   output='random_squared',\n   name='create_random_squared',\n   )\n```\n\n> Note, I am using a lot of lambdas here for simplicity as each function so far\n> is a simple one-liner.  These could also be a regular function if you are\n> uncomfortable with lambdas.\n\n#### list\n_several catalog entries, passed in by position_\n\nIn order to start passing in more than one DataSet into a kedro node you need\nto use a list or dictionary as the input.  Using a list is convenient for a\nsmall number of inputs.\n\n``` python\nfrom kedro.pipeline import node\n\nrandom_100_node = node(\n   func=lambda random_100, random_squared: list(zip(random_100, random_squared)\n   inputs=['random_100', 'random_squared'],\n   output='random_join',\n   name='create_random_join',\n   )\n```\n\n\n#### dict\n_several catalog entries, passed in by name_\n\nkedro will unpack dictionaries into your function if you pass in a dictionary.\nIn code review I start suggesting converting from a list to dict at 3 and\nrequire it above 5.  It gets way too hard to refactor and move things while\nkeeping track of the order of really long sets of inputs.  Passing them in by\nname, as a dictionary, makes it such that order no longer matters.\n\n``` python\nfrom kedro.pipeline import node\n\nrandom_100_node = node(\n   func=lambda x, y: list(zip(x, y)),\n   inputs={'x': 'random_100', 'y':'random_squared'},\n   output='random_join',\n   name='create_random_join',\n   )\n```\n\n> Switch from list to dict inputs between 3 and five inputs to improve\n> readability and prevent ordering mistakes.\n\n### tags\n\nTags provide an easy way to add a label nodes for something to interact with\nthem.  This may be a node that we want a plugin to modify or a set of nodes\nthat we want quick access to during development.\n\nTags are always passed in as a list of strings.  They must be a 1-d data\nstructure.  You may create that data structure however you want, but its still\njust a list of strings.  Below I have set a global variable `TAGS` that I want\nto apply to every node within a given module, then I splat it into every nodes\ntags.  This lets me easily apply a whole set of tags to an entire module of\nnodes.  I can easily modify that list of nodes if I wanted to, but its acually\nrare that I do.\n\n``` python\nTAGS = ['cars']\n\nmy_first_node = node(\n   func=identity,\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['int', *TAGS]\n   )\n\n```\n\n``` python\n# get a pipeline of one node\none_node = pipeline.only_nodes_with_tags('int')\n\n# get a pipeline of a few nodes\none_node = pipeline.only_nodes_with_tags('raw', 'int')\n```\n\n### name\n\nThe name attribute is simple, it's the name of the node.  Later you can use the\nname to find the node or all nodes named a particular way.  This name will also\nshow up in the logs provided by kedro or a plugin so naming things well makes\neverything much easier to read.\n\n\nConsistent naming makes it easier to do things like extracting nodes out of a\npipeline, running them, and making pipelines from them.\n\n``` python\n# get a pipeline of one node\none_node = pipeline.only_nodes('a_raw_cars')\n\n# get a pipeline of a few nodes\none_node = pipeline.only_nodes('a_raw_cars', 'a_raw_trains')\n\n# create a pipeline by nodes that contain 'raw' in the name\nraw_nodes = Pipeline([node for node in pipeline.nodes if 'raw' in node.name])\n```\n\n> \u26a0\ufe0f filtering by name requires a bit of diligence and consistency by the team,\n> its a fantastic way to grab some nodes adhoc, but for production you probably\n> want something a bit more robust.\n\n## Using PartitionedDataSets\n\n```python\ndef timeseries_partitioned(cars: Dict):\n    return {k:len(car()) for k, car in cars.items()}\n\nnodes.append(\n        node(\n            func=timeseries_partitioned,\n            inputs='int_cars_partitioned',\n            outputs='int_cars_timeseries_partitioned',\n            name='create_int_cars_timeseries_partitioned',\n            )\n        )\n```\n\n## Using IncrementalDataSets\n\n```python\ndef timeseries_incremental(cars: Dict):\n    return {k:len(car) for k, car in cars.items()}\n\nnodes.append(\n        node(\n            func=timeseries_incremental,\n            inputs='int_cars_incremental',\n            outputs='int_cars_timeseries_incremental',\n            name='create_int_cars_timeseries_incremental',\n            )\n        )\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-incremental-versioned-datasets/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-incremental-versioned-datasets-og_250x140.png\" alt=\"article cover for \n Incremental Versioned Datasets in Kedro\n\"/>\n          <p><strong>\n Incremental Versioned Datasets in Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information in incremental and partitioned datasets see this post\n\n---\n\nThis may be a separate post on the pipeline object\n\n## Execution order\n\nExecution order is set by resolving catalog dependencies.  I imagine kedro\ntaking a razer blade tool and slicing out all nodes with completed\ndependencies, throwing those in a bag drawing them out one by one randomly,\nthen when the bag is full it slices more out and repeats until there are no\nmore nodes.  This idea of randomness can be really maddening when there are two separate issues on your pipeline.  If you are debugging an error in your pipeline run the erroring node by itself.\n\n> \ud83d\udd25  If you are debugging an error in your pipeline run the erroring node by itself.\n\n## Running specific nodes\n_the power of the DAG_\n\nOne of the greatest benefits of using kedro is that it gives you a Pipeline\nobject that is a DAG.  This is a powerful object that can quickly pull decide a\nset of nodes to run when you tell it to run to or from somewhere.  Somewhere\nbeing either a catalog entry or node.\n\n> DAG (directed acyclic graph) is a fancy word for a data structure that may\n> branch and join, but may not loop\n\n### by name\n\n### by tag\n\n### to_inputs\n\n### to_outputs\n\n### from_inputs\n\n### from outputs\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/vim-diffsplit'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to compare two files in vim</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/master-no-more'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Master No More</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-03", "edit_link": "https://github.com/edit/main/pages/blog/kedro-node.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573981", "datetime": "2021-06-03 00:00:00+00:00", "slug": "kedro-node", "jinja": false, "output_html": "markout/kedro-node/index.html", "long_description": "The Kedro node is an essential part of the pipeline.  It defines what catalog https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. The node function is the most common and reccomended way to define kedro nodes. The  a", "super_description": "The Kedro node is an essential part of the pipeline.  It defines what catalog https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. The node function is the most common and reccomended way to define kedro nodes. The  any callable a function you write a function from a library class constructor lambda function partial function literally any callable https://waylonwalker.com/kedro-inputs/ For more information on how kedro passes inputs into your functions check out ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b38b0>, next=<frontmatter.Post object at 0x7f34506b3d30>)"}, {"cover": "", "title": "How to compare two files in vim", "tags": ["linux", "vim"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/vim-diffsplit.md", "description": "prev Large Refactor At The Command Line next Comprehensive guide to creating kedro nodes", "content": "``` vim\n:vert diffsplit filetwo.py\n```\n\n``` vim\n:diffthis\n```\n\n``` vim\n:diffoff\n```\n\n``` vim\n:Gdiff main\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/refactor-in-cli'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Large Refactor At The Command Line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-node'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Comprehensive guide to creating kedro nodes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-06", "edit_link": "https://github.com/edit/main/pages/blog/vim-diffsplit.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573987", "datetime": "2021-05-06 00:00:00+00:00", "slug": "vim-diffsplit", "jinja": false, "output_html": "markout/vim-diffsplit/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3e50>, next=<frontmatter.Post object at 0x7f345063b430>)"}, {"cover": "", "title": "Large Refactor At The Command Line", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/refactor-in-cli.md", "description": "As projects grow patterns that worked early on break and we need to change things to make the project easier to work with, and more welcoming to new developers.", "content": "As projects grow patterns that worked early on break and we need to change things to make the project easier to work with, and more welcoming to new developers.\n\n## git\n\nBefore you start mucking up a project with wild commands at the terminal check that you have a super clean git status. We may make some mistakes and need a way to undo 100's files and git makes it really easy if you start with a clean history.\n\n```bash\ngit status\n```\n\nIf we are ready to begin work we should see a response like this.\n\n``` bash\nOn branch main\nnothing to commit, working tree clean\n```\n\nIt would also be wise to do this inside of a branch.  The minute you try to do something wild in your working branch someone will walk by and ask you to do a five-minute task, but your deep in refactoring and haven't left yourself a clean way back.\n\n``` bash\ngit branch my-big-refactor\n```\n\n## grepr\n\nTime for the meat of this refactor replacing text across our project.  I often will pop this bash function into my terminal session and tweak it as needed. This function is called `grepr` for `grep` then `replace`.  It will recursively search for a given pattern inside your working directory, then use `sed` to replace that pattern with another.\n\n``` bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s/$1/$2/g\"}\n```\n\nIf your pattern contains `/` characters such as for URLs you can swap the `/`'s in the `sed` command for `|`'s.\n\n``` bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s|$1|$2|g\"}\n```\n\nYou can find this function and more of my bash notes.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/bash/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/bash-og_250x140.png\" alt=\"article cover for \n \ud83d\udcdd Bash Notes\n\"/>\n          <p><strong>\n \ud83d\udcdd Bash Notes\n</strong></p>\n      </a>\n  </div>\n\n\n\n## Example\n\nI recently flattened this blog so blogs are under the top-level rather than under `/blog` and I used this technique to swap internal links to the new format.\n\n``` bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s|$1|$2|g\"}\n\n\ngrepr \"https://waylonwalker.com/blog/\" \"https://waylonwalker.com/\"\n```\n\n## git diff\n\nAfter running the replace command the first thing I want to see is everything that changed.  Looking at git diff will highlight exactly what changed since our last commit.\n\n``` bash\ngit diff\n```\n\n## Work in small steps\n\nIf you're happy with the results commit them now.  It's best to do these commands that have a large effect on the entire project in small steps.\n\n``` bash\ngit add .\ngit commit -m \"moved routes from /blog to /\"\n```\n\nWorking in small steps gives us an easy way to undo steps that may have been a mistake before it's too late.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/master-no-more/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/master-no-more-og_250x140.png\" alt=\"article cover for \n Master No More\n\"/>\n          <p><strong>\n Master No More\n</strong></p>\n      </a>\n  </div>\n\n\n\n> I used the technique from this post to switch master to main on my blog.\n\n## git reset\n_How I do Mass Undo_\n\n**be careful** work from a branch, make sure you started clean\n\nLet's say I wanted to change every occurrence of one variable name to another.\nLets try to replace replace `pandas.CSVDataSet` with `pandas.ParquetDataSet`.\n\n``` bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s|$1|$2|g\"}\n\n\ngrepr \"pandas.CSVDataSet\" \"pandas.ParquetDataSet\"\n```\n\nUpon inspection of the `git diff` we notice that there was an unintentional change to the `docs/standard-storage.md` file. To revert the entire change we can run.\n\n**note** These resets are irreversible.  Make sure that you started with a clean `git status` and you are confident that you didn't have any work on your machine, not in the remote repo.\n\n_<small><mark>match the remote and wipe out any changes</mark></small>_\n``` bash\ngit reset --hard origin/main\n```\n\n_<small><mark>match our last commit</mark></small>_\n``` bash\ngit reset --hard HEAD\n```\n\n## agr\n\nI have an alternative version that I occasionally use as well that utilizes the silver searcher `ag`.  It does a great job at following your .gitignore rules with no fuss, and can filter down to file extensions simply with flags like `--md`\n\n```bash\nagr() {ag -l \"$1\" | xargs sed -i \"s/$1/$2/g\"}\n```\n\n## git clean\n_how I remove untracked files_\n\nSometimes our refactoring requires moving files around. If we want to undo steps like this git will not clean up untracked files.\n\n``` bash\nmv conf/base/sales-catalog.yml conf/base/sales/catalg.yml\n```\n\n_<small><mark>clean up untracked files</mark></small>_\n``` bash\ngit clean -f\n```\n\n_<small><mark>clean up untracked directories</mark></small>_\n``` bash\ngit clean -d\n```\n\n\n_<small><mark>clean up ignored files</mark></small>_\n``` bash\ngit clean -x\n```\n\n`-x` can be a bit dangerous, be careful with it.  You can lose significant time by wiping out a `node_modules`, `venv`, or credentials.\n\n## git  checkout\n_How I undo single files_\n\nIf our command was mostly successful, but just a few extra files were touched I will manually revert them with `git checkout <filename>`\n\n``` bash\ngit checkout conf/base/supply-catalog.yml\n```\n\n## git checkout --\n_How I undo an entire directory_\n\nSometimes we need to undo an entire directory.  This command will undo changes\nto all of the tracked files in the repo.\n\n``` bash\ngit checkout -- /src/pages/blog\n```\n\n## gitui\n\nI really love using `gitui` as a handy terminal interface to browse logs, diffs, and commit a few files at a time.  It starts up crazy fast and is very intuitive to navigate through diffs of changes like this one file at a time if the `git diff` gets too overwhelming.\n\nhttps://github.com/extrawurst/gitui/\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reset-ipython'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Reclaim memory usage in Jupyter</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reasons-to-kedro-notes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Reasons to Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-30", "edit_link": "https://github.com/edit/main/pages/blog/refactor-in-cli.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573993", "datetime": "2020-12-30 00:00:00+00:00", "slug": "refactor-in-cli", "jinja": false, "output_html": "markout/refactor-in-cli/index.html", "long_description": "As projects grow patterns that worked early on break and we need to change things to make the project easier to work with, and more welcoming to new developers. Before you start mucking up a project with wild commands at the terminal check that you h", "super_description": "As projects grow patterns that worked early on break and we need to change things to make the project easier to work with, and more welcoming to new developers. Before you start mucking up a project with wild commands at the terminal check that you have a super clean git status. We may make some mistakes and need a way to undo 100 If we are ready to begin work we should see a response like this. It would also be wise to do this inside of a branch.  The minute you try to do something wild in your", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696af0>, next=<frontmatter.Post object at 0x7f3450672610>)"}, {"cover": "", "title": "tmux slect-pane", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-select-pane.md", "description": "https://youtu.be/CPZJZjN9YTY These are my MOST often used keybindings that I use in tmux.  They allow me to https://waylonwalker.com/tmux-nav-2021/ for more inf", "content": "https://youtu.be/CPZJZjN9YTY\n\nThese are my MOST often used keybindings that I use in tmux.  They allow me to\njump between splits with ease with a vim style layout.  I can hold mod and jump\nbetween panes with a familiar arrow key.\n\n``` bash\nbind -n M-h select-pane -L\nbind -n M-l select-pane -R\nbind -n M-k select-pane -U\nbind -n M-j select-pane -D\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-show-messages'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux show-messages</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-select-layout'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux select-layout</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-23", "edit_link": "https://github.com/edit/main/pages/blog/tmux-select-pane.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.573999", "datetime": "2021-07-23 00:00:00+00:00", "slug": "tmux-select-pane", "jinja": false, "output_html": "markout/tmux-select-pane/index.html", "long_description": "https://youtu.be/CPZJZjN9YTY These are my MOST often used keybindings that I use in tmux.  They allow me to https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "super_description": "https://youtu.be/CPZJZjN9YTY These are my MOST often used keybindings that I use in tmux.  They allow me to https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506469d0>, next=<frontmatter.Post object at 0x7f3450696c40>)"}, {"cover": "", "title": "https://waylonwalker.com/how-i-deploy-2022", "tags": ["blog"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/how-i-deploy-2021.md", "description": "Content at the speed of thought. well, as fast as I can type Mechanical Engineering Data Engineering Terminal Junkie Please ask questions in slido # 983 911 | A", "content": "## How I Continuously Deliver Content to my Blog with Markdown, GitHub, Python, and netlify\n\nContent at the speed of thought.\n\n> well, as fast as I can type\n\n## Me\n\n* Mechanical Engineering\n* Data Engineering\n* Terminal Junkie\n\n## Ask Questions in slido\n\nPlease ask questions in slido # 983 911 | App Dev 1 Track\n\n## Slido Poll\n\nDo **you** have a personal blog / notes / website?\n\n> * Yes - Static, built with python\n> * Yes - I manage a server running python\n> * Yes - Not python\n> * No\n\nwe will circle back around in a few minutes\n\n## I'll give away my answer\n\n* Yes - Static, built with python\n\n## Slack Channel: #track-1-appdev\n\nIf you are in the slack give me a \ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\n\nLet's light up slack \ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\n\n## 4 parts\n\n* Why\n* My workflow\n* Under the hood\n* Open Source\n\n## Part 1 WHY\n\n## 2016\n\n## I want to own my content\n\nTwitter is a great networking tool, but it's rare to see anything more\nthan a few hours old.\n\n## I want to own my content\n\nNo one can take my domain or shut down the platform that my content is on.\n\n## Some of my Stats\n\n* 48 Google top 10 ranking pages\n* 6500 monthly clicks on google\n* 12k page monthly views\n\n> from ahrefs and google search console\n\n## [Learn In Public](https://www.swyx.io/learn-in-public/)\n\nI'm creating learning exhaust.\n\n> Inspired by [swyx](https://www.swyx.io/learn-in-public/)\n> https://www.swyx.io/learn-in-public/\n\n## from swyx\n\n> Whatever your thing is, make the thing you wish you had found when you\n> were learning. Don\u2019t judge your results by \u201cclaps\u201d or retweets or\n> stars or upvotes - just talk to yourself from 3 months ago. I keep an\n> almost-daily dev blog written for no one else but me.\n\n\n## Focus on content\n\nI could not do any of this if I was focused on Building rather than\nwriting.\n\n## Focus on content\n\nNo one needs elastic search navigate your first 50 posts.\n\n> when you are starting\n\n## Focus on content\n\nNo one is going to make comments.\n\n> when you are starting\n\n## Write for yourself\n\nYou are your biggest audience out of the gate.\n\n> If you continue writing others like you will find you\n\n## Don't worry about the Trolls\n\nNo one is going to take your python keys away.\n\n## Slido Check\n\nPlease ask questions in slack/slido\n\n## Part 2 Workflow and tools\n\n> To the meat of the talk\n\n1. Let's start by making a post\n2. then show how it works under the hood\n\n## If you take away anything\n\nFocus on content that you want to consume.\n\n## My Flow\n\n``` txt\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502  TIL  \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u2502             \u2502\n     \u2514\u2500\u25ba\u2502    Posts    \u2502\n        \u2502             \u2502\n        \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n          \u2502\n          \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2514\u2500\u2500\u25ba\u2502    YouTube     \u2502\n          \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n          \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2514\u2500\u2500\u25ba\u2502    Conference  \u2502\n              \u2502    Talks       \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n## Let's start with a Til\n_the process_\n\n### shoutout to @[jbrancha](https://twitter.com/jbrancha)\n\nCheck out his amazing [til repo](https://github.com/jbranchaud/til)\n\n> If you ask google very many questions about git, you will end up\n> finding him on the top\n\n## Copier\n\nI use [copier](https://copier.readthedocs.io/en/stable/) for single file\ntemplates.\n\n\n## Copier give me a new page\n\nHow I Present from the terminal with lookatme\nlookatme-slides\n\n``` bash\ncopier copy ~/.copier-templates/`ls ~/.copier-templates |\\\n    fzf --header $(pwd) --preview='tree ~/.copier-templates/{} |\\\n    lolcat'` . \\\n```\n\n## nvim open my file\n\n!TIP Once it starts getting uncomfortable to find posts, its nice to have\ngood shortcuts to get around.\n\n> I have about 700 files on my blog to sift through\n\n## nvim open my file\n\n``` bash\nmarkata list --map path --filter 'templateKey==\"til\"' --sort date --reverse\n```\n\n``` vim\nnnoremap geil <cmd>Telescope find_files find_command=markata,list,--map,path,--filter,templateKey=='til',--sort,date,--reverse<cr>\n```\n\n## Paste in a snippet\n\nOften times I am working away on some sort of project, and I just need\nto save a snippet for a later post.\n\n## Write the content\n\nLater I come back and fill in the content.\n\n## git push\n\nI have a vim hotkey `gic` to commit my current file, and `gpp` to push\nit.\n\n## It's nearly live\n\nIt will be live within a few minutes.\n\n## Cross Post\n\nI've tried to cross post to more, but it really gets overwhelming.\n\n* Twitter\n* dev.to\n\n## Cross Post\n\nI have a plugin to convert my markdown to a more dev.to friendly format.\n\n## Slido Check\n\nLet'g grab a question from slack/slido\n\n## Part 3 How it's deployed\n\nIn March of 2021 I made the big switch from a javascript based framework\nto my own ssg.\n\n## I thought it would be easy....\n\nThere are a bunch of open source libraries that do all the things I need\nan ssg to do.\n\n## Moving to python\n\nOne of the biggest selling points to moving back to python was that I\nuse it every day and know the ecosystem much better.\n\n* [ipython](https://ipython.org/)\n* [pyinstrument](https://github.com/joerick/pyinstrument)\n* breakpoint\n\n## Part 3 How it's deployed\n_word of caution_\n\nThis part might be a lot of code coming quick.\n\n* Show how it comes together\n* Link to the slides\n\n## Everything is markdown\n\n``` python\npymdown-extensions\npython-frontmatter\n```\n\n## frontmatter\n\nAll the metadata is defined in yaml frontmatter and read in with the\n[python-frontmatter](https://github.com/eyeseast/python-frontmatter)\nlibrary.\n\n``` yaml\n---\ntemplateKey: blog-post\ntags: ['webdev', 'meta' ]\ntitle: How I deploy my blog in 2022\ndate: 2021-10-29\nstatus: draft\n\n---\n```\n\n## setting up extensions\n\nmarkata supports [pymdown-extensions](https://facelessuser.github.io/pymdown-extensions/)\n\n``` python\nDEFAULT_MD_EXTENSIONS = [\n    \"markdown.extensions.toc\",\n    \"markdown.extensions.admonition\",\n    \"markdown.extensions.tables\",\n    \"markdown.extensions.md_in_html\",\n    \"pymdownx.magiclink\",\n    \"pymdownx.betterem\",\n    \"pymdownx.tilde\",\n    \"pymdownx.emoji\",\n    \"pymdownx.tasklist\",\n    \"pymdownx.superfences\",\n    \"pymdownx.highlight\",\n    \"pymdownx.inlinehilite\",\n    \"pymdownx.keys\",\n    \"pymdownx.saneheaders\",\n    \"codehilite\",\n]\n```\n\n## setting the markdown object\n\n``` python\nself.markdown_extensions = [\n    *DEFAULT_MD_EXTENSIONS,\n    *markdown_extensions\n]\nself.md = markdown.Markdown(\n    extensions=self.markdown_extensions\n)\n```\n\n## [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n\n* comes from pytest\n* allows users to easily modify the framework to their liking\n\n> one of the biggest reasons I started down this path is that I wanted\n> to build my own plugins all the way down framework.\n\n## [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n\n[Pluggy](https://pluggy.readthedocs.io/en/stable/) is what I use to\nimplement my lifecycle.\n\n* configure\n* glob\n* load\n* pre_render\n* render\n* post_render\n* save\n\n## Pluggy\n\nPluggy allows the framework to crate a `hook_spec` and plugin authors to\nimplement hooks with the `hook_impl`.\n\n``` python\n\"\"\"Define hook specs.\"\"\"\nimport pluggy\n\n\n# the framework's definition\nhook_spec = pluggy.HookspecMarker(\"markata\")\n\n# the plugin author's implementation\nhook_impl = pluggy.HookimplMarker(\"markata\")\n```\n\n## creating the hookspec\n\nIt's an empty class.\n\n``` python\nclass MarkataSpecs:\n    \"\"\"\n    Namespace that defines all specifications for Load hooks.\n\n    glob -> load -> render -> save\n    \"\"\"\n\n    @hook_spec\n    def glob(self, markata: \"Markata\") -> None:\n        \"\"\"Glob for files to load.\"\"\"\n        pass\n\n    @hook_spec\n    def load(self, markata: \"Markata\") -> None:\n        \"\"\"Load list of files.\"\"\"\n        pass\n\n    @hook_spec\n    def pre_render(self, markata: \"Markata\") -> None:\n        \"\"\"Pre render content from loaded data.\"\"\"\n        pass\n\n    @hook_spec\n    def render(self, markata: \"Markata\") -> None:\n        \"\"\"Render content from loaded data.\"\"\"\n        pass\n\n    @hook_spec\n    def post_render(self, markata: \"Markata\") -> None:\n        \"\"\"Post render content from loaded data.\"\"\"\n        pass\n\n    @hook_spec\n    def save(self, markata: \"Markata\") -> None:\n        \"\"\"Save content from data.\"\"\"\n        pass\n```\n\n## creating the plugin manager\n\n``` python\npm = pluggy.PluginManager(\"markata\")\npm.add_hookspecs(hookspec.MarkataSpecs)\n\n# register hooks\nfor hook in config.hooks:\n    plugin = importlib.import_module(hook)\n    pm.register(plugin)\n```\n\n## Diskcache\n\n[Diskcache](https://github.com/grantjenks/python-diskcache/) allows you\nto setup a persistent cache layer.\n\n``` python\ncache = FanoutCache(self.MARKATA_CACHE_DIR, statistics=True)\n```\n\n## make a key\n\nTo set soemthing to cache we need a unique identifier.\n\n``` python\ndef make_hash(self, *keys: str) -> str:\n    str_keys = [str(key) for key in keys]\n    return hashlib.md5(\"\".join(str_keys).encode(\"utf-8\")).hexdigest()\n```\n\n## make a key\n\nFrom my plugins I cache anything that the function I run touches.\n\n* plugin code\n* article content\n* article frontmatter\n\n``` python\nfrom pathlib import Path\n\nkey = make_hash(Path(__file__).read_text(), article.content, article.metadata['title'])\n```\n\n## accessing the cache\n\nNow that we have a cache and a key we can ask the cache for values.\n\n``` python\nhtml_from_cache = cache.get(key)\n```\n\n## if it's not yet been set\n\nIf the content is not yet set or has expired, you will get `None` back and need\nto create the value.\n\n``` python\nhtml_from_cache = cache.get(key)\nif html_from_cache is None:\n    html = markata.md.convert(article.content)\n    cache.add(key, html, expire=15 * 24 * 60)\nelse:\n    html = html_from_cache\n```\n\n## Configuration\n\n[anyconfig](https://github.com/ssato/python-anyconfig) is a great tool\nto pull your config from generic config files.\n\n* markta.toml\n* markta.yaml\n* markta.ini\n* pyproject.toml\n\n## Configuration\n\nAnyconfig needs a `path`, `parser`, and `keys`.  The key is your tools\nprefix\n\n``` python\nimport anyconfig\n\nanyconfig.load(\n            path_specs= (Path() / f\"markata.toml\"),\n            ac_parser= \"toml\",\n            keys= ['markata'],\n        )\n```\n\n## Configuration\n\nEach key in the config files used with `anyconfig` must be prefixed with\nthe tool's name.\n\n```\n# markata.toml\n[markata]\ndefault_cache_expire = 1209600\n\n[markata.auto_description.description]\nlen=160\n```\n\n## Markata was born\n\nA plugins all the way doen static site generator written in python.\n\n* 6 lifecycle methods\n* 21 pre-defined plugins\n* cache store\n* toml based configuration\n\n## GitHub Actions\n\nRendering the site inside of github actions with the cache is pretty\nstraightforward with these four steps.  Keying off of the configuration will\nbust the cache every time we change the configuration.  You can hack a full\nrebuild by changing anything inside of the configuration file.\n\n\n## GitHub Actions\n\n``` yaml\n\n- name: Cache\nuses: actions/cache@v2\nwith:\n    path: .markata.cache\n    key: ${{ runner.os }}-${{ hashfiles('markata.toml') }}-markata\n\n- name: Set up Python 3.8\nuses: actions/setup-python@v1\nwith:\n    python-version: 3.8\n\n- name: install markata\nrun: pip install git+https://github.com/WaylonWalker/markata.git@develop python-twitter background # checksumdir\n\n- name: run markata\nrun: markata --no-rich\n```\n\n## GitHub Actions\n\n``` python\n- name: install markata\nrun: pip install git+https://github.com/WaylonWalker/markata.git@develop python-twitter background # checksumdir\n```\n\n> Note: I run bleeding edge, don't do that\n\n## Netlify\n\nI use deploy to netlify but any static site host would work.\n\n## Netlify -> Cloudflare Pages\n\nSince Making the title I've moved to Cloudflare pages.\n\n> Netlify is great, but I'm cheap and wanted analytics\n\n## Results\n\nmarkata.dev\n\nMarkdown to site, with seo, cover images, full works.\n\n* seo/og tags\n* cover images\n* frontmatter cleansing\n* feeds\n* rss\n* cli\n* sitemap\n* heading links\n* build profiler\n\n## Markata.dev\n\nIn early 2022 I packaged up my blog's backend as a package for others to use.\n\n## Markata.dev\n\nI now have several users running their site with what I have built\n\n* My buddy has a near clone of mine with 15 posts\n* Techdestructive\n\n## Markata.dev\n\n* plugins all the way down\n* use the parts you want\n* modify to your liking\n\n## Markata.dev\n\nIt lets you get started quick, write content early, and grow into your own platform\n\n## Markata.dev\n\n\u26a0 I'ts still very much beta\n\n## Open Source\n\n```\n# install it for your application\npip install markata\n\n# try it out\npipx run markata build\n```\n\n## quickstart\n\n```\nmkdir pages\necho '# My First Post' > first-post.md\necho '# Hello World' > hello-world.md\n```\n\n```\n# or if pipx is your thing\npix run markata build\n```\n\n## You can do it too\n\nDon't worry about having the perfect post, just make something that is\nuseful to you, and others who will find it.\n\n## Connect\n\n* [ twitter ](https://twitter.com/_WaylonWalker)\n* [ LinkedIn ](https://www.linkedin.com/in/waylonwalker/)\n* [ GitHub ](https://github.com/WaylonWalker)\n* [ Dev.to](https://dev.to/waylonwalker)\n* [ twitch ](https://www.twitch.tv/waylonwalker)\n\n\n## Links\n\n* [anyconfig](https://github.com/ssato/python-anyconfig)\n* [copier](https://copier.readthedocs.io/en/stable/)\n* [Diskcache](https://github.com/grantjenks/python-diskcache/)\n* [ipython](https://ipython.org/)\n* [jbrancha](https://twitter.com/jbrancha)\n* [Learn In Public](https://www.swyx.io/learn-in-public/)\n* [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n* [pyinstrument](https://github.com/joerick/pyinstrument)\n* [pymdown-extensions](https://facelessuser.github.io/pymdown-extensions/)\n* [python-frontmatter](https://github.com/eyeseast/python-frontmatter)\n* [swyx](https://www.swyx.io/learn-in-public/)\n* [til repo](https://github.com/jbranchaud/til)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/update-alternatives'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Update Alternatives in Linux</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-select-pane'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux slect-pane</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-29", "author": "@_waylonwalker", "styles": {"margin": {"bottom": 0, "left": 0, "right": 0, "top": 0}, "padding": {"bottom": 0, "left": 10, "right": 10, "top": 0}, "headings": {"1": {"bg": "default", "fg": "#ff66c4,bold,italics", "prefix": " \u21c1 ", "suffix": " \u21bd "}}, "quote": {"side": "\u2502", "style": {"bg": "default", "fg": "#aaa"}, "top_corner": "\u256d", "bottom_corner": "\u2570"}, "title": {"bg": "default", "fg": "#e1af66"}, "author": {"bg": "default", "fg": "#368ce2"}, "date": {"bg": "default", "fg": "#368ce2"}, "slides": {"bg": "default", "fg": "#368ce2"}}, "edit_link": "https://github.com/edit/main/pages/blog/how-i-deploy-2021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574005", "datetime": "2021-10-29 00:00:00+00:00", "slug": "how-i-deploy-2021", "output_html": "markout/how-i-deploy-2021/index.html", "long_description": "Content at the speed of thought. well, as fast as I can type Mechanical Engineering Data Engineering Terminal Junkie Please ask questions in slido # 983 911 | App Dev 1 Track Do  Yes - Static, built with python Yes - I manage a server running python ", "super_description": "Content at the speed of thought. well, as fast as I can type Mechanical Engineering Data Engineering Terminal Junkie Please ask questions in slido # 983 911 | App Dev 1 Track Do  Yes - Static, built with python Yes - I manage a server running python Yes - Not python No we will circle back around in a few minutes Yes - Static, built with python If you are in the slack give me a \ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25 Let Why My workflow Under the hood Open Source Twitter is a great networking tool, but it No one can take my dom", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063b310>, next=<frontmatter.Post object at 0x7f345063b550>)"}, {"cover": "", "title": "Update Alternatives in Linux", "tags": ["linux", "bash"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/update-alternatives.md", "description": "prev cmd.exe tips next https://waylonwalker.com/how-i-deploy-2022", "content": "``` bash\nupdate-alternatives --query python\n```\n\n``` bash\nupdate-alternatives: error: no alternatives for python\n```\n\n``` bash\nsudo update-alternatives --install /usr/local/bin/python python `which python3.8` 2\n# update-alternatives: using /usr/bin/python3.8 to provide /usr/local/bin/python (python) in auto mode\n\nsudo update-alternatives --install /usr/local/bin/python python `which python2.7` 5\n# update-alternatives: using /usr/bin/python2.7 to provide /usr/local/bin/python (python) in auto mode\n\nupdate-alternatives --query python\n# Name: python\n# Link: /usr/local/bin/python\n# Status: auto\n# Best: /usr/bin/python2.7\n# Value: /usr/bin/python2.7\n# \n# Alternative: /usr/bin/python2.7\n# Priority: 5\n# \n# Alternative: /usr/bin/python3.8\n# Priority: 2\n\nsudo update-alternatives --install /usr/local/bin/python python `which python3.8` 20\n# update-alternatives: using /usr/bin/python3.8 to provide /usr/local/bin/python (python) in auto mode\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/cmd-exe-tips'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>cmd.exe tips</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/how-i-deploy-2021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>https://waylonwalker.com/how-i-deploy-2022</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-20", "edit_link": "https://github.com/edit/main/pages/blog/update-alternatives.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574011", "datetime": "2021-11-20 00:00:00+00:00", "slug": "update-alternatives", "jinja": false, "output_html": "markout/update-alternatives/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063b1f0>, next=<frontmatter.Post object at 0x7f345063b8b0>)"}, {"cover": "", "title": "cmd.exe tips", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/cmd-exe-tips.md", "description": "cmd.exe tips", "content": "I spend a lot of my time at the terminal for my daily work, mostly in Linux or wsl.  One big reason for using wsl over cmd.exe is the ease of walking through history that fzf provides.  This week we had a windows bug in a cli and I was stuck in vanilla cmd.exe \ud83d\ude2d\n\n## > Cmder\n\n![](https://images.waylonwalker.com/main.png)\n\nFirst off if you are stuck using cmd.exe, do yourself a favor and get cmder.  It makes life just a bit easier.  It is super confugurable and comes with several power ups that make it a bit more enjoyable than cmd.exe.\n\n## History\n\n**F7** - Scroll through history\n\n**F8** - Search history based\n\n## Example\n\n![](https://images.waylonwalker.com/cmd_exe_history_2.gif)\n\n## .bat\n\nThe next simple technique is to save your commands into a .bat file. Any valid command ran with cmd.exe can be saved into a bat file and called again later by running it in the terminal.\n\n**save your command**\n\nuse f7/f8 to get your command back add `> filename.bat` at the end, hit the home key and add echo to the front.  **Do not** wrap with quotes.  This is not bash.\n\n``` bash\necho python cmd_example.py > cmd_example.bat\n```\n\n**>> append**\n\n``` bash\necho python cmd_example2.py >> cmd_example.bat\n```\n\n## type not cat\n\nTo ensure that you got the command right... and didn't forget that you were in cmd.exe instead of bash and add quotes. you will want to see the file contents. For this reach for **type** not **cat**.\n\n``` bash\ntype cmd_example.bat\n```\n\n**results**\n``` bash\npython cmd_example.py\npython cmd_example2.py\n```\n\n## Your quick tips\n\nlet me know what quick cmd.exe tips you have.\n\n[![tweet your tip](https://images.waylonwalker.com/2020-01-27 06-32-34_Microsoft Text Input Application.png \"tweet your tip\")](https://twitter.com/intent/tweet?text=@waylonwalker%20my%20favorite%20cmd.exe%20tip%20is%20...%20https%3A//waylonwalker.com/blog/cmd-exe-tips/ \"tweet your tip\")\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/codeit-bro-interview'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Codeit Bro Interview</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/chrome-extensions-i-use'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Chrome Extensions I use</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-23", "edit_link": "https://github.com/edit/main/pages/blog/cmd-exe-tips.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574017", "datetime": "2020-01-23 00:00:00+00:00", "slug": "cmd-exe-tips", "jinja": false, "output_html": "markout/cmd-exe-tips/index.html", "long_description": "I spend a lot of my time at the terminal for my daily work, mostly in Linux or wsl.  One big reason for using wsl over cmd.exe is the ease of walking through history that fzf provides.  This week we had a windows bug in a cli and I was stuck in vanil", "super_description": "I spend a lot of my time at the terminal for my daily work, mostly in Linux or wsl.  One big reason for using wsl over cmd.exe is the ease of walking through history that fzf provides.  This week we had a windows bug in a cli and I was stuck in vanilla cmd.exe \ud83d\ude2d First off if you are stuck using cmd.exe, do yourself a favor and get cmder.  It makes life just a bit easier.  It is super confugurable and comes with several power ups that make it a bit more enjoyable than cmd.exe. The next simple tec", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c820>, next=<frontmatter.Post object at 0x7f3450652d30>)"}, {"cover": "", "title": "tmux rotate-window", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-rotate-window.md", "description": "https://youtu.be/06z5qf81ofo Rotate window is the main way that I navigated tmux before I learned Default keybindings My keybindings look just a bit different t", "content": "https://youtu.be/06z5qf81ofo\n\nRotate window is the main way that I navigated tmux before I learned\n`select-pane`.  It allows you to change your focused pane, or rotate the\nposition of the panes easily.\n\n\nDefault keybindings\n\n``` bash\nbind-key        C-o rotate-window\nbind-key          o select-pane -t :.+\n```\n\nMy keybindings look just a bit different than the default ones, I do not like\nneeding to hit prefix for every command, especially for repeated commands.  I\nset a similar keybinding to the default one that uses mod instead of prefix.\n\n``` bash\nbind -n M-o select-pane -t :.+\nbind -n M-O rotate-window\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-select-layout'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux select-layout</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-resize-panes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux resize-panes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-22", "edit_link": "https://github.com/edit/main/pages/blog/tmux-rotate-window.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574024", "datetime": "2021-07-22 00:00:00+00:00", "slug": "tmux-rotate-window", "jinja": false, "output_html": "markout/tmux-rotate-window/index.html", "long_description": "https://youtu.be/06z5qf81ofo Rotate window is the main way that I navigated tmux before I learned Default keybindings My keybindings look just a bit different than the default ones, I do not like https://waylonwalker.com/tmux-nav-2021/ for more infor", "super_description": "https://youtu.be/06z5qf81ofo Rotate window is the main way that I navigated tmux before I learned Default keybindings My keybindings look just a bit different than the default ones, I do not like https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696c40>, next=<frontmatter.Post object at 0x7f34506c3b80>)"}, {"cover": "", "title": "tmux next/prev session", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-next-prev-session.md", "description": "https://youtu.be/8kZnjHPYnKU Now that we are splitting up work into their own sessions, lets talk about how https://waylonwalker.com/tmux-nav-2021/ for more inf", "content": "https://youtu.be/8kZnjHPYnKU\n\nNow that we are splitting up work into their own sessions, lets talk about how\nto navigate between them without the command line.  Navigating sessions is what\nkept me using a too many splits and windows workflow for far too long.  It was\nrough, I was always tripping over panes and windows until I got too frustrated\nand just ran `tmux kill-server`  to start on a new blank slate.\n\n``` bash\nbind -n M-P switch-client -p\nbind -n M-N switch-client -n\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-popups'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux popups</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-new-window'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux new-window</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-04", "edit_link": "https://github.com/edit/main/pages/blog/tmux-next-prev-session.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574030", "datetime": "2021-08-04 00:00:00+00:00", "slug": "tmux-next-prev-session", "jinja": false, "output_html": "markout/tmux-next-prev-session/index.html", "long_description": "https://youtu.be/8kZnjHPYnKU Now that we are splitting up work into their own sessions, lets talk about how https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "super_description": "https://youtu.be/8kZnjHPYnKU Now that we are splitting up work into their own sessions, lets talk about how https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506e83a0>, next=<frontmatter.Post object at 0x7f3450685f70>)"}, {"cover": "", "title": "Waylon Walker", "tags": ["linux", "bash", "datascience"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/about.md", "description": "\ud83d\udc4b Hi, I am Waylon Walker.  I Love creating things on the web, learning, and I am currently a Data Analytics team lead where I do a lot of code review, pair", "content": "\ud83d\udc4b Hi, I am Waylon Walker.  I Love creating things on the web, learning, and\nteaching others.  I created my blogging platform from scratch to learn about\nbuilding tools with pluggy and diskcache.  I was frustrated with long build\ntimes, black holes of node modules, bloated pages, and a lack of built in SEO\ntools.\n\nI am currently a Data Analytics team lead where I do a lot of code review, pair\nprogramming, infrastructure, CI/CD, and devops.  I build data pipelines with\npandas and the fantasic kedro framework.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-run'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Running your Kedro Pipeline from the command line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-next-prev-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux next/prev session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-20", "edit_link": "https://github.com/edit/main/pages/blog/about.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574036", "datetime": "2021-11-20 00:00:00+00:00", "slug": "about", "jinja": false, "output_html": "markout/about/index.html", "long_description": "\ud83d\udc4b Hi, I am Waylon Walker.  I Love creating things on the web, learning, and I am currently a Data Analytics team lead where I do a lot of code review, pair", "super_description": "\ud83d\udc4b Hi, I am Waylon Walker.  I Love creating things on the web, learning, and I am currently a Data Analytics team lead where I do a lot of code review, pair", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063bd30>, next=<frontmatter.Post object at 0x7f345063b790>)"}, {"cover": "", "title": "Running your Kedro Pipeline from the command line", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-run.md", "description": "Running your kedro pipeline from the command line could not be any easier to https://youtu.be/ZmccpLy-OEI https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what ", "content": "Running your kedro pipeline from the command line could not be any easier to\nget started.  This is a concept that you may or may not do often depending on\nyour workflow, but its good to have under your belt.  I personally do this half\nthe time and run from ipython half the time.  In production, I mostly use docker\nand that is all done with this cli.\n\nhttps://youtu.be/ZmccpLy-OEI\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> \ud83d\udc46 Unsure what kedro is?  Check out this post.\n\n## Kedro run\n\nTo run the whole darn project all we need to do is fire up a terminal, activate\nour environment, and tell kedro to run.\n\n``` bash\nkedro run \n```\n\n## Specific Pipelines\n\nRunning a sub pipeline that we have created is as easy as telling kedro which\none we want to run.\n\n``` bash\nkedro run --pipeline dp\n```\n\n## Single Nodes\n\nWhile developing a node or a small list of nodes in a larger pipeline its handy\nto be able to run them one at a time.  Besides the use case of developing a\nsingle node I would not reccomend leaning very heavy on running single nodes,\nlet the DAG do the work of figuring out which nodes to run for you.\n\n``` bash\nkedro run --pipeline dp --node create_model_input_table_node\nkedro run --pipeline dp -n create_model_input_table_node\n```\n\n## Some DAG concepts\n\nWe will cover more of the benefits that we get from the graph nature of the DAG\nin the future, but here is a quick peek at some things we can do.\n\n``` bash\nkedro run --pipeline dp --to-outputs preprocessed_shuttles\nkedro run --pipeline dp --from-inputs preprocessed_shuttles\nkedro run --pipeline dp --to-nodes create_model_input_table_node\n```\n\n## Multiple things\n\n\nYou can stack up multiple kedro dag concepts into a single run command.\n```\nkedro run --pipeline dp --to-nodes create_model_input_table_node --to-nodes preprocess_shuttles_node\n```\n\n## Related Links\n\n* [what is kedro](https://waylonwalker.com/what-is-kedro/)\n* [setting up a kedro environment](https://waylonwalker.com/kedro-environment/)\n* [creating a new kedro project](https://waylonwalker.com/kedro-new/)\n* [kedro run docs](https://kedro.readthedocs.io/en/latest/06_nodes_and_pipelines/04_run_a_pipeline.html)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-silence'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Silence Kedro Logs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-preflight'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udcdd Kedro Preflight Notes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-24", "edit_link": "https://github.com/edit/main/pages/blog/kedro-run.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574042", "datetime": "2021-08-24 00:00:00+00:00", "slug": "kedro-run", "jinja": false, "output_html": "markout/kedro-run/index.html", "long_description": "Running your kedro pipeline from the command line could not be any easier to https://youtu.be/ZmccpLy-OEI https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. To run the whole darn project all we need to do is fire up", "super_description": "Running your kedro pipeline from the command line could not be any easier to https://youtu.be/ZmccpLy-OEI https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. To run the whole darn project all we need to do is fire up a terminal, activate Running a sub pipeline that we have created is as easy as telling kedro which While developing a node or a small list of nodes in a larger pipeline its handy We will cover more of the benefits that we get from the graph nature o", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f2af0>, next=<frontmatter.Post object at 0x7f3452909cd0>)"}, {"cover": "", "title": "python lsp setup", "tags": ["vim", "linux", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/setup-pylsp.md", "description": "Setting up python with the native nvim>0.5 lsp was mr https://github.com/neovim/nvim-lspconfig https://github.com/palantir/python-language-server/issues/190 Get", "content": "Setting up python with the native nvim>0.5 lsp was mr\n\n\n## lsp-config\n\nhttps://github.com/neovim/nvim-lspconfig\n\n``` vim\nlua << EOF\nrequire'lspconfig'.pyright.setup{}\nEOF\n```\n\n## pyls#190\n\nhttps://github.com/palantir/python-language-server/issues/190\n\n``` lua\nlspconfig.pyls.setup {\n  cmd = {\"pyls\"},\n  filetypes = {\"python\"},\n  settings = {\n    pyls = {\n      configurationSources = {\"flake8\"},\n      plugins = {\n        jedi_completion = {enabled = true},\n        jedi_hover = {enabled = true},\n        jedi_references = {enabled = true},\n        jedi_signature_help = {enabled = true},\n        jedi_symbols = {enabled = true, all_scopes = true},\n        pycodestyle = {enabled = false},\n        flake8 = {\n          enabled = true,\n          ignore = {},\n          maxLineLength = 160\n        },\n        mypy = {enabled = false},\n        isort = {enabled = false},\n        yapf = {enabled = false},\n        pylint = {enabled = false},\n        pydocstyle = {enabled = false},\n        mccabe = {enabled = false},\n        preload = {enabled = false},\n        rope_completion = {enabled = false}\n      }\n    }\n  },\n  on_attach = on_attach\n}\n```\n\n\n## mypy\n\nGetting mypy working with lsp was tricky for me.  I had some issues trying to\nrun mypy in ci and pyright in my editor and I really wanted them to match.\n\n``` bash\npipx install 'python-lsp-server[all]'\npipx inject python-lsp-server pylsp-mypy\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/break-pane'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux break-pane</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-run'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Running your Kedro Pipeline from the command line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-17", "edit_link": "https://github.com/edit/main/pages/blog/setup-pylsp.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574048", "datetime": "2021-05-17 00:00:00+00:00", "slug": "setup-pylsp", "jinja": false, "output_html": "markout/setup-pylsp/index.html", "long_description": "Setting up python with the native nvim>0.5 lsp was mr https://github.com/neovim/nvim-lspconfig https://github.com/palantir/python-language-server/issues/190 Getting mypy working with lsp was tricky for me.  I had some issues trying to", "super_description": "Setting up python with the native nvim>0.5 lsp was mr https://github.com/neovim/nvim-lspconfig https://github.com/palantir/python-language-server/issues/190 Getting mypy working with lsp was tricky for me.  I had some issues trying to", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063bb80>, next=<frontmatter.Post object at 0x7f345063bd30>)"}, {"cover": "", "title": "tmux break-pane", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/break-pane.md", "description": "https://youtu.be/ICL609F2xnc Break-pane is a handy tmux command when your layout gets too cramped and you Default key binding for  https://waylonwalker.com/tmux", "content": "https://youtu.be/ICL609F2xnc\n\nBreak-pane is a handy tmux command when your layout gets too cramped and you\nwant to just move a split into its own window.  Calling `break-pane` does\nexactly that, it creates a `new-window` for you and moves your currently\nselected split into that window\n\nDefault key binding for `break-pane`\n\n``` bash\nbind-key          ! break-pane\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/building-cli-apps-in-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Building Cli apps in Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/brainstorming-kedro-hooks'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Brainstorming Kedro Hooks</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-26", "edit_link": "https://github.com/edit/main/pages/blog/break-pane.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574054", "datetime": "2021-07-26 00:00:00+00:00", "slug": "break-pane", "jinja": false, "output_html": "markout/break-pane/index.html", "long_description": "https://youtu.be/ICL609F2xnc Break-pane is a handy tmux command when your layout gets too cramped and you Default key binding for  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "super_description": "https://youtu.be/ICL609F2xnc Break-pane is a handy tmux command when your layout gets too cramped and you Default key binding for  https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c970>, next=<frontmatter.Post object at 0x7f345064cc40>)"}, {"cover": "", "title": "Hacktoberfest 2021?", "tags": "discuss", "status": "published", "templateKey": "", "path": "pages/blog/hacktoberfest-2021.md", "description": "Are you participating in Hacktoberfest 2021? I got my start with open source with Hacktoberfest 2018.  I remember being so Something that it really did for me w", "content": "Are you participating in Hacktoberfest 2021?\n\n\nI got my start with open source with Hacktoberfest 2018.  I remember being so\nnervous for those first pr's.  I have continued to participate every year, and\nit feels good to give back.\n\n\n## It made a big change on me\n\nSomething that it really did for me was to lower the hurdle to contribute\nregularly.  I am not a huge contributor to open source.  I am not necessarily a\nregular maintainer of any large project, but I do often raise issues when I see\nthings as a user that would make things easier or more clear.\n\nAfter participating it does not feel like such a big deal to go through the\nmotions of making my own fork, making a small change, and submitting it for\nreview.\n\n## What can you do?\n\nAs a user, you might be in a unique position to see a library from the\nperspective of other users rather than from the eyes of a maintainer.  You can\nhelp bring the user perspective to your favorite library.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Besides the labeled ones, make better error messages.<br><br>It&#39;s hard for maintainers to see from the eyes of users especially new user.<br><br>Making their error messages readable by a beginner can be one of the most powerful changes and is often a no brainer approve.</p>&mdash; Waylon Walker \ud83d\udc0d (@_WaylonWalker) <a href=\"https://twitter.com/_WaylonWalker/status/1446440878864846909?ref_src=twsrc%5Etfw\">October 8, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\nMy favorite error messages are those that I helped tweak just a bit to make it\nclear to the user what is happening and how to fix it.  As much as we all hate\ngetting errors, It does warm my heart when I see one that I helped make better.\n\n## Discuss\n\nAre you participating this year?\n\nShow us some of your PR's, and why they make a difference.\n\nLet me know on [twitter](https://twitter.com/_WaylonWalker) or in this\n[dev.to](https://dev.to/waylonwalker/hacktoberfest-2021-1mkf) discussion.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-dependency-management'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Dependency Management</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/break-pane'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux break-pane</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-10", "edit_link": "https://github.com/edit/main/pages/blog/hacktoberfest-2021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574060", "datetime": "2021-10-10 00:00:00+00:00", "slug": "hacktoberfest-2021", "jinja": false, "output_html": "markout/hacktoberfest-2021/index.html", "long_description": "Are you participating in Hacktoberfest 2021? I got my start with open source with Hacktoberfest 2018.  I remember being so Something that it really did for me was to lower the hurdle to contribute After participating it does not feel like such a big ", "super_description": "Are you participating in Hacktoberfest 2021? I got my start with open source with Hacktoberfest 2018.  I remember being so Something that it really did for me was to lower the hurdle to contribute After participating it does not feel like such a big deal to go through the As a user, you might be in a unique position to see a library from the https://twitter.com/ My favorite error messages are those that I helped tweak just a bit to make it Are you participating this year? Show us some of your PR", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063be50>, next=<frontmatter.Post object at 0x7f345063bb80>)"}, {"cover": "", "title": "Kedro Dependency Management", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/kedro-dependency-management.md", "description": "https://kedro.readthedocs.io/en/stable/04 requirements.in requirements.txt", "content": "## Docs\n\nhttps://kedro.readthedocs.io/en/stable/04_kedro_project_setup/01_dependencies.html?highlight=install\n\n## pip-tools\n\n## pip-compile\n## requirements\n\n* requirements.in\n* requirements.txt\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/datacamp-sql'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Stepping Up My SQL Game</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hacktoberfest-2021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Hacktoberfest 2021?</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-19", "edit_link": "https://github.com/edit/main/pages/blog/kedro-dependency-management.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574065", "datetime": "2021-01-19 00:00:00+00:00", "slug": "kedro-dependency-management", "jinja": false, "output_html": "markout/kedro-dependency-management/index.html", "long_description": "https://kedro.readthedocs.io/en/stable/04 requirements.in requirements.txt", "super_description": "https://kedro.readthedocs.io/en/stable/04 requirements.in requirements.txt", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640310>, next=<frontmatter.Post object at 0x7f345063b160>)"}, {"cover": "./sql-wide.png", "title": "Stepping Up My SQL Game", "tags": ["data", "sql"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/datacamp-sql.md", "description": "none", "content": "In 2018 I transitioned from a Product Engineering (Mechanical) role to a Data Scientist Role.  I entered this space with strong subject matter expertise with our products, our data, munging through data in pyhon, and data visualization in python.  My sql skills were lacking to say the least.  I had learned what I needed to know to get data from our relational databases, then use pandas to do any further analysis.    Just run something like the following and you have data.\n\n``` sql\nSELECT\n    *\nFROM\n    Table\nWhere\n    col_1 = 'col_1_filter'\n```\n\nThis technique works great for small data sets that you only need to run once.  There is no shame to pull in a big dataset and start munging with it in pandas to get some results, and make decisions.  The problem becomes when your dataset becomes too big or you need to run the query on a frequent basis.  Doing the aggregations on the server run much quicker, as it reduces the time spent in io.  My longest running steps are currently io related.  Reducing these steps have improved my workflow.  At the point that I was getting server timeout errors, or using the same long running query in many places I would be searching for examples online, because I just did not have the experience with many more techniques.  I decided it was time to put away the cheat sheets, step away from Stack Overflow, and improve my speed.\n\n## Why Learn SQL in 2018??\n\nSQL is far from the hot topic in 2018, AI, Deep Learning, BIG data, Machine Learning, Natural Language Processing take the win here.  SQL is so simple why would anyone want to spend time learning SQL?  The reason... all of those hot topics in 2018 require data.  My data mostly comes from relational databases which require sql to get data from them.  Without the ability to efficiently get the data I need to do an aanlysis I cannot even start.  Sure I could use an ORM, but I found that to be a bit unwieldy with the thousands of tables  we have in formats that were determined many years ago. Plus raw SQL is more transportable.  I commonly collaborate with other folks who do not use python.  I am proud that I am able to point them to the SQL I use rather than telling them to suck it up an learn python.  I truly believe that people are the most effective when they are able to choose their own stack of tools.  Taking some time to focus on the basics of Data Science will help be build a strong foundation for my career.\n\n## [Joining Data in Posgres](https://campus.datacamp.com/courses/joining-data-in-postgresql)\n\nBelow are my notes from the [Joining Data in Posgres](https://campus.datacamp.com/courses/joining-data-in-postgresql)\ncourse on DataCamp.  I will use these notes as a refresher when I need a quick reference.\n\n### Using()\nWhen joining two tables on the same column the ```USING``` clause can be used as a shorthand.\n\n**without using**\n```sql\nSELECT *\n\nFROM\n    Table1 as t1\n\nLEFT JOIN\n    Table2 as t2\n    ON t1.id = t2.id\n```\n\n**with using**\n```sql\nSELECT\n    *\n\nFROM\n    Table1 as t1\n\nLEFT JOIN\n    Table2 as t2\n    USING (id)\n```\n\n### Join Types\n_for joining columns of data together into a single table_\n\n```INNER```: Includes only records contained in **both** tables.\n\n```RIGHT```: Inlcudes all records from the **right**, droping values from the left if non-existent in the right, or leaving nulls if non-existant in the left.\n\n```LEFT```: Inlcudes all records from the **left**, droping values from the right if non-existent in the left, or leaving nulls if non-existant in the right.\n\n```FULL```: Combination of ```Left``` and ```Right``` Join, leaving nulls where data is missing in one table, and not droping any data.\n\n```CROSS```: returns all **pairs** from two tables, does not have an on or using clause.\n\n### Union\n_for concatenating rows of data with the same columns_\n\n```Union```: returns only unique records, does not include duplicates.\n\n```Union All```: returns all records(including duplicates)\n\n### Intersect\n\n```Intersect```: returns only records appearing in both tables\n\n### Execpt\n\n```Except```: returns only records not in the second table\n\n### Self-Joins\n\n```Semi-Join```: Filters based on results of a subquery.  Does not have direct sql syntax.  This type of join is achieved through a subquery in the where statement.\n\n```Anti-Join```: Similar to the Semi-join, but using a ```not``` modifier.  This is particularly useful for debugging situations.\n\n### Subqueries\n\nThis is where I have really stepped up my sql game.  I was able to get practice writing more complex queries. I also learned about different methods of joining tables together.\n\n#### WHERE\n\nSubqueries are commonly found in the where clause to filter data.  Below is an example given in the course to select only the Asian countries with below average fertility rate from the states table.\n\n``` sql\nSELECT\n   name,\n   fert_rate\nFROM\n    states\nWHERE\n    continent = 'Asia'\nAND fert_rate <\n        (SELECT AVG(fert_rate)\n         FROM states;)\n```\n\n#### SELECT\n\nSubqueries can be found in the `SELECT` clause to create new columns of data.  This is a different technique than I have used in the past.  Previously I have only used `GROUPBY` statements to get this effect.  I can see where this can be really useful because it is not constrained by aggregations any data point can be pulled in with this tecnhique.\n\n``` sql\nSELECT DISTINCT\n    continent,\n    (SELECT\n        COUNT(*)\n     FROM\n        states\n     WHERE\n        prime_ministers.continent = states.continent\n    ) AS countries_num\n\nFrom Prime Ministers\n```\n\n#### FROM\n\nsubqueries found in the `FROM` clause can be very helpful to create a new dataset from an existing table.  I find these the easiest to read as it is not much different than creating a new table.  Again this can be very powerful in creating new columns that were not easily available otherwise.\n\n\n``` sql\nSELECT DISTINCT\n    monarchs.continent,\n    subquery.max_perc\n\nFROM\n    monarchs,\n    (SELECT\n        continent,\n        MAX(women_parli_perc) AS max_perc\n\n    FROM\n        states\n\n    GROUP BY\n        continent\n    ) as subquery\n\nWHERE\n    monarchs.continent = subquery.continent\n\nORDER BY\n    continent;\n```\n\n#### ON\n\n**Challenge Problem 1**  This problem was the one that had me more stumped than any other problem in the course.  I found the subquery inside the on statement very confusing to understand.  In this question we are joining the countries table to a subquery what yields country codes of countries with offial languages from the languages table.\n\n``` sql\nSELECT DISTINCT\n    c.name,\n    e.total_investment,\n    e.imports\n\nFROM\n    countries as c\nLEFT JOIN\n    economies as e\n    ON c.code = e.code\n\n    AND c.code in (\n    SELECT\n        l.code\n    FROM\n        languages as l\n    WHERE\n        official = true\n    )\n\nWHERE\n    c.region = 'Central America'\nAND e.year = 2015\n\nORDER BY\n    c.name asc;\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/simple-click-2'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>simple click 2</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-dependency-management'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Dependency Management</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-25", "category": "Blog", "summary": "I decided it was time to put away the cheat sheets, step away from Stack Overflow, and improve my speed.", "edit_link": "https://github.com/edit/main/pages/blog/datacamp-sql.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574071", "datetime": "2018-03-25 00:00:00+00:00", "slug": "datacamp-sql", "jinja": false, "output_html": "markout/datacamp-sql/index.html", "long_description": "In 2018 I transitioned from a Product Engineering (Mechanical) role to a Data Scientist Role.  I entered this space with strong subject matter expertise with our products, our data, munging through data in pyhon, and data visualization in python.  My", "super_description": "In 2018 I transitioned from a Product Engineering (Mechanical) role to a Data Scientist Role.  I entered this space with strong subject matter expertise with our products, our data, munging through data in pyhon, and data visualization in python.  My sql skills were lacking to say the least.  I had learned what I needed to know to get data from our relational databases, then use pandas to do any further analysis.    Just run something like the following and you have data. This technique works gr", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063bf70>, next=<frontmatter.Post object at 0x7f345063be50>)"}, {"cover": "", "title": "simple click 2", "tags": ["python"], "status": "false", "templateKey": "blog-post", "path": "pages/blog/simple-click-2.md", "description": "prev Follow Your Passion next Stepping Up My SQL Game", "content": "\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/passion'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Follow Your Passion</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/datacamp-sql'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Stepping Up My SQL Game</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-03", "edit_link": "https://github.com/edit/main/pages/blog/simple-click-2.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574079", "datetime": "2020-02-03 00:00:00+00:00", "slug": "simple-click-2", "jinja": false, "output_html": "markout/simple-click-2/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506400d0>, next=<frontmatter.Post object at 0x7f3450640310>)"}, {"cover": "./flex.png", "title": "Follow Your Passion", "tags": [], "status": "Draft", "templateKey": "blog-post", "path": "pages/blog/passion.md", "description": "none", "content": "## Follow Your Passion\n\n_my journey into data science_\n\nIn January 2018 I started work as a full time data scientist turning my passion into a career.  It is something that I didn't see myself doing 5 years ago, but is something that I love to do.  It combines my love of data, visualization, story telling, software development, and writing code.  Most of all it allows me to work in a space that promotes learning and creativity.  As a mechanical engineer for a company that has been building equipment for nearly a century the mechanical engineering is very well established I felt that there was not a lot of room for creativity.\n\n\n## Find Your Role\n\nWhen I first started as a full time  mechanical engineer\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/supercharge-zsh-startup'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Supercharge Zsh Startup</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/simple-click-2'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>simple click 2</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-01", "edit_link": "https://github.com/edit/main/pages/blog/passion.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574085", "datetime": "2019-01-01 00:00:00+00:00", "slug": "passion", "jinja": false, "output_html": "markout/passion/index.html", "long_description": "In January 2018 I started work as a full time data scientist turning my passion into a career.  It is something that I didn When I first started as a full time  mechanical engineer", "super_description": "In January 2018 I started work as a full time data scientist turning my passion into a career.  It is something that I didn When I first started as a full time  mechanical engineer", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506401f0>, next=<frontmatter.Post object at 0x7f345063bf70>)"}, {"cover": "", "title": "Supercharge Zsh Startup", "tags": ["bash", "linux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/supercharge-zsh-startup.md", "description": "I have been using oh-my-zsh successfully for about 2 years now. But lately my I believe the real issue is io speed on wsl.  I have some remote servers with Quic", "content": "I have been using oh-my-zsh successfully for about 2 years now. But lately my\nstartup time has been really bothersome. It has grown to the point where it was\ntaking about **5.5s** to startup a shell!  This is ok if I am going to spend\nsome time in here for awhile and do some work that benefits from all of the\nautocompletions, plugins, and shortcuts that oh-my-zsh brings.  But to only\njump in to run a handful of commands is infuriating.\n\n### \ud83d\udcd1 My Setup\n\nI believe the real issue is io speed on wsl.  I have some remote servers with\nsimilar configs that are 10x faster or more, loading in 100s of milliseconds\nrather than seconds.  Sourcing all of the individual plugin files are just too\nmuch for it.\n\n## \ud83d\udca8 How Fast can it be\n\n> Quick side note: your zsh config is controled by your \\~/.zshrc file.  This\n> file can source other files, load plugins, or run literally anything.\n\nTime the **initial** time\n\n``` bash\ntime zsh -c exit\n```\n\nMove your **\\~/.zshrc** config file.\n\n``` bash\nmv ~/.zshrc ~/.zshrc-back\n```\n\nTime the fastest startup possible with nothing in your **\\~/.zshrc** config file.\n\n``` bash\ntime zsh -c exit\n```\n\nMove your **\\~/.zshrc** back\n\n``` bash\nmv ~/.zshrc-back ~/.zshrc\n```\n\n## \ud83d\udd75\ufe0f\u200d\u2642\ufe0fProfile your startup time\n\nIt is possible to profile your zsh startup time by adding `zmodload zsh/zprof`\nto the start of your `~/.zshrc` file and `zprof` at the end.  This was\nunsuccessfull for me.  I ended up just backing up `~/.zshrc` file, then\ndeleting half of it to see where the hot spots were.  I found that two places\nthat were really hot for me.  One I was inadvertantly setting git and npm\nsettings everytime that didn't need to be set everytime.  That was an easy 2s\ngain.  Another easy 3s gain was removing oh-my-zsh.\n\n``` bash\n# ~/.zshrc\nzmodload zsh/zprof\n...\n..\n.\nzprof\n```\n\n## \ud83d\ude2dBut I really like oh-my-zsh\n\nwithout all the bells and whistle that oh-my-zsh provided zsh became lightning fast to load, but incredibly boring.  It was also very painful to manually type out everything that it autocompleted or aliased all the time.  Next I headed down a path to get all of that functionality back without sacrificing load time.\n\n> Without oh-my-zsh, zsh became incredibly boring.\n\n## \ud83d\udd0c Plugin Managers\n\n![](https://images.waylonwalker.com/steve-johnson-ZUabNmumOcA-unsplash.jpg)\n\n> Photo by [Steve Johnson](https://unsplash.com/@steve_j?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText) on [Unsplash](https://unsplash.com/s/photos/plug?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\n* oh-my-zsh\n* zplugin\n* zgen\n\nThere are a number of plugin managers for zsh, I tried each of the ones listed above, but found that as I approached a nice setup that I liked the load time would creep up **above the 2s** **mark** each time. I would turn certain plugins on and off, try different plugin managers, before realizing that I had spent enough time on this problem and it was going to be time to settle on fast startup or functionality.\n\n## \u2696 Finding Balance\n\n_Semi-lazy loading_\n\n![](https://images.waylonwalker.com/jeppe-hove-jensen-b3eaH1hguOA-unsplash.jpg)\n\n> Photo by Jeppe Hove Jensen on [Unsplash](https://unsplash.com/s/photos/balance?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText)\n\nAfter struggling to get all of the features I wanted with a fast load time, I decided to only load what I needed upon startup.  Next I created a simple alias that loads in zgen and all of the plugins I want. By doing this I get two main benefits.  Obviously I get a faster starup time by loading less.  I got my startup time down to about 0.25s.\n\n``` bash\n# ~/.zshrc\np () {\nzgen load zsh-users/zsh-autosuggestions\n....\n..\n.\n}\n```\n\n### \u26a1 Fast Loading\n\nI really like the fast startup time, because sometimes I am only loading up zsh to run a handful of commands that dont need much in the way of plugins\n\n**simple commands that need \ud83d\udca8 blazing start speed**\n\n_any single easy to type command, these are my common commands that I will open a terminal in my editor and just need to run quick._\n\n* vim\n* git add . && git commit && git push\n* sh my_script.sh\n* make build\n* bake build\n* pytest\n* gatsby develop\n* npm i\n* npm update\n* pip install\n* ipython\n\nThe second benefit was that I can continue typing while plugins are loading.\n\n![](https://waylonwalker.com/type-while-loading-plugins.gif)\n\n## >Prompt\n\nAfter removing oh-my-zsh the first thing that I missed was the themes that it provided.  I went through a number of them and the one that seemed to have the smallest effect on performance and everything I needed was [starship](https://starship.rs/).  It's a really fast prompt written in rust.  The biggest thing that I needed to have that other prompts were misssing was conda environments.  I live much of my work life running python from various conda environments and it is crutial that I can see what environment I am in at all times.\n\n![](https://images.waylonwalker.com/2020-01-04 12-36-31_Cortana.png)\n\n## \ud83d\udcb0 Bonus\n\nI applied the same logic to neovim and achieved similar results.  Again it just had too many plugins loading on startup for simple tasks.  I ended up taking a shortcut and load any heavy plugins upon NerdTreeToggle.  I dont really use NERDTree that much, but when I do its for more than just a quick edit.\n\n``` bash\n# ~/.config/nvim/init.vim\nPlug 'valloric/youcompleteme', {'do': './install.py', 'on': 'NERDTreeToggle'}\n\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/symlink-gallery'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create a Virtual File Gallery with Symlinks</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/strip-trailing-whitespace'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Strip Trailing Whitespace from Git projects</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-03", "edit_link": "https://github.com/edit/main/pages/blog/supercharge-zsh-startup.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574091", "datetime": "2020-01-03 00:00:00+00:00", "slug": "supercharge-zsh-startup", "jinja": false, "output_html": "markout/supercharge-zsh-startup/index.html", "long_description": "I have been using oh-my-zsh successfully for about 2 years now. But lately my I believe the real issue is io speed on wsl.  I have some remote servers with Quick side note: your zsh config is controled by your  Time the  Move your  Time the fastest s", "super_description": "I have been using oh-my-zsh successfully for about 2 years now. But lately my I believe the real issue is io speed on wsl.  I have some remote servers with Quick side note: your zsh config is controled by your  Time the  Move your  Time the fastest startup possible with nothing in your  Move your  It is possible to profile your zsh startup time by adding  without all the bells and whistle that oh-my-zsh provided zsh became lightning fast to load, but incredibly boring.  It was also very painful ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c100>, next=<frontmatter.Post object at 0x7f34506910d0>)"}, {"cover": "", "title": "No More Death By PowerPoint", "tags": ["webdev", "catalytic"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/death-by-powerpoint.md", "description": "none", "content": "# No More Death By PowerPoint\n\n> I Waylon S. Walker vow that from this point forward I will no longer create powerpoints to be considerec **DEATH BY POWERPOINT**\n\n\nIf you have not seen David JP Phillips [Death By PowerPoint](https://www.youtube.com/watch?v=Iwpi1Lm6dFo)  TEDx, stop now and watch it.  You will never look at slides the same again.  Watching this video ruined me for watching presentations with these issues.  Reveal is a tool that makes it very easy to follow these principles\n\nI currently work in a company that employs over 100K employees, and to this day I cannot recall a single presentation given where the slides did not violate the rules stated in David's Talk.  This year I am putting a stop to this starting with myself.  I am starting a new job role in 2018 and there is no better time to make some drastic changes to my workflow than now.  I expect there to be a few followers and many naysayers, but I dont care.  I will employ the directives listed below.\n\n\n## 1+1=0\n\nVery few people (_if any_) in your will be able to multi-task.  The human brain is just not built to truly multi-task.  Some folks can be good at task switching quickly but very few of us can truly multi-task.  By overwhelming your audience with more than one distinct message, you have successfully overwhelmed your audience and successfully delivered 0 messages to your audiance.\n\n## 6 items\n\nThe human brain is very capable of processing up to 6 items very efficiently, beyond this becomes an exponential rate of processing.  Watch David's video and you will see a remarkable example.\n\n## Size and Contrast\n\nThe most important points should be the fist thing that your eye goes to on the screen.\n\n## More Slides\n\nNo one ever said the sheer amount of slides was ever the problem.\n\n\n## Supporting Material\n\nSentences, Notes, reference material, etc belong in the speaker notes.  This is the part that took the longest for me to realize.  In my company PowerPoint documents as living documents that folks will reference long after the presentation is over.  For this reason we tend to put every point that we want to discuss on the slides, so that they are there weeks, months, even years later when someone goes back to review your slides.  Placing this material in the speaker notes will allow you to utilize your presentation as reference material if you need to, and refrain from placing it on the screen.\n\n## Tools\n\nA tool that is becoming very popular outside of the PowerPoind world is [Reveal js](https://github.com/hakimel/reveal.js/).  It is a fantastic framework to build beautiful slides using html.  I find that maintaining html to be a bit cumbersome. And the templating language [pug](https://pugjs.org/) to be much more simple.  I will be using my own fork of [reveal.js-jade](https://github.com/jlengstorf/reveal.js-jade) in 2018.  It will allow me to have interactive visualizations right in my slides.  Reveal also does a really nice job at making it hard to break the Death By PowerPoint rules.  It tends to be hard to jam a ton of information into them.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/creating-the-kedro-preflight-hook'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>creating the kedro-preflight hook</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/supercharge-zsh-startup'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Supercharge Zsh Startup</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-31", "category": "Blog", "edit_link": "https://github.com/edit/main/pages/blog/death-by-powerpoint.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574097", "datetime": "2017-12-31 00:00:00+00:00", "slug": "death-by-powerpoint", "jinja": false, "output_html": "markout/death-by-powerpoint/index.html", "long_description": "I Waylon S. Walker vow that from this point forward I will no longer create powerpoints to be considerec  If you have not seen David JP Phillips  I currently work in a company that employs over 100K employees, and to this day I cannot recall a single", "super_description": "I Waylon S. Walker vow that from this point forward I will no longer create powerpoints to be considerec  If you have not seen David JP Phillips  I currently work in a company that employs over 100K employees, and to this day I cannot recall a single presentation given where the slides did not violate the rules stated in David Very few people ( The human brain is very capable of processing up to 6 items very efficiently, beyond this becomes an exponential rate of processing.  Watch David The mos", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640430>, next=<frontmatter.Post object at 0x7f34506401f0>)"}, {"cover": "", "title": "creating the kedro-preflight hook", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/creating-the-kedro-preflight-hook.md", "description": "Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro kedro hooks are an exciting upcoming feature of kedro  https://waylonwalker.com/what-i", "content": "Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro\n`0.16.0`.  They allow you to hook into `catalog_created`,`pipeline_run`, and\n`node_run`(nouns).  With a `before`, or `after` (adjective).  This really\nreminds me of reacts lifecycle hooks, that let you hook into various state of\nreact web components.  This is going to make kedro so extendable by the\ncommunity.  I am super pumped to see what the community is able to do with this\nability.\n\nkedro hooks are an exciting upcoming feature of kedro `0.16.0`.  They allow you to hook into `catalog_created`,`pipeline_run`, and `node_run`(nouns). With a `before`, or `after` (adjective).  This really reminds me of reacts lifecycle hooks, that let you hook into various state of react web components.  This is going to make kedro so extendable by the community.  I am super pumped to see what the community is able to do with this ability.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> If you are completely unsure what kedro is be sure to check out my what is kedro post\n\n## Docs\n_a work in progress_\n\nAs this is a part of an upcoming release you will need to look in the `latest` docs, **not** `stable` and you will find a [15_hoooks](https://kedro.readthedocs.io/en/stable/07_extend_kedro/02_hooks.html) page.  As these docs are still in development they are not very complete at this point and do require a bit more existing `kedro` knowledge to understand.  I am sure they will get much better as we approach the realease of hooks.\n\n> This doesn't mean that we can't still install the latest/unstable version and have some fun learning!\n\n## Installation\n_Straight from GitHub_\n\nAs this is part of an upcoming release you will need to get the library straight from github.  Since this is not a stable release of `kedro` I cannot express the importance of using a virtual environment enough.  Trying to install this version in the same place that you are trying to develop a pipeline potentially break your existing working development environment.\n\n``` bash\nconda create -n kedro0160 -y\nconda activate kedro0160 # may also be source activate kedro0160 or activate kedro0160\npip install git+https://github.com/quantumblacklabs/kedro.git\npip install colorama\n```\n\n> **note** the version is still somewhere between `0.15.9` and `0,16.0`.  `kedro.__version__` will still be `0.15.9` and wiill not roll until the official release.\n\n## Create a sample project\n\n> ### Kedro new\n> For more details check out my full post on [kedro new](https://waylonwalker.com/create-new-kedro-project/)\n\nFor this post I really just want a working pipeline as fast as possible.  For this I am going to use iris pipeline that is generated from the `kedro new` command in the cli.  It's **important** that you answer `y` to create an example pipeline.\n\n> ### Hold On \u270b\n> Did you create a separate environment for this?  Please do.\n\n``` bash\nkedro new\n```\n\nAfter you run the `kedro new` command it will ask a series of questions.  \ud83d\udc47 Here is how I answered them.\n\n``` bash\nProject Name:\n=============\nPlease enter a human readable name for your new project.\nSpaces and punctuation are allowed.\n [New Kedro Project]: Kedro Hooks\nRepository Name:\n================\nPlease enter a directory name for your new project repository.\nAlphanumeric characters, hyphens and underscores are allowed.\nLowercase is recommended.\n [kedro-hooks]:\nPython Package Name:\n====================\nPlease enter a valid Python package name for your project package.\nAlphanumeric characters and underscores are allowed.\nLowercase is recommended. Package name must start with a letter or underscore.\n [kedro_hooks]:\nGenerate Example Pipeline:\n==========================\nDo you want to generate an example pipeline in your project?\nGood for first-time users. (default=N)\n [y/N]: y\nChange directory to the project generated in /mnt/c/temp/kedro-hooks/\nA best-practice setup includes initialising git and creating a virtual environment before running `kedro install` to install project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/\n```\n\n### Install the Project\n\nNext install the project itself and all of its dependencies with the `kedro install` command.\n\n``` bash\ncd kedro-hooks\nkedro install\n```\n\n### \ud83c\udfc3\u200d\u2640\ufe0f Run the pipeline\n\nBefore we start developing any hooks lets make sure everything is setup correctly by running the pipeline with `kedro run`.\n\n``` bash\nkedro run\n```\n## Let's make a hook\n\n_getting to the meat of the post_\n\nNow that we have a project scaffolded up and running we can develop a hook for it.  As far as I can tell hooks can be implemented one of **two ways**.  As a **function** inside of a module, then import that module and pass it into the hooks list, or implemented as a method on a **class**, then the class is passed into the hooks list.  Either method must follow the naming convention with the `@hook_impl` decorator.  Each module/class can implement more than one hook, but not more than one of the same type. One of each kind will be created below.\n\n### Full list of hooks available\n\n> `before_catalog_created`\n>\n> `after_catalog_created`\n>\n> `before_pipeline_run`\n>\n> `after_pipeline_run`\n>\n> `before_node_run`\n>\n> `after_node_run`\n\n## debug_hook (class)\n_quick and dirty_\n\n\nI highly recommend this as your first hook.  It's super easy to make and lets you explore the arguments passed into the hook.  For this one I am going to pop the following class right into `kedro-hooks/src/kedro-hooks/run.py`, remember that I chose `kedro-hooks` as my project name.  Your path might be slightly different.  If you wanted to make a real hook it might make sense to put it in its own module, but for simplicity of your first hook you can put it directly in the same module that it gets implemented.\n\n``` python\nclass debug_hook:\n    @hook_impl\n    def before_pipeline_run(run_params, pipeline, catalog):\n        \"pops into a debugger before pipeline run\"\n        print('I hooked in right before the pipeline run')\n        breakpoint()\n```\n\n\nIt is really that easy to create a kedro hook!  Now lets apply it to our project.  All we need to do is add one line (`hooks = [debug_hook]`) to the existing `ProjectContext` class within `kedro-hooks/src/kedro-hooks/run.py`.  Once we do that our `ProjectContext` will look like this.\n\n``` python\nclass ProjectContext(KedroContext):\n    \"\"\"Users can override the remaining methods from the parent class here,\n    or create new ones (e.g. as required by plugins)\n    \"\"\"\n\n    project_name = \"kedro-hooks\"\n    # `project_version` is the version of kedro used to generate the project\n    project_version = \"0.15.9\"\n    package_name = \"kedro-hooks\"\n\n    hooks = [ debug_hook ] # \ud83d\udc48 This is where you implement the hook\n\n    def _get_pipelines(self) -> Dict[str, Pipeline]:\n        return create_pipelines()\n```\n\nRun it!  While you are in the debugger, explore what the `run_params`, `pipeine`, and `catalog` arguments give you.  This will give you some insight to what to expect when creating your next hook.\n\n\n## preflight hook (module)\n_giving it a bit more flair_\n\nCreate a new file `kedro-hooks/src/kedro-hooks/preflight.py` and place the following content into the file.  This will raise a `DataSetNotFoundError` before wasting time running any of the pipeline.  This could be useful to save some developer time for long running pipelines by warning them that they don't have all of the raw data they need before running.\n\n\n``` python\n# kedro-hooks/src/kedro-hooks/preflight.py\nfrom kedro.hooks import hook_impl\nfrom kedro.io.core import DataSetNotFoundError\nfrom colorama import Fore\nimport textwrap\n\n\n@hook_impl\ndef before_pipeline_run(run_params, pipeline, catalog):\n    missing_input = [i for i in pipeline.inputs() if not getattr(catalog.datasets, i)._exists()]\n    if len(missing_input) != 0:\n        raise DataSetNotFoundError(textwrap.dedent(f'''\n\n    {Fore.LIGHTBLACK_EX}\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015  {Fore.RED}PREFLIGHT ERROR {Fore.LIGHTBLACK_EX}\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n    {Fore.RESET} preflight of pipeline failed due to {Fore.YELLOW}missing datasets\n    {Fore.BLUE} {missing_input}{Fore.RESET}\n    '''))\n```\n\nOnce we are happy with this hook, it can live anywhere.  It can be a module inside our project.  It can be a separate libarary that gets handed out as a back ally wheel, or we can even publish it as its own package to pypi so that anyone can easily pip install it.\n\n### One Step Back\n_a bit of explanation of preflight_\n\nIf you are not familiar, `pipeline.inputs()` gives us all of the edge inputs into the pipeline.  kedro does also have a `pipeline.all_inputs()` that tells us all of the edge and internal pipeline inputs that will be called throughout the pipeline run.  For this hook we are just concerned with the edge inputs as internal inputs will be generated during the run.\n\nAlso each one of the kedro datasets have an `_exists()` method attached to them to check if the dataset exists or not.  For a more robust implementation of `preflight` it would probably be best to ignore `AttributeError`s, i.e the dataset type does not have an implementation of `_exists`.  It would probably also be a good idea to filter for types such as `SQLQueryDataSet`s that assume `_exists` is False by default.\n\n##  Ideas\n\nNow that the juices are flowing what ideas do you have for `kedro` hooks?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/crush-dev-to-posts'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to crush amazing posts on DEV</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/create-new-kedro-project'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create New Kedro Project</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-10", "edit_link": "https://github.com/edit/main/pages/blog/creating-the-kedro-preflight-hook.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574103", "datetime": "2020-05-10 00:00:00+00:00", "slug": "creating-the-kedro-preflight-hook", "jinja": false, "output_html": "markout/creating-the-kedro-preflight-hook/index.html", "long_description": "Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro kedro hooks are an exciting upcoming feature of kedro  https://waylonwalker.com/what-is-kedro/ If you are completely unsure what kedro is be sure to check out my what is kedro ", "super_description": "Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro kedro hooks are an exciting upcoming feature of kedro  https://waylonwalker.com/what-is-kedro/ If you are completely unsure what kedro is be sure to check out my what is kedro post As this is a part of an upcoming release you will need to look in the  This doesn As this is part of an upcoming release you will need to get the library straight from github.  Since this is not a stable release of  For more details check out my", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067fe80>, next=<frontmatter.Post object at 0x7f3450685af0>)"}, {"cover": "", "title": "Zev Averbach Interview", "tags": ["data", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/zev-averbach-interview.md", "description": "Zev Averbach, Q: Tell me about your journey as a spreadsheet jockey into Data Engineering? Q:  Q: What tips do you have for others trying to expand their skills", "content": "Zev Averbach, \n_Frustrated spreadsheet jockey to software developer at 36_\n\nQ: Tell me about your journey as a spreadsheet jockey into Data Engineering?\n\nQ: **Why** should a _\"spreadsheet jockey\"_ add something like python to their\ntoolbelt?\n\nQ: What tips do you have for others trying to expand their skillset later in\nlife with limited time and resources for learning?\n\nQ: How do you fight imposter syndrome after a mid-career switch?\n\nQ: Where can we find you online?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-list-keys'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux list-keys</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/creating-the-kedro-preflight-hook'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>creating the kedro-preflight hook</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-09", "edit_link": "https://github.com/edit/main/pages/blog/zev-averbach-interview.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574109", "datetime": "2021-04-09 00:00:00+00:00", "slug": "zev-averbach-interview", "jinja": false, "output_html": "markout/zev-averbach-interview/index.html", "long_description": "Zev Averbach, Q: Tell me about your journey as a spreadsheet jockey into Data Engineering? Q:  Q: What tips do you have for others trying to expand their skillset later in Q: How do you fight imposter syndrome after a mid-career switch? Q: Where can ", "super_description": "Zev Averbach, Q: Tell me about your journey as a spreadsheet jockey into Data Engineering? Q:  Q: What tips do you have for others trying to expand their skillset later in Q: How do you fight imposter syndrome after a mid-career switch? Q: Where can we find you online?", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640670>, next=<frontmatter.Post object at 0x7f3450640430>)"}, {"cover": "", "title": "tmux list-keys", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-list-keys.md", "description": "https://youtu.be/Y1MYmL8ZolE Tmux list keys can be a useful tool to help remind you of what kebindings you You can call list-keys from the command line but the ", "content": "https://youtu.be/Y1MYmL8ZolE\n\nTmux list keys can be a useful tool to help remind you of what kebindings you\nhave setup.  You can search for them and scroll just like in tmux copy-mode.\n\n## command line\n\nYou can call list-keys from the command line but the interface is not very\nusable by itself.  It might be nice to mix with grep or a pager in some\ncircumstances.\n\n``` bash\ntmux list-keys\n```\n\n## tmux command line\n\nRunning `list-keys` from within the tmux command line puts you into a much more\npleasant `copy-mode`.\n\n```\nlist-keys\n```\n\n## default keybinging\n\nBy default tmux comes with `list-keys` bound to prefix+?.\n\n``` bash\nbind-key          ? list-keys\n```\n\n## list-keys man page\n\nYou can see the additional flags provided by tmux in the man page for\n`list-keys`.\n\n``` bash\nlist-keys [-1aN] [-P prefix-string -T key-table] [key]\n            (alias: lsk)\n\n        List key bindings.  There are two forms: the default lists keys as\n        bind-key commands; -N lists only keys with attached notes and shows\n        only the ke y and note for each key.\n\n        With the default form, all key tables are listed by default.  -T lists only keys in key-table.\n\n        With the -N form, only keys in the root and prefix key tables are\n        listed by default; -T also lists only keys in key-table.  -P specifies\n        a prefix to print before each key and -1 lists only the first matching\n        key.  -a lists the command for keys that do not have a note rather than\n        skipping them.\n\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-ls'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux ls</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-last-session'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux last session</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-08", "edit_link": "https://github.com/edit/main/pages/blog/tmux-list-keys.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574115", "datetime": "2021-08-08 00:00:00+00:00", "slug": "tmux-list-keys", "jinja": false, "output_html": "markout/tmux-list-keys/index.html", "long_description": "https://youtu.be/Y1MYmL8ZolE Tmux list keys can be a useful tool to help remind you of what kebindings you You can call list-keys from the command line but the interface is not very Running  By default tmux comes with  You can see the additional flag", "super_description": "https://youtu.be/Y1MYmL8ZolE Tmux list keys can be a useful tool to help remind you of what kebindings you You can call list-keys from the command line but the interface is not very Running  By default tmux comes with  You can see the additional flags provided by tmux in the man page for https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9af0>, next=<frontmatter.Post object at 0x7f34506f2550>)"}, {"cover": "", "title": "Kedro pipeline_registry.py", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-pipeline-registry.md", "description": "With the realease of  create a  register_pipelines register hook_impl class You should now have something that looks like this in your pipeline I was not able t", "content": "With the realease of `kedro==0.17.2` came a new module in the project template\n`pipeline_registry.py`.  Here are some notes that I learned while playing with\nthis new module.\n\n## migrating to `pipeline_registry.py`\n\n\n* create a `src/<package-name>/pipeline_registry.py` file create a\n* `register_pipelines` function in `pipeline_registry.py` that mirrors the\n* register_pipelines method from your `hooks.py` module do not bring the\n* `hook_impl` decorator remove register_pipelines method on your `ProjectHooks`\n* class\n\nYou should now have something that looks like this in your\n`src/<package-name>/pipeline_registry.py`.\n\n``` python \n\"\"\"Project pipelines.\"\"\"\nfrom typing import Dict\n\nfrom kedro.pipeline import Pipeline\n\n\ndef register_pipelines() -> Dict[str, Pipeline]:\n    \"\"\"Register the project's pipelines.\n\n    Returns: A mapping from a pipeline name to a ``Pipeline`` object.\n    \"\"\"\n    return {\"__default__\": Pipeline([])}\n```\n\n\n> pipeline_registry only works in `kedro>=0.17.2`\n\n## Conflict Resolution\n\n_What happens If I register pipelines in both places_\n\nI was not able to find any official documentation on how conflict resolution\nworked so I stepped into a project and added to both my `hooks.py` and\n`pipeline_registry.py` file.  I noticed that it would pick up pipelines from\nboth modules, but pipelines from `hooks.py` always take precedence.  The entire\nduplicate pipeline will be over written by the one from `hooks.py`.\n\n>  kedro automatically merges pipelines from both hooks.py takes precedence\n\n## Ready to update\n\nIn my experience there were no issues upgrading from `0.17.1` to `0.17.2`.  I\nwould reccomend only having one `register_pipelines` so decide to migrate to\nthe new `pipeline_registry.py` or keep it in your `hooks.py`, but both is only\ngoing to lead to confusion.\n\n\nhttps://twitter.com/datajoely/status/1375193511264456705\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-preflight'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udcdd Kedro Preflight Notes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-pickle'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro - My Data Is Not A Table</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-20", "edit_link": "https://github.com/edit/main/pages/blog/kedro-pipeline-registry.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574121", "datetime": "2021-03-20 00:00:00+00:00", "slug": "kedro-pipeline-registry", "jinja": false, "output_html": "markout/kedro-pipeline-registry/index.html", "long_description": "With the realease of  create a  register_pipelines register hook_impl class You should now have something that looks like this in your pipeline I was not able to find any official documentation on how conflict resolution kedro automatically merges pi", "super_description": "With the realease of  create a  register_pipelines register hook_impl class You should now have something that looks like this in your pipeline I was not able to find any official documentation on how conflict resolution kedro automatically merges pipelines from both hooks.py takes precedence In my experience there were no issues upgrading from  https://twitter.com/datajoely/status/1375193511264456705", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452909cd0>, next=<frontmatter.Post object at 0x7f3450685d30>)"}, {"cover": "", "title": "Stand With Your Team", "tags": ["catalytic"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/stand-with-your-team.md", "description": "People who are quick to toss team members under a bus are not well trusted or While collaborating on any project there are going to be decisions made that Durin", "content": "People who are quick to toss team members under a bus are not well trusted or\nhighly thought of and it will lead to some toxic team dynamics.\n\n## Building Steam\n\nWhile collaborating on any project there are going to be decisions made that\naren't necessarily your favorite, during a summer internship my mentor made\nsome decisions that I was not on board with, but I accepted his wisdom and\nmoved forward with little push back.\n\n## Full Spead Ahead\n\nDuring a review, leadership showed interest in the option that I wanted to go\ntowards.  I was quick to jump up and say I  told you so right then and there\nand pitch reasons why my idea was so much better.\n\n## The Aftermath\n\nI walked out so **proud** that leadership recognized my idea, but I will never\nforget the look on my teammate's face and what he told me after the meeting.\n\n> \"Wow quick to throw me under the bus in front of everyone \ud83d\ude22\".   I\n\n~ my teammate\n\n## Realizing what Happened\n\nIt was at this moment that I threw my mentor, a good **friend** in front of a\nbus that was at full speed.  I will never forget this moment and the importance\nof being a good trustworthy team player.\n\n## Speak your Mind, be heard, shut up\n\nThis day I learned that there is a time to speak your mind.  While that bus is\nsitting idle it would have hurt no one.\n\n---\n\nThere were times to hear out ideas, and there were times that we need to accept\nthe decisions the team made.  The team that you were a part of and had a chance\nto steer.\n\n---\n\nThere are times where it's appropriate to sit down and shut up.\n\n## Your Story \ud83d\udc47\n\nDo you have a story of how not standing with your team caused you pain later\non.  I would love to hear and learn from your experience.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/start-streaming'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>I Started Streaming on Twitch</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/sqlalchemy-models'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>SqlAlchemy Models</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-22", "edit_link": "https://github.com/edit/main/pages/blog/stand-with-your-team.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574127", "datetime": "2021-01-22 00:00:00+00:00", "slug": "stand-with-your-team", "jinja": false, "output_html": "markout/stand-with-your-team/index.html", "long_description": "People who are quick to toss team members under a bus are not well trusted or While collaborating on any project there are going to be decisions made that During a review, leadership showed interest in the option that I wanted to go I walked out so  ", "super_description": "People who are quick to toss team members under a bus are not well trusted or While collaborating on any project there are going to be decisions made that During a review, leadership showed interest in the option that I wanted to go I walked out so  \" ~ my teammate It was at this moment that I threw my mentor, a good  This day I learned that there is a time to speak your mind.  While that bus is There were times to hear out ideas, and there were times that we need to accept There are times where", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652340>, next=<frontmatter.Post object at 0x7f3450663f70>)"}, {"cover": "", "title": "Site Down During Build", "tags": ["webdev", "actions"], "status": "publish", "templateKey": "blog-post", "path": "pages/blog/site-down-during-build.md", "description": "Recently I noticed a new netlify site of mine was down while I was checking to Do other Netlify sites go down during build??? Short Answer NO.  All of my google", "content": "Recently I noticed a new netlify site of mine was down while I was checking to\nsee if new content was live.  Later found out this was consistent after each\nand every push the site would go gown as soon as I hit push, and would not come\nback until the build finished.\n\n\n## Is this normal?\n\nDo other Netlify sites go down during build???\n\nShort Answer NO.  All of my google fu lead me to believe I was alone and none of my other sites do this.\n\n## Digging into my build\n\nMy deploy script ends with the following.  After resetting keys and watching it build half a dozen\ntimes I determined that everything was working as normal here.\n\n```\n- name: Deploy to Netlify\nuses: nwtgck/actions-netlify@v1.1.12\nwith:\n    publish-dir: \"./markout\"\n    production-branch: markout\n    production-deploy: true\n    deploy-message: \"Deploy markout from GitHub Actions\"\nenv:\n    NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}\n    NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}\n```\n\n## Opening the Nelify Console\n\n\nAfter poking at the netlify console for hours I realized that the issue was\nthat netlify was still auto-deploying from a no longer existing directory and\nwould cause 404's for every page. During build, then my build from GitHub\nActions would deploy with the netlify cli.\n\n<div class='center-img'>\n    <img alt=\"images build\" src=\"https://images.waylonwalker.com/netlify-build-images-waylonwalker.png\">\n</div>\n\nNetlify really likes to put a lot of warnings up when you are not deploying\nfrom them.  I tured off automatic deploys, swore to the netlify gods this is\nwhat I wanted. Pushed a new deploy and \ud83c\udf89 THE SITE DID NOT GO DOWN.\n\njdiv class='center-img'>\n    <img alt=\"site build\" src=\"https://images.waylonwalker.com/netlify-build-waylonwalker.png\">\n</div>\n\n## TURN OFF AUTOMATIC BUILDS WHEN SWITCHING TO A SELF BUILD\n\nMoral of the story here is to turn off Netlify's automatic builds when building\nyourself and using the netlify cli.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/rockstar74-interview-review'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Rockstar74 Interview Review</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/stand-with-your-team'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Stand With Your Team</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-22", "edit_link": "https://github.com/edit/main/pages/blog/site-down-during-build.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574135", "datetime": "2021-03-22 00:00:00+00:00", "slug": "site-down-during-build", "output_html": "markout/site-down-during-build/index.html", "long_description": "Recently I noticed a new netlify site of mine was down while I was checking to Do other Netlify sites go down during build??? Short Answer NO.  All of my google fu lead me to believe I was alone and none of my other sites do this. My deploy script en", "super_description": "Recently I noticed a new netlify site of mine was down while I was checking to Do other Netlify sites go down during build??? Short Answer NO.  All of my google fu lead me to believe I was alone and none of my other sites do this. My deploy script ends with the following.  After resetting keys and watching it build half a dozen After poking at the netlify console for hours I realized that the issue was Netlify really likes to put a lot of warnings up when you are not deploying jdiv class= Moral ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640af0>, next=<frontmatter.Post object at 0x7f3450640d30>)"}, {"cover": "", "title": "Rockstar74 Interview Review", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/rockstar74-interview-review.md", "description": "https://www.twitch.tv/videos/1042380964", "content": "https://www.twitch.tv/videos/1042380964\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-incremental-versioned-datasets'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Incremental Versioned Datasets in Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/site-down-during-build'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Site Down During Build</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-03", "edit_link": "https://github.com/edit/main/pages/blog/rockstar74-interview-review.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574140", "datetime": "2021-06-03 00:00:00+00:00", "slug": "rockstar74-interview-review", "jinja": false, "output_html": "markout/rockstar74-interview-review/index.html", "long_description": "https://www.twitch.tv/videos/1042380964", "super_description": "https://www.twitch.tv/videos/1042380964", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640d60>, next=<frontmatter.Post object at 0x7f34506408e0>)"}, {"cover": "", "title": "Incremental Versioned Datasets in Kedro", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-incremental-versioned-datasets.md", "description": "Kedro versioned datasets can be mixed with incremental and partitioned datasets https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this ", "content": "Kedro versioned datasets can be mixed with incremental and partitioned datasets\nto do some timeseries analysis on how our dataset changes over time.  Kedro is\na very extensible and composible framework, that allows us to build solutions\nfrom the individual components that it provides.  This article is a great\nexample of how you can combine these components in unique ways to achieve some\npowerful results with very little work.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> \ud83d\udc46 Unsure what kedro is?  Check out this post.\n\n## How does our dataset change over time??\n\nThis was a question presented to me at work.  We had some plots being produces\nas the output of our pipeline and the user wanted the ability to compare\nresults over time.  Luckily this was asked early in the project so we were able\nto proactively setup versioning on the right datasets.\n\nTo enable this all we needed to do now was to add `versioned: true` and we will\nbe able to compare results over time.  Yes kedro makes it that easy to setup.\n\n## set up a project\n\nSet up a new project just as usual.  **note** I like using pipx for\nglobal cli packages.  You can pick a specific version of kedro or opt for the\nlatest while simply globally installing kedro and running kedro new is purely\ndependent on the last time you chose to update kedro.\n\n\n``` bash\npip install pipx\npipx run kedro new\n\ncd versioned-partitioned-kedro-example\nconda create -n versioned-partitioned-kedro-example python=3.8  -y\nconda activate versioned-partitioned-kedro-example\n\npip install kedro\nkedro install\n\ngit init\ngit add .\ngit commit -m \"init project from pipx run kedro new\"\n```\n\nI called my project versioned-partitioned-kedro-example. You can call your\nproject whatever you like.  If you try to use some special characters where\nthey don't belong, kedro will catch you.  Under the hood, kedro is using a\nlibrary called `cookiecutter`\n\n> \u26a0\ufe0f Please do not skip out on using a virtual environment. You may use\n> whichever virtual environment tool you prefer, but please do not skip out.\n> Wrecking a running project for learning is not fun.\n\n## update dependencies\n\nI popped open my dependencies, added `kedro[pandas]` and `find-kedro`. Since those are extra packages our example will require.\n\n```\naiohttp\nblack==21.5b1\nfind-kedro\nflake8>=3.7.9, <4.0\nipython\nisort~=5.0\njupyter_client>=5.1, <7.0\njupyterlab~=3.0\njupyter~=1.0\nkedro-telemetry~=0.1.0\nkedro==0.17.4\nkedro[pandas]\nnbstripout~=0.4\npytest-cov~=2.5\npytest-mock>=1.7.1, <2.0\npytest~=6.2\nrequests\nwheel>=0.35, <0.37\n```\n\n**note** I created `find-kedro`, and I like using it to create my\npipeline object.  Think of how pytest automatically picks up everything named\n`test`, `find-kedro` does the same thing for kedro.  It picks up everything\nwith `node` or `pipeline` in the name and creates pipelines out of it.\n\n## Install new dependencies\n\nAfter adding our additional dependencies to the `requirements.in`, we\ncan tell kedro to install everything and compile the dependencies.  Behind\nthe scenes `--build-reqs` uses a library called `pip-compile` to create a\n`requirements.txt` file with hard pinned dependencies, which is ideal for\ncreating reproducible projects.  You and your future colleagues may not thank\nyou for this, but they sure as heck won't be cursing your name when they can't\nget the project to run.\n\n``` bash\nkedro install --build-reqs\n\ngit add .\ngit commit -m \"added additional dependencies\"\n```\n\n## create a node\n\nFor this example, we need a node to do much.  This node will\npass the `cars.csv` from a URL to a `parquet` file.  I am going to use a\nlambda to build my identity function inline.\n\n``` python\n# pipelines/cars_nodes.py\n\nfrom kedro.pipeline import node\n\nnodes = []\n\nnodes.append(\n        node(\n            func=lambda x:x,\n            inputs='raw_cars',\n            outputs='int_cars',\n            name='create_int_cars',\n            )\n        )\n```\n\n> \ud83d\uddd2\ufe0f **note**`find-kedro' will automatically pick up these nodes for us after we\n> set up our `pipeline_registry.py`.\n\n``` bash\ngit add .\ngit commit -m \"add create_int_cars node\"\n```\n\n## implement find-kedro\n\nNext, we need to tell kedro where our nodes are.  This is where `find-kedro`\ncomes in.  Once we point to the directory where our modules of\nnodes/pipelines are, it creates the pipelines dictionary for us automatically.  It will even separate each module into a pipeline and stitch them all into one default pipeline.\n\n``` python\n# pipeline_registry.py\n\n\"\"\"Project pipelines.\"\"\"\nfrom typing import Dict\nfrom pathlib import Path\n\nfrom kedro.pipeline import Pipeline\n\nfrom find_kedro import find_kedro\n\n\ndef register_pipelines() -> Dict[str, Pipeline]:\n    \"\"\"Register the project's pipelines.\n\n    Returns:\n        A mapping from a pipeline name to a \"Pipeline \"object.\n    \"\"\"\n    pipeline_dir = Path(__file__).parent / 'pipelines'\n    return find_kedro(directory= pipeline_dir)\n```\n\n> \ud83d\uddd2\ufe0f This is very similar to the default ` pipeline_registry'except the last two\n> lines.\n\n``` bash\ngit add .\ngit commit -m \"implement find-kedro\"\n```\n\n## create a baseline catalog\n\nOnce we have a pipeline setup, the kedro cli can automatically fill in missing\ncatalog entries with  `MemoryDataSet`'s. Thus, using the cli helps consistently scaffold the\ncatalog and ensure we don't end up with a typo in our\ndataset name.\n\n\n``` bash\nkedro catalog create --pipeline cars_nodes\n```\n\nKedro will kick out the following catalog file to `base/catalog/cars_nodes.yml`\nfor us to get started with.\n\n``` yaml\nraw_cars:\n  type: MemoryDataSet\nint_cars:\n  type: MemoryDataSet\n```\n\n> \ud83d\udd25 use the kedro cli to fill in any missing datasets from the automatically\n> catalog.\n\n## make a versioned dataset\n\nKedro has scaffolded `MemoryDataSet` 's for us.  We will convert them to the\nappropriate dataset type and turn on versioning for our `int` layer, which is\nthe first point we save in our environment.\n\n``` yaml\nraw_cars:\n  type: pandas.CSVDataSet\n  filepath: https://waylonwalker.com/cars.csv\nint_cars:\n  type: pandas.ParquetDataSet\n  filepath: data/int_cars.parquet\n  versioned: true\n```\n\nCommit your changes to the catalog.\n\n``` bash\ngit add .\ngit commit -m \"create catalog\"\n```\n\n\n## run the pipeline\n\nOnce we have the nodes and catalog setup, we can run the pipeline a few times\nto get some versioned data.  Each time we run, it will save a new version inside\nthe `int_cars.parquet` directory.\n\n``` bash \nkedro run\nkedro run\nkedro run\nkedro run\nkedro run\n```\n\n> \ud83d\uddd2\ufe0f we put our data in the data directory. By default, this directory is\n> included in the `.gitignore` and will not be picked up by git.\n\n\n## inspect the data\n\nListing the files in `data/int_cars.parquet` shows that I now have five different\ndatasets available.  I can load old ones, but by default, kedro will load the\nlatest one.\n\n\n``` bash\nls data/int_cars.parquet\n\n2021-07-05T15.24.53.164Z\n2021-07-05T15.29.56.144Z\n2021-07-05T15.30.23.101Z\n2021-07-05T15.30.26.555Z\n2021-07-05T15.31.12.688Z\n```\n\n> \ud83d\uddd2\ufe0f kedro sets the version at the timestamp that the session starts.  All\n> datasets created within the same run will have the same version.\n\n## stack on an incremental dataset\n\nThis is where things get interesting. Kedro comes with an incremental dataset\nthat will load all of the files from a particular directory into a dictionary\nwhere the keys are the filename of the dataset.  To load up all datasets into\nthis dictionary all we need to do is add a new catalog entry that is a  `type:\nPartitionedDataSet`, with a `path` pointing to the same place as the original,\nand a `dataset` type the same as the original.\n\n``` yaml\nint_cars_partitioned:\n  type: PartitionedDataSet\n  dataset: pandas.ParquetDataSet\n  path: data/int_cars.parquet\n\n```\n\n## catalog list\n\nListing the catalog entries confirms that we have successfully added our new `PartitionedDataSet`.\n\n\n``` python\nIn [17]: context.catalog.list()\nOut[17]:\n['raw_cars',\n 'int_cars',\n 'int_cars_partitioned',\n 'parameters']\n```\n\n\n## loading an incremental dataset\n\nNow we can easily load the datasets from every run we just did into a single\ndictionary, simply by running `context.catalog.load('int_cars_incremental')`.\n\n``` python\nIn [19]: context.catalog.load('int_cars_incremental')\n2021-07-05 11:32:40,534 - kedro.io.data_catalog - INFO - Loading data from `int_cars_incremental` (IncrementalDataSet)...\nOut[19]:\n{'2021-07-05T15.29.56.144Z/int_cars.parquet':              Unnamed: 0   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n 0             Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n 1         Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n 2            Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n 3        Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n 4     Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2\n 5               Valiant  18.1    6  225.0  105  2.76  3.460  20.22   1   0     3     1\n 6            Duster 360  14.3    8  360.0  245  3.21  3.570  15.84   0   0     3     4\n 7             Merc 240D  24.4    4  146.7   62  3.69  3.190  20.00   1   0     4     2\n 8              Merc 230  22.8    4  140.8   95  3.92  3.150  22.90   1   0     4     2\n 9              Merc 280  19.2    6  167.6  123  3.92  3.440  18.30   1   0     4     4\n 10            Merc 280C  17.8    6  167.6  123  3.92  3.440  18.90   1   0     4     4\n 11           Merc 450SE  16.4    8  275.8  180  3.07  4.070  17.40   0   0     3     3\n 12           Merc 450SL  17.3    8  275.8  180  3.07  3.730  17.60   0   0     3     3\n 13          Merc 450SLC  15.2    8  275.8  180  3.07  3.780  18.00   0   0     3     3\n 14   Cadillac Fleetwood  10.4    8  472.0  205  2.93  5.250  17.98   0   0     3     4\n 15  Lincoln Continental  10.4    8  460.0  215  3.00  5.424  17.82   0   0     3     4\n 16    Chrysler Imperial  14.7    8  440.0  230  3.23  5.345  17.42   0   0     3     4\n 17             Fiat 128  32.4    4   78.7   66  4.08  2.200  19.47   1   1     4     1\n 18          Honda Civic  30.4    4   75.7   52  4.93  1.615  18.52   1   1     4     2\n 19       Toyota Corolla  33.9    4   71.1   65  4.22  1.835  19.90   1   1     4     1\n 20        Toyota Corona  21.5    4  120.1   97  3.70  2.465  20.01   1   0     3     1\n 21     Dodge Challenger  15.5    8  318.0  150  2.76  3.520  16.87   0   0     3     2\n 22          AMC Javelin  15.2    8  304.0  150  3.15  3.435  17.30   0   0     3     2\n 23           Camaro Z28  13.3    8  350.0  245  3.73  3.840  15.41   0   0     3     4\n 24     Pontiac Firebird  19.2    8  400.0  175  3.08  3.845  17.05   0   0     3     2\n 25            Fiat X1-9  27.3    4   79.0   66  4.08  1.935  18.90   1   1     4     1\n 26        Porsche 914-2  26.0    4  120.3   91  4.43  2.140  16.70   0   1     5     2\n 27         Lotus Europa  30.4    4   95.1  113  3.77  1.513  16.90   1   1     5     2\n 28       Ford Pantera L  15.8    8  351.0  264  4.22  3.170  14.50   0   1     5     4\n 29         Ferrari Dino  19.7    6  145.0  175  3.62  2.770  15.50   0   1     5     6\n 30        Maserati Bora  15.0    8  301.0  335  3.54  3.570  14.60   0   1     5     8\n 31           Volvo 142E  21.4    4  121.0  109  4.11  2.780  18.60   1   1     4     2,\n '2021-07-05T15.30.23.101Z/int_cars.parquet':              Unnamed: 0   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n 0             Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n 1         Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n 2            Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n 3        Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n 4     Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2\n 5               Valiant  18.1    6  225.0  105  2.76  3.460  20.22   1   0     3     1\n 6            Duster 360  14.3    8  360.0  245  3.21  3.570  15.84   0   0     3     4\n 7             Merc 240D  24.4    4  146.7   62  3.69  3.190  20.00   1   0     4     2\n 8              Merc 230  22.8    4  140.8   95  3.92  3.150  22.90   1   0     4     2\n 9              Merc 280  19.2    6  167.6  123  3.92  3.440  18.30   1   0     4     4\n 10            Merc 280C  17.8    6  167.6  123  3.92  3.440  18.90   1   0     4     4\n 11           Merc 450SE  16.4    8  275.8  180  3.07  4.070  17.40   0   0     3     3\n 12           Merc 450SL  17.3    8  275.8  180  3.07  3.730  17.60   0   0     3     3\n 13          Merc 450SLC  15.2    8  275.8  180  3.07  3.780  18.00   0   0     3     3\n 14   Cadillac Fleetwood  10.4    8  472.0  205  2.93  5.250  17.98   0   0     3     4\n 15  Lincoln Continental  10.4    8  460.0  215  3.00  5.424  17.82   0   0     3     4\n 16    Chrysler Imperial  14.7    8  440.0  230  3.23  5.345  17.42   0   0     3     4\n 17             Fiat 128  32.4    4   78.7   66  4.08  2.200  19.47   1   1     4     1\n 18          Honda Civic  30.4    4   75.7   52  4.93  1.615  18.52   1   1     4     2\n 19       Toyota Corolla  33.9    4   71.1   65  4.22  1.835  19.90   1   1     4     1\n 20        Toyota Corona  21.5    4  120.1   97  3.70  2.465  20.01   1   0     3     1\n 21     Dodge Challenger  15.5    8  318.0  150  2.76  3.520  16.87   0   0     3     2\n 22          AMC Javelin  15.2    8  304.0  150  3.15  3.435  17.30   0   0     3     2\n 23           Camaro Z28  13.3    8  350.0  245  3.73  3.840  15.41   0   0     3     4\n 24     Pontiac Firebird  19.2    8  400.0  175  3.08  3.845  17.05   0   0     3     2\n 25            Fiat X1-9  27.3    4   79.0   66  4.08  1.935  18.90   1   1     4     1\n 26        Porsche 914-2  26.0    4  120.3   91  4.43  2.140  16.70   0   1     5     2\n 27         Lotus Europa  30.4    4   95.1  113  3.77  1.513  16.90   1   1     5     2\n 28       Ford Pantera L  15.8    8  351.0  264  4.22  3.170  14.50   0   1     5     4\n 29         Ferrari Dino  19.7    6  145.0  175  3.62  2.770  15.50   0   1     5     6\n 30        Maserati Bora  15.0    8  301.0  335  3.54  3.570  14.60   0   1     5     8\n 31           Volvo 142E  21.4    4  121.0  109  4.11  2.780  18.60   1   1     4     2,\n '2021-07-05T15.30.26.555Z/int_cars.parquet':              Unnamed: 0   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n 0             Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n 1         Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n 2            Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n 3        Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n 4     Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2\n 5               Valiant  18.1    6  225.0  105  2.76  3.460  20.22   1   0     3     1\n 6            Duster 360  14.3    8  360.0  245  3.21  3.570  15.84   0   0     3     4\n 7             Merc 240D  24.4    4  146.7   62  3.69  3.190  20.00   1   0     4     2\n 8              Merc 230  22.8    4  140.8   95  3.92  3.150  22.90   1   0     4     2\n 9              Merc 280  19.2    6  167.6  123  3.92  3.440  18.30   1   0     4     4\n 10            Merc 280C  17.8    6  167.6  123  3.92  3.440  18.90   1   0     4     4\n 11           Merc 450SE  16.4    8  275.8  180  3.07  4.070  17.40   0   0     3     3\n 12           Merc 450SL  17.3    8  275.8  180  3.07  3.730  17.60   0   0     3     3\n 13          Merc 450SLC  15.2    8  275.8  180  3.07  3.780  18.00   0   0     3     3\n 14   Cadillac Fleetwood  10.4    8  472.0  205  2.93  5.250  17.98   0   0     3     4\n 15  Lincoln Continental  10.4    8  460.0  215  3.00  5.424  17.82   0   0     3     4\n 16    Chrysler Imperial  14.7    8  440.0  230  3.23  5.345  17.42   0   0     3     4\n 17             Fiat 128  32.4    4   78.7   66  4.08  2.200  19.47   1   1     4     1\n 18          Honda Civic  30.4    4   75.7   52  4.93  1.615  18.52   1   1     4     2\n 19       Toyota Corolla  33.9    4   71.1   65  4.22  1.835  19.90   1   1     4     1\n 20        Toyota Corona  21.5    4  120.1   97  3.70  2.465  20.01   1   0     3     1\n 21     Dodge Challenger  15.5    8  318.0  150  2.76  3.520  16.87   0   0     3     2\n 22          AMC Javelin  15.2    8  304.0  150  3.15  3.435  17.30   0   0     3     2\n 23           Camaro Z28  13.3    8  350.0  245  3.73  3.840  15.41   0   0     3     4\n 24     Pontiac Firebird  19.2    8  400.0  175  3.08  3.845  17.05   0   0     3     2\n 25            Fiat X1-9  27.3    4   79.0   66  4.08  1.935  18.90   1   1     4     1\n 26        Porsche 914-2  26.0    4  120.3   91  4.43  2.140  16.70   0   1     5     2\n 27         Lotus Europa  30.4    4   95.1  113  3.77  1.513  16.90   1   1     5     2\n 28       Ford Pantera L  15.8    8  351.0  264  4.22  3.170  14.50   0   1     5     4\n 29         Ferrari Dino  19.7    6  145.0  175  3.62  2.770  15.50   0   1     5     6\n 30        Maserati Bora  15.0    8  301.0  335  3.54  3.570  14.60   0   1     5     8\n 31           Volvo 142E  21.4    4  121.0  109  4.11  2.780  18.60   1   1     4     2,\n '2021-07-05T15.31.12.688Z/int_cars.parquet':              Unnamed: 0   mpg  cyl   disp   hp  drat     wt   qsec  vs  am  gear  carb\n 0             Mazda RX4  21.0    6  160.0  110  3.90  2.620  16.46   0   1     4     4\n 1         Mazda RX4 Wag  21.0    6  160.0  110  3.90  2.875  17.02   0   1     4     4\n 2            Datsun 710  22.8    4  108.0   93  3.85  2.320  18.61   1   1     4     1\n 3        Hornet 4 Drive  21.4    6  258.0  110  3.08  3.215  19.44   1   0     3     1\n 4     Hornet Sportabout  18.7    8  360.0  175  3.15  3.440  17.02   0   0     3     2\n 5               Valiant  18.1    6  225.0  105  2.76  3.460  20.22   1   0     3     1\n 6            Duster 360  14.3    8  360.0  245  3.21  3.570  15.84   0   0     3     4\n 7             Merc 240D  24.4    4  146.7   62  3.69  3.190  20.00   1   0     4     2\n 8              Merc 230  22.8    4  140.8   95  3.92  3.150  22.90   1   0     4     2\n 9              Merc 280  19.2    6  167.6  123  3.92  3.440  18.30   1   0     4     4\n 10            Merc 280C  17.8    6  167.6  123  3.92  3.440  18.90   1   0     4     4\n 11           Merc 450SE  16.4    8  275.8  180  3.07  4.070  17.40   0   0     3     3\n 12           Merc 450SL  17.3    8  275.8  180  3.07  3.730  17.60   0   0     3     3\n 13          Merc 450SLC  15.2    8  275.8  180  3.07  3.780  18.00   0   0     3     3\n 14   Cadillac Fleetwood  10.4    8  472.0  205  2.93  5.250  17.98   0   0     3     4\n 15  Lincoln Continental  10.4    8  460.0  215  3.00  5.424  17.82   0   0     3     4\n 16    Chrysler Imperial  14.7    8  440.0  230  3.23  5.345  17.42   0   0     3     4\n 17             Fiat 128  32.4    4   78.7   66  4.08  2.200  19.47   1   1     4     1\n 18          Honda Civic  30.4    4   75.7   52  4.93  1.615  18.52   1   1     4     2\n 19       Toyota Corolla  33.9    4   71.1   65  4.22  1.835  19.90   1   1     4     1\n 20        Toyota Corona  21.5    4  120.1   97  3.70  2.465  20.01   1   0     3     1\n 21     Dodge Challenger  15.5    8  318.0  150  2.76  3.520  16.87   0   0     3     2\n 22          AMC Javelin  15.2    8  304.0  150  3.15  3.435  17.30   0   0     3     2\n 23           Camaro Z28  13.3    8  350.0  245  3.73  3.840  15.41   0   0     3     4\n 24     Pontiac Firebird  19.2    8  400.0  175  3.08  3.845  17.05   0   0     3     2\n 25            Fiat X1-9  27.3    4   79.0   66  4.08  1.935  18.90   1   1     4     1\n 26        Porsche 914-2  26.0    4  120.3   91  4.43  2.140  16.70   0   1     5     2\n 27         Lotus Europa  30.4    4   95.1  113  3.77  1.513  16.90   1   1     5     2\n 28       Ford Pantera L  15.8    8  351.0  264  4.22  3.170  14.50   0   1     5     4\n 29         Ferrari Dino  19.7    6  145.0  175  3.62  2.770  15.50   0   1     5     6\n 30        Maserati Bora  15.0    8  301.0  335  3.54  3.570  14.60   0   1     5     8\n 31           Volvo 142E  21.4    4  121.0  109  4.11  2.780  18.60   1   1     4     2}\n```\n\n> \ud83d\udc46 notice that incremental datasets are all loaded for you, its a dict of `filepath:dataset`\n\n## stack on a partitioned dataset\n\nLet's take a look at a similar type of dataset called `PartitionedDataSet`.  We\ncan add it to the catalog in a very similar way to how we added the\n`IncrementalDataSet`.\n\n``` yaml\nint_cars_incremental:\n  type: IncrementalDataSet\n  dataset: pandas.ParquetDataSet\n  path: data/int_cars.parquet\n```\n\n## loading a partitioned dataset\n\nNote that we get a dict with the same keys as before, but this time the\nvalues are a load function rather than loaded data.  Partitioned datasets can be helpful if\nyou are operating on datasets that take up more memory than you have available.\nIn our case of coupling this with versioned datasets, its likely to grow quite\nlarge, so `PartitionedDataSet` 's are likely a better option for this use.\n\n``` python\nIn [18]: context.catalog.load('int_cars_partitioned')\n2021-07-05 11:31:11,253 - kedro.io.data_catalog - INFO - Loading data from `int_cars_partitioned` (PartitionedDataSet)...\nOut[18]:\n{'2021-07-05T15.29.56.144Z/int_cars.parquet': <bound method AbstractVersionedDataSet.load of <kedro.extras.datasets.pandas.parquet_dataset.ParquetDataSet object at 0x7f4bb1570820>>,\n '2021-07-05T15.30.23.101Z/int_cars.parquet': <bound method AbstractVersionedDataSet.load of <kedro.extras.datasets.pandas.parquet_dataset.ParquetDataSet object at 0x7f4bb1570850>>,\n '2021-07-05T15.30.26.555Z/int_cars.parquet': <bound method AbstractVersionedDataSet.load of <kedro.extras.datasets.pandas.parquet_dataset.ParquetDataSet object at 0x7f4bb1570910>>,\n '2021-07-05T15.31.12.688Z/int_cars.parquet': <bound method AbstractVersionedDataSet.load of <kedro.extras.datasets.pandas.parquet_dataset.ParquetDataSet object at 0x7f4bb15709a0>>}\n```\n\n## incremental vs. partitioned\n\n`IncrementalDataSet` 's and `PartitionedDataSet` 's are very similar as they give\nyou access to a whole directory of data that uses the same underlying dataset\nloader.  The significant difference is whether you want your data pre-loaded or if\nyou want to load and dispose of it as you iterate over it.\n\n* incremental loads the data\n* partitioned give a load function\n\n## creating nodes with partitioned datasets\n\nLet's create a node with this `PartitionedDataSet` to collect stats on our\ndataset over time.  This node does a dict comprehension to get the length of\neach version that we pulled.\n\n```python\ndef timeseries_partitioned(cars: Dict):\n    return {k:len(car()) for k, car in cars.items()}\n\nnodes.append(\n        node(\n            func=timeseries_partitioned,\n            inputs='int_cars_partitioned',\n            outputs='int_cars_timeseries_partitioned',\n            name='create_int_cars_timeseries_partitioned',\n            )\n        )\n```\n \n> \ud83d\uddd2\ufe0f note that inside of the dict comprehension car is a load function that we need to call.\n\n## creating nodes with incremental datasets\n\nDoing the same node with our `IncrementalDataSet` looks very similar, except\nthis time car is loaded data inside of the dict comprehension, not a function\nthat we need to call.\n\n```python\ndef timeseries_incremental(cars: Dict):\n    return {k:len(car) for k, car in cars.items()}\n\nnodes.append(\n        node(\n            func=timeseries_incremental,\n            inputs='int_cars_incremental',\n            outputs='int_cars_timeseries_incremental',\n            name='create_int_cars_timeseries_incremental',\n            )\n        )\n```\n\n## More catalog entries\n\nAfter adding those nodes, we can add the catalog entries again with the command\nline.  This will not overwrite any of the datasets we just created. It will only\nadd to it.\n\n``` bash\nkedro catalog create --pipeline cars_nodes\n```\n\n\n``` yaml\nint_cars_timeseries_partitioned:\n  type: MemoryDataSet\nint_cars_timeseries_incremental:\n  type: MemoryDataSet\n```\n\n``` yaml\nint_cars_timeseries_partitioned:\n  type: pickle.PickleDataSet\n  filepath: data/int_cars_timeseries_partitioned.parquet\nint_cars_timeseries_incremental:\n  type: pickle.PickleDataSet\n  filepath: data/int_cars_timeseries_incremental.parquet\n```\n\n\n\n## Loading the new datasets\n\nLoading the two dtasets that we just created show that we have the ended up\nwith the same result using both incremental and partitioned datasets.  This\nresult is a dictionary of filepaths mapped to the size of the dataset.  Since\nthe default filepaths are timestamps we could start doing some time series\nanalysis to see how our dataset is changing over time.\n\n``` python\nIn [32]: context.catalog.load('int_cars_timeseries_incremental')\n2021-07-05 12:00:55,014 - kedro.io.data_catalog - INFO - Loading data from `int_cars_timeseries_incremental` (PickleDataSet)...\nOut[32]:\n{'2021-07-05T15.29.56.144Z/int_cars.parquet': 32,\n '2021-07-05T15.30.23.101Z/int_cars.parquet': 32,\n '2021-07-05T15.30.26.555Z/int_cars.parquet': 32,\n '2021-07-05T15.31.12.688Z/int_cars.parquet': 32,\n '2021-07-05T16.43.43.088Z/int_cars.parquet': 32}\n\nIn [33]: context.catalog.load('int_cars_timeseries_partitioned')\n2021-07-05 12:01:03,223 - kedro.io.data_catalog - INFO - Loading data from `int_cars_timeseries_partitioned` (PickleDataSet)...\nOut[33]:\n{'2021-07-05T15.29.56.144Z/int_cars.parquet': 32,\n '2021-07-05T15.30.23.101Z/int_cars.parquet': 32,\n '2021-07-05T15.30.26.555Z/int_cars.parquet': 32,\n '2021-07-05T15.31.12.688Z/int_cars.parquet': 32,\n '2021-07-05T16.43.43.088Z/int_cars.parquet': 32,\n '2021-07-05T16.50.46.686Z/int_cars.parquet': 32}\n\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-pickle/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-pickle-og_250x140.png\" alt=\"article cover for \n Kedro - My Data Is Not A Table\n\"/>\n          <p><strong>\n Kedro - My Data Is Not A Table\n</strong></p>\n      </a>\n  </div>\n\n\n> \u261d\ufe0f I have a full article on creating datasets that are not tabular datasets\n> using pickle.\n\n\n## cross posted to dev\n\nIf you like this article give it some \u2764\ufe0f\ud83e\udd84\ud83c\udff7\ufe0f on dev https://dev.to/waylonwalker/incremental-versioned-datasets-in-kedro-3ajn\n\n\n---\n\nThis post was primarily built live on https://twitch.tv/waylonwalker, give me a\nfollow and join in the live show if that is something that interests you.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-inputs'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How Kedro handles your inputs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-in-scripts'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Using Kedro In Scripts</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-08", "edit_link": "https://github.com/edit/main/pages/blog/kedro-incremental-versioned-datasets.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574146", "datetime": "2021-07-08 00:00:00+00:00", "slug": "kedro-incremental-versioned-datasets", "jinja": false, "output_html": "markout/kedro-incremental-versioned-datasets/index.html", "long_description": "Kedro versioned datasets can be mixed with incremental and partitioned datasets https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. This was a question presented to me at work.  We had some plots being produces To en", "super_description": "Kedro versioned datasets can be mixed with incremental and partitioned datasets https://waylonwalker.com/what-is-kedro/ \ud83d\udc46 Unsure what kedro is?  Check out this post. This was a question presented to me at work.  We had some plots being produces To enable this all we needed to do now was to add  Set up a new project just as usual.   I called my project versioned-partitioned-kedro-example. You can call your \u26a0\ufe0f Please do not skip out on using a virtual environment. You may use I popped open my depe", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a9d0>, next=<frontmatter.Post object at 0x7f345064c460>)"}, {"cover": "", "title": "My favorite pandas pattern", "tags": [], "status": "Draft", "templateKey": "blog-post", "path": "pages/blog/pandas-pattern.md", "description": "none", "content": "# My favorite pandas pattern\n\n\nI work with a lot of transactional timeseries data that includes categories.  I often want to create timeseries plots with each category as its own line.  This is the method that I use almost data to achieve this result.  Typically the data that am working with changes very slowly and trends happen over years not days or weeks.  Plotting daily/weekly data tends to be noisy and hides the trend.  I use this pattern because it works well with my data and is easy to explain to my stakeholders.\n\n\n\n```python\nimport pandas as pd\nimport numpy as np\n% matplotlib inline\n```\n\n## Lets Fake some data\n\n\nHere I am trying to simulate a subset of a large transactional data set. This could be something like sales data, production data, hourly billing, anything that has a date, category, and value.  Since we generated this data we know that it is clean.  I am still going to assume that it contains some nulls, and an irregular date range.\n\n\n```python\nn = 365*5\ncols = {'level_0': 'date',\n        'level_1': 'item',\n        0: 'qty', }\ndata = (pd.DataFrame(np.random.randint(0, 10, size=(n, 4)),\n                     columns=['paper', 'pencils', 'note cards', 'markers'],\n                     index=pd.date_range('1/1/2017', periods=n, freq='d'),\n                     )\n        .stack()\n        .to_frame()\n        .reset_index()\n        .rename(columns=cols))\ndata.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>date</th>\n      <th>item</th>\n      <th>qty</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2017-01-01</td>\n      <td>paper</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2017-01-01</td>\n      <td>pencils</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2017-01-01</td>\n      <td>note cards</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2017-01-01</td>\n      <td>markers</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2017-01-02</td>\n      <td>paper</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n## The pattern\n\nHere I am going to take my groupby date and item, this will take care of duplicate entries with the same time stamp.  Select the value I want to sum on. unstack the items index into columns.  Resample the data by month.  I could easily use any of the [available rules](https://pandas.pydata.org/pandas-docs/stable/timeseries.html#offset-aliases). Fill any missing months with 0, since there wasnt a transaction during that month. Apply a rolling window to get the annual sum.  I find that this helps to ground values in values that my stakeholders are used to seeing on a regular basis and reduces the need for them to recalculate in their head.  Then I am going to drop the nulls created by the rolling window for the first 11 rows.\n\n\n```python\nplot_data = (data\n             .groupby(['date', 'item'])\n             .sum()\n             ['qty']\n             .unstack()\n             .resample('m')\n             .sum()\n             .fillna(0)\n             .rolling(12)\n             .sum()\n             .dropna()\n             )\nplot_data.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>item</th>\n      <th>markers</th>\n      <th>note cards</th>\n      <th>paper</th>\n      <th>pencils</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-12-31</th>\n      <td>1543.0</td>\n      <td>1739.0</td>\n      <td>1613.0</td>\n      <td>1657.0</td>\n    </tr>\n    <tr>\n      <th>2018-01-31</th>\n      <td>1572.0</td>\n      <td>1744.0</td>\n      <td>1635.0</td>\n      <td>1635.0</td>\n    </tr>\n    <tr>\n      <th>2018-02-28</th>\n      <td>1563.0</td>\n      <td>1717.0</td>\n      <td>1645.0</td>\n      <td>1645.0</td>\n    </tr>\n    <tr>\n      <th>2018-03-31</th>\n      <td>1596.0</td>\n      <td>1703.0</td>\n      <td>1629.0</td>\n      <td>1600.0</td>\n    </tr>\n    <tr>\n      <th>2018-04-30</th>\n      <td>1557.0</td>\n      <td>1693.0</td>\n      <td>1648.0</td>\n      <td>1581.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n```python\nplot_data.plot(title='Rolling annual sum of Categorical Random Data');\n```\n\n## For the Visual Learners\n\n### Groupby\n\n\n```python\nplot_data = (data\n             .groupby(['date', 'item'])\n             .sum()\n             )\nplot_data.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>qty</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th>item</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th rowspan=\"4\" valign=\"top\">2017-01-01</th>\n      <th>markers</th>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>note cards</th>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>paper</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>pencils</th>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2017-01-02</th>\n      <th>markers</th>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### Select Values\n\nIn this case I chose to do this to avoid working with a multiple levels in the columns that would be created in the unstack() step.\n\n\n```python\nplot_data = plot_data['qty']\n\nplot_data.head()\n```\n\n\n\n\n    date        item\n    2017-01-01  markers       9\n                note cards    5\n                paper         1\n                pencils       4\n    2017-01-02  markers       4\n    Name: qty, dtype: int32\n\n\n\n### unstack\n\ntransform the last column in the index ('item') into rows.\n\n\n```python\nplot_data = plot_data.unstack()\n\nplot_data.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>item</th>\n      <th>markers</th>\n      <th>note cards</th>\n      <th>paper</th>\n      <th>pencils</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-01-01</th>\n      <td>9</td>\n      <td>5</td>\n      <td>1</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>2017-01-02</th>\n      <td>4</td>\n      <td>2</td>\n      <td>3</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>2017-01-03</th>\n      <td>9</td>\n      <td>5</td>\n      <td>2</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2017-01-04</th>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2017-01-05</th>\n      <td>0</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### resample\n\nThis step is important for irregular data in order to get the data into regular intervals.\n\n\n```python\nplot_data = plot_data.resample('m').sum()\n\nplot_data.head()\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>item</th>\n      <th>markers</th>\n      <th>note cards</th>\n      <th>paper</th>\n      <th>pencils</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-01-31</th>\n      <td>145</td>\n      <td>128</td>\n      <td>117</td>\n      <td>146</td>\n    </tr>\n    <tr>\n      <th>2017-02-28</th>\n      <td>136</td>\n      <td>140</td>\n      <td>133</td>\n      <td>135</td>\n    </tr>\n    <tr>\n      <th>2017-03-31</th>\n      <td>112</td>\n      <td>145</td>\n      <td>125</td>\n      <td>163</td>\n    </tr>\n    <tr>\n      <th>2017-04-30</th>\n      <td>143</td>\n      <td>148</td>\n      <td>112</td>\n      <td>147</td>\n    </tr>\n    <tr>\n      <th>2017-05-31</th>\n      <td>86</td>\n      <td>134</td>\n      <td>139</td>\n      <td>141</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### rolling\n\nI like to use rolling because it get the data into annual numbers, and reduces noise.  I have found that most of my datasets have patterns and trends that are greater than 1y.  This  is just due to the industry that I am in.  Play with the resample and rolling rules to fit the need of your own data.\n\n\n```python\nplot_data = plot_data.rolling(12).sum()\n\nplot_data.head(20)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>item</th>\n      <th>markers</th>\n      <th>note cards</th>\n      <th>paper</th>\n      <th>pencils</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-01-31</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-02-28</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-03-31</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-04-30</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-05-31</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-06-30</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-07-31</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-08-31</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-09-30</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-10-31</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-11-30</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2017-12-31</th>\n      <td>1543.0</td>\n      <td>1739.0</td>\n      <td>1613.0</td>\n      <td>1657.0</td>\n    </tr>\n    <tr>\n      <th>2018-01-31</th>\n      <td>1572.0</td>\n      <td>1744.0</td>\n      <td>1635.0</td>\n      <td>1635.0</td>\n    </tr>\n    <tr>\n      <th>2018-02-28</th>\n      <td>1563.0</td>\n      <td>1717.0</td>\n      <td>1645.0</td>\n      <td>1645.0</td>\n    </tr>\n    <tr>\n      <th>2018-03-31</th>\n      <td>1596.0</td>\n      <td>1703.0</td>\n      <td>1629.0</td>\n      <td>1600.0</td>\n    </tr>\n    <tr>\n      <th>2018-04-30</th>\n      <td>1557.0</td>\n      <td>1693.0</td>\n      <td>1648.0</td>\n      <td>1581.0</td>\n    </tr>\n    <tr>\n      <th>2018-05-31</th>\n      <td>1624.0</td>\n      <td>1674.0</td>\n      <td>1632.0</td>\n      <td>1592.0</td>\n    </tr>\n    <tr>\n      <th>2018-06-30</th>\n      <td>1582.0</td>\n      <td>1645.0</td>\n      <td>1657.0</td>\n      <td>1593.0</td>\n    </tr>\n    <tr>\n      <th>2018-07-31</th>\n      <td>1662.0</td>\n      <td>1654.0</td>\n      <td>1680.0</td>\n      <td>1613.0</td>\n    </tr>\n    <tr>\n      <th>2018-08-31</th>\n      <td>1654.0</td>\n      <td>1617.0</td>\n      <td>1650.0</td>\n      <td>1616.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n### dropna\n\nget rid of the first 11 null rows\n\n\n```python\nplot_data = plot_data.dropna()\n\nplot_data.head(10)\n```\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>item</th>\n      <th>markers</th>\n      <th>note cards</th>\n      <th>paper</th>\n      <th>pencils</th>\n    </tr>\n    <tr>\n      <th>date</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2017-12-31</th>\n      <td>1543.0</td>\n      <td>1739.0</td>\n      <td>1613.0</td>\n      <td>1657.0</td>\n    </tr>\n    <tr>\n      <th>2018-01-31</th>\n      <td>1572.0</td>\n      <td>1744.0</td>\n      <td>1635.0</td>\n      <td>1635.0</td>\n    </tr>\n    <tr>\n      <th>2018-02-28</th>\n      <td>1563.0</td>\n      <td>1717.0</td>\n      <td>1645.0</td>\n      <td>1645.0</td>\n    </tr>\n    <tr>\n      <th>2018-03-31</th>\n      <td>1596.0</td>\n      <td>1703.0</td>\n      <td>1629.0</td>\n      <td>1600.0</td>\n    </tr>\n    <tr>\n      <th>2018-04-30</th>\n      <td>1557.0</td>\n      <td>1693.0</td>\n      <td>1648.0</td>\n      <td>1581.0</td>\n    </tr>\n    <tr>\n      <th>2018-05-31</th>\n      <td>1624.0</td>\n      <td>1674.0</td>\n      <td>1632.0</td>\n      <td>1592.0</td>\n    </tr>\n    <tr>\n      <th>2018-06-30</th>\n      <td>1582.0</td>\n      <td>1645.0</td>\n      <td>1657.0</td>\n      <td>1593.0</td>\n    </tr>\n    <tr>\n      <th>2018-07-31</th>\n      <td>1662.0</td>\n      <td>1654.0</td>\n      <td>1680.0</td>\n      <td>1613.0</td>\n    </tr>\n    <tr>\n      <th>2018-08-31</th>\n      <td>1654.0</td>\n      <td>1617.0</td>\n      <td>1650.0</td>\n      <td>1616.0</td>\n    </tr>\n    <tr>\n      <th>2018-09-30</th>\n      <td>1669.0</td>\n      <td>1648.0</td>\n      <td>1638.0</td>\n      <td>1634.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/how-i-deploy-2022'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>https://waylonwalker.com/how-i-deploy-2022</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-incremental-versioned-datasets'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Incremental Versioned Datasets in Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-03-01", "edit_link": "https://github.com/edit/main/pages/blog/pandas-pattern.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574152", "datetime": "2018-03-01 00:00:00+00:00", "slug": "pandas-pattern", "jinja": false, "output_html": "markout/pandas-pattern/index.html", "long_description": "I work with a lot of transactional timeseries data that includes categories.  I often want to create timeseries plots with each category as its own line.  This is the method that I use almost data to achieve this result.  Typically the data that am w", "super_description": "I work with a lot of transactional timeseries data that includes categories.  I often want to create timeseries plots with each category as its own line.  This is the method that I use almost data to achieve this result.  Typically the data that am working with changes very slowly and trends happen over years not days or weeks.  Plotting daily/weekly data tends to be noisy and hides the trend.  I use this pattern because it works well with my data and is easy to explain to my stakeholders. Here ", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640f70>, next=<frontmatter.Post object at 0x7f3450640d60>)"}, {"cover": "", "title": "https://waylonwalker.com/how-i-deploy-2022", "tags": ["blog"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/how-i-deploy-2022.md", "description": "Content at the speed of thought. well, as fast as I can type Mechanical Engineering Data Engineering Terminal Junkie Please ask questions in slido # 983 911 | A", "content": "## How I Continuously Deliver Content to my Blog with Markdown, GitHub, Python, and netlify\n\nContent at the speed of thought.\n\n> well, as fast as I can type\n\n## Me\n\n* Mechanical Engineering\n* Data Engineering\n* Terminal Junkie\n\n## Ask Questions in slido\n\nPlease ask questions in slido # 983 911 | App Dev 1 Track\n\n## Slido Poll\n\nDo **you** have a personal blog / notes / website?\n\n> * Yes - Static, built with python\n> * Yes - I manage a server running python\n> * Yes - Not python\n> * No\n\nwe will circle back around in a few minutes\n\n## I'll give away my answer\n\n* Yes - Static, built with python\n\n## Slack Channel: #track-1-appdev\n\nIf you are in the slack give me a \ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\n\nLet's light up slack \ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\n\n## 4 parts\n\n* Why\n* My workflow\n* Under the hood\n* Open Source\n\n## Part 1 WHY\n\n## 2016\n\n## I want to own my content\n\nTwitter is a great networking tool, but it's rare to see anything more\nthan a few hours old.\n\n## I want to own my content\n\nNo one can take my domain or shut down the platform that my content is on.\n\n## Some of my Stats\n\n* 48 Google top 10 ranking pages\n* 6500 monthly clicks on google\n* 12k page monthly views\n\n> from ahrefs and google search console\n\n## [Learn In Public](https://www.swyx.io/learn-in-public/)\n\nI'm creating learning exhaust.\n\n> Inspired by [swyx](https://www.swyx.io/learn-in-public/)\n> https://www.swyx.io/learn-in-public/\n\n## from swyx\n\n> Whatever your thing is, make the thing you wish you had found when you\n> were learning. Don\u2019t judge your results by \u201cclaps\u201d or retweets or\n> stars or upvotes - just talk to yourself from 3 months ago. I keep an\n> almost-daily dev blog written for no one else but me.\n\n\n## Focus on content\n\nI could not do any of this if I was focused on Building rather than\nwriting.\n\n## Focus on content\n\nNo one needs elastic search navigate your first 50 posts.\n\n> when you are starting\n\n## Focus on content\n\nNo one is going to make comments.\n\n> when you are starting\n\n## Write for yourself\n\nYou are your biggest audience out of the gate.\n\n> If you continue writing others like you will find you\n\n## Don't worry about the Trolls\n\nNo one is going to take your python keys away.\n\n## Slido Check\n\nPlease ask questions in slack/slido\n\n## Part 2 Workflow and tools\n\n> To the meat of the talk\n\n1. Let's start by making a post\n2. then show how it works under the hood\n\n## If you take away anything\n\nFocus on content that you want to consume.\n\n## My Flow\n\n``` txt\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502  TIL  \u2502\n   \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518\n     \u2502\n     \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     \u2502  \u2502             \u2502\n     \u2514\u2500\u25ba\u2502    Posts    \u2502\n        \u2502             \u2502\n        \u2514\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n          \u2502\n          \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2514\u2500\u2500\u25ba\u2502    YouTube     \u2502\n          \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n          \u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n          \u2514\u2500\u2500\u25ba\u2502    Conference  \u2502\n              \u2502    Talks       \u2502\n              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n## Let's start with a Til\n_the process_\n\n### shoutout to @[jbrancha](https://twitter.com/jbrancha)\n\nCheck out his amazing [til repo](https://github.com/jbranchaud/til)\n\n> If you ask google very many questions about git, you will end up\n> finding him on the top\n\n## Copier\n\nI use [copier](https://copier.readthedocs.io/en/stable/) for single file\ntemplates.\n\n\n## Copier give me a new page\n\nHow I Present from the terminal with lookatme\nlookatme-slides\n\n``` bash\ncopier copy ~/.copier-templates/`ls ~/.copier-templates |\\\n    fzf --header $(pwd) --preview='tree ~/.copier-templates/{} |\\\n    lolcat'` . \\\n```\n\n## nvim open my file\n\n!TIP Once it starts getting uncomfortable to find posts, its nice to have\ngood shortcuts to get around.\n\n> I have about 700 files on my blog to sift through\n\n## nvim open my file\n\n``` bash\nmarkata list --map path --filter 'templateKey==\"til\"' --sort date --reverse\n```\n\n``` vim\nnnoremap geil <cmd>Telescope find_files find_command=markata,list,--map,path,--filter,templateKey=='til',--sort,date,--reverse<cr>\n```\n\n## Paste in a snippet\n\nOften times I am working away on some sort of project, and I just need\nto save a snippet for a later post.\n\n## Write the content\n\nLater I come back and fill in the content.\n\n## git push\n\nI have a vim hotkey `gic` to commit my current file, and `gpp` to push\nit.\n\n## It's nearly live\n\nIt will be live within a few minutes.\n\n## Cross Post\n\nI've tried to cross post to more, but it really gets overwhelming.\n\n* Twitter\n* dev.to\n\n## Cross Post\n\nI have a plugin to convert my markdown to a more dev.to friendly format.\n\n## Slido Check\n\nLet'g grab a question from slack/slido\n\n## Part 3 How it's deployed\n\nIn March of 2021 I made the big switch from a javascript based framework\nto my own ssg.\n\n## I thought it would be easy....\n\nThere are a bunch of open source libraries that do all the things I need\nan ssg to do.\n\n## Moving to python\n\nOne of the biggest selling points to moving back to python was that I\nuse it every day and know the ecosystem much better.\n\n* [ipython](https://ipython.org/)\n* [pyinstrument](https://github.com/joerick/pyinstrument)\n* breakpoint\n\n## Part 3 How it's deployed\n_word of caution_\n\nThis part might be a lot of code coming quick.\n\n* Show how it comes together\n* Link to the slides\n\n## Everything is markdown\n\n``` python\npymdown-extensions\npython-frontmatter\n```\n\n## frontmatter\n\nAll the metadata is defined in yaml frontmatter and read in with the\n[python-frontmatter](https://github.com/eyeseast/python-frontmatter)\nlibrary.\n\n``` yaml\n---\ntemplateKey: blog-post\ntags: ['webdev', 'meta' ]\ntitle: How I deploy my blog in 2022\ndate: 2021-10-29\nstatus: draft\n\n---\n```\n\n## setting up extensions\n\nmarkata supports [pymdown-extensions](https://facelessuser.github.io/pymdown-extensions/)\n\n``` python\nDEFAULT_MD_EXTENSIONS = [\n    \"markdown.extensions.toc\",\n    \"markdown.extensions.admonition\",\n    \"markdown.extensions.tables\",\n    \"markdown.extensions.md_in_html\",\n    \"pymdownx.magiclink\",\n    \"pymdownx.betterem\",\n    \"pymdownx.tilde\",\n    \"pymdownx.emoji\",\n    \"pymdownx.tasklist\",\n    \"pymdownx.superfences\",\n    \"pymdownx.highlight\",\n    \"pymdownx.inlinehilite\",\n    \"pymdownx.keys\",\n    \"pymdownx.saneheaders\",\n    \"codehilite\",\n]\n```\n\n## setting the markdown object\n\n``` python\nself.markdown_extensions = [\n    *DEFAULT_MD_EXTENSIONS,\n    *markdown_extensions\n]\nself.md = markdown.Markdown(\n    extensions=self.markdown_extensions\n)\n```\n\n## [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n\n* comes from pytest\n* allows users to easily modify the framework to their liking\n\n> one of the biggest reasons I started down this path is that I wanted\n> to build my own plugins all the way down framework.\n\n## [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n\n[Pluggy](https://pluggy.readthedocs.io/en/stable/) is what I use to\nimplement my lifecycle.\n\n* configure\n* glob\n* load\n* pre_render\n* render\n* post_render\n* save\n\n## Pluggy\n\nPluggy allows the framework to crate a `hook_spec` and plugin authors to\nimplement hooks with the `hook_impl`.\n\n``` python\n\"\"\"Define hook specs.\"\"\"\nimport pluggy\n\n\n# the framework's definition\nhook_spec = pluggy.HookspecMarker(\"markata\")\n\n# the plugin author's implementation\nhook_impl = pluggy.HookimplMarker(\"markata\")\n```\n\n## creating the hookspec\n\nIt's an empty class.\n\n``` python\nclass MarkataSpecs:\n    \"\"\"\n    Namespace that defines all specifications for Load hooks.\n\n    glob -> load -> render -> save\n    \"\"\"\n\n    @hook_spec\n    def glob(self, markata: \"Markata\") -> None:\n        \"\"\"Glob for files to load.\"\"\"\n        pass\n\n    @hook_spec\n    def load(self, markata: \"Markata\") -> None:\n        \"\"\"Load list of files.\"\"\"\n        pass\n\n    @hook_spec\n    def pre_render(self, markata: \"Markata\") -> None:\n        \"\"\"Pre render content from loaded data.\"\"\"\n        pass\n\n    @hook_spec\n    def render(self, markata: \"Markata\") -> None:\n        \"\"\"Render content from loaded data.\"\"\"\n        pass\n\n    @hook_spec\n    def post_render(self, markata: \"Markata\") -> None:\n        \"\"\"Post render content from loaded data.\"\"\"\n        pass\n\n    @hook_spec\n    def save(self, markata: \"Markata\") -> None:\n        \"\"\"Save content from data.\"\"\"\n        pass\n```\n\n## creating the plugin manager\n\n``` python\npm = pluggy.PluginManager(\"markata\")\npm.add_hookspecs(hookspec.MarkataSpecs)\n\n# register hooks\nfor hook in config.hooks:\n    plugin = importlib.import_module(hook)\n    pm.register(plugin)\n```\n\n## Diskcache\n\n[Diskcache](https://github.com/grantjenks/python-diskcache/) allows you\nto setup a persistent cache layer.\n\n``` python\ncache = FanoutCache(self.MARKATA_CACHE_DIR, statistics=True)\n```\n\n## make a key\n\nTo set soemthing to cache we need a unique identifier.\n\n``` python\ndef make_hash(self, *keys: str) -> str:\n    str_keys = [str(key) for key in keys]\n    return hashlib.md5(\"\".join(str_keys).encode(\"utf-8\")).hexdigest()\n```\n\n## make a key\n\nFrom my plugins I cache anything that the function I run touches.\n\n* plugin code\n* article content\n* article frontmatter\n\n``` python\nfrom pathlib import Path\n\nkey = make_hash(Path(__file__).read_text(), article.content, article.metadata['title'])\n```\n\n## accessing the cache\n\nNow that we have a cache and a key we can ask the cache for values.\n\n``` python\nhtml_from_cache = cache.get(key)\n```\n\n## if it's not yet been set\n\nIf the content is not yet set or has expired, you will get `None` back and need\nto create the value.\n\n``` python\nhtml_from_cache = cache.get(key)\nif html_from_cache is None:\n    html = markata.md.convert(article.content)\n    cache.add(key, html, expire=15 * 24 * 60)\nelse:\n    html = html_from_cache\n```\n\n## Configuration\n\n[anyconfig](https://github.com/ssato/python-anyconfig) is a great tool\nto pull your config from generic config files.\n\n* markta.toml\n* markta.yaml\n* markta.ini\n* pyproject.toml\n\n## Configuration\n\nAnyconfig needs a `path`, `parser`, and `keys`.  The key is your tools\nprefix\n\n``` python\nimport anyconfig\n\nanyconfig.load(\n            path_specs= (Path() / f\"markata.toml\"),\n            ac_parser= \"toml\",\n            keys= ['markata'],\n        )\n```\n\n## Configuration\n\nEach key in the config files used with `anyconfig` must be prefixed with\nthe tool's name.\n\n```\n# markata.toml\n[markata]\ndefault_cache_expire = 1209600\n\n[markata.auto_description.description]\nlen=160\n```\n\n## Markata was born\n\nA plugins all the way doen static site generator written in python.\n\n* 6 lifecycle methods\n* 21 pre-defined plugins\n* cache store\n* toml based configuration\n\n## GitHub Actions\n\nRendering the site inside of github actions with the cache is pretty\nstraightforward with these four steps.  Keying off of the configuration will\nbust the cache every time we change the configuration.  You can hack a full\nrebuild by changing anything inside of the configuration file.\n\n\n## GitHub Actions\n\n``` yaml\n\n- name: Cache\nuses: actions/cache@v2\nwith:\n    path: .markata.cache\n    key: ${{ runner.os }}-${{ hashfiles('markata.toml') }}-markata\n\n- name: Set up Python 3.8\nuses: actions/setup-python@v1\nwith:\n    python-version: 3.8\n\n- name: install markata\nrun: pip install git+https://github.com/WaylonWalker/markata.git@develop python-twitter background # checksumdir\n\n- name: run markata\nrun: markata --no-rich\n```\n\n## GitHub Actions\n\n``` python\n- name: install markata\nrun: pip install git+https://github.com/WaylonWalker/markata.git@develop python-twitter background # checksumdir\n```\n\n> Note: I run bleeding edge, don't do that\n\n## Netlify\n\nI use deploy to netlify but any static site host would work.\n\n## Netlify -> Cloudflare Pages\n\nSince Making the title I've moved to Cloudflare pages.\n\n> Netlify is great, but I'm cheap and wanted analytics\n\n## Results\n\nmarkata.dev\n\nMarkdown to site, with seo, cover images, full works.\n\n* seo/og tags\n* cover images\n* frontmatter cleansing\n* feeds\n* rss\n* cli\n* sitemap\n* heading links\n* build profiler\n\n## Markata.dev\n\nIn early 2022 I packaged up my blog's backend as a package for others to use.\n\n## Markata.dev\n\nI now have several users running their site with what I have built\n\n* My buddy has a near clone of mine with 15 posts\n* Techdestructive\n\n## Markata.dev\n\n* plugins all the way down\n* use the parts you want\n* modify to your liking\n\n## Markata.dev\n\nIt lets you get started quick, write content early, and grow into your own platform\n\n## Markata.dev\n\n\u26a0 I'ts still very much beta\n\n## Open Source\n\n```\n# install it for your application\npip install markata\n\n# try it out\npipx run markata build\n```\n\n## quickstart\n\n```\nmkdir pages\necho '# My First Post' > first-post.md\necho '# Hello World' > hello-world.md\n```\n\n```\n# or if pipx is your thing\npix run markata build\n```\n\n## You can do it too\n\nDon't worry about having the perfect post, just make something that is\nuseful to you, and others who will find it.\n\n## Connect\n\n* [ twitter ](https://twitter.com/_WaylonWalker)\n* [ LinkedIn ](https://www.linkedin.com/in/waylonwalker/)\n* [ GitHub ](https://github.com/WaylonWalker)\n* [ Dev.to](https://dev.to/waylonwalker)\n* [ twitch ](https://www.twitch.tv/waylonwalker)\n\n\n## Links\n\n* [Learn In Public](https://www.swyx.io/learn-in-public/)\n* [swyx](https://www.swyx.io/learn-in-public/)\n* [jbrancha](https://twitter.com/jbrancha)\n* [til repo](https://github.com/jbranchaud/til)\n* [copier](https://copier.readthedocs.io/en/stable/)\n* [ipython](https://ipython.org/)\n* [pyinstrument](https://github.com/joerick/pyinstrument)\n* [python-frontmatter](https://github.com/eyeseast/python-frontmatter)\n* [pymdown-extensions](https://facelessuser.github.io/pymdown-extensions/)\n* [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n* [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n* [Pluggy](https://pluggy.readthedocs.io/en/stable/)\n* [Diskcache](https://github.com/grantjenks/python-diskcache/)\n* [anyconfig](https://github.com/ssato/python-anyconfig)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pariss-athena-on-black-tech-pipeline'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Black Tech Pipeline</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/pandas-pattern'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>My favorite pandas pattern</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-10-29", "author": "@_waylonwalker", "styles": {"margin": {"bottom": 0, "left": 0, "right": 0, "top": 0}, "padding": {"bottom": 0, "left": 10, "right": 10, "top": 0}, "headings": {"1": {"bg": "default", "fg": "#ff66c4,bold,italics", "prefix": " \u21c1 ", "suffix": " \u21bd "}}, "quote": {"side": "\u2502", "style": {"bg": "default", "fg": "#aaa"}, "top_corner": "\u256d", "bottom_corner": "\u2570"}, "title": {"bg": "default", "fg": "#e1af66"}, "author": {"bg": "default", "fg": "#368ce2"}, "date": {"bg": "default", "fg": "#368ce2"}, "slides": {"bg": "default", "fg": "#368ce2"}}, "edit_link": "https://github.com/edit/main/pages/blog/how-i-deploy-2022.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574158", "datetime": "2021-10-29 00:00:00+00:00", "slug": "how-i-deploy-2022", "output_html": "markout/how-i-deploy-2022/index.html", "long_description": "Content at the speed of thought. well, as fast as I can type Mechanical Engineering Data Engineering Terminal Junkie Please ask questions in slido # 983 911 | App Dev 1 Track Do  Yes - Static, built with python Yes - I manage a server running python ", "super_description": "Content at the speed of thought. well, as fast as I can type Mechanical Engineering Data Engineering Terminal Junkie Please ask questions in slido # 983 911 | App Dev 1 Track Do  Yes - Static, built with python Yes - I manage a server running python Yes - Not python No we will circle back around in a few minutes Yes - Static, built with python If you are in the slack give me a \ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25\ud83d\udd25 Let Why My workflow Under the hood Open Source Twitter is a great networking tool, but it No one can take my dom", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646430>, next=<frontmatter.Post object at 0x7f34506461f0>)"}, {"cover": "", "title": "Black Tech Pipeline", "tags": ["catalytic"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/pariss-athena-on-black-tech-pipeline.md", "description": "I was particularly inspired by @chantastic episode 103 of the react podcast with @ParissAthena. They spoke about the black tech pipeline as well as Diversity, E", "content": "I was particularly inspired by @chantastic episode 103 of the react podcast with @ParissAthena. They spoke about the black tech pipeline as well as Diversity, Equity, and Inclusion. Pariss is quite an inspiration. She has done so much work to create a better place for POC in tech. I like that not only is she helping them get jobs but acting as a mentor for their first few months on the job to make sure that they are able to find their place and fit in.\n\n_Based on an episode of react podcast._\n\n\ud83c\udf99 Listen to the full [episode](https://reactpodcast.simplecast.com/episodes/103).\n\n## So Inspirational\n\nI was particularly inspired by [@chantastic](https://twitter.com/chantastic) episode 103 of the react podcast with [@ParissAthena](https://twitter.com/ParissAthena).  They spoke about the black tech pipeline as well as Diversity, Equity, and Inclusion.  Pariss is quite an inspiration.  She has done so much work to create a better place for POC in tech.  I like that not only is she helping them get jobs but acting as a mentor for their first few months on the job to make sure that they are able to find their place and fit in.\n\n## Losing their culture\n\nOne thing that Michael brought up was the feeling he gets when he has other Asian friends to collaborate with at work is just a feeling of fitting in.  All too often he feels like he has to put on this persona of \"Hamburgers and Beer are my favorite thing, like all the time\" just to fit in.\n\n## Growing up in Rural America (me)\n\nI grew up in a very rural part of the United States Dominated by Whites with a prominent Mexican community, there was almost no Asian or Black.  I can't tell you how many times I heard, \"I have this friend John, He's black, but he's not really black.\"  I will say that I was never quite this low, but growing up in a region where this was the norm, I probably wasn't the best ambassador either.\n\nYears later I recall taking some training for work that could not have described the people I grew up with better.  It described rural parts of the United States as completely accepting of any POC as long as they completely leave their culture behind.\n\n---\n\n> \"I have this friend John, He's black, but he's not really black.\"\n\n_I heard this statement far too many times coming from rural United States_\n\n---\n\nThinking a little bit more into this statement I realize that as a culture Rural America was very open to POC, but **not** **at** **all** open to their **culture**.\n\nThis is where a lot of what we were taught in school in the '90s and '00s falls short.  We were so heavily focused on, _\" I don't see color\"_.  We were taught that race was all about color, having friends of color, and treating everyone equally.  But I think that not seeing color puts us in a situation of not really treating everyone equally.  Their color may have been seen as equal, but their culture wasn't.\n\nWe have failed to embrace others the way we would want them to embrace us.\n\n> \"Hamburgers and Beer are my favorite thing, like all the time\"\n\nThis is where I really connected with Michael's statement \"Hamburgers and Beer are my favorite thing, like all the time\".  So often we can look past color, but we completely miss making a real connection with other cultures.\n\n## Welcome Everyone\n\n_Like, really welcome them._\n\nFurther, into the episode, Pariss spoke about being hired into tech and feeling left out of the conversation because she didn't feel like she fit in.  She would hire in with a non-POC on the same day and felt like people would stare at her like a zoo animal while treating the other new hire as a real person.\n\n> people would stare at her like a zoo animal\n\n## Take Action\n\nI know that I do not want to make anyone on my team feel like a zoo animal.  I feel like listening to this episode gave me a bit of perspective into what it might be like to be just a bit different than everyone else.  I really appreciate the both of them for being so open about sharing their experiences.  I will definitely think of ways that I can make any new hire just a bit more welcome next time.\n\n---\n\nFor this post don't follow me on Twitter, don't join my newsletter.\n\nShare the episode with a friend.\n\n[react podcast 103](https://reactpodcast.simplecast.com/episodes/103)\n\nFollow [@ParissAthena](https://twitter.com/ParissAthena)\n\nFollow [@chantastic](https://twitter.com/chantastic)\n\nSign up for the [Black Tech Pipeline Newsletter](https://blacktechpipeline.substack.com/p/coming-soon)\n\n---\n\n## Follow them they are some amazing people.\n\nI have been trying to build out the content in mine.  I later found this is called a shadow newsletter or evergreen newsletter.  I will say that it gets tough to keep up with.  I've been trying to do it weekly, but have definitely had some folks get ahead of my pace, I'll have to figure out how to split the out and resend articles they missed.\n\n-- for yours --\n\nI like the branding that you have put into it, and how it matches yoru cover images elsewhere.\n\nI like how you have included sections of posts from various places that pull me in and make me want to go see more.\n\nyour video to @WellMax81 is amazing, do more of those.\n\n\nOne thing, I am not sure if there is a \"right\" direction with this, but it doesnt give me any new content.  If I were to have been following you everywhere I would have likely seen a lot of this already.  That might make me wonder why I am subscribed over time.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/parsing-rss-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udc0d Parsing RSS feeds with Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/packages-to-investigate'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udcdd Packages to Investigate Notes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-03", "edit_link": "https://github.com/edit/main/pages/blog/pariss-athena-on-black-tech-pipeline.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574164", "datetime": "2020-08-03 00:00:00+00:00", "slug": "pariss-athena-on-black-tech-pipeline", "jinja": false, "output_html": "markout/pariss-athena-on-black-tech-pipeline/index.html", "long_description": "I was particularly inspired by @chantastic episode 103 of the react podcast with @ParissAthena. They spoke about the black tech pipeline as well as Diversity, Equity, and Inclusion. Pariss is quite an inspiration. She has done so much work to create ", "super_description": "I was particularly inspired by @chantastic episode 103 of the react podcast with @ParissAthena. They spoke about the black tech pipeline as well as Diversity, Equity, and Inclusion. Pariss is quite an inspiration. She has done so much work to create a better place for POC in tech. I like that not only is she helping them get jobs but acting as a mentor for their first few months on the job to make sure that they are able to find their place and fit in. \ud83c\udf99 Listen to the full  I was particularly in", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506790d0>, next=<frontmatter.Post object at 0x7f34506725e0>)"}, {"cover": "", "title": "python functools total ordering", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/blog/python-functools-total-ordering.md", "description": "functools.total From the Docs: The class must define one of  Here is an example using the Enum I was working on the other day.", "content": "functools.total_ordering makes adding all of six of the rich comparison\noperators to your custom classes much easier, and more likely that you\nremember all of them.\n\n> From the Docs: The class must define one of \\_\\_lt\\_\\_(), \\_\\_le\\_\\_(),\n> \\_\\_gt\\_\\_(), or \\_\\_ge\\_\\_ In addition, the class should supply an\n> \\_\\_eq\\_\\_() method.\n\n[Total Ordering Docs](https://docs.python.org/3/library/functools.html#functools.total_ordering)\n\nHere is an example using the Enum I was working on the other day.\n\n``` python\nfrom enum import Enum, auto\nfrom functools import total_ordering\n\n\n@total_ordering\nclass LifeCycle(Enum):\n\n    configure = auto()\n    glob = auto()\n    load = auto()\n    pre_render = auto()\n    render = auto()\n    post_render = auto()\n    save = auto()\n\n    def __lt__(self, other):\n        try:\n            return self.value < other.value\n        except AttributeError:\n            return self.value < other\n\n    def __eq__(self, other):\n        try:\n            return self.value == other.value\n        except AttributeError:\n            return self.value == other\n\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/quick-progress-bars-in-python-using-tqdm'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Quick Progress Bars in python using TQDM</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-find-available-port'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python Find Available Port</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-14", "edit_link": "https://github.com/edit/main/pages/blog/python-functools-total-ordering.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574170", "datetime": "2022-01-14 00:00:00+00:00", "slug": "python-functools-total-ordering", "jinja": false, "output_html": "markout/python-functools-total-ordering/index.html", "long_description": "functools.total From the Docs: The class must define one of  Here is an example using the Enum I was working on the other day.", "super_description": "functools.total From the Docs: The class must define one of  Here is an example using the Enum I was working on the other day.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506aed30>, next=<frontmatter.Post object at 0x7f3450691c10>)"}, {"cover": "", "title": "understanding python \\*args and \\*\\*kwargs", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/python-args-kwargs.md", "description": "Python  Python  * When recieving variables as a  Never add  Generally I find  If your  Here  Here the function signature makes it clear what  Inversely we can s", "content": "Python `*args` and `**kwargs` are super useful tools, that when used properly\ncan make you code much simpler and easier to maintain.  Large manual\nconversions from a dataset to function arguments can be packed and unpacked\ninto lists or dictionaries. Beware though, this power **can** lead to some\nreally unreadable/unusable code if done wrong.\n\n<style>\n/* h2 {display: block;} */\nh2>img { margin: auto; width: 100%;}\n</style>\n\nPython `*args` and `**kwargs` are super useful tools, that when used properly can make you code much simpler and easier to maintain.  Large manual conversions from a dataset to function arguments can be packed and unpacked into lists or dictionaries. Beware though, this power **can** lead to some really unreadable/unusable code if done wrong.\n\n\n\n## *args are for lists\n\n*args are some magical syntax that will collect function arguments into a list, or unpack a list into individual arguments.\n\n## recieving *args\n\nWhen recieving variables as a `*<varname>`, commonly `*args`, the arguments get **packed** into an ordered list.\n\n> Never add *args to your function definition (almost never)\n\nGenerally I find `*args` poor naming and it only drives confusion to the user looking at your function trying to decide what exactly it does.  Here I have chosen the name `printrows` since we are printing each item as a row.\n\n``` python\ndef printer(*printrows: str) -> None:\n  for i, row in enumerate(printrows):\n    print(i, row)\n```\n\n``` python\n>>> printer('eggs', 'spam', 'ham')\n0 eggs\n1 spam\n2 ham\n```\n\n## Be Aware of AntiPatterns\n\nIf your `*args` collection is distictly different things, then make them separate variables.  Using `*args` as a crutch can lead to a really confusing api for your users, even yourself.\n\n## \u274c\n\nHere `*args` is confusing as we are a bit unsure of what to pass to `get_user_data`, or which order it needs to be in without reading the code.\n\n``` python\ndef get_user_data(*args):\n  \"does stuff given a users GitHub and DevTo username\"\n  github = reuqests.get(f'https://api.github.com/users/{args[0]}')\n  devto = requests.get(f'https://dev.to/api/users/by_username?url={args[1]}')\n  ...\n```\n\n## \u2714\n\nHere the function signature makes it clear what `get_user_data` expects.  Users will not have to read your docstring or worse your source code to understand it each time the reference it.\n\n``` python\ndef get_user_data(github_username, devto_username):\n  \"does stuff given a users GitHub and DevTo username\"\n  github = reuqests.get(f'https://api.github.com/users/{github_username}')\n  devto = requests.get(f'https://dev.to/api/users/by_username?url={devto_username}')\n  ...\n```\n\n## sending *args\n\nInversely we can send a list of things as individual arguments by **unpacking** them into the function call.\n\n``` python\n>>> things_to_print = ['eggs', 'spam', 'ham']\n>>> printer(*things_to_print)\n0 eggs\n1 spam\n2 ham\n```\n\n---\n\n## **kwargs are for dictionaries\n\nJust like `*args` being for lists, `**kwargs` are for dictionaries.  When packing them up inside of a function. The argument name passed in becomes the key, then invers happens when unpacking, the key becomes the argument for the function.\n\n## recieving **kwargs\n\nHere is a function accepting `**printrows` as it's only input. Any keyword argument that you pass into the function will get packed into a dictionary.\n\n``` python\ndef printer(**printrows: str) -> None:\n  for key in printrows:\n    print(key, printrows[key])\n```\n\n``` python\n>>> printer(breakfast='eggs', lunch='spam', dinner='ham')\nbreakfast eggs\nlunch spam\ndinner ham\n```\n\nAny arguments passed in will throw a `TypeError`, since this `printer` does not accept any positional arguments.\n\n``` python\n>>>printer('one')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-2-f03e96cb5e14> in <module>\n----> 1 printer(\"one\")\n\nTypeError: printer() takes 0 positional arguments but 1 was given\n```\n\n## Avoid Anti-Patterns\n\nJust as above, if your items are clearly separate things, make them separate things and do not use `**kwargs`.  `**kwargs` are great when you have collections of things that all get treated exactly the sam, if they get treated differently, or you are expecting certain keys to always exist it will be very confusing to your users what they need to pass in.\n\n## sending **kwargs\n\nSending `**kwargs` is quite useful.  Especially when combining various libraries together.  Often times you can coerse objects into a dictionary, often with something like `.to_dict()`, then pass that whole dictionary to another function.  This makes gluing different libraries together a breeze at times.\n\n\n``` python\n>>> things_to_print = {breakfast:'eggs', lunch:'spam', dinner:'ham'}\n>>> printer(**things_to_print)\nbreakfast eggs\nlunch spam\ndinner ham\n```\n\n---\n\nI setup a replit.com with these examples so that you can quickly jump in, run it, break it, fix it, add breakpoints and really get a feel for them yourself. Check it out \ud83d\udc49 [https://replit.com/@WaylonWalker/args#main.py](https://replit.com/@WaylonWalker/args#main.py)\n\n---\n\nI hope this helps you understand `*args` and `**kwargs` just a bit more.  They can be quite handy to greatly simplify repetative code, expecially if we already have the data setup in the right data structure.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-args-kwargs-slides'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>SLIDES - understanding python \\*args and \\*\\*kwargs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/pytest-capsys'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Pytest capsys</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-10", "edit_link": "https://github.com/edit/main/pages/blog/python-args-kwargs.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574176", "datetime": "2020-06-10 00:00:00+00:00", "slug": "python-args-kwargs", "jinja": false, "output_html": "markout/python-args-kwargs/index.html", "long_description": "Python  Python  * When recieving variables as a  Never add  Generally I find  If your  Here  Here the function signature makes it clear what  Inversely we can send a list of things as individual arguments by  Just like  Here is a function accepting  ", "super_description": "Python  Python  * When recieving variables as a  Never add  Generally I find  If your  Here  Here the function signature makes it clear what  Inversely we can send a list of things as individual arguments by  Just like  Here is a function accepting  Any arguments passed in will throw a  Just as above, if your items are clearly separate things, make them separate things and do not use  Sending  I setup a replit.com with these examples so that you can quickly jump in, run it, break it, fix it, add", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9790>, next=<frontmatter.Post object at 0x7f34506ae310>)"}, {"cover": "", "title": "Do More of What Brings You Joy", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/happy.md", "description": "happiness in the workplace", "content": "Today I want to take some time to talk about the things that make me happy in my work environment.  This is completely free-flow off the cuff, but are things that I do that make me happy, not having them would definitely be a deal breaker for me .\n\n### Attitude\n\nA positive work atmosphere goes a long ways.  We all have enough negativity going on in our lives that is out of our control accepting any negativity in the workplace is a no go for me.  There was a point in which I was suffering a lot of negativity at work.  This began to trickle into every part of life, and it became hard to see positivity anywhere.  My wife not only noticed this, but put a polite request in for change.  It was definitely a low point and she could tell tell that my work life was not helping anything.\n\n![positive gif](https://media.giphy.com/media/dJGYFScvBjfRabiH7m/giphy.gif)\nThrow out the negativity - courtesy [giphy](https://giphy.com/)\n\n**Bring the positivity** to your workplace.  It is really difficult for folks to tear you down if you are the one that is always up beat and happy.  **People will notice**. When they do they will bring the good projects your way, Praise you for your hard work, and  Ask for and value your advice.\n\n### Helping People\n\n**Helping people** is part of who I am,  I cannot change that.  I rarely turn someone away who comes to me looking for help.  I will give nearly anyone 15 minutes to help them reach thier goals.  I dont care if they are in a completely different part of my organization,  if they will ever return the favor, or how it will look on my performance review.\n\nBeing in the position that I am in I am graced with access to many data sets, that I can query en masse. It's not uncommon that I have someone come to me that has access to get the data they need but will take them 2 days to mine out the information they need one at a time every quarter.  I can save them these 2 days, increase their data quality, and increase its refresh rate by writing 10 lines of sql in about 5 minutes.  I hear so oftem from people why I do this, It's just part of who I am.  The benefits are that everytime I do this I build connections with many folks from a very broad range of backgrounds.\n\n### Learning\n\n**Learning** is one of the things that drive me to get excited to come to work every single day.  I am always looking for new techniques to improve my workflow, soft skills, and technical skills.  This keeps me confident that if something happens that I need to find another gig I am current with the latest tech and ready to hire in somewhere else.  It's also very enjoyable to watch my products improve, and be able to pump them out at faster and faster rates.\n\n### Grind\n\n![laser focus](https://media.giphy.com/media/3oEduGi1UWg9Q6nF84/giphy.gif)\nLaser Focus - courtesy [giphy](https://giphy.com/)\n\nThe last thing is that I need is a few hours of undistracted time to grind.  After I help some folks, and keep up with the latest skills I need to focus, **Laser Focus**.  I have a lot going on outside of work, so in order for me to keep some sort of balance I need to chrun out some quality hours of progress, otherwise I get behind, stressed, anxious, and start to loose my work-life balance as it is important for me to meet the deadlines that I commit to.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/how-i-kedro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gracefully-redirect'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Refactoring your blog urls</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-01", "edit_link": "https://github.com/edit/main/pages/blog/happy.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574187", "datetime": "2019-01-01 00:00:00+00:00", "slug": "happy", "jinja": false, "output_html": "markout/happy/index.html", "long_description": "Today I want to take some time to talk about the things that make me happy in my work environment.  This is completely free-flow off the cuff, but are things that I do that make me happy, not having them would definitely be a deal breaker for me . A ", "super_description": "Today I want to take some time to talk about the things that make me happy in my work environment.  This is completely free-flow off the cuff, but are things that I do that make me happy, not having them would definitely be a deal breaker for me . A positive work atmosphere goes a long ways.  We all have enough negativity going on in our lives that is out of our control accepting any negativity in the workplace is a no go for me.  There was a point in which I was suffering a lot of negativity at", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696670>, next=<frontmatter.Post object at 0x7f3450679670>)"}, {"cover": "", "title": "Avoid Nesting Loops in Python", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/avoid-nesting-loops-in-python.md", "description": "Nesting loops inside of each other in python makes for much harder code to understand, it takes more brain power to understand, and is thus more error prone tha", "content": "Nesting loops inside of each other in python makes for much harder code to understand, it takes more brain power to understand, and is thus more error prone than if its avoidable.  One issue with this complexity is that toy examples may make sense, but most real example will grow and become more deeply nested over time.  Avoiding this complexity from the start can help simplify the project in the future.\n\n\n## setup\n\nLets take a pretty simple example where we are using a ficticious library to get some sales data for our transportation company.  The api allows us to fetch teh sales data for one class of vehicle and one region at a time.\n\n``` python\nimport pandas as pd\n\nfrom datastore import get_sales  # ficticious library\n\ncars = ['sedan', 'coupe', 'hatchback']\nregions = ['US', 'CA', 'MX']\n```\n\n## \u274c Nesting Loops\n\nWe have setup to fetch our data with two lists that represent the vehicles and regions that we want to analyze.  We know that we need to make a call to `get_sales` for every vehicle and region so nesting loops is a very common first solution to jump to.\n\n``` python\nsales = pd.DataFrame()\nfor car in cars:\n   for region in regions:\n      new_sales = get_sales(car, region)\n      sales = pd.concat([sales, new_sales])\n```\n\n## itertools.product\n\nPython provides us with the beautiful itertools module that allows us to prepare our inputs for this in a much more susynct manner.  The product function of itertools will give us every combination of any number of iterables\n\n``` python\nimport itertools\nlist(itertools.product(cars, regions))\n```\n\n> note that itertools returns a generator for most if not all functions, list() will turn that into a list that we can see.  This works great for small datasets, but might not be advisable on larger ones.\n\n**output**\n``` python\n[('sedan', 'US'),\n ('sedan', 'CA'),\n ('sedan', 'MX'),\n ('coupe', 'US'),\n ('coupe', 'CA'),\n ('coupe', 'MX'),\n ('hatchback', 'US'),\n ('hatchback', 'CA'),\n ('hatchback', 'MX')]\n```\n\n## itertools.procuct for loop\n\nNow that we have every comination of our two sets of inputs in a single list, we can iterate over that list one time.\n\n``` python\nsales = pd.DataFrame()\nfor car, region in itertools.product(cars, regions):\n   new_sales = get_sales(car, region)\n   sales = pd.concat([sales, new_sales])\n```\n\n## itertools.product list comprehension\n\nThe above follows a python anti-pattern, initialize then edit.  In some cases it might be a bit more readable to do it that way, you can be the judge, but in our simple case we can simply achieve the same results using a list comprehension.\n\n``` python\npd.concat([get_sales(cars, region) for cars, region in itertools.product(cars, regions)])\n```\n## dictionaries\n\n``` python\nsales_args = {\n   'cars': ['sedan', 'coupe', 'hatchback'],\n   'regions': ['US', 'CA', 'MX'],\n}\n\npd.concat([get_sales(*sales_arg) for sales_arg in itertools.product(*sales_args.values())])\n```\n\n``` python\nsales_args = {\n   'cars': ['sedan', 'coupe', 'hatchback'],\n   'regions': ['US', 'CA', 'MX'],\n   'month': ['MAR', 'APR', 'MAY']\n}\n\npd.concat([get_sales(*sales_arg) for sales_arg in product(*sales_args.values())])\n```\n\n---\n\n## Chaining\n_containers of containers_\n\n``` python\nvehicles = {\n\t'cars': ['sedan', 'coupe', 'hatchback'],\n    'trucks': ['light', 'heavy', 'sport', 'offroad'],\n    'van': ['box', 'mini', 'full', ],\n\n}\n```\n\n```\nfor vehicle in vehicles:\n\tfor sub_class in vehicles[vehicle]:\n      new_sales = get_sales(sub_class)\n      new_sales['sub_class'] = sub_class\n      new_sales['vehicle'] = vehicle\n      sales = pd.concat([sales, new_sales])\n```\n\n```\n list(itertools.chain(*[list(itertools.product([k], v)) for k, v in vehicles.items()]))\n```\n\noutput\n```\n[('cars', 'sedan'),\n ('cars', 'coupe'),\n ('cars', 'hatchback'),\n ('trucks', 'light'),\n ('trucks', 'heavy'),\n ('trucks', 'sport'),\n ('trucks', 'offroad'),\n ('van', 'box'),\n ('van', 'mini'),\n ('van', 'full')]\n ```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-show-messages'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux show-messages</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/happy'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Do More of What Brings You Joy</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-11", "edit_link": "https://github.com/edit/main/pages/blog/avoid-nesting-loops-in-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574193", "datetime": "2020-10-11 00:00:00+00:00", "slug": "avoid-nesting-loops-in-python", "jinja": false, "output_html": "markout/avoid-nesting-loops-in-python/index.html", "long_description": "Nesting loops inside of each other in python makes for much harder code to understand, it takes more brain power to understand, and is thus more error prone than if its avoidable.  One issue with this complexity is that toy examples may make sense, b", "super_description": "Nesting loops inside of each other in python makes for much harder code to understand, it takes more brain power to understand, and is thus more error prone than if its avoidable.  One issue with this complexity is that toy examples may make sense, but most real example will grow and become more deeply nested over time.  Avoiding this complexity from the start can help simplify the project in the future. Lets take a pretty simple example where we are using a ficticious library to get some sales ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506469d0>, next=<frontmatter.Post object at 0x7f34506b3280>)"}, {"cover": "", "title": "tmux show-messages", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-show-messages.md", "description": "https://youtu.be/LLk94fKpGg4 As we push the limits of tmux further and further you are bound to end up in a show-messages In case you wnat more information abou", "content": "https://youtu.be/LLk94fKpGg4\n\nAs we push the limits of tmux further and further you are bound to end up in a\nsituation where you are mashing down a hotkey and it's just not doing what you\nwant it to do, and you have no idea why.\n\n`show-messages` is a tmux command that can be used to show what tmux is\nactually doing behind the scenes.  This might highlight any hot key conflicts\nyou might have in your `~/.tmux.conf`.\n\n## man page for show-messages\n\nIn case you wnat more information about show-messages, here is the man page.\n\n``` bash\nshow-messages [-JT] [-t target-client]\n            (alias: showmsgs)\n\n        Show server messages or information.  Messages are stored, up to a\n        maximum of the limit set by the message-limit server option.  -J and -T\n        show debugging information about jobs and terminals.\n```\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-source-file'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux source-file</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-select-pane'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux slect-pane</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-14", "edit_link": "https://github.com/edit/main/pages/blog/tmux-show-messages.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574199", "datetime": "2021-08-14 00:00:00+00:00", "slug": "tmux-show-messages", "jinja": false, "output_html": "markout/tmux-show-messages/index.html", "long_description": "https://youtu.be/LLk94fKpGg4 As we push the limits of tmux further and further you are bound to end up in a show-messages In case you wnat more information about show-messages, here is the man page. https://waylonwalker.com/tmux-nav-2021/ for more in", "super_description": "https://youtu.be/LLk94fKpGg4 As we push the limits of tmux further and further you are bound to end up in a show-messages In case you wnat more information about show-messages, here is the man page. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067faf0>, next=<frontmatter.Post object at 0x7f345063b550>)"}, {"cover": "", "title": "How I Quickly Capture Screenshots directly into My Blog", "tags": ["python", "python", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/screenshot-to-blog.md", "description": "When I am creating blog posts it When I have something to take a screenshot of, I need to take the shot, take screenshot optimize conversion publish create img ", "content": "When I am creating blog posts it's often helpful to add screenshots to them to\nillustrate what I see on my screen.  Sometimes I lack good screenshots in my\nposts because it just takes more effort than I have in the moment, and I\nprioritize making content over making perfect content.\n\n## Making Screenshots\n\nWhen I have something to take a screenshot of, I need to take the shot,\noptimize the image, often convert it to a better format, publish it, and\ncreate a the img tag in my blog.\n\n* take screenshot\n* optimize\n* conversion\n* publish\n* create img tag\n\n## Created in \ud83d\udc0dPython\n\nI created this tool for myself in python because that is what I am most\nfamiliar with, but realistically most of what I am calling are shell scripts\nthat I could do in just about any language.\n\n## Install my screenshot tool\n\nMy screenshot tool is quite hacky and not configurable, but works wonderfully\nfor me. If you like it and want to use it, make it configurable or fork it.\nFor now it lives on GitHub and since it has a setup.py with entrypoints we can\ninstall it with pipx.\n\n``` bash\npipx install git+https://github.com/WaylonWalker/screenshots.waylonwalker.com\n```\n\n> This is just a tool for me, it does not need to be in a package manager like pip.\n\n## calling screenshot\n\nNow that screenshot is installed we can call it and make a screenshot.  I'll\ntake a screenshot of the frontmatter of this exact post.\n\n![screenshot-to-blog](https://screenshots.waylonwalker.com/screenshot-to-blog.webp)\n\nI have this tool exposed as a command that can be ran in the command line by\ncalling `screenshot`.  I will rarely use it this way, but makes it easy to\ncreate a hotkey for later.\n\n## Success\n\nOnce the screenshot is successful, I get a `notify-send` message popup telling me so.\n\n![screenshot-success](https://screenshots.waylonwalker.com/screenshot-success.webp)\n\n## xbindkeys\n\nLet's make this workflow just a bit smoother.  I want a desktop hotkey that I\ncan press at any time without opening a split or making sure I'm in zsh or vim,\nI want it always there.  For hotkeys like this I use the Desktop manager\nagnostic keybinding tool xbindkeys.  I can add the `screenshot` command and the\ncorresponding keybinding I want to my `~/.xbindkeysrc` file and restart with\n`xbindkeys -f ~/.xbindkeysrc`.\n\n```\n\"screenshot\"\n    Shift + Mod4 + alt + p\n```\n\nNow when I press `Shift + Mod4 + alt + p` I am presented with a little `zenity`\nbox asking me what I want to name my screenshot, followed by flameshot.\n\n> xbindkeys allows me to bind this hotkey to my system so that no matter where\n> I am it will work.\n\n## Name it\n\nThe one question I ask myself when creating the hotkey is for a filename.  On\nmy ubuntu machine I do that with a simple gui application called zenity.  It\nlooks like this when I open it up.\n\n![screenshot-zenity-window](https://screenshots.waylonwalker.com/screenshot-zenity-window.webp)\n\nUnder the hood my screenshot tool is running the following command in a subprocess.\n\n```bash\nzenity --entry --text=\"filename\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/my-github-profile'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I Built My GitHub Profile</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-show-messages'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux show-messages</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-30", "edit_link": "https://github.com/edit/main/pages/blog/screenshot-to-blog.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574205", "datetime": "2022-04-30 00:00:00+00:00", "slug": "screenshot-to-blog", "jinja": false, "output_html": "markout/screenshot-to-blog/index.html", "long_description": "When I am creating blog posts it When I have something to take a screenshot of, I need to take the shot, take screenshot optimize conversion publish create img tag I created this tool for myself in python because that is what I am most My screenshot ", "super_description": "When I am creating blog posts it When I have something to take a screenshot of, I need to take the shot, take screenshot optimize conversion publish create img tag I created this tool for myself in python because that is what I am most My screenshot tool is quite hacky and not configurable, but works wonderfully This is just a tool for me, it does not need to be in a package manager like pip. Now that screenshot is installed we can call it and make a screenshot.  I I have this tool exposed as a ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646790>, next=<frontmatter.Post object at 0x7f34506469d0>)"}, {"cover": "", "title": "How I Built My GitHub Profile", "tags": ["webdev", "catalytic"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/my-github-profile.md", "description": "I ran a discussion on dev that collected quite a list of examples in the comment section.  So many great calls to action, animations, memes, and weird tricks. U", "content": "I ran a discussion on dev that collected quite a list of examples in the comment section.  So many great calls to action, animations, memes, and weird tricks.\n\n[![dev.to whats-on-your-github-profile](https://images.waylonwalker.com/whats-on-your-github-profile.png)](https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3)\n\n\n## My current profile\n\n[![Waylon Walkers GitHub profile](https://images.waylonwalker.com/github-profile.png)](https://github.com/waylonwalker/)\n\n## social icons\n\nUpload all of your icons to the repo in a directory such as `icons` or `assets`, then link them with a `height` attribute like below.  I used html for mine, not sure if you can set the `height` in markdown.\n\n``` markdown\n<a href=\"https://dev.to/waylonwalker\"><img height=\"30\" src=\"https://raw.githubusercontent.com/WaylonWalker/WaylonWalker/main/icon/dev.png\"></a>&nbsp;&nbsp;\n```\n\n**note** I did add a bit of `&nbsp;` (non-breaking-whitespace) between my icons.  Without adding css this seemed like the simplest way to do it.\n\n## Center\n\nAligning things in the center of the readme is super simple.  I used this trick to align my social icons in the middle.\n\n``` markdown\n<p align='center'>\n ...html\n</p>\n\n```\n\n## right\n\nFor my [latest post](https://waylonwalker.com/latest) I floated it to the right with a little bit of `align='right'` action.\n\n``` markdown\n<p>\n  <a href=\"https://images.waylonwalker.com/latest\"><img width=\"400\" align='right' src=\"https://waylonwalker.com/latest.png?raw=true\"></a>\n</p>\n```\n\nYou may need to play with where you put this in the document, and the size of elements to get things to flow right.\n\n## redirects\n\nIn order to keep my latest post always up to date on my readme I implemented a netlify redirect to always point to my latest post.  As a digital gardener this helps me keep pointed to a the best one in my opinion.  Any automated way would pick up half finished posts.\n\n```\n# /static/_redirects\n# netlify redirects\n\n# latest post\n/latest            /blog/kedro-catalog-search/\n/latest.png        /kedro-catalog-search.png\n```\n\nNow I can reference both the post and the post cover image.\n\n## summary/details\n\nI also wanted to list out a few of my favorite posts without taking up a ton of space, so I used `details` and `summary` tags so that it would collapse.\n\n\n``` markdown\n<details>\n <summary><strong>other favorite posts</strong></summary>\n <a href=\"https://images.waylonwalker.com/eight-years-cat/\"><img width=\"400\" src=\"https://waylonwalker.com/eight-years-cat.png?raw=true\"></a>\n <a href=\"https://images.waylonwalker.com/keyboard-driven-vscode/\"><img width=\"400\" src=\"https://waylonwalker.com/alt%20b.png?raw=true\"></a>\n <a href=\"https://images.waylonwalker.com/what-are-github-actions/\"><img width=\"400\" src=\"https://waylonwalker.com/what-are-github-actions.png?raw=true\"></a>\n\n</details>\n```\n\nGo ham on your profile, its your own slice of GitHub to completely personalize and speak your brand.  Give a powerfule call to action, share a funny meme, record a wicked cool GIF, its your space.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/named-tuples-data-science'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Clean up Your Data Science with Named Tuples</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/more-itertools-windowed'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Windowing Python Lists</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-10", "edit_link": "https://github.com/edit/main/pages/blog/my-github-profile.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574211", "datetime": "2020-07-10 00:00:00+00:00", "slug": "my-github-profile", "jinja": false, "output_html": "markout/my-github-profile/index.html", "long_description": "I ran a discussion on dev that collected quite a list of examples in the comment section.  So many great calls to action, animations, memes, and weird tricks. Upload all of your icons to the repo in a directory such as  Aligning things in the center ", "super_description": "I ran a discussion on dev that collected quite a list of examples in the comment section.  So many great calls to action, animations, memes, and weird tricks. Upload all of your icons to the repo in a directory such as  Aligning things in the center of the readme is super simple.  I used this trick to align my social icons in the middle. For my  You may need to play with where you put this in the document, and the size of elements to get things to flow right. In order to keep my latest post alwa", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696fa0>, next=<frontmatter.Post object at 0x7f34506aef70>)"}, {"cover": "", "title": "2018 Retrospective", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/2018-retrospective.md", "description": "2018 was a year of many ups and downs, and learning to deal with a whole new At home the doctor appointments keep piling in.  While I am learning to deal Here a", "content": "2018 was a year of many ups and downs, and learning to deal with a whole new\nset of problems professionally and at home.  In 2018 I logged in to my first\nLinux system, setup my own webserver, data pipelines, database. I learned to\nuse react and d3. Stepped up my python, javascript, and sql.\n\nAt home the doctor appointments keep piling in.  While I am learning to deal\nwith it all there were several times throughout the year that I was very\noverwhelmed  with everything and broke down.\n\nHere are the goals I had listed out for 2018 and how I faired at completing\nthem.\n\n### Positivity\n\n#### The Good\n\n---\n\n* Continue \"Favorite Things\" with family at dinner time\n* Take 2 10min breaks per day clear the mind\n\n---\n\nI can say that the kids are fully on board with favorite things and love to\ntell everyone about how their day went.  This is a time that they are very\npositive and generally give praise to another family member for helping them\nthrough their day.\n\n#### To Be Improved\n\n---\n\n* Gratitude journaling every day\n* Snooze Less be productive\n\n---\n\nI hit 61  gratitude journals in 2018.  I would not say that I met my goal, but\nI would definitely say that it's a great start and is something that I plan on\nimproving next year.  I really like how it helps me focus on the positive\nthings that happened throughout the day to find the best gratitude journal\nsubject.  I do think the quick five minute deadline helps in that I have to be\nsemi-prepared, which forces me to think about gratitude throughout the day.\n\n### Focus\n\nMediocore performance??\n\n---\n\n* 8 pomodoro\n* up to date kanban\n* daily/weekly planning session\n\n---\n\nIn 2018 I wanted to set out some goals to be more focused with the time that I\ndo have at work.  I did quite a bit of research for the best techniques\nthroughout December, and found a system that works well for me.  I did keep up\nwith the _kanban_ system througout the year with trello.  I did not live by the\nboard, but i did put things on there and move them.  The big thing that I found\nwith this system is that it really made me **feel** productive, and gave me\nmotivation to keep going.  While tracking my tasks throughout the day I was\nable to really see progress at the end of the day, and go home knowing I did\nsome good work rather than feeling \"Where did this day go?\".\n\n> I am putting this back in for 2019, and I will learn to concur them.\n\nI completely fell off of the pomodoro system.  I really feel like this system\nworks for me and keeps me on task, I really have issues with task jumping.  It\nis really hard to keep on it when there are so many distractions throughout the\nday.  I am putting this back in for 2019, and I will learn to concur them.  The\nbiggest challenge is people.  I have a lot of people stop by for a quick answer\nor to chat about a project.  I really need to set strong boundaries and tell\nthem in X minutes I can talk, right now I am busy.\n\n### Physical Health\n\n---\n\n* active 3 days a week... \ud83e\udd14\n* eat better \ud83d\udc4d\n\n---\n\nI will admit that I was not very measurable with \"eat better\", but I would say\nthat I have done well.  I have really incorporated quite a few more vegetables\ninto my diet, even when everyone else at the table isn't.  I throw some frozen\nbrocoli in the microwave.  I have even started choosing vegan options at\nrestaurants occasionally.\n\n> As different things started taking over my time I was back off the wagon.\n\nI started running in the March timeframe, and really enjoyed it.  As different\nthings started taking over my time I was back off the wagon.  Overall I would\nsay that I am still active 3 or so days of the week with the kids.\n\n### Educational\n\nContinuous Learning is something that I am really passionate for.  I truly\nbelieve in always learning from experiences, taking classes, watching\nconferences, listening to podcasts and reading blogs\n\n#### The Good \ud83d\udc4d\n\n_4 official courses completed_\n\n---\n\n* d3 in 5 days\n* flexbox zombies\n* cssgrid.io\n* datacamp sql\n* linux command line (many blogs/youtube... not a course)\n\n---\n\nI really stepped up my **front end web skills** this past year. I have started\nusing es6, react, and building interactive web visualizations, laid out with\nnative modern css.  These are things that I loosely understood in the past and\nreally relied on libraries like `bokeh` or `dash` to get them to work right.\n\nI can also say that I have stopped google searching for every simple sql query\nthat I write, Goal Complete.  I would say that I went beyond my sql goal in\nthat I have learned to do far more than I realized was possible in the\ndatabase, dramatically improving performance of my products.  I have also\nbecome the go to guy for reading/writing more complex queries.\n\n> Before 2018 I had never experienced the glory of the linux command line.\n\nBefore 2018 I had never experienced the glory of the linux command line.\nAround May I was graced with a small on premis red hat virtual machine and my\nmind was quickly blown.  Many things that I have struggled to get up and\nworking on windows simply worked right out of the box.  Webserver, task\nscheduling, 100% availability, and a great command line.  By the end of the\nyear I installed Debian (wsl) on my windows machine and have converted all of\nmy command line applications/languages to run from there, as there are far\nfewer compatability issues..\n\n#### The flop\n\n_planned coursed not completed_\n\n---\n\n* R\n* Machine Learning\n\n---\n\nHonestly I am not really hurt by not completing this one.  I really feel like I\nlearned a ton of useful skills this year and I feel like neither of these two\nwould have helped me progress.  R is too close to python to need both in my\ntoolbelt without a specific project/need for it.  I did not have any projects\nwith a dire need for ML.  I really hope to start getting some experience with\nit so I can have a better understanding when I should use it, but it was not a\nbig need in any of my projects this year.\n\nOverall I am really happy with the progress from this year, and can't wait to\nget started next year.  Having the past few weeks off has really given me time\nfor a reset that I didn't realize I needed.  Looking at these goals reminds me\nof the things that had started slipping towards the end during that last hard\npush to the end.\n\n\n\n\ud83c\udf89\ud83c\udf89 Hapy New Year \ud83c\udf89\ud83c\udf89\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/2020-rebrand'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>2020 waylonwalker.com rebrand</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/why-use-cms'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Why use a cms</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-05", "edit_link": "https://github.com/edit/main/pages/blog/2018-retrospective.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574217", "datetime": "2019-01-05 00:00:00+00:00", "slug": "2018-retrospective", "jinja": false, "output_html": "markout/2018-retrospective/index.html", "long_description": "2018 was a year of many ups and downs, and learning to deal with a whole new At home the doctor appointments keep piling in.  While I am learning to deal Here are the goals I had listed out for 2018 and how I faired at completing Continue  Take 2 10m", "super_description": "2018 was a year of many ups and downs, and learning to deal with a whole new At home the doctor appointments keep piling in.  While I am learning to deal Here are the goals I had listed out for 2018 and how I faired at completing Continue  Take 2 10min breaks per day clear the mind I can say that the kids are fully on board with favorite things and love to Gratitude journaling every day Snooze Less be productive I hit 61  gratitude journals in 2018.  I would not say that I met my goal, but Medio", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a96a0>, next=<frontmatter.Post object at 0x7f345068a8e0>)"}, {"cover": "", "title": "Save Vim Macro", "tags": ["vim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/save-vim-macro.md", "description": "If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it aw", "content": "If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it away as a custom keybinding. As with most things with vim, it's easy to do once you understand it.\n\n## Creating a Macro\n\nOne of the earliest things we all learn to do in vim is to create macros, custom sets of functionality stored in a register that can be replayed later.\n\nTo create a macro, get into normal mode, then type `q` followed by a letter that you want to store the macro under.\n\n``` vim\nqq\n```\n\n> Note: a common throw-away macro register is q because it's easy to hit qq from normal mode to start recording.\n\n## Replaying a Macro\n\nMacros can be replayed using `@` followed by the letter that you stored the macro under.\n\n``` vim\n@q\n```\n\n## Registers\n\nRegisters are nothing more than a single character key mapping to a value of some text. As you `yank`, `delete`, or create macros in vim, it automatically stores text into these registers.\n\nWhen you hit `p` paste it's simply pasting in the default register. You can also paste in any other register by hitting `\"qp` where q is the register that you want to paste in.\n\n## Listing Registers\n\nTo see what you have stored in each register, use the `:reg` command. This is a powerful tool that I have underutilized for a long time. It is really great to see what you have in each register.\n\n``` vim\n:reg\n```\n\n## making a macro into a shortcut\n\n_a little \\<c-r\\> magic_\n\nThgve magical shortcut that makes it easy is that control + r `<C-R>` followed by a register will paste that register wherever you currently are, including the command mode.\n\n``` vim\n:nnoremap {binding} <C-R>{register}\n```\n\n## Editing a Macro\n\n_relieve some of that Macro Pressure_\n\nNow that we understand that macros are simply strings of text placed into a register, it becomes a bit more intuitive to edit them after being created.\n\nFirst, paste the contents of the register into your current working buffer.\n\n``` vim\n<C-R>q\n```\n\nThen edit the macro and add it back to that buffer and delete it.\n\n``` vim\n\"qdd\n```\n\nIf your macro had multiple lines in it, you might need to.\n\n``` vim\n\"qdj\n\"qd2j\n```\n\n## Make it recursive\n\nOne use case of editing a macro may be making it recursive after trying it out a few times. Macros can become recursive by simply calling themselves after running.\n\nPaste in the macro.\n\n``` vim\n<C-R>q\n```\n\nGo to the end of the line and add `@q` to get called again.\n\n``` vim\nA @q\n```\n\nReplace the `q` register with the updated macro.\n\n``` vim\n\"qd\n```\n\n> Note: don't use this in a shortcut as the macro may change. If you want to call the keybinding again, you will have to use noremap instead of nnoremap, but be careful as recursive remaps can be dangerous.\n\n## Recap\n\n``` vim\n\" record a macro\nq{register}\n\n\" play a macro\n@{register}\n\n\" list registers\n:reg\n\n\" map a macro to a keyboard shortcut\n:nnoremap {binding} <C-R>{register}\n\n\" edit a macro\n<C-R>{register}\n\"{register}dd\n\n\" make a macro recursive\n<C-R>{register}A@q<esc>\"{register}dd\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/send-email-with-github-actions'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Send Emails with GitHub Actions</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reusable-bash'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Creating Reusable Bash Scripts</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-04", "edit_link": "https://github.com/edit/main/pages/blog/save-vim-macro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574223", "datetime": "2021-01-04 00:00:00+00:00", "slug": "save-vim-macro", "jinja": false, "output_html": "markout/save-vim-macro/index.html", "long_description": "If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it away as a custom keybinding. As with most things with vim, it One of the earliest things we ", "super_description": "If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it away as a custom keybinding. As with most things with vim, it One of the earliest things we all learn to do in vim is to create macros, custom sets of functionality stored in a register that can be replayed later. To create a macro, get into normal mode, then type  Note: a common throw-away macro register is q because it Macros can be repla", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658b20>, next=<frontmatter.Post object at 0x7f34506a1220>)"}, {"cover": "", "title": "pre-commit is awesome", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/pre-commit-is-awesome.md", "description": "I recently discovered the \u2728 awesomeness that is pre-commit. I steered away I recently discovered the \u2728 awesomeness that is pre-commit. I steered away from it fo", "content": "I recently discovered the \u2728 awesomeness that is pre-commit. I steered away\nfrom it for so long because it seemed like a big daunting thing to set up, but\nreally it's easy. It will automatically run checks for you. In some cases, it\nwill even automatically fix them for you. Out of the box, it will do things\nlike automatically trim extra whitespace, fix file endings, and ensure file\nsizes are not too large for git.\n\nI recently discovered the \u2728 awesomeness that is pre-commit. I steered away from it for so long because it seemed like a big daunting thing to set up, but really it's easy. It will automatically run checks for you. In some cases, it will even automatically fix them for you. Out of the box, it will do things like automatically trim extra whitespace, fix file endings, and ensure file sizes are not too large for git.\n\n## Quickstart\n\nIt comes with a `sample-config` that is pretty general purpose and use for just about any project in git.\n\n``` bash\npip instal pre-commit\npre-commit sample-config > .pre-commit-config.yaml\npre-commit install\ngit add .\ngit commit -m \"added pre-commit\"\n```\n\n## Cloned Repo\n\nOnce someone has created the `.pre-commit-config.yaml` everyone on the team will want to be running it for consistency's sake. (make sure everyone agrees with the config you have chosen first). Simply install the existing config.\n\n``` bash\npip install pre-commit\ngit clone <repo>\npre-commit install\ngit add .\ngit commit -m \"added pre-commit\"\n```\n\n## sample-config\n\nThe sample configuration does some really basic, file ending, trailing-whitespace fixing. And checks for files too large for git. This one saved me when I tried to commit linux `rpm` once \ud83e\udd26\u200d\u2640\ufe0f.\n\n``` yaml\n# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\nrepos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v2.4.0\n    hooks:\n    - id: trailing-whitespace\n    - id: end-of-file-fixer\n    - id: check-yaml\n    - id: check-added-large-files\n```\n\n## Adding some extras from pre-commit themselves\n\nHere I have added a couple of extra ones form pre-commit\n\n``` yaml\n    - id: check-case-conflict # Check for files that would conflict in case-insensitive filesystems\n    - id: check-merge-conflict # Check for files that contain merge conflict strings.\n    - id: debug-statements # Check for debugger imports and py37+ `breakpoint()` calls in python source.\n    - id: requirements-txt-fixer # Sorts entries in requirements.txt\n    - id: forbid-new-submodules # Check for git submodules\n    - id: flake8 # runs python flake8\n```\n\nThe submodules one is big. I have seen several folks trying to learn git for the first time mistakenly start nesting all of their projects underneath each other and eventually losing a lot of work. Trying to learn the command line and git all at once can be really confusing.\n\n## skip pre-commit\n\nSo you have a big codebase and you are trying to get pre-commit ready, but you just need your changes in.\n\n``` yaml\ngit commit -m \"commiting wihout pre-commit\" --no-verify\n```\n\n## manually run pre-commit\n\nIf you have an existing repo and want to run pre-commit on everything, since it was pre-existing, you can do that manually.\n\n``` yaml\npre-commit run --all-files\n```\n\n## So pre-commit changed some files\n\nSince `pre-commit` only runs against staged files, but makes changes to the local files you need to add them.\n\nHere is a git status after committing with some trailing whitespace issues.\n\n``` bash\n\u276f git status\nOn branch main\nChanges to be committed:\n  (use \"git restore --staged <file>...\" to unstage)\n        modified: README.md\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified: README.md\n```\n\n`pre-commit` will keep yelling at you about `trailing whitespace` until you add the files.\n\n``` bash\ngit add README.md\n```\n\n## Community Developed plugins\n\n_give me more_\n\nThese almost make it **too** easy. Sharing your process to get up and running without `pre-commit` can involve a lot of instructions. Installing several different tools, then running them manually, probably forgetting to do so sometimes. These will automatically install and only run scoped to the files that have changed, not on the whole repo.\n\n### isort\n\n``` yaml\n- repo: https://github.com/asottile/seed-isort-config\nrev: v2.1.1\nhooks:\n    - id: seed-isort-config\n- repo: https://github.com/pre-commit/mirrors-isort\nrev: v4.3.21\nhooks:\n    - id: isort\n```\n\n### .isort.cfg\n\nIn order to get isort to play nicely with black, I found great success with the following config placed in the root of the repo at `.isort.cfg`. Without these settings, I found that you commits will consistently fail checks because `isort` and `black` are fighting each other.\n\n``` toml\n[settings]\nmulti_line_output=3\ninclude_trailing_comma=True\nforce_grid_wrap=0\nuse_parentheses=True\nline_length=88\n```\n\n### .flake8\n\nJust as with `isort` flake8 tends to complain about a few things that black does. To get them to play nicely together place this file in the root of the repo at `.flake8`.\n\n``` toml\n# taken from black\n# added E231 as is conflicts with black formatting\n[flake8]\nignore = E203, E266, E501, W503, E231, F541\nmax-line-length = 88\nmax-complexity = 18\nselect = B,C,E,F,W,T4,B9\n```\n\n### black\n\nBlack is an amazing CLI tool the python community has been blessed with. It was developed by python core dev Lukasz Langa after deep research of real python projects. It will autoformat your project and will check that the AST before and after remains the same ensuring that the code will run exactly the same. It only makes it more readable. I keep black installed and set to run on save. Many times I will bang out some sloppy code with long lines or poor indentation hit save and let black take care of the easy work.\n\n``` yaml\n- repo: https://github.com/asottile/blacken-docs\n    rev: v1.7.0\n    hooks:\n        - id: blacken-docs\n        - additional_dependencies: [black]\n- repo: https://github.com/psf/black\n    rev: 19.3b0\n    hooks:\n        - id: black\n```\n\n### mypy\n\nI have recently fallen in love with mypy. It has saved me from shipping some bugs that would not have been caught with tests, even with 100% coverage. I don't have 100% coverage across every possible type entered.\n\n``` yaml\n    - repo: https://github.com/pre-commit/mirrors-mypy\n      rev: v0.720\n      hooks:\n          - id: mypy\n            exclude: tests/\n```\n\n## Your own plugin\n\nSometimes you have a CLI tool that you want to run, but there is no plugin. No worries, you can install manually set the repo to local, and add an entry for your CLI command to run.\n\n``` yaml\n    - repo: local\n      hooks:\n          - id: interrogate\n   \t\t  name: \"Interrogate docstring coverage check\"\n          types: [file, python]\n          entry: interrogate -f 100 -vv\n```\n\n***\n\nI have been writing short snippets about my mentality breaking into the tech/data industry in my newsletter, \ud83d\udc47 check it out and lets get the conversation started.\n\n[![Sign up for my Newsletter](https://images.waylonwalker.com/waylon-walker-newsletter.png)](https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pyflyby'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Smoother Python with automatic imports | pyflyby</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/practice-python-online'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udc0d Practice Python Online</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-05", "edit_link": "https://github.com/edit/main/pages/blog/pre-commit-is-awesome.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574229", "datetime": "2020-06-05 00:00:00+00:00", "slug": "pre-commit-is-awesome", "jinja": false, "output_html": "markout/pre-commit-is-awesome/index.html", "long_description": "I recently discovered the \u2728 awesomeness that is pre-commit. I steered away I recently discovered the \u2728 awesomeness that is pre-commit. I steered away from it for so long because it seemed like a big daunting thing to set up, but really it It comes wi", "super_description": "I recently discovered the \u2728 awesomeness that is pre-commit. I steered away I recently discovered the \u2728 awesomeness that is pre-commit. I steered away from it for so long because it seemed like a big daunting thing to set up, but really it It comes with a  Once someone has created the  The sample configuration does some really basic, file ending, trailing-whitespace fixing. And checks for files too large for git. This one saved me when I tried to commit linux  Here I have added a couple of extra ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c670>, next=<frontmatter.Post object at 0x7f345067f040>)"}, {"cover": "", "title": "LIVE-REPLAY - Python dev | Markata todoui | 4/6/2022", "tags": ["python", "python", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/markata-todoui-live-replay-4-6-2022.md", "description": "https://youtu.be/-42A5210HYo Super fun steam Broadcasted live on Twitch -- Watch live at https://www.twitch.tv/waylonwalker We worked on markata todoui, a comma", "content": "https://youtu.be/-42A5210HYo\n\nSuper fun steam Broadcasted live on Twitch -- Watch live at https://www.twitch.tv/waylonwalker\n\nWe worked on markata todoui, a command tui trello board written in python using only markdown files to store the data.  I love markdown and I want to make this my workflow.\n\nDuring this stream we get RAIDED by TEEJ_DV! and chat about tmux a bit before calling the changes to markata-tui good and signing off.\n\n* dotfiles: https://github.com/WaylonWalker/devtainer\n* today's project: https://github.com/WaylonWalker/markata-todoui\n* website: https://waylonwalker.com/\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/markdown-cli'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Markdown Cli</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/markata-dev-server'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Building Rich a Dev Server</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-12", "edit_link": "https://github.com/edit/main/pages/blog/markata-todoui-live-replay-4-6-2022.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574237", "datetime": "2022-05-12 00:00:00+00:00", "slug": "markata-todoui-live-replay-4-6-2022", "jinja": false, "output_html": "markout/markata-todoui-live-replay-4-6-2022/index.html", "long_description": "https://youtu.be/-42A5210HYo Super fun steam Broadcasted live on Twitch -- Watch live at https://www.twitch.tv/waylonwalker We worked on markata todoui, a command tui trello board written in python using only markdown files to store the data.  I love", "super_description": "https://youtu.be/-42A5210HYo Super fun steam Broadcasted live on Twitch -- Watch live at https://www.twitch.tv/waylonwalker We worked on markata todoui, a command tui trello board written in python using only markdown files to store the data.  I love markdown and I want to make this my workflow. During this stream we get RAIDED by TEEJ dotfiles: https://github.com/WaylonWalker/devtainer today website: https://waylonwalker.com/", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f0d0>, next=<frontmatter.Post object at 0x7f34506a9ee0>)"}, {"cover": "", "title": "Kedro New", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-new.md", "description": "https://youtu.be/uqiv5LAiJe0 Kedro new is simply a wrapper around the cookiecutter templating library.  The https://waylonwalker.com/what-is-kedro/ Unsure what ", "content": "https://youtu.be/uqiv5LAiJe0\n\nKedro new is simply a wrapper around the cookiecutter templating library.  The\nkedro team maintains a ready made template that has everything you need for a\nkedro project.  They also maintain a few kedro starters, which are very similar\nto the base template.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> Unsure what kedro is, Check out yesterdays post on What is Kedro.\n\n## pipx\n\nI reccomend using `pipx` when running kedro new.  `pipx` is designed for system\nlevel cli tools so that you do not need to maintain a virtual environment or\nworry about version conflicts, `pipx` manages the environment for you.\n\nThe kedro team does not reccomend `pipx` in their docs as they already feel\nlike there is a bit of a tool overload for folks that may be less familiar with\n\n``` python\npipx kedro new\n```\n\nI like using `pipx` as it gives you better control over using a specific\nversion or always the latest version, unlike when you run what you have on your\nsystem depends on when you last installed or upgraded.\n\n## Kedro New\n\nThe kedro team also has a set of starters, by passing in `--starter` you can\nstart with a different template.  Here is an example with the kedro\nspaceflights starter.\n\n``` bash\npipx run kedro new --starter spaceflights\n\n=============\nPlease enter a human readable name for your new project.\nSpaces and punctuation are allowed.\n [New Kedro Project]: Spaceflights Complete\n\nRepository Name:\n================\nPlease enter a directory name for your new project repository.\nAlphanumeric characters, hyphens and underscores are allowed.\nLowercase is recommended.\n [spaceflights-complete]:\n\nPython Package Name:\n====================\nPlease enter a valid Python package name for your project package.\nAlphanumeric characters and underscores are allowed.\nLowercase is recommended. Package name must start with a letter\nor underscore.\n [spaceflights_complete]:\n\nChange directory to the project generated in /home/u_walkews/git/spaceflights-complete\n\nA best-practice setup includes initialising git and creating a virtual environment before running ``kedro install`` to install project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/\n```\n\n### Other versions of kedro with pipx\n\n`pipx` not only ensures that you run  the latest version, it can also run a\nvery specific version.\n\n``` bash\npipx run --spec kedro==0.16.6 kedro new\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/kedro-environment/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/kedro-environment-og_250x140.png\" alt=\"article cover for \n kedro Virtual Environment\n\"/>\n          <p><strong>\n kedro Virtual Environment\n</strong></p>\n      </a>\n  </div>\n\n\n> The next post in this series will help you create your virtual environment for your new kedro project.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-parameters'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Setting Parameters in kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-install'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Install</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-18", "edit_link": "https://github.com/edit/main/pages/blog/kedro-new.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574243", "datetime": "2021-08-18 00:00:00+00:00", "slug": "kedro-new", "jinja": false, "output_html": "markout/kedro-new/index.html", "long_description": "https://youtu.be/uqiv5LAiJe0 Kedro new is simply a wrapper around the cookiecutter templating library.  The https://waylonwalker.com/what-is-kedro/ Unsure what kedro is, Check out yesterdays post on What is Kedro. I reccomend using  The kedro team do", "super_description": "https://youtu.be/uqiv5LAiJe0 Kedro new is simply a wrapper around the cookiecutter templating library.  The https://waylonwalker.com/what-is-kedro/ Unsure what kedro is, Check out yesterdays post on What is Kedro. I reccomend using  The kedro team does not reccomend  I like using  The kedro team also has a set of starters, by passing in  pipx https://waylonwalker.com/kedro-environment/ The next post in this series will help you create your virtual environment for your new kedro project.", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3af0>, next=<frontmatter.Post object at 0x7f34506a9d30>)"}, {"cover": "", "title": "Edit On GitHub", "tags": ["blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/edit-on-github.md", "description": "I recently added a button to my blog, and subsequently my posts on I refer back to my old posts quite a bit, sometimes I find errors in them. The slug that I am", "content": "I recently added a button to my blog, and subsequently my posts on\n[DEV.to](https://dev.to/waylonwalker).  It's the best thing that I have done\nfor it in a while.  It makes it so easy to do quick edits.\n\n## finding errors\n\nI refer back to my old posts quite a bit, sometimes I find errors in them.\nHonestly most of the time its too much effort to load up my editor make the\nchange and `git add` and `git commit`.  It's not much, but when I am referring\nto my own post generally I am just trying to get something done and don't have\ntime for that.\n\n\n## The slug\n\nThe slug that I am getting from gatsby is formatted as `/blog/this-post/`.\nNote the trailing slash and missing file extension, thats where the\n`${slug.slice(0, -1)}.md` comes in.\n\n\n## The Full Link\n\n\nGitHub makes it super easy to form a URL that puts you right into edit mode on\nthe exact post you are looking for.  This is format for the URL... you can\nalways figure it out easily by clicking edit on one.\n\n```\nhttps://github.com/<user>/<repo>/edit/<branch>/<filepath>\n```\n\n## The Final Result\n\nWrapping that URL up in a short snippet gave me the following result.\n\n``` jsx\n<p style={{ display: 'flex', justify: 'center', textAlign: 'center', margin: '3rem auto' }}>\n  <span role='img' aria-label=''>\ud83d\udc40</span>\n  see an issue, edit this post on\n  <a\n    href={`https://github.com/WaylonWalker/waylonwalkerv2/edit/main/src/pages${slug.slice(0, -1)}.md`}\n    alt='edit post url'\n    title='edit this post'\n   >\n  <FiGithub />\n  GitHub\n  </a>\n</p>\n```\n![Edit on GitHub](https://dev-to-uploads.s3.amazonaws.com/i/sgqd23rbbusjpfxqr7bl.PNG)\n\nI know better than hard coding the GitHub url in, but I did it anyway, my\npersonal site gets to be a bit of a rats nest of hotfixes over time.\n\nThis was a super quick change that brought me a lot of value without much\neffort.  I will probably change up the styling/layout of it in the future. For\nnow I have something that functions, and I can get back to creating content.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/eight-years-cat'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>My first eight years as a working professional.</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/drawing-ascii-boxes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>drawing ascii boxes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-18", "jinja": false, "edit_link": "https://github.com/edit/main/pages/blog/edit-on-github.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574249", "datetime": "2020-07-18 00:00:00+00:00", "slug": "edit-on-github", "output_html": "markout/edit-on-github/index.html", "long_description": "I recently added a button to my blog, and subsequently my posts on I refer back to my old posts quite a bit, sometimes I find errors in them. The slug that I am getting from gatsby is formatted as  GitHub makes it super easy to form a URL that puts y", "super_description": "I recently added a button to my blog, and subsequently my posts on I refer back to my old posts quite a bit, sometimes I find errors in them. The slug that I am getting from gatsby is formatted as  GitHub makes it super easy to form a URL that puts you right into edit mode on Wrapping that URL up in a short snippet gave me the following result. I know better than hard coding the GitHub url in, but I did it anyway, my This was a super quick change that brought me a lot of value without much", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506aee50>, next=<frontmatter.Post object at 0x7f345064c790>)"}, {"cover": "", "title": "Adding Audio to my blog posts", "tags": ["webdev", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/audio-for-blog.md", "description": "This is episode 1 of the Waylon Walker Audio experience, posts from So I have had this idea for awhile to add audio to my blog posts.  The idea Honestly I don I", "content": "<iframe src=\"https://anchor.fm/waylon-walker/embed/episodes/Launching-Audio-for-the-Blog-en6kof\" height=\"102px\" width=\"400px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n\nThis is episode 1 of the Waylon Walker Audio experience, posts from\n[waylonwalker.com](https://waylonwalker.com) in audio form.\n\nSo I have had this idea for awhile to add audio to my blog posts.  The idea\npartly comes from the aws blog, if you have ever been on their blog you will\nhave noticed that they have a _voiced by amazon polly_ section.\n\n## What to Expect\n\nHonestly I don't know this is all new to me and I dont have much to go off of.\nFor now its a test that may or may not work out.\n\nI will say that the time that I have available for clean audio is a bit limited\nso expect these to come out in batches as I get time to go back and record.\n\n## What Not to Expect\n\nOne thing that makes the aws blog really hard to listen to is the robotic\nvoice, I definitely don't want that.  This will be voiced by a real human, Me.\nAt the same time written text doesn't translate directly to audio well so don't\nnecessarily expect the audio to be\nword for word.\n\n\n## Code blocks \n\nThere are a lot of code blocks in my blog, which don't translate directly into\nI will do my best to read short one liners or describe larger blocks, but don't\nexpect a boring three minute read of large code blocks.\n\n## Updates\n\nExpect to see these at the top of finished posts once I consider them done.  I\nwill not likely come back to edit the audio if there is an edit to the post\nunless its major.  I will do my best to highlight changes in a note next to the\nembeded audio on the post.\n\n## Lets do this\n\nIf you like this idea give the posts a listen, share them with your friends,\ngive me a shout out on twitter\n[@_waylonwalker](https://twitter.com/_WaylonWalker).\n\n---\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/crush-dev-to-posts/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/crush-dev-to-posts-og_250x140.png\" alt=\"article cover for \n How to crush amazing posts on DEV\n\"/>\n          <p><strong>\n How to crush amazing posts on DEV\n</strong></p>\n      </a>\n  </div>\n\n\n> If you enjoyed this post you may enjoy another \"meta\" post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/automating-my-post-starter'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Automating my Post Starter</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/adding-google-fonts-to-a-gatsbyjs-site'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Adding google fonts to a gatsbyjs site</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-25", "edit_link": "https://github.com/edit/main/pages/blog/audio-for-blog.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574254", "datetime": "2020-11-25 00:00:00+00:00", "slug": "audio-for-blog", "jinja": false, "output_html": "markout/audio-for-blog/index.html", "long_description": "This is episode 1 of the Waylon Walker Audio experience, posts from So I have had this idea for awhile to add audio to my blog posts.  The idea Honestly I don I will say that the time that I have available for clean audio is a bit limited One thing t", "super_description": "This is episode 1 of the Waylon Walker Audio experience, posts from So I have had this idea for awhile to add audio to my blog posts.  The idea Honestly I don I will say that the time that I have available for clean audio is a bit limited One thing that makes the aws blog really hard to listen to is the robotic There are a lot of code blocks in my blog, which don Expect to see these at the top of finished posts once I consider them done.  I If you like this idea give the posts a listen, share th", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1040>, next=<frontmatter.Post object at 0x7f345066ccd0>)"}, {"cover": "", "title": "tmux attach", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-attach.md", "description": "https://youtu.be/JQ0yDCVu44E attach is one of the most useful features of tmux.  If you have no interest in this command will simply attach back to tmux if you ", "content": "https://youtu.be/JQ0yDCVu44E\n\nattach is one of the most useful features of tmux.  If you have no interest in\ntmux for pane and window management, you should use tmux for this.  It can be a\nlife saver if you ever get disconnected from the host machine or accidently\nclose your terminal you can connect right back into the session you were just\nin using attach.\n\n## attach\n\n``` bash\ntmux attach\n```\n\n> this command will simply attach back to tmux if you are ever disconnected\n\nIf you ever run long running tasks on a remote machine by sshing into this you\nshould be doing it inside tmux, or something like tmux so that you do not loose\nyour work.\n\n## attach to a specific session\n\nIf you have multiple sessions running you can select the session that you want\nto attach to by passing `-t <name-of-session>`.\n\n``` bash\ntmux attach -t scratch\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-choose-tree'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux choose-tree</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/walrus-comprehension'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python Walrus Inside List Comprehension</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-31", "edit_link": "https://github.com/edit/main/pages/blog/tmux-attach.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574260", "datetime": "2021-07-31 00:00:00+00:00", "slug": "tmux-attach", "jinja": false, "output_html": "markout/tmux-attach/index.html", "long_description": "https://youtu.be/JQ0yDCVu44E attach is one of the most useful features of tmux.  If you have no interest in this command will simply attach back to tmux if you are ever disconnected If you ever run long running tasks on a remote machine by sshing int", "super_description": "https://youtu.be/JQ0yDCVu44E attach is one of the most useful features of tmux.  If you have no interest in this command will simply attach back to tmux if you are ever disconnected If you ever run long running tasks on a remote machine by sshing into this you If you have multiple sessions running you can select the session that you want https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652310>, next=<frontmatter.Post object at 0x7f34505fd280>)"}, {"cover": "", "title": "Using Kedro In Scripts", "tags": ["python", "kedro"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-in-scripts.md", "description": "With the latest releases of kedro  https://waylonwalker.com/what-is-kedro/ If your just learning about kedro check out this post walking through it I To get ked", "content": "With the latest releases of kedro `0.17.x`, it is now possible to run kedro\npipelines from within scripts.  While I would not start a project with this\ntechnique, it will be a good tool to keep in my back pocket when I want to\nsprinkle in a bit of kedro goodness in existing projects.\n\n## New to Kedro\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> If your just learning about kedro check out this post walking through it\n\n## No More Rabbit Hole of Errors\n_as of 0.17.2_\n\nI've tried to do this in kedro `0.16.x,` and it turned into a rabbit hole of\nerrors.  First kedro needed a `conf` directory, if you tried to fake one in it\nwould then ask for logging setup.  These errors just kept coming to the point\nit wasnt worth doing and I might as well use a proper template for real\nprojects and stick to simple function calls for things that are not a kedro\nproject.\n\n## Kedro in a script\n\nTo get kedro running, you will need a pipeline, catalog, and\nrunner at a minimum.  Those who have used kedro before the pipeline will\nlook very similar to what you are familiar with, but the catalog will not be\nloaded from yaml and you will need to bring your own runner.\n\n``` python \nfrom kedro.pipeline import Pipeline, node\nfrom kedro.io import DataCatalog\nfrom kedro.runner.sequential_runner import SequentialRunner\n\n\n# additional datasets you want to use\nfrom kedro.extras.datasets.pandas.csv_dataset import CSVDataSet\nfrom kedro.extras.datasets.pandas.parquet_dataset import ParquetDataSet\n\n# the sequential runner is the simplest. It runs one node at a time.\nrunner = SequentialRunner()\n\n# this is a super simple example pipeline\npipeline = Pipeline(\n    [\n        node(lambda: range(100), None, \"range\"),\n        node(lambda x: [i ** 2 for i in x], \"range\", \"range**2\"),\n        node(lambda x: [i for i in x if i > 5000], \"range**2\", \"range>5k\"),\n        node(lambda x: x[:5], \"range>5k\", \"range>5k-head\"),\n        node(lambda x: sum(x) / len(x), \"range>5k\", \"range>5k-mean\"),\n    ]\n)\n\n# to get up and running, you can use an empty catalog\ncatalog = DataCatalog()\n\nrunner.run(pipeline, catalog)\n```\n\n> \ud83d\udc46 Above is the minimal setup to get a kedro pipeline running\n\n## more practically\n\nMore often, your kedro pipelines are going to use a function rather than a\nlambda, and pandas DataFrames.\n\n\n``` python\ndef clean_columns(df: pd.DataFrame):\n    df.columns = [col.lower().strip() for col in df.columns]\n\npipeline = Pipeline(\n    [\n        node(clean_columns, \"raw_data\", \"clean_columns\", name=\"create_clean_columns\"),\n    ]\n)\n\ncatalog = DataCatalog(\n    {\n        \"raw_data\": ParquetDataSet(filepath=f\"data/raw_data.parquet\")\n        \"clean_columns\": ParquetDataSet(filepath=f\"data/clean_columns.parquet\")\n    }\n)\n```\n\n\n> One single node pipeline to get you started\n\n## Semi-automatic catalog\n\nFor some reason, when I tried to use the DataCatalogWithDefault it did not pick\nup my datasets right.  I suspect this has something to do with not setting up a\nproper session, so this is what I did in a pinch to get that catalog goodness\nfor my DataFrames without setting up each one manually.\n\n\n``` python\ncatalog = DataCatalog(\n    {\n        name: ParquetDataSet(filepath=f\"data/{name}.parquet\")\n        for name in pipeline.all_outputs()\n    }\n)\n```\n\n> \u26a0 If all of your datasets are pandas dataframes\n\nFor the example above that does not use DataFrames, I would pickle all of my\noutputs to enable re-loading them later.\n\n``` python\ncatalog = DataCatalog(\n    {\n        name: PickleDataSet(filepath=f\"data/{name}.pkl\")\n        for name in pipeline.all_outputs()\n    }\n)\n```\n\n\n> \ud83d\udd25 for use with non-pandas datasets\n\n## Logging\n\nOnce you explicitly add datasets, kedro will start logging when it's\nloading, running, or saving each node.  Things will begin to look a\nbit more familiar to anyone who has used kedro before.\n\n``` python\nww3 \u21aamain \u00a9kedro-in-scripts v3.8.8 ipython\n\u276f runner.run(pipeline, catalog)\n2021-04-18 09:30:58,099 - kedro.pipeline.node - INFO - Running node: <lambda>(None) -> [range]\n2021-04-18 09:30:58,100 - kedro.io.data_catalog - INFO - Saving data to `range` (PickleDataSet)...\n2021-04-18 09:30:58,104 - kedro.runner.sequential_runner - INFO - Completed 1 out of 5 tasks\n2021-04-18 09:30:58,105 - kedro.io.data_catalog - INFO - Loading data from `range` (PickleDataSet)...\n2021-04-18 09:30:58,105 - kedro.pipeline.node - INFO - Running node: <lambda>([range]) -> [range**2]\n2021-04-18 09:30:58,105 - kedro.io.data_catalog - INFO - Saving data to `range**2` (PickleDataSet)...\n2021-04-18 09:30:58,111 - kedro.runner.sequential_runner - INFO - Completed 2 out of 5 tasks\n2021-04-18 09:30:58,111 - kedro.io.data_catalog - INFO - Loading data from `range**2` (PickleDataSet)...\n2021-04-18 09:30:58,112 - kedro.pipeline.node - INFO - Running node: <lambda>([range**2]) -> [range>5k]\n2021-04-18 09:30:58,112 - kedro.io.data_catalog - INFO - Saving data to `range>5k` (PickleDataSet)...\n2021-04-18 09:30:58,115 - kedro.runner.sequential_runner - INFO - Completed 3 out of 5 tasks\n2021-04-18 09:30:58,115 - kedro.io.data_catalog - INFO - Loading data from `range>5k` (PickleDataSet)...\n2021-04-18 09:30:58,115 - kedro.pipeline.node - INFO - Running node: <lambda>([range>5k]) -> [range>5k-mean]\n2021-04-18 09:30:58,115 - kedro.io.data_catalog - INFO - Saving data to `range>5k-mean` (PickleDataSet)...\n2021-04-18 09:30:58,118 - kedro.runner.sequential_runner - INFO - Completed 4 out of 5 tasks\n2021-04-18 09:30:58,119 - kedro.io.data_catalog - INFO - Loading data from `range>5k` (PickleDataSet)...\n2021-04-18 09:30:58,119 - kedro.pipeline.node - INFO - Running node: <lambda>([range>5k]) -> [range>5k-head]\n2021-04-18 09:30:58,119 - kedro.io.data_catalog - INFO - Saving data to `range>5k-head` (PickleDataSet)...\n2021-04-18 09:30:58,122 - kedro.runner.sequential_runner - INFO - Completed 5 out of 5 tasks\n2021-04-18 09:30:58,122 - kedro.runner.sequential_runner - INFO - Pipeline execution completed successfully.\n```\n\n## Kedro Viz\n\nI was not able to quickly get kedro viz up and running for my use case.  If you\nreally wanted to you could start modifying their format_pipelines_data function\nin\n[server.py](https://github.com/quantumblacklabs/kedro-viz/blob/main/package/kedro_viz/server.py).\nOr you could render a new template and put your pipeline there for viz\npurposes.\n\n> It's possible, but might as well stick to the template\n\n## cli\n\nFor something that I would be using this on, I am probably not going to put much\neffort into the cli as it is not likely something that we will have a\nteam of developers interacting with constantly.  I would just put together the\nminimum necessary to run my application how I need.\n\n\n``` python\nif __name__ == \"__main__\":\n    import sys\n\n    if '--skip-raw' in sys.argv:\n        runner.run(pipeline.from_inputs('range**2'), catalog)\n    else:\n        runner.run(pipeline, catalog)\n\n```\n\n> Keeping it simple \n\nIf I want to go down the route of having a full cli built out I am probably\ngoing to use the full kedro template, or something very similar.\n\n## It's a bit Rough\n\nWhile I might use this in production somewhere, it will be inside of some\nother not kedro application. I will still be using something quite similar to\ntheir template for my pipelining projects.  It misses some excellent\nthings that bring me to kedro like hooks, plugins, credentials, catalog,\nlogging config, cli, and viz.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-incremental-versioned-datasets'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Incremental Versioned Datasets in Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-git-init'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Git Init</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-23", "edit_link": "https://github.com/edit/main/pages/blog/kedro-in-scripts.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574266", "datetime": "2021-05-23 00:00:00+00:00", "slug": "kedro-in-scripts", "jinja": false, "output_html": "markout/kedro-in-scripts/index.html", "long_description": "With the latest releases of kedro  https://waylonwalker.com/what-is-kedro/ If your just learning about kedro check out this post walking through it I To get kedro running, you will need a pipeline, catalog, and \ud83d\udc46 Above is the minimal setup to get a k", "super_description": "With the latest releases of kedro  https://waylonwalker.com/what-is-kedro/ If your just learning about kedro check out this post walking through it I To get kedro running, you will need a pipeline, catalog, and \ud83d\udc46 Above is the minimal setup to get a kedro pipeline running More often, your kedro pipelines are going to use a function rather than a One single node pipeline to get you started For some reason, when I tried to use the DataCatalogWithDefault it did not pick \u26a0 If all of your datasets are", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640d60>, next=<frontmatter.Post object at 0x7f34506916a0>)"}, {"cover": "", "title": "Create a Virtual File Gallery with Symlinks", "tags": ["linux", "bash"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/symlink-gallery.md", "description": "Creating a directory that is a union of several directories can be achieved Here is how I am creating a virtual directory of all my projects that is a \u26a0 Notice ", "content": "Creating a directory that is a union of several directories can be achieved\nwith a few symlinks at the command line.\n\n## Creating a Virtual File Gallery\n\nHere is how I am creating a virtual directory of all my projects that is a\ncombination of both work and not-work projects.  I am creating symlinks for\nevery directory under `~/work` and `~/git`.\n\n```bash\nrm -rf ~/projects\nmkdir ~/projects\nln -sf ~/work/* ~/projects\nln -sf ~/git/* ~/projects\n```\n\n> \u26a0 Notice that first I am recreating the directory each time. This will ensure\n> that any project that is deleted from their actual directory is removed from\n> the virtual gallery.\n \n## Updating the gallery\n\nSince links are always kept up to date without any extra work, all the data is\nstill in the same place it started.  But as new directories are added to any\nproject directory they will not be automatically added to the virtual gallery.\n\n* cron\n* bashrc/zshrc\n\nIf you're concerned about system resources, you can add it to a cron job to run\nat a regular schedule that makes sense to you.  For me, I just popped those 4\nlines right in my `~/.zshrc`.  It's a bit overkill, maybe bloat, but it runs in\nan impercieveable amount of time.\n\n## Automatically CD to the real directory\n\nWhen you cd into a `~/projects/my-proj` directory, your `$PWD` will still be\n`~/projects/my-proj`.  I did not want this for my use case.  I wanted to follow\nthe symlink to the real directory.  I found two options that worked for me.\n\n```\nalias cd='cd -P'\nset -o physical\n```\n\n> Add either of these to your `.bashrc`/`.zshrc` to follow symlinks to the\n> actual directory.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/telegraph-release'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>I made a neovim plugin</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/supercharge-zsh-startup'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Supercharge Zsh Startup</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-05", "edit_link": "https://github.com/edit/main/pages/blog/symlink-gallery.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574272", "datetime": "2021-05-05 00:00:00+00:00", "slug": "symlink-gallery", "jinja": false, "output_html": "markout/symlink-gallery/index.html", "long_description": "Creating a directory that is a union of several directories can be achieved Here is how I am creating a virtual directory of all my projects that is a \u26a0 Notice that first I am recreating the directory each time. This will ensure Since links are alway", "super_description": "Creating a directory that is a union of several directories can be achieved Here is how I am creating a virtual directory of all my projects that is a \u26a0 Notice that first I am recreating the directory each time. This will ensure Since links are always kept up to date without any extra work, all the data is cron bashrc/zshrc If you When you cd into a  Add either of these to your ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506969d0>, next=<frontmatter.Post object at 0x7f34506401f0>)"}, {"cover": "./pycon2018.f76001445fbb.png", "title": "Pycon 2018 Roundup", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/pycon-2018-roundup.md", "description": "none", "content": "These are my notes from pycon 2018 videos.  I love the python community and especially the conference talks.  This year I am going to take some notes from my favorite talks and post them here.\n\nThis is an **Incomplete** working post.\n\n\n## [Jake VanderPlas - Performance Python: Seven Strategies for Optimizing Your Numerical Code](https://www.youtube.com/watch?v=zQeYx87mfyw)\n\n* **Always** profile **before** making any optimizations.\n* Vectorize with Numpy\n    * Looping in python can be slow\n* Use specialized data structures.\n    * scipy.spacial\n    * pandas\n    * xarray\n    * scipy.sparse\n    * sparse package\n    * scipy.sparce.csgraph\n* Cython\n    * Add types\n* Numba\n    * jit\n    * Fortran Like Speed\n    * heavy dependencies\n* Dask\n    * distributed tasks\n    * Can be executed locally or on a cluster\n* Look for an existing package\n    * **resist the urge to reinvent the wheel**\n\nhttps://www.youtube.com/watch?v=zQeYx87mfyw\n\n## [Justin Crown - \"WHAT IS THIS MESS?\" - Writing tests for pre-existing code bases - PyCon 2018](https://www.youtube.com/watch?v=LDdUuoI_lIg)\n\nThis was a great talk about not only test driven development on existing code bases, but how to be a good steward of code.  Justin talks about how to clean up an existing code base, and leave it better than you found it.  Start by improving the parts that you touch, write tests, and improve docstrings whenever you make a change to a particular feature.  As you clean up the code base and it matures consider taking a sprint day to write tests and imporove documentation.  Doing it after you have familiarity with the project will make it much easier to do.  You will also improve your understanding of the parts that you have not touched along the way.\n\nOne of the biggest takeaways that I heard in this talk, was do not assume that last person to touch the code was any less than yourself.  They likely did what they did for a reason, so before you have strong test coverage accross the project take it easy with rewriting everything they did, and only make the necessary changes.  Your changes could have an impact on other parts of the code base that you are not familiar with.\n\nhttps://.youtube.com/watch?v=zQeYx87mfyw\n\n\n## [Jason Huggins - Keynote ](https://www.youtube.com/watch?v=q-x7jK72E6E)\n\nJason had a great talk about teaching kids to code through his experiences with First Lego League.  He found that the event has the best of intentions, but does lend itself to schools with a larger budget that is able to order many different kits.  He has found himself deep down a rabbit hole of finding an affordable alternative that can be done with the inexpensive raspbery pi zero, and controlled  with the cheapest tablets.  He is currently working on a programming language called wildcard, that can be programmed with paper.  This really reminds me of a game that I play with my 5 year old son [Robot Turtles](https://www.robotturtles.com).  He really likes to play it.  I will definitely be following this project to see if this is something that I can do with him when its ready.\n\nhttps://www.youtube.com/watch?v=q-x7jK72E6E\n\n## [Dan Callahan - Keynote - PyCon 2018](https://www.youtube.com/watch?v=ITksU31c1WY)\nI was a bit sad when I was looking through the list of PyCon 2018 talks and did not see anything that appeared to talk about web assembly, but hidden in Dan Callagan's keynote was a great story about web assembly and what it means to python.  Dan's keynote was a great story about using the best tools available to you.  He goes back to his childhood where he programmed in basic because thats what he could take with him away from the desktop on his TI-82.  In modern times we have so many platforms other than desktop, and new ones comming out so frequently that its impossible to see what the next one will be.  There are even computers in refrigerators today.  The one thing that seems to be common is that they all have a web browser.  With that we can write web apps with python, but we are still missing the JavaScript dominated client side story.  Dan shows that this is changing with web assembly.  He showed examples where Autodesk compiled Autocad to wasm, and can run it in the browser!!  He showed versions of windows 3 running completely inside of firefox.  While it is currenly not realistic to compile python to web assembly as it creates large file sizes, it is possible and he sees a bright future for python in the browser.\n\n\nhttps://www.youtube.com/watch?v=ITksU31c1WY\n\n## [Alex Petralia - Analyzing Data: What pandas and SQL Taught Me About Taking an Average](https://www.youtube.com/watch?v=DlgG0QdrqAU)\n\n\nAsks the right questions before writing the first line of code.  Even the simplest questions such as averages have many possible pitfalls along the way.  Alex discusses how to prepare your data before averaging in this talk.  He brings some new _\"Jargon\"_ .  I am not sure that this jargon made this any easier for me to understand or discuss.  It may take some time for this one to sink in to become effective.  I feel like using plain english is more effective as it is more easily understood by anyone.  \"find the **daily** average **sales** by **seller**\"\n### Jargon\n**Collapsing key:**\n* the collapsed/aggregated data relevant to this analysis\n* _we are overriding the primary key (i.e. what a table defines as an observation)_\n* the original number of rows\n\n**Grouping key:** the key defining a group**\n* _eg. \"for each Seller\" is (seller), \"for each Country and city is (Country, City)_\n* this defines how many rows are in the result\n\n** Obvervation key: a unit of observation for this analysis**\n* _eg. \"daily average\" is (Date), \"across regions\" is (Region)_\n* this defines how many rows are in the denominator\n\n### Formula\nCollapsing Key - Grouping Key = Observation Key\n\n### Example Question\nCalculate the Average Daily Sales for each Seller.\n\n**Collapsing Key:** (Date, Seller)\n**Grouping Key:** (Seller)\n**Observation Key:** (Date)\n\n### data set\n\n| id | Date    | Seller | ApplesSold |\n|----|---------|--------|------------|\n| 1  | Monday  | Mary   | 5          |\n| 1  | Monday  | Bob    | 4          |\n| 1  | Tuesday | Bob    | 8          |\n| 1  | Thursday| Jane   | 10         |\n| 1  | Thursday| Jane   | 6          |\n\n### SQL Example\n```SQL\nSELECT\n    Seller,\n    AVG(total)\nFROM (\n    SELECT\n       DATE,\n       SELLER,\n       SUM(ApplesSold) AS total\n    FROM\n       Apples\n    GROUP BY\n       DATE,\n       SELLER -- Collapsing Key\n    ) as t\nGROUP BY\n    Seller -- Grouping Key\n\n\n```\n### Pandas Example\nI am interested in trying out this technique of using the second groupby.  I typically use an unstack instead, but that relies on having the order of the Collapsing key correct.\n```python\n(pd\n    .groupby(['Date', 'Seller']) # Collapsing Key\n    ['ApplesSold']\n    .sum()\n    .groupby(level='Seller') # Grouping Key\n    .mean()\n    )\n```\n\n\nhttps://www.youtube.com/watch?v=DlgG0QdrqAU\n\n## [Devishi Jha - Teaching Python 101 - PyCon 2018](https://www.youtube.com/watch?v=s36GwDng904&t=1113s)\n\nI was really impresssed by the professional level of presentation from Devishi from such a young age!  She had a great talk about teaching python to young people.  This talk really resonated with me as a father of two young children. She was advocating for python to be taught more frequently and earlier in schools.  In her opion onece students have a basic grasp of algebra they should be starting to use python over a higher level abstraction like scratch.  She also advocated that on the other Java tends to make computer science unaproachable and too difficult for students.  It is too large of a jump and tends to steer students away.\n\nhttps://www.youtube.com/watch?v=s36GwDng904\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-update-user'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Update Git User</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/symlink-gallery'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create a Virtual File Gallery with Symlinks</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-05-12", "category": "Blog", "summary": "These are my notes from pycon 2018 videos.  I love the python community and especially the conference talks.  This year I am going to take some notes from my favorite talks and post them here.", "edit_link": "https://github.com/edit/main/pages/blog/pycon-2018-roundup.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574278", "datetime": "2018-05-12 00:00:00+00:00", "slug": "pycon-2018-roundup", "jinja": false, "output_html": "markout/pycon-2018-roundup/index.html", "long_description": "These are my notes from pycon 2018 videos.  I love the python community and especially the conference talks.  This year I am going to take some notes from my favorite talks and post them here. This is an  Vectorize with Numpy Looping in python can be", "super_description": "These are my notes from pycon 2018 videos.  I love the python community and especially the conference talks.  This year I am going to take some notes from my favorite talks and post them here. This is an  Vectorize with Numpy Looping in python can be slow Use specialized data structures. scipy.spacial pandas xarray scipy.sparse sparse package scipy.sparce.csgraph Cython Add types Numba jit Fortran Like Speed heavy dependencies Dask distributed tasks Can be executed locally or on a cluster Look f", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c310>, next=<frontmatter.Post object at 0x7f345064c100>)"}, {"cover": "", "title": "Update Git User", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-update-user.md", "description": "This morning I log into my VCS and check activity on my projects to find that  Clone the repo, note it must be a  Curl down the  Run the script, and push the up", "content": "This morning I log into my VCS and check activity on my projects to find that **someone else** has been _very_ active on my projects fo the last few weeks. I quicklyhover over the missing avatar to find that **It's Me**.  What's wrong here, why do I look like two different people throughout the day!  upon further investigation I see the issue.  while setting up a new terminal environment I mistyped my email address by **one character**.  After much searching and a few failed attempts I was able to fix it by following an article no longer available (2021) from https://help.github.com/articles.\n\n \n## Bare Clone\n\nClone the repo, note it must be a `--bare` clone.\n\n``` bash\ngit clone --bare https://github.com/user/repo.git\ncd repo.git\n```\n \n## git-author-rewrite\n\nCurl down the `git-author-rewrite` script and edit the following variables `OLD_EMAIL` `CORECT_NAME` `CORRECT_EMAIL`\n\n``` bash\ncurl https://gist.githubusercontent.com/octocat/0831f3fbd83ac4d46451/raw/c197afe3e9ea2e4218f9fccbc0f36d2b8fd3c1e3/git-author-rewrite.sh > git-author-rewrite.sh\n```\n\nRun the script, and push the updates.\n\n\n``` bash\nbash git-author-rewrite.sh\ngit push --force --tags origin 'refs/heads/**'\n```\n\n## Cleanup\n\nDelete the `--bare` repo from your local machine.\n```bash\ncd ..\nrm -rf repo.git\n```\n\nI hope this helps someone, or future me who needs to fix their information in git.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/github-actions-syntax'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Getting Started with GitHub Actions</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-rewrite-history/git-rewrite-history'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Rewrite History with Git</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-21", "edit_link": "https://github.com/edit/main/pages/blog/git-update-user.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574284", "datetime": "2019-01-21 00:00:00+00:00", "slug": "git-update-user", "jinja": false, "output_html": "markout/git-update-user/index.html", "long_description": "This morning I log into my VCS and check activity on my projects to find that  Clone the repo, note it must be a  Curl down the  Run the script, and push the updates. Delete the  I hope this helps someone, or future me who needs to fix their informat", "super_description": "This morning I log into my VCS and check activity on my projects to find that  Clone the repo, note it must be a  Curl down the  Run the script, and push the updates. Delete the  I hope this helps someone, or future me who needs to fix their information in git.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f28e0>, next=<frontmatter.Post object at 0x7f345065eaf0>)"}, {"cover": "", "title": "Custom Kedro Logger", "tags": ["kedro", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/custom-kedro-logger.md", "description": "DRAFT -", "content": "DRAFT - \n\n\n\n``` yaml\nformatters:\n    mine:\n        format: \"%(asctime)s - %(name)s - %(levelname)s - %(message)s - %(me)s\"\n\nhandlers:\n\n    mine_handler:\n        class: logging.StreamHandler\n        level: INFO\n        formatter: mine\n        stream: ext://sys.stdout\n\nloggers:\n    me:\n        level: DEBUG\n        handlers: [mine_handler]\n\nroot:\n    level: INFO\n    handlers: [console, info_file_handler, error_file_handler]\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gatsby-rss-feed'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>RSS feed for your Gatsby Site</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-update-user'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Update Git User</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-05-02", "edit_link": "https://github.com/edit/main/pages/blog/custom-kedro-logger.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574292", "datetime": "2021-05-02 00:00:00+00:00", "slug": "custom-kedro-logger", "jinja": false, "output_html": "markout/custom-kedro-logger/index.html", "long_description": "DRAFT -", "super_description": "DRAFT -", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c8b0>, next=<frontmatter.Post object at 0x7f345064c310>)"}, {"cover": "", "title": "RSS feed for your Gatsby Site", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/gatsby-rss-feed.md", "description": "Add an rss feed to your Gatsby Site", "content": "Adding an rss feed to your gatsby js site is super simple.\n\nhttps://www.gatsbyjs.org/packages/gatsby-plugin-feed/\n\n\n## Install\n\n``` bash\nnpm install --save gatsby-plugin-feed\n```\n\n## How to use\n``` javascript\n// In your gatsby-config.js\nmodule.exports = {\n  plugins: [\n    {\n      resolve: `gatsby-plugin-feed`,\n      options: {\n        query: `\n          {\n            site {\n              siteMetadata {\n                title\n                description\n                siteUrl\n                site_url: siteUrl\n              }\n            }\n          }\n        `,\n        feeds: [\n          {\n            serialize: ({ query: { site, allMarkdownRemark } }) => {\n              return allMarkdownRemark.edges.map(edge => {\n                return Object.assign({}, edge.node.frontmatter, {\n                  description: edge.node.excerpt,\n                  date: edge.node.frontmatter.date,\n                  url: site.siteMetadata.siteUrl + edge.node.fields.slug,\n                  guid: site.siteMetadata.siteUrl + edge.node.fields.slug,\n                  custom_elements: [{ \"content:encoded\": edge.node.html }],\n                })\n              })\n            },\n            query: `\n              {\n                allMarkdownRemark(\n                  sort: { order: DESC, fields: [frontmatter___date] },\n                ) {\n                  edges {\n                    node {\n                      excerpt\n                      html\n                      fields { slug }\n                      frontmatter {\n                        title\n                        date\n                      }\n                    }\n                  }\n                }\n              }\n            `,\n            output: \"/rss.xml\",\n            title: \"Your Site's RSS Feed\",\n            // optional configuration to insert feed reference in pages:\n            // if `string` is used, it will be used to create RegExp and then test if pathname of\n            // current page satisfied this regular expression;\n            // if not provided or `undefined`, all pages will have feed reference inserted\n            match: \"^/blog/\",\n            // optional configuration to specify external rss feed, such as feedburner\n            link: \"https://feeds.feedburner.com/gatsby/blog\",\n          },\n        ],\n      },\n    },\n  ],\n}\n```\n\n## My updated graphql query\n\n\n``` graphql\n{\n\tallMarkdownRemark(\n\t\tsort: { order: DESC, fields: [frontmatter___date] }\n\t\tfilter: {\n\t\t\tfrontmatter: {\n\t\t\t\ttemplateKey: { in: [\"blog-post\"] }\n\t\t\t\tstatus: { in: [\"published\"] }\n\t\t\t}\n\t\t}\n\t) {\n\t\tedges {\n\t\t\tnode {\n\t\t\t\texcerpt\n\t\t\t\trawMarkdownBody\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tdate\n\t\t\t\t\tcover {\n\t\t\t\t\t\trelativePath\n\t\t\t\t\t}\n\t\t\t\t\ttwitter_cover {\n\t\t\t\t\t\trelativePath\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/drawing-ascii-boxes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>drawing ascii boxes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/custom-kedro-logger'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Custom Kedro Logger</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-21", "edit_link": "https://github.com/edit/main/pages/blog/gatsby-rss-feed.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574298", "datetime": "2020-01-21 00:00:00+00:00", "slug": "gatsby-rss-feed", "jinja": false, "output_html": "markout/gatsby-rss-feed/index.html", "long_description": "Adding an rss feed to your gatsby js site is super simple. https://www.gatsbyjs.org/packages/gatsby-plugin-feed/", "super_description": "Adding an rss feed to your gatsby js site is super simple. https://www.gatsbyjs.org/packages/gatsby-plugin-feed/", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c790>, next=<frontmatter.Post object at 0x7f3452820df0>)"}, {"cover": "", "title": "drawing ascii boxes", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/drawing-ascii-boxes.md", "description": "I always struggle to find a good reference of ascii characters.  This is a compilation of my most wanted ascii characters.", "content": "When creating cli's I often want some nice full-width character.  I find it tough to find them, and when I do half the time it is an image or something that cannot be copied \ud83d\udc7f.\n\nI rarely get very complex with my semi-manual ASCII art.  I can do 98% of what I need with bars and corners.  Using some simple full-width characters can really give your cli a nice clean look.\n\n## Example\n\nI'd say 50% of what I need is just a full-width horizontal bar to give some visual flair or separation.\n\n![](https://images.waylonwalker.com/fw-bar-print.png)\n\n## Bars\n\n``` bash\n\u2015 \u237d \u23b8 \u23b9 \u2423 \u2500 \u2501 \u2502 \u2503\n```\n\n## Square Corners\n\n``` bash\n\u250c \u250d \u250e \u250f \u2510 \u2511 \u2512 \u2513 \u2514 \u2515 \u2516 \u2517 \u2518 \u2519 \u251a \u251b\n```\n\n## Round Corners\n\n``` bash\n\u256d \u256e \u256f \u2570 \u2571 \u2572 \u2573\n```\n\n## Harpoons\n\n``` bash\n \u20d1 \u20ec \u20ed \u21bc \u21bd \u21be \u21bf \u21c0 \u21c1 \u21c2 \u21c3 \u21cb \u21cc \u294a \u294b \u294c \u294d \u294e \u294f \u2950 \u2951 \u2952 \u2953 \u2954 \u2955 \u2956 \u2957 \u2958 \u2959 \u295a \u295b \u295c \u295d \u295e \u295f \u2960 \u2961 \u2962 \u2963 \u2964 \u2965 \u2966 \u2967 \u2968 \u2969 \u296a \u296b \u296c \u296d \u296e \u296f\n```\n\n## Double Boxes\n\n``` bash\n\u2550 \u2551 \u2552 \u2553 \u2554 \u2555 \u2556 \u2557 \u2558 \u2559 \u255a \u255b \u255c \u255d \u255e \u255f \u2560 \u2561 \u2562 \u2563 \u2564 \u2565 \u2566 \u2567 \u2568 \u2569 \u256a \u256b \u256c\n```\n\n## Dashed Boxes\n\n``` bash\n\u2504 \u2505 \u2506 \u2507 \u2508 \u2509 \u250a \u250b\u254c \u254d \u254e \u254f\n```\n\n## Connectors\n\n``` bash\n\u251c \u251d \u251e \u251f \u2520 \u2521 \u2522 \u2523 \u2524 \u2525 \u2526 \u2527 \u2528 \u2529 \u252a \u252b \u252c \u252d \u252e \u252f \u2530 \u2531 \u2532 \u2533 \u2534 \u2535 \u2536 \u2537 \u2538 \u2539 \u253a \u253b \u253c \u253d \u253e \u253f \u2540 \u2541 \u2542 \u2543 \u2544 \u2545 \u2546 \u2547 \u2548 \u2549 \u254a \u254b\n```\n\n## Others\n\n``` bash\n\u2610 \u2611 \u2612 \u2acd \u2ace \u2bb9 \u2bbd \u2e86 \u2f0c \u2f10 \u2f15\n```\n\n## Arrows\n\n``` bash\n \u2190 \u2191 \u2192 \u2193 \u2194 \u2195 \u2196 \u2197 \u2198 \u2199 \u219a \u219b \u219c \u219d \u219e \u219f \u21a0 \u21a1 \u21a2 \u21a3 \u21a4 \u21a5 \u21a6 \u21a7 \u21a8 \u21a9 \u21aa \u21ab \u21ac \u21ad \u21ae \u21af \u21b0 \u21b1 \u21b2 \u21b3 \u21b4 \u21b5 \u21b6 \u21b7 \u21b8 \u21b9 \u21ba \u21bb \u21c4 \u21c5 \u21c6 \u21c7 \u21c8 \u21c9 \u21ca \u21cd \u21ce \u21cf \u21d0 \u21d1 \u21d2 \u21d3 \u21d4 \u21d5 \u21d6 \u21d7 \u21d8 \u21d9 \u21da \u21db \u21dc \u21dd \u21de \u21df \u21e0 \u21e1 \u21e2 \u21e3 \u21e4 \u21e5 \u21e6 \u21e7 \u21e8 \u21e9 \u21ea\n```\n\n## Rounded Box\n\n``` bash\n\u256d\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u256e\n\u2502                  \u2502\n\u2502                  \u2502\n\u2502                  \u2502\n\u2570\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u256f\n```\n\n## Resources\n\nAs I was putting this together I stumbled accross a good site to find ascii characters and copy them.\n[Unicode Full-Width Characters](https://xahlee.info/comp/unicode_full-width_chars.html)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/edit-on-github'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Edit On GitHub</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/dotfile-rice-challenge-intro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>30 days dotfile ricing</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-12", "edit_link": "https://github.com/edit/main/pages/blog/drawing-ascii-boxes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574304", "datetime": "2020-05-12 00:00:00+00:00", "slug": "drawing-ascii-boxes", "jinja": false, "output_html": "markout/drawing-ascii-boxes/index.html", "long_description": "When creating cli I rarely get very complex with my semi-manual ASCII art.  I can do 98% of what I need with bars and corners.  Using some simple full-width characters can really give your cli a nice clean look. I As I was putting this together I stu", "super_description": "When creating cli I rarely get very complex with my semi-manual ASCII art.  I can do 98% of what I need with bars and corners.  Using some simple full-width characters can really give your cli a nice clean look. I As I was putting this together I stumbled accross a good site to find ascii characters and copy them.", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c1f0>, next=<frontmatter.Post object at 0x7f3450696430>)"}, {"cover": "", "title": "pipx examples", "tags": ["python", "linux", "cli"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/pipx-examples.md", "description": "prev Uses next drawing ascii boxes", "content": "## count lines of code\n\n``` bash\npipx run pygount markata\npipx run pygount markata --format=summary\npipx run pygount markata --suffix=cfg,py,yml\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/uses'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Uses</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/drawing-ascii-boxes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>drawing ascii boxes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-07", "edit_link": "https://github.com/edit/main/pages/blog/pipx-examples.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574310", "datetime": "2022-01-07 00:00:00+00:00", "slug": "pipx-examples", "jinja": false, "output_html": "markout/pipx-examples/index.html", "long_description": "", "super_description": "", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064cf70>, next=<frontmatter.Post object at 0x7f345064c790>)"}, {"cover": "", "title": "Uses", "tags": ["meta"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/uses.md", "description": "This is a listing of all the things that I use on a daily basis to build data Everything installed on my machines is done through ansible-playbooks.  It I run U", "content": "This is a listing of all the things that I use on a daily basis to build data\npipelines, lead my team, and build this website.\n\n\n## Installation\n\nEverything installed on my machines is done through ansible-playbooks.  It's\nbeen a long transformation to get here, but its so satisfying to boot a brand\nnew system, run a single command a have every single thing cofigured exactly to\nmy liking.\n\n\n``` bash\n# GET is available by default on Ubuntu\nGET waylonwalker.com/bootstrap | bash\n\n# For debian based systems without GET by default\nsudo apt install curl\ncurl -F https://waylonwalker.com/bootstrap | bash\n```\n\n## OS\n\nI run Ubuntu, it works well for me without too much fuss.  For me the\ndistribution does not really matter too much, I'm more interested in what's\ninside.\n\n## Window Manager\n\nI use awesome wm.  Awesome is a tiling window manager that alows me to navigate\nthrough 9 workspaces (technically called tags in awesomewm). I can script out\ncertain applications to open in a certain tag, move it to different tags, and\njoin tags super easy.  I really dont see myself going back to a floating window\nmanager where you have to place all your windows with the mouse by hand.  This\nis probably one of the biggest selling points for me to move to a Linux\ndesktop.\n\n## Terminal\n\n### gnome-terminal\n\nFor the longest time I just used\n[gnome-terminal](https://help.gnome.org/users/gnome-terminal/stable/).  It\nworks, for the most part it gets out of the way and lets me do what I want.  I\njust want a terminal that runs tmux properly, runs without titltbars or\nscrollbars, and lets me theme it without much effort.\n\n### kitty\n\n[Kitty](https://sw.kovidgoyal.net/kitty/) is my main terminal, these days, it's\nnice, its easy to configure how I want it, but most of its fancier features do\nnot work inside of tmux.  It does render incredibly fast, If I accidently cat\nout a massive file, it typically just handles it, compared to other terminals\nthat will be printing for 30s or so.\n\n### Windows Terminal\n\nWhen I am on a windows terminal I use the _new_\n[Terminal](https://github.com/microsoft/terminal).  It's a massive improvement\nover any other terminal that I have ever tired on windows.  Text looks good,\nthe built in themese look good, I use the One-Half-Dark Theme, and the built in\nCascadia Code font.  Also things like system clipboards, copy, and paste just\nseem to work better, and integrate well with wsl.\n\n![My Windows Terminal from may 2022](https://images.waylonwalker.com/Windows-Terminal-0522.webp)\n\n## Shell\n\nThe shell is the interpreter that interprets the commands that you send to it\nfrom the command line, unlike the terminal that displays the text.\n\n### zsh\n\nI use [zsh](https://www.zsh.org/) as my shell of choice.  I don't run\noh-my-zsh, I just need a few plugins for things like\n[autosuggestions](https://github.com/zsh-users/zsh-autosuggestions)\n[syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)\n[history-substring-search](https://github.com/zsh-users/zsh-history-substring-search).\n\n\n## Tmux\n\n## Text Editor\n\n## Presentation / Slides\n\n## Video Recording / Streaming\n\n## Video Editing\n\n## pager\n\n## Image Editor\n\n## Virtual Environments\n\n## node\n\n\n---\n\n## Desk\n\n## Monitor\n\n## Keyboard\n\n## Desktop PC\n\n## Keyboard\n\n## Microphone\n\n## Audio Interface\n\n## Headphones\n\n## Chair\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-targeted-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux targeted session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/pipx-examples'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pipx examples</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-20", "edit_link": "https://github.com/edit/main/pages/blog/uses.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574316", "datetime": "2021-11-20 00:00:00+00:00", "slug": "uses", "jinja": false, "output_html": "markout/uses/index.html", "long_description": "This is a listing of all the things that I use on a daily basis to build data Everything installed on my machines is done through ansible-playbooks.  It I run Ubuntu, it works well for me without too much fuss.  For me the I use awesome wm.  Awesome ", "super_description": "This is a listing of all the things that I use on a daily basis to build data Everything installed on my machines is done through ansible-playbooks.  It I run Ubuntu, it works well for me without too much fuss.  For me the I use awesome wm.  Awesome is a tiling window manager that alows me to navigate For the longest time I just used When I am on a windows terminal I use the  The shell is the interpreter that interprets the commands that you send to it I use ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064cd30>, next=<frontmatter.Post object at 0x7f345064c9d0>)"}, {"cover": "", "title": "tmux targeted session", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-targeted-session.md", "description": "https://youtu.be/5KE7Il7SOEk This is something that I made up but use every single day, this is what keeps https://waylonwalker.com/tmux-new-session/ This one i", "content": "https://youtu.be/5KE7Il7SOEk\n\nThis is something that I made up but use every single day, this is what keeps\nmuch of what is on my blog or my teams private work wiki going.  I have a few\nvery important directories that I have assigned directly to a hotkey for fast\nsession switching.\n\n``` bash\nbind -n M-i new-session -A -s waylonwalker_com \"cd ~/git/waylonwalker.com/ && nvim\"\nbind i popup -E -h 95% -w 95% -x 100% \"tmux new-session -A -s waylonwalker_com 'cd ~/git/waylonwalker.com/ && nvim'\"\nbind -n M-I popup -E \"tmux new-session -A -s waylonwalker_com 'cd ~/git/waylonwalker.com/ && nvim'\"\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-new-session/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-new-session-og_250x140.png\" alt=\"article cover for \n tmux new-session\n\"/>\n          <p><strong>\n tmux new-session\n</strong></p>\n      </a>\n  </div>\n\n\n> This one is building off of yeserday's new-session post, make sure you check that one out as well.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-zoom'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux zoom</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-ta'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux ta</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-02", "edit_link": "https://github.com/edit/main/pages/blog/tmux-targeted-session.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574322", "datetime": "2021-08-02 00:00:00+00:00", "slug": "tmux-targeted-session", "jinja": false, "output_html": "markout/tmux-targeted-session/index.html", "long_description": "https://youtu.be/5KE7Il7SOEk This is something that I made up but use every single day, this is what keeps https://waylonwalker.com/tmux-new-session/ This one is building off of yeserday https://waylonwalker.com/tmux-nav-2021/ for more information on", "super_description": "https://youtu.be/5KE7Il7SOEk This is something that I made up but use every single day, this is what keeps https://waylonwalker.com/tmux-new-session/ This one is building off of yeserday https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679160>, next=<frontmatter.Post object at 0x7f34506a1c10>)"}, {"cover": "", "title": "Realistic Git Workflow", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/realistic-git-workflow.md", "description": "My git workflow based on real life.  Its  not always clean and simple. As complicated as that seems it is pretty straight forward.  When you sit down to work th", "content": "My git workflow based on real life.  Its  not always clean and simple.\n\n_sometimes things get messy_\n\n## The Clean Path\n\n![](https://images.waylonwalker.com/akira-hojo-652732-unsplash.jpg)\n\n**pull \ud83d\udc49 branch \ud83d\udc49 format \ud83d\udc49 work\ud83d\udc49 add \ud83d\udc49 commit \ud83d\udc49 pull \ud83d\udc49 rebase \ud83d\udc49 push**\n\n<iframe src='./clean' height=400 width=800 frameborder=None, >\n\n### Pull\n\nAs complicated as that seems it is pretty straight forward.  When you sit down to work the first thing you do is to **pull** down the teams latest working \"develop\" branch from git.\n\n    git checkout develop\n    git pull\n\n### Branch\n\nNext create a new branch with a name that will remind you of what you are working on.  For your own sanity choose something descriptive. It is easy to get too many similar branches going and forget which branch is which.\n\n    git checkout -b ingest_product_id_table\n\n### Format\n\nIf you know which files in existance that you will be editing before you start work it is a good idea to format them in a commit early on to keep your working commits separate from formatting.  This will make it easier for reviewers to distinguish from your changes and formatting fixes.\n\nIf your team agrees to a consistent formatting logic, sticks to it and always remembers to run the linting/fixing tools you should not have anything to  change.  But thats not what this post is about, its about the real world.  People forget to run linters, some don't care, some may not even be aware of the teams formatting guidelines.  Talk to your team about these things and get on the same page.\n\nI care about formatting, we all should.  We want to put out the best work we can in  our craft.  Realistically though I dont really care about nit picky stuff, I just want things consistant so that it makes things easier to read without me taking the time to swap  out quotes, and fix line spacing. I want a tool to do it for me, and when that tool runs I dont want it mixing in the same commit as my work.\n\n    black .\n    git add .\n    git commit -m \"FIX formatted with black\"\n\n### Work\n\nMake your changes to your code, test them, document them, clean it up, do what you do best.\n\n### add and commit\n\nNext you will need to stage files that have changed for commit, and commit them.  This can be done in stages to make it clear what the progression was to finish the task you were assigned.\n\n**add all files**\n\n        git add .\n\n**add a single file**\n\n    git add \"path/to/myfile.ext\"\n\n**one line commit message**\n\nHere make sure that you create clear messages so that others know.  There are whole posts out there showing how to better write clear commit messages and why you should, check out those posts for more information.\n\n    git commit -m \"FEAT ingested product id table on pipeline\"\n\n**multi-line commit message**\n\nIf you want some more information in your commit message run `git commit` without `-m` and it will pop you into your configured git editor, which is vim by default.\n\n### Super quick vim primer\n\nBy default when you run `git commit` you will pop into a vim editor and may want to throw your keyboard before you figure out exactly how to get out of the damn thing.  First type `i` to insert text.  Type out your commit message. Then hit `esc` followed by `:x`.  This is the most basic things you need, and will get you through a commit message.  Vim is a whole topic on its own.\n\n### Integrate your changes\n\nNow that you have made your changes and commited them its time to integrate them into the codebase so that everyone else can see them.  It is likely that time has gone by, and others have made changes to the codebase since you have, so you will want to pull those down first then switch back to your branch.\n\n    git checkout develop\n    git pull\n    git checkout ingest_product_id_table\n\nNow you have the latest code changes and your work locally.  I prefer to rebase my work with the develop branch, pretending that I started my work after all of the other changes had occurred.  You can choose to merge, but I prefer not to have the extra merge commits in my PR.\n\n    git rebase develop\n\n### push\n\nNow its time to push out to the remote repository and create your PR.\n\n    git push --set-upstream ingest_product_id_table\n\nOpen your repository in your web browser and you should see that you have just pushed to a new branch and a  button to open a Pull Request (PR).\n\n### Your Not Done yet\n\nOpening a PR is not a done deal, it starts the conversation to get your code approved to be merged into the develop or main branch.  Your approver may have an idea to clean it up to make it more readable/maintainable, or something to make it more performant.  Remember that a second set of eyes sometimes has a new set of clarity that you do not as you have seen the work from start to end.  At this point they may request changes, discussion, or choose to accept and merge it in.\n\n## Realistically\n\n_We all hit some pitfalls along the way_\n\n![](https://images.waylonwalker.com/ian-espinosa-177961-unsplash.jpg)\n\nThings get dirty, the clean path is not always the path that is taken, but with git we can clean up our mess and make it look that way.\n\n## I started working from main/develop before branching\n\n_Pitfall #1_\n\nThis is my most common pitfall.  I get really excited to start work and jump right in.  Then when I go to make some commits I see that `main` branch staring me right in the face from my bash prompt.\n\n**stash those changes away**\n\n    git stash\n    git checkout -b feature_branch\n    git stash pop\n\n**want to see what changes you have stashed away**\n\n    git stash list\n\n## I committed to the wrong branch\n\n_Pitfall #2_\n\n**Create a new branch**\n_Solution #1_\n\nIt is common that I just forget to switch from the main/develop branch into my feature branch before starting work. You will first need to look at your `git log` and determine how many commits to go back or a git hash to go back to.\n\n\n**CAUTION** `git reset --hard` will kill changes and you will never get them back if you did not first put them somewhere.  I myself have been burned by this command, there is no recovering from a **hard** reset.\n\n\n    git log\n    # note commit hash or ~n to go back to\n    git branch feature_branch\n    git reset --hard HEAD ~3\n    # or\n    git reset --hard a1b2c4d4\n\n**Move to an Existing Branch**\n\nSometimes when juggling many different features we are in the middle of several branches and forget to switch between them.  If its the case that you already have a `feature_branch` for the feature that you are working on, you can use this solution.\n\n    git status\n    # note current_branch\n    git checkout feature_branch\n    git merge current_branch\n    git reset --hard HEAD ~3\n    # or\n    git reset --hard a1b2c4d4\n\n\n## Another feature was complete before mine\n_pitfall #3_\n\nThis can be a big matter of preference of how to deal with this just google `merge` vs `rebase`.  For this particular pitfall I prefer to **`rebase`**.  When you look at the git log and commit history it will appear as if you made your changes after everyone else made theirs.  I do this to clean up the PR and make it easier for the approver to read.  There will be less merge commits, and less history to try to understand.\n\n**Before pushing to the remote repository**\n\n```bash\ngit fetch --all\n# or\ngit checkout develop\ngit pull\ngit checkout feature_branch\n# then\ngit rebase develop\n```\n\n**if its your first rodeo** or you are unsure how the rebase will go you can create a safty branch.\n\n```bash\ngit branch saftey_feature_branch\ngit fetch --all\ngit rebase develop\ngit branch -D safety_feature_branch # deletes safety_feature_branch\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reasons-to-kedro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>reasons-to-kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reading-list'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Reading List</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-05-27", "edit_link": "https://github.com/edit/main/pages/blog/realistic-git-workflow.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574328", "datetime": "2019-05-27 00:00:00+00:00", "slug": "realistic-git-workflow", "jinja": false, "output_html": "markout/realistic-git-workflow/index.html", "long_description": "My git workflow based on real life.  Its  not always clean and simple. As complicated as that seems it is pretty straight forward.  When you sit down to work the first thing you do is to  Next create a new branch with a name that will remind you of w", "super_description": "My git workflow based on real life.  Its  not always clean and simple. As complicated as that seems it is pretty straight forward.  When you sit down to work the first thing you do is to  Next create a new branch with a name that will remind you of what you are working on.  For your own sanity choose something descriptive. It is easy to get too many similar branches going and forget which branch is which. If you know which files in existance that you will be editing before you start work it is a", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658430>, next=<frontmatter.Post object at 0x7f345066c4c0>)"}, {"cover": "", "title": "Using Nix to manage my Python Interpreter", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/nix-python-interpreter.md", "description": "I recently started playing with nix. automatically select correct python version per project activating one doesn https://search.nixos.org/", "content": "I recently started playing with nix.\n\n## goals\n\n* automatically select correct python version per project\n* activating one doesn't bleed into the other\n\n\n\n## Installing nix\n\n``` bash\ncurl -L https://nixos.org/nix/install | sh\n```\n\n## controlling nix-env\n\n``` bash\nnix-env -iA nixpkgs.python310\nnix-env -iA nixpkgs.python39\nnix-env -iA nixpkgs.python38\nnix-env -iA nixpkgs.python37\n```\n\n## searching for packages\n\nhttps://search.nixos.org/\n\n```\nnix-env -qaP .\\*python.\\*\n```\n\n``` bash\nnix search nixpkgs python\n```\n\n## shell\n\n```\nnix-shell -p python39\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/brainstorming-kedro-hooks'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Brainstorming Kedro Hooks</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/realistic-git-workflow'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Realistic Git Workflow</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-14", "edit_link": "https://github.com/edit/main/pages/blog/nix-python-interpreter.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574334", "datetime": "2021-11-14 00:00:00+00:00", "slug": "nix-python-interpreter", "jinja": false, "output_html": "markout/nix-python-interpreter/index.html", "long_description": "I recently started playing with nix. automatically select correct python version per project activating one doesn https://search.nixos.org/", "super_description": "I recently started playing with nix. automatically select correct python version per project activating one doesn https://search.nixos.org/", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064cc40>, next=<frontmatter.Post object at 0x7f3450652430>)"}, {"cover": "", "title": "Brainstorming Kedro Hooks", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/brainstorming-kedro-hooks.md", "description": "This post is a \ud83e\udde0 branstorming work in progress.  I will likely use it as a If you are completely unsure what kedro is be sure to check out my  filepath replacer", "content": "This post is a \ud83e\udde0 branstorming work in progress.  I will likely use it as a\nstorage location/brain dump of hook ideas.\n\n> ### What is Kedro \ud83e\udd14\n>\n> If you are completely unsure what kedro is be sure to check out my [what is kedro](https://waylonwalker.com/wike) post\n\n## after_catalog_created\n\n* filepath replacer\n* bucket replacer\n\n## before_pipeline_run\n\n* preflight\n* check that data exists\n* run `kedro_static_viz`\n* run mypy\n* run interrogate\n* run flake8\n\n## after_pipeline_run\n\n* Great Expectations\n* send email\n* send slack\n\n## before_node_run\n\n## after_node_run\n\n* Great Expectations\n* save stats/meta data\n*\n\n## Execution Order\n\nhooks are executed in reverse order of the hooks list.\n\nhooks with `tryfirst` will be moved to the end of the list\nhooks with `trylast` will be moved to the end of the list\n\n1. after_catalog_created\n2. before_pipeline_run\n\n* args\n  * run_params = run_params = {'run_id': '2020-05-23T15.24.23.958Z', 'project_path': '/mnt/c/temp/kedro0160', 'env': 'local', 'kedro_version': '0.15.9', 'tags': (), 'from_nodes': \\[\\], 'to_nodes': \\[\\], 'node_names': (), 'from_inputs': \\[\\], 'load_versions': {}, 'pipeline_name': None, 'extra_params': {}, 'git_sha': None}\n  * pipeline\n  * catalog\n\n1. before_node_run\n2. after_node_run\n3.\n\n## When does data get saved???\n\n* before or after node hook?\n\n## ??Unsure??\n\n* does before  catalog load have access to parameters?\n  * Yes\n*\n\n### \ud83e\udd7e[steel toes](https://github.com/waylonwalker/steel-toes/)\n\n_I was way too excited about this one and already created it_\n\n_prevents pain from stepping on your teammates toes_\n\nKedro is so amazing at promoting collaboration between team members.  Each team member can check out the code, branch, and start work on their own section of the pipeline.  Issues can arrise if the team members section of the pipeline happen to cross.  Breaking changes happen, BREAKS during development happen and can completely kill a teammates workflow.\n\n* is there a way to prevent toe stepping?\n* try to load `filepath_<branch>`\n* if load fails try `filepath`\n* save data to `filepath_<branch>`\n\n**how**\n\n* on after_catalog_load check for existing \"branch\" data\n* if \"branch\" data exists load that\n* otherwise keep default\n*\n\n### Run only nodes that have changed\n\n* store a deephash of functions code\n* store a hash of the inputs\n* if neither code or inputs changed run function, otherwise skip.\n  * How could a hook choose to skip the node?\n\n## Static viz hook\n\nBefore pipeline run\n\n* make site\n* Set node status to queued\n\nBefore node run\n\n* Set running status\n\nAfter node run\n\n* Set running status\n\nOn pipeline error\n\n* Set run status\n\nOn node error\n\n* Set error status\n\nAfter pipeline run\n\n* Set complete status\n\nAfter node run\n\n* set complete\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/break-pane'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux break-pane</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/blogging-for-me'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Blogging For Me</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-22", "edit_link": "https://github.com/edit/main/pages/blog/brainstorming-kedro-hooks.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574343", "datetime": "2020-05-22 00:00:00+00:00", "slug": "brainstorming-kedro-hooks", "jinja": false, "output_html": "markout/brainstorming-kedro-hooks/index.html", "long_description": "This post is a \ud83e\udde0 branstorming work in progress.  I will likely use it as a If you are completely unsure what kedro is be sure to check out my  filepath replacer bucket replacer preflight check that data exists run  run mypy run interrogate run flake8", "super_description": "This post is a \ud83e\udde0 branstorming work in progress.  I will likely use it as a If you are completely unsure what kedro is be sure to check out my  filepath replacer bucket replacer preflight check that data exists run  run mypy run interrogate run flake8 Great Expectations send email send slack Great Expectations save stats/meta data hooks are executed in reverse order of the hooks list. hooks with  after before args run pipeline catalog before after before or after node hook? does before  catalog l", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063bb80>, next=<frontmatter.Post object at 0x7f34506a11f0>)"}, {"cover": "", "title": "kedro replit", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro172_replit.md", "description": "I am trying to see what an embeded replit", "content": "I am trying to see what an embeded replit\n\n<iframe height=\"400px\" width=\"100%\" src=\"https://replit.com/@WaylonWalker/kedro-172?lite=true\" scrolling=\"no\" frameborder=\"no\" allowtransparency=\"true\" allowfullscreen=\"true\" sandbox=\"allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals\"></iframe>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/keep-location-list-closed'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Keep Location List Closed</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-your-first-nodes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Writing your first kedro Nodes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-04-15", "edit_link": "https://github.com/edit/main/pages/blog/kedro172_replit.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574349", "datetime": "2021-04-15 00:00:00+00:00", "slug": "kedro172_replit", "jinja": false, "output_html": "markout/kedro172_replit/index.html", "long_description": "I am trying to see what an embeded replit", "super_description": "I am trying to see what an embeded replit", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652c10>, next=<frontmatter.Post object at 0x7f345069c7c0>)"}, {"cover": "", "title": "Today I learned `git diff feature..main`", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-diff-branches.md", "description": "Sometimes we get a little `git add . && git commit -m \"WIP\"` happy and mistakenly commit something that we just cant figure out.  This is a good way to figure out what the heck has changed on the current branch compared to any other branch.", "content": "Today I learned how to diff between two branches.\n\n```\ngit diff feature..main\n```\n\nSometimes we get a little `git add . && git commit -m \"WIP\"` happy and mistakenly commit something that we just can't figure out. This is a good way to figure out what the heck has changed on the current branch compared to any other branch.\n\n## Example\n\nLet's create a new directory, initialize git and toss some content into a readme.\n\n``` bash\nmkdir git-diff\ngit init\necho \"hello there\" > readme.md\ngit add . && git commit -m \"hello there\"\ncat readme.md\n```\n\nAfter all of that, we have a git repository on our local machine with a single file `readme.md` that contains the following.\n\n``` bash\nhello there\n```\n\n##  Create a branch and \u270d edit\n\nLet's checkout a new branch called Waylon and change the word `there` to `Waylon` in our `readme.md` file, then diff it.\n\n``` bash\ngit checkout -b Waylon\necho \"hello Waylon\" > readme.md\ngit add . && git commit -m \"hello Waylon\"\ngit diff\n```\n\n``` diff\n- hello there\n+ hello waylon\n```\n\nAt this point we have one commit.  Things are really straightforward, and our diff will be the same between the last commit and the main branch since.  Let's make another commit by adding the date.\n\n``` bash\necho \"hello waylon\\n\\n$(date)\" > readme.md\ncat readme.md\ngit diff\n```\n\n``` diff\nhello Waylon\n+\n+ Fri 13 Mar 2020 04:23:21 PM DST\n```\n\ud83d\udc46 At this point, our diff doesn't tell us the whole story between our current state and main, only between our current state and our last commit.  Let's commit our changes and compare our branch to main.\n\n``` bash\ngit add . && git commit -m \"add date\"\ngit diff main..waylon\n```\n\n``` diff\n- hello there\n+ hello Waylon\n+\n+ Fri 13 Mar 2020 03:43:21 PM DST\n```\n\n## Git is powerful\n\nI learn small tricks like this often with git.  Many times I forget about it and have to come back to re-learn. Sharing my thoughts gives me a better chance of remembering.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-in-depth'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Git in Depth Notes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-auto-commit-action-review'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Review of the git-auto-commit-action</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-03-03", "edit_link": "https://github.com/edit/main/pages/blog/git-diff-branches.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574377", "datetime": "2020-03-03 00:00:00+00:00", "slug": "git-diff-branches", "jinja": false, "output_html": "markout/git-diff-branches/index.html", "long_description": "Today I learned how to diff between two branches. Sometimes we get a little  Let After all of that, we have a git repository on our local machine with a single file  Let At this point we have one commit.  Things are really straightforward, and our di", "super_description": "Today I learned how to diff between two branches. Sometimes we get a little  Let After all of that, we have a git repository on our local machine with a single file  Let At this point we have one commit.  Things are really straightforward, and our diff will be the same between the last commit and the main branch since.  Let \ud83d\udc46 At this point, our diff doesn I learn small tricks like this often with git.  Many times I forget about it and have to come back to re-learn. Sharing my thoughts gives me a", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a430>, next=<frontmatter.Post object at 0x7f34506ae460>)"}, {"cover": "", "title": "Productive one on one", "tags": [], "status": "false", "templateKey": "blog-post", "path": "pages/blog/productive-one-on-one.md", "description": "Inspired by https://m.soundcloud.com/front-end-happy-hour/episode-095-shot-for-shot-one-on-ones prev notify-send next To", "content": "![](https://images.waylonwalker.com/Screenshot_20200221-114202.png)Inspired by [https://m.soundcloud.com/front-end-happy-hour/episode-095-shot-for-shot-one-on-ones](https://m.soundcloud.com/front-end-happy-hour/episode-095-shot-for-shot-one-on-ones \"https://m.soundcloud.com/front-end-happy-hour/episode-095-shot-for-shot-one-on-ones\")\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/notify-send'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>notify-send</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-diff-branches'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Today I learned `git diff feature..main`</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-24", "edit_link": "https://github.com/edit/main/pages/blog/productive-one-on-one.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574383", "datetime": "2020-02-24 00:00:00+00:00", "slug": "productive-one-on-one", "jinja": false, "output_html": "markout/productive-one-on-one/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652670>, next=<frontmatter.Post object at 0x7f34506528b0>)"}, {"cover": "", "title": "notify-send", "tags": ["cli", "linux"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/notify-send.md", "description": "prev Kedro Static Viz 0.3.0 is out with Hooks Support next Productive one on one", "content": "``` bash\nxinput float $(xinput list --id-only \"AT Translated Set 2 keyboard\") | notify-send \"laptop keeb floated\" -i ~/Pictures/8bitcc.png\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-static-viz-0-3-0'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Static Viz 0.3.0 is out with Hooks Support</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/productive-one-on-one'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Productive one on one</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-01", "edit_link": "https://github.com/edit/main/pages/blog/notify-send.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574389", "datetime": "2021-08-01 00:00:00+00:00", "slug": "notify-send", "jinja": false, "output_html": "markout/notify-send/index.html", "long_description": "", "super_description": "", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652550>, next=<frontmatter.Post object at 0x7f3450652160>)"}, {"cover": "", "title": "Kedro Static Viz 0.3.0 is out with Hooks Support", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-static-viz-0-3-0.md", "description": "Even though it is a static site there is no functionality lost.  The only thing that Even though it Kedro viz is a fantastic kedro plugin that allows you to vis", "content": "[kedro-static-viz](https://github.com/WaylonWalker/kedro-static-viz) is out with support for the newly released hooks feature.  This means that you can have `kedro-static-viz` automatically deploy a full gatsby site `before_pipeline_run` keeping your visualization always up to date.\n\nEven though it is a static site there is no functionality lost.  The only thing that's missing is the flask server.  With [kedro-static-viz](https://github.com/WaylonWalker/kedro-static-viz) you can deploy your visualization to a number of static hosting providers such as GitHub pages free of charge with wicked fast performance\n\n## \u26a1 It's Fast\n\nEven though it's built on gatsbyjs the full site builds in under 2s even on slower hardware.  This is because the site is already pre-rendered and stripped of any excess.  It's zipped up right into the python package and is typically used with the cli, but now can be used with python, or as a hook as well.\n\n> ### What is [kedro-viz](https://github.com/quantumblacklabs/kedro-viz) \ud83e\udd14\n\nKedro viz is a fantastic kedro plugin that allows you to visualize your data pipeline.  Kedro allows you to quickly build production-ready pipelines where you just configure a catalog, then toss python functions into a big pile.  Kedro figures out the order everything needs ran in for you, allows you to run a datasets dependencies or dependents only.  [kedro-viz](https://github.com/quantumblacklabs/kedro-viz) gives you a great way to see this ordering visually.\n\n![a visualization of a kedro data pipeline featuring data and functions flowing together.](https://images.waylonwalker.com/pipeline_visualisation-1.png \"kedro visualization\")\n\n> kedro visualization from the projects readme\n\n## Check out a live running example\n\nUsing the power of GitHub actions the I have built a kedro iris pipeline visualization that can be found on [https://static-viz.kedro.dev/](https://static-viz.kedro.dev/)\n\n## Itching to get started with kedro\n\nYou can be up and running in a matter of minutes if you already have python running on your machine.\n\nMake a virtual environment with your environment manager of choice.\n\n``` python\nconda create -n kedro-practice python=3.8 -y\nconda activate kedro-practice\n```\n\nInstall kedro. Then create a new project with their awesome cli template built on cookiecutter. Make sure to answer `y` to get a prebuilt example pipeline with data.\n\n    pip install kedro kedro-static-viz\n    kedro new\n\n## Vizualize your pipeline with the cli \u303d\n\nFor local use when you already have the full project `kedro viz` is a great tool to use, but this is an article about kedro-static-viz.\n\n``` python\nkedro-static-viz static-viz\n```\n\nSince we used `kedro-static-viz` you will have a new directory called `public` that you can host on any static web hosting service, like GitHub pages or Netlify.\n\n## Ready to try out the new hooks feature \ud83d\ude4b\u200d\u2640\ufe0f\n\nOpen up your `<project>/src/run.py` and add the hook to your `ProjectContext` class.  Next time you run your pipeline you will have an updated pipeline.\n\n``` python\nfrom kedro_static_viz.hooks import StaticViz\n\nclass ProjectContext(KedroContext):\n   project_name = \"kedro0160\"\n   project_version = \"0.16.1\"\n   package_name = \"kedro0160\"\n   hooks = [ StaticViz() ]\n```\n\n## Now Run that pipeline \ud83c\udfc3\u200d\u2640\ufe0f\n\nRun your pipeline and enjoy that fresh kedro viz each and every time you run your pipeline.\n\n``` bash\nkedro run\n```\n\n## Want to make your own hooks \ud83c\udfa3\n\nCheck out some of my other articles on building kedro hooks.\n\n[![creating customizable kedro hooks](https://images.waylonwalker.com/configurable-kedro-hooks.png)](https://waylonwalker.com/kedro-class-hooks/)\n\n[![creating the kedro preflight hook](https://images.waylonwalker.com/kedro-hooks.png)](https://waylonwalker.com/creating-the-kedro-preflight-hook/)\n\nCheck out the example \ud83d\udc49 [https://static-viz.kedro.dev/](https://static-viz.kedro.dev/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-your-first-nodes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Writing your first kedro Nodes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-spaceflights-stream2'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Spaceflights - part 2 | Stream replay June 7, 2021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-28", "edit_link": "https://github.com/edit/main/pages/blog/kedro-static-viz-0-3-0.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574395", "datetime": "2020-05-28 00:00:00+00:00", "slug": "kedro-static-viz-0-3-0", "jinja": false, "output_html": "markout/kedro-static-viz-0-3-0/index.html", "long_description": "Even though it is a static site there is no functionality lost.  The only thing that Even though it Kedro viz is a fantastic kedro plugin that allows you to visualize your data pipeline.  Kedro allows you to quickly build production-ready pipelines w", "super_description": "Even though it is a static site there is no functionality lost.  The only thing that Even though it Kedro viz is a fantastic kedro plugin that allows you to visualize your data pipeline.  Kedro allows you to quickly build production-ready pipelines where you just configure a catalog, then toss python functions into a big pile.  Kedro figures out the order everything needs ran in for you, allows you to run a datasets dependencies or dependents only.   kedro visualization from the projects readme ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069c7c0>, next=<frontmatter.Post object at 0x7f3450658220>)"}, {"cover": "", "title": "Custom Scrollbar Design", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/custom-scrollbar-design.md", "description": "Getting a custom scrollbar on your site makes it stand out a bit compared to Inspired by Wes Bos Since  My first step was to take his css and copy it into a sty", "content": "Getting a custom scrollbar on your site makes it stand out a bit compared to\nthe very plain stock one that are on most sites.  This is how I set mine up on\nmy gatsby site.\n\nInspired by Wes Bos's new [uses.tech](https://uses.tech) I wanted a custom\nscrollbar on my personal site.  I had tried to do it in the past, but gave up\nafter it was not working.\n\n## Looking at the Source\n\nSince [uses.tech](https://uses.tech) is open source I jumped on github, searched for scroll and found this [layout.js](https://github.com/wesbos/awesome-uses/blob/124bdd64345bc64eb84879929f0e57cbb8752e34/src/components/layout.js#L74).\n\n## Copy it to my own component\n\nMy first step was to take his css and copy it into a styled component for my entire layout, but it failed.  I do not fully understand why.  None of the custom style came through at all.  If you know please leave me a comment.\n\n![](https://images.waylonwalker.com/why-wont-you-work.jpg)\n\nI suspect for some reason it has to do with attatching to the html element inside of a styled-component.  I think wes was able to get around this by using `createGlobalStyle`.  But I was still using much of the default gatsby template, so I did not have a `createGlobalStyle` element, but I did have a layout.css.\n\n## scroll.css\n\nI added `scroll.css` to my static directory, then imported it into `gatsby-browser.js` in order to get it loaded onto the page.\n\n``` css\n /* static/scroll.css */\n\nbody::-webkit-scrollbar {\n    width: 1rem;\n  }\n\n  html {\n    scroll-behavior: smooth;\n    scrollbar-width: thin;\n    scrollbar-color: #5651B7;\n  }\n\n  body::-webkit-scrollbar-track {\n    background: #392E3D;\n  }\n\n  body::-webkit-scrollbar-thumb {\n    background-color: #5651B7 ;\n    border-radius: .5rem;\n    background: rgb(112,107,208);\n    background: linear-gradient(180deg, rgba(112,107,208,1) 0%, rgba(86,81,183,1) 100%);\n    border: 1px solid rgba(86,81,183,.5);\n  }\n```\n\n``` javascript\n// gatsby-browser.js\nimport './static/scroll.css\n```\n\n## It works\n\n It was a bit finicky for me to find the right place to put everything, but this is the final result.  I found out that you can have a gradient on your `scrollbar-thumb`, but the `scrollbar-track` cannot, it also cannot be transparent.  I picked a color that matched my background the best for most use cases, but when the screen gets really narrow a line starts to appear.\n\n![My final result](https://images.waylonwalker.com/custom-scrollbar-with-css.gif \"my final result, an example give of the final result live on waylonwalker.com\")\n\n> My final result\n\n## Resources\n\nuses.tech layout.js: [layout.js](https://github.com/wesbos/awesome-uses/blob/124bdd64345bc64eb84879929f0e57cbb8752e34/src/components/layout.js#L74)\n\ncss-trick article: [scrollbar](https://css-tricks.com/almanac/properties/s/scrollbar/ \"css tricks scrollbar article\")\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/d3-day-5'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>D3 Day 5</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/custom-python-exceptions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Custom Python Exceptions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-21", "edit_link": "https://github.com/edit/main/pages/blog/custom-scrollbar-design.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574401", "datetime": "2020-02-21 00:00:00+00:00", "slug": "custom-scrollbar-design", "jinja": false, "output_html": "markout/custom-scrollbar-design/index.html", "long_description": "Getting a custom scrollbar on your site makes it stand out a bit compared to Inspired by Wes Bos Since  My first step was to take his css and copy it into a styled component for my entire layout, but it failed.  I do not fully understand why.  None o", "super_description": "Getting a custom scrollbar on your site makes it stand out a bit compared to Inspired by Wes Bos Since  My first step was to take his css and copy it into a styled component for my entire layout, but it failed.  I do not fully understand why.  None of the custom style came through at all.  If you know please leave me a comment. I suspect for some reason it has to do with attatching to the html element inside of a styled-component.  I think wes was able to get around this by using  I added  It wa", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696280>, next=<frontmatter.Post object at 0x7f3450663580>)"}, {"cover": "", "title": "What is Refactoring", "tags": [], "status": "false", "templateKey": "blog-post", "path": "pages/blog/what-is-refactoring.md", "description": "Make the change easy Make the easy change Martin Fowler When to refactor", "content": "Make the change easy\n\nMake the easy change\n\nMartin Fowler\n\nWhen to refactor\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-choose-tree'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux choose-tree</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/custom-scrollbar-design'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Custom Scrollbar Design</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-20", "edit_link": "https://github.com/edit/main/pages/blog/what-is-refactoring.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574409", "datetime": "2020-02-20 00:00:00+00:00", "slug": "what-is-refactoring", "jinja": false, "output_html": "markout/what-is-refactoring/index.html", "long_description": "Make the change easy Make the easy change Martin Fowler When to refactor", "super_description": "Make the change easy Make the easy change Martin Fowler When to refactor", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652310>, next=<frontmatter.Post object at 0x7f3450652af0>)"}, {"cover": "", "title": "tmux choose-tree", "tags": ["cli", "linux", "tmux"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-choose-tree.md", "description": "https://youtu.be/79Y-kqAiMpw Choose tree is a powerful tmux utility that provides a graphical interface to The default keybinding my preferred keybinding to ope", "content": "https://youtu.be/79Y-kqAiMpw\n\nChoose tree is a powerful tmux utility that provides a graphical interface to\npreview all sessions, windows, and panes, move between them kill them, move\nthem and much more.\n\n\nThe default keybinding\n\n``` bash\nbind-key -T prefix s choose-tree -s\n```\n\nmy preferred keybinding to open sessions and windows collapsed and Zoomed in.\n\n```bash\nbind-key j choose-tree -swZ\n```\n\nFrom the man page.\n\n``` bash\nchoose-tree [-GNrswZ] [-F format] [-f filter] [-K key-format] [-O sort-order] [-t target-pane] [template]\n        Put a pane into tree mode, where a session, window or pane may be chosen interactively from a tree.  Each session, window or pane is shown on\n        one line.  A shortcut key is shown on the left in brackets allowing for immediate choice, or the tree may be navigated and an item chosen or\n        otherwise manipulated using the keys below.  -s starts with sessions collapsed and -w with windows collapsed.  -Z zooms the pane.  The follow\u2010\n        ing keys may be used in tree mode:\n\n            Key    Function\n            Enter  Choose selected item\n            Up     Select previous item\n            Down   Select next item\n            +      Expand selected item\n            -      Collapse selected item\n            M-+    Expand all items\n            M--    Collapse all items\n            x      Kill selected item\n            X      Kill tagged items\n            <      Scroll list of previews left\n            >      Scroll list of previews right\n            C-s    Search by name\n            m      Set the marked pane\n            M      Clear the marked pane\n            n      Repeat last search\n            t      Toggle if item is tagged\n            T      Tag no items\n            C-t    Tag all items\n            :      Run a command for each tagged item\n            f      Enter a format to filter items\n            H      Jump to the starting pane\n            O      Change sort field\n            r      Reverse sort order\n            v      Toggle preview\n            q      Exit mode\n\n        After a session, window or pane is chosen, \u2018%%\u2019 is replaced by the target in template and the result executed as a command.  If template is\n        not given, \"switch-client -t '%%'\" is used.\n\n        -O specifies the initial sort field: one of \u2018index\u2019, \u2018name\u2019, or \u2018time\u2019.  -r reverses the sort order.  -f specifies an initial filter: the fil\u2010\n        ter is a format - if it evaluates to zero, the item in the list is not shown, otherwise it is shown.  If a filter would lead to an empty list,\n        it is ignored.  -F specifies the format for each item in the tree and -K a format for each shortcut key; both are evaluated once for each\n        line.  -N starts without the preview.  -G includes all sessions in any session groups in the tree rather than only the first.  This command\n        works only if at least one client is attached.\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-command-line'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux command line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-attach'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux attach</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-07-19", "edit_link": "https://github.com/edit/main/pages/blog/tmux-choose-tree.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574415", "datetime": "2021-07-19 00:00:00+00:00", "slug": "tmux-choose-tree", "jinja": false, "output_html": "markout/tmux-choose-tree/index.html", "long_description": "https://youtu.be/79Y-kqAiMpw Choose tree is a powerful tmux utility that provides a graphical interface to The default keybinding my preferred keybinding to open sessions and windows collapsed and Zoomed in. From the man page. https://waylonwalker.co", "super_description": "https://youtu.be/79Y-kqAiMpw Choose tree is a powerful tmux utility that provides a graphical interface to The default keybinding my preferred keybinding to open sessions and windows collapsed and Zoomed in. From the man page. https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345069ca00>, next=<frontmatter.Post object at 0x7f345064c430>)"}, {"cover": "", "title": "I Started Streaming on Twitch", "tags": ["stream", "kedro", "python", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/start-streaming.md", "description": "I recently started streaming on python kedro Data Science Data Engineering webdev digital gardening It all started with My introduction to twitch came from Afte", "content": "I recently started streaming on\n[twitch.tv/waylonwalker](https://www.twitch.tv/waylonwalker) and it's been a\nblast so far.\n\n* python\n* kedro\n* Data Science\n* Data Engineering\n* webdev\n* digital gardening\n\n## Kedro Spaceflights\n\nIt all started with\n[kedro/issues/606](https://github.com/quantumblacklabs/kedro/issues/606), Yetu\ncalled out for users of kedro to record themselves doing a walk through of\ntheir tutorials.  I wanted to do this, but was really stuck at the fact that\nrecording or editing somewhat polished vide is quite time consuming for me.\n\n![kedro-issue-606](https://images.waylonwalker.com/kedro-issue-606.png)\n\n## Inspiration\n\nMy introduction to twitch came from\n[twitch.tv/theprimeagen](https://twitch.tv/theprimeagen). I watched him on\nYouTube, and then decided to drop into a stream.  It was so fun to watch him\nlive that I started following others in the science and tech category.\n\n* [twitch.tv/teej_dv](https://www.twitch.tv/teej_dv) Brilliant neovim core dev, I learn a bunch about nvim every time I watch.\n* [twitch.tv/cmgriffing](https://www.twitch.tv/cmgriffing) Super Chill and engaging chat.\n* [twitch.tv/cassidoo](https://www.twitch.tv/cassidoo) Fantastic discussion/chat.\n* [twitch.tv/anthonywritescode](https://www.twitch.tv/anthonywritescode) Building the python ecosystem.\n* [twitch.tv/kierisi](https://www.twitch.tv/kierisi) Exploring data in r-studio, taking xgboost to Sliced.\n\n## Streaming What I Do\n\nAfter taking a jump in with the spaceflights tutorial I realized that it really\nwas not that hard to do, and I can stream things that I am doing anyways.  I\nwill be streaming while I build open source kedro plugins, pipelines, and while\nI work on my website.\n\n## YouTube\n\nI started storing all the replay, and some clips on\n[YouTube](https://www.youtube.com/channel/UChoRUssc5HoO-xQ9hUKZ1mA).  If that\nis more of your thing be sure to check it out.  To be completely honest the  editing/ clips will likely come at a minimum, as they take me a lot more time to edit.  I would greatly appreciate\nanyone who subscribes to help me get to the 100 subscriber baseline to get my\ncustom url.\n\n\nCome join me while I try to figure out what I am doing.\n\n\n[Deploying a kedro dataset to netlify](https://youtu.be/55g8FQr0kgA)\n\n> Here is a small clip from my latest\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/stories_10-10-2020_10-21-2020'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>A brain dump of stories</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/stand-with-your-team'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Stand With Your Team</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-12", "edit_link": "https://github.com/edit/main/pages/blog/start-streaming.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574421", "datetime": "2021-06-12 00:00:00+00:00", "slug": "start-streaming", "jinja": false, "output_html": "markout/start-streaming/index.html", "long_description": "I recently started streaming on python kedro Data Science Data Engineering webdev digital gardening It all started with My introduction to twitch came from After taking a jump in with the spaceflights tutorial I realized that it really I started stor", "super_description": "I recently started streaming on python kedro Data Science Data Engineering webdev digital gardening It all started with My introduction to twitch came from After taking a jump in with the spaceflights tutorial I realized that it really I started storing all the replay, and some clips on Come join me while I try to figure out what I am doing. Here is a small clip from my latest", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a19d0>, next=<frontmatter.Post object at 0x7f3450640d30>)"}, {"cover": "", "title": "Chrome Extensions I use", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/chrome-extensions-i-use.md", "description": "There are many useful chrome extensions out there.  I probably have way too many installed, here are four that I am currently using. This post was inspired from", "content": "There are many useful chrome extensions out there.  I probably have way too many installed, here are four that I am currently using.\n\nThis post was inspired from Chris over at [daily-dev-tips](https://daily-dev-tips.com/posts/top-10-chrome-extensions-for-developers-%F0%9F%91%80/)\n\n1. [LastPass](#lastpass)\n2. [Stylus](#stylus)\n3. [Vimium](#vimium)\n4. [hypothesis](#hypothesis)\n\n***\n\n## [LastPass](https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd?hl=en)\n\nLove it or hate it passwords are hard to manage.  Everyone needs a password manager to avoid the dreaded password reuse, and to be able to quickly rotate them with a service.  I use lastpass, thus it's browser extension is my most used extension.\n\n[![lastpass](https://images.waylonwalker.com/chrome-extension-lastpass.png)](https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd?hl=en)\n\n***\n\n## [Stylus](https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en)\n\nStylus is an extension that allows you to add your own CSS to style pages how you want.  There seems to be a full community of folks that really use this to the nth degree to style all of their commonly used sites somewhat similarly or add dark mode to sites without it.\n\nPersonally I mostly use it to add my favorite syntax highlighting theme to jupyter, **onedark**.  I've long lost the original author, but have posted the CSS I use in this [gist](https://gist.github.com/WaylonWalker/b082bda9c1ce1471ea0c940c836e5714)\n\n[![lastpass](https://images.waylonwalker.com/chrome-extension-stylus.png)](https://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmne?hl=en)\n\n***\n\n## [Vimium](https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en)\n\nVimium adds vim-like keybindings to chrome.  I don't use it a ton but it comes in handy to fully utilize the keyboard on some sites that aren't well suited to keyboard use.\n\n[![vimium](https://images.waylonwalker.com/chrome-extension-vimium.png)](https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en)\n\n***\n\n## [hypothesis](https://chrome.google.com/webstore/detail/hypothesis-web-pdf-annota/bjfhmglciegochdpefhhlphglcehbmek?hl=en)\n\nHypothesis is a notetaking app that I am trying to get on board with.  I like that they have a REST API to get your notes from. It allows you to take notes or highlight web pages and share them easily.  I am still trying to remember to use this one more.\n\n[![hypothesis](https://images.waylonwalker.com/chrome-extension-hypothesis.png)](https://chrome.google.com/webstore/detail/hypothesis-web-pdf-annota/bjfhmglciegochdpefhhlphglcehbmek?hl=en)\n\nThese are my most used extensions.  What are yours?\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/cmd-exe-tips'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>cmd.exe tips</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/building-kedro-dev'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Building kedro.dev</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-09-13", "edit_link": "https://github.com/edit/main/pages/blog/chrome-extensions-i-use.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574426", "datetime": "2020-09-13 00:00:00+00:00", "slug": "chrome-extensions-i-use", "jinja": false, "output_html": "markout/chrome-extensions-i-use/index.html", "long_description": "There are many useful chrome extensions out there.  I probably have way too many installed, here are four that I am currently using. This post was inspired from Chris over at  Love it or hate it passwords are hard to manage.  Everyone needs a passwor", "super_description": "There are many useful chrome extensions out there.  I probably have way too many installed, here are four that I am currently using. This post was inspired from Chris over at  Love it or hate it passwords are hard to manage.  Everyone needs a password manager to avoid the dreaded password reuse, and to be able to quickly rotate them with a service.  I use lastpass, thus it Stylus is an extension that allows you to add your own CSS to style pages how you want.  There seems to be a full community ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063b1f0>, next=<frontmatter.Post object at 0x7f34506a1d30>)"}, {"cover": "", "title": "Keep Location List Closed", "tags": ["vim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/keep-location-list-closed.md", "description": "Vim Location List eating up the screen while I am zoomed in and trying to live code Through some google search I found the culprit was syntastic.  It has an  I ", "content": "Vim's (neovim in my case) location list can provide some very useful information while developing.  Mine gives me information about linting and type checking errors with fairly little config.  Generally, it sits nicely at the bottom of the screen and barely affects me.  Other times, especially while zoomed way in during a presentation, it just gets in the way.\n\n![location list eats the screen](https://images.waylonwalker.com/location-list-eats-screen.png)\n\n> Location List eating up the screen while I am zoomed in and trying to live code\n\n## Toggling the location list\n\nThrough some google search I found the culprit was syntastic.  It has an `auto_loc_list` feature.  We can turn it off by setting\n`syntastic_auto_loc_list=0`.\n\n``` vim\nlet syntastic_auto_loc_list=0\n```\n\n## Keybindings\n\nI want to keep the location list open automatically most of the time, but when I don't want it to keep opening it's generally detrimental.  Trying to live code while the location list keeps taking up the whole screen is not cool.\n\n\nFirst, create a function that will toggle both the location list and syntactic together.\n\n``` vim\nlet s:syntastic_auto_loc_list = 0\nfunction! s:ToggleLocationList()\n    if s:syntastic_auto_loc_list == 1\n        let s:syntastic_auto_loc_list = 0\n        let syntastic_auto_loc_list = 0\n        :lclose\n    else\n        let s:syntastic_auto_loc_list = 1\n        let syntastic_auto_loc_list = 1\n        :lopen\n    endif\nendfunction\n```\n\nThis binding will allow me to use `gtl` from normal mode to toggle the location list.\n\n``` vim\n:command! ToggleLocationList :call s:ToggleLocationList()\nnnoremap gtl :ToggleLocationList<CR>\n```\n\nI am starting a set of **toggle** keymaps under the `gt` keybinding, this one is the second one after a keybinding made to toggle paste mode.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/keyboard-driven-vscode'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Keyboard Driven VSCode</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro172_replit'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>kedro replit</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-01", "edit_link": "https://github.com/edit/main/pages/blog/keep-location-list-closed.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574432", "datetime": "2020-01-01 00:00:00+00:00", "slug": "keep-location-list-closed", "jinja": false, "output_html": "markout/keep-location-list-closed/index.html", "long_description": "Vim Location List eating up the screen while I am zoomed in and trying to live code Through some google search I found the culprit was syntastic.  It has an  I want to keep the location list open automatically most of the time, but when I don First, ", "super_description": "Vim Location List eating up the screen while I am zoomed in and trying to live code Through some google search I found the culprit was syntastic.  It has an  I want to keep the location list open automatically most of the time, but when I don First, create a function that will toggle both the location list and syntactic together. This binding will allow me to use  I am starting a set of ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450696e50>, next=<frontmatter.Post object at 0x7f3450652460>)"}, {"cover": "", "title": "reasons-to-kedro", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/reasons-to-kedro.md", "description": "There are many reasons that you should be using kedro.  If you are on a team of https://waylonwalker.com/what-is-kedro Kedro makes it super easy to get started ", "content": "<iframe src=\"https://anchor.fm/waylon-walker/embed/episodes/reasons-to-kedro-en6kr3\" height=\"102px\" width=\"400px\" frameborder=\"0\" scrolling=\"no\"></iframe>\n\nThere are many reasons that you should be using kedro.  If you are on a team of\nData Scientists/Data Engineers processing DataFrames from many data sources\nshould be considering a pipeline framework.  Kedro is a great option that\nprovides many benefits for teams to collaborate, develop, and deploy data\npipelines\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n## Starter Template\n\nKedro makes it super easy to get started with their cli that utilizes\ncookiecutter under the hood.\n\n``` bash\nconda create -n my-new-project -y python=3.8\nkedro new\nkedro install\nkedro run\n```\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/create-new-kedro-project/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/create-new-kedro-project-og_250x140.png\" alt=\"article cover for \n Create New Kedro Project\n\"/>\n          <p><strong>\n Create New Kedro Project\n</strong></p>\n      </a>\n  </div>\n\n\n> read more about how to start your first kedro project here\n\n## Collaboration\n\nKedro provides many tools that help teams collaborate on a single codebase.\nWhile writing monolithic scripts it can be easy to pin yourself in a corner\nwhere it is difficult to have multiple people making changes to the\nnotebook/script at the same time.  Kedro helps guide your team to break your\nproject down into small pieces that different members of the team can work on\nin parallel.\n\n### sharable catalog\n\nKedro makes it easy to collaborate with members who aren't even working on the\npipeline.  I often see team members who want to investigate datasets from\ndifferent points in the pipeline.  Kedro makes it really easy for them to load\nit into python.\n\n**for python users**\n\nShare catalog entries with folks doing EDA.\n\n``` python\ncatalog.load('main_table')\n```\n\n**for non-python users**\n\nFor those who may not be using python, we can easily kick out a CSV version of\nthat `main_table` that they can get from s3 or your cloud storage solution of\nchoice.\n\n``` yaml\nmaster_table:\n  type: pandas.CSVDataSet\n  filepath: s3://bucket/data/03_primary/master_table.csv\n  layer: primary\n```\n\n**for the SQL folks**\n\nWe aren't even constrained to those who only use python or excel, we can kick\nout any kind of dataset that python can output.  Kedro even comes with many\nDataSet types out of the box so that we don't have to write any read/write\ncode.\n\n``` yaml\nmaster_table:\n  type: SQLTableDataSet\n  table_name: master_table\n  credentials: postgres\n```\n\n### small nodes over monolithic scripts\n\nAs I said before single notebooks/scripts are really hard to collaborate on.  I\nhave seen Data Engineers sitting idle waiting to get their changes manually\nadded into the master notebook.  When you find yourself in this situation, find\na better solution.  It's time to break things down into individual modules and\nutilize a version control system that can automatically merge changes in.\n\nKedro encourages the use of git version control and storing all node functions\ninside of modules while still making it really easy to load data into a\nnotebook/shell and start trying out new things.\n\n## No More read and write code\n\nAs I said earlier kedro comes with datasets for the most popular output\nformats.  It is also backed by a really amazing library called `fsspec`, this\nlibrary makes the filesystem that you are storing agnostic to how you write to\nit.  This means that the kedro library utilizes `fsspec` under the hood and\nwrites to the file as if it was to disk, but based on the prefix to the file it\nmay actually be writing to the local filesystem, gcp, azure blob, or s3.\n\n**custom DataSets**\n\nIf kedro does not have a `DataSet` for the format that you need to read or\nwrite you can easily create your own custom `DataSet`  all you need to do is\ninherit from `kedro.io.AbstractDataSet` and create methods for `__init__`,\n`_load`, `_save`, `_exists`, and `_describe`.\n\nCheck out this example from their docs.  I removed the docstrings for brevity,\nyou can see the entire `DataSet` in their\n[docs](https://kedro.readthedocs.io/en/0.15.2/03_tutorial/03_set_up_data.html?highlight=custom%20dataset#creating-custom-datasets).\n\n> The complete example all in one was only available in an older version, more up to date [docs](https://kedro.readthedocs.io/en/0.16.6/07_extend_kedro/01_custom_datasets.html?highlight=custom%20dataset) have a good writeup that walks through everything separately.\n\n``` python\nfrom os.path import isfile\nfrom typing import Any, Union, Dict\n\nimport pandas as pd\n\nfrom kedro.io import AbstractDataSet\n\nclass ExcelLocalDataSet(AbstractDataSet):\n\n    def _describe(self) -> Dict[str, Any]:\n        return dict(filepath=self._filepath,\n                    engine=self._engine,\n                    load_args=self._load_args,\n                    save_args=self._save_args)\n\n    def __init__(\n        self,\n        filepath: str,\n        engine: str = \"xlsxwriter\",\n        load_args: Dict[str, Any] = None,\n        save_args: Dict[str, Any] = None,\n    ) -> None:\n\n        self._filepath = filepath\n        default_save_args = {}\n        default_load_args = {\"engine\": \"xlrd\"}\n\n        self._load_args = {**default_load_args, **load_args} \\\n            if load_args is not None else default_load_args\n        self._save_args = {**default_save_args, **save_args} \\\n            if save_args is not None else default_save_args\n        self._engine = engine\n\n    def _load(self) -> Union[pd.DataFrame, Dict[str, pd.DataFrame]]:\n        return pd.read_excel(self._filepath, **self._load_args)\n\n    def _save(self, data: pd.DataFrame) -> None:\n        writer = pd.ExcelWriter(self._filepath, engine=self._engine)\n        data.to_excel(writer, **self._save_args)\n        writer.save()\n\n    def _exists(self) -> bool:\n        return isfile(self._filepath)\n```\n\n## Execution order is taken care of\n\nAs you build up complex pipelines containing 10's or 100's of nodes it becomes\ndifficult to splice in new nodes/steps without messing up or a framework to\nhelp.  Kedro simply needs a set of nodes that each takes in catalog entries as\ninput and output to catalog entries and it will figure out the order for you.\n\nThese nodes can be made for one-off purposes, take in functions from reusable\nlibraries, and even be dynamically generated from a configuration.  There is\nno need to worry about hand curating the execution order, that's all taken care\nof.\n\n## Easily slice up a pipeline\n\nSince kedro is a DAG that takes in a pile of nodes and figures out all of the\ndependencies for you it knows a lot about your pipeline.  You can slice it up to\nonly the specific pieces that you need.\n\n``` python\n# single nodes\npipeline.only_nodes(\"node1\")\n\n# single nodes and all of thier dependencies\npipeline.to_nodes(\"node1\", \"node2\")\n\n# from a dataset to all of its dependants\npipeline.from_inputs(\"dataset1\", \"dataset2\")\n\n# to a an outputs with all of its dependencies\npipeline.to_outputs(\"dataset6\", \"dataset7\")\n```\n\n## plugins/hooks\n\nCreating your own modifications to how kedro behaves is made really simple\nthrough the use of hooks.  There are several hooks that happen at different\npoints in the kedro lifecycle.  For instance, you can hook in before pipeline\nrun or after pipeline run to do whatever your project needs.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/creating-the-kedro-preflight-hook/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/creating-the-kedro-preflight-hook-og_250x140.png\" alt=\"article cover for \n creating the kedro-preflight hook\n\"/>\n          <p><strong>\n creating the kedro-preflight hook\n</strong></p>\n      </a>\n  </div>\n\n\n### pip install plugin\n\nThere is a growing list of plugins available from pypi that is only a `pip\ninstall` away.  Most of them are on\n[GitHub](https://github.com/topics/kedro-plugin) and tagged as a\n[kedro-plugin](https://github.com/topics/kedro-plugin) topic.\n\n## flexible cli\n\nIn the end, you have a cli for your project that can run your pipeline in all\nsorts of cool ways since it knows about each node's dependencies.  This makes\nrunning and scheduling production a breeze.\n\n``` bash\n# single nodes\nkedro run --node node1\n\n# single nodes and all of their dependencies\nkedro run --to-nodes node1,node2 \n\n# from a dataset to all of its dependents\nkedro run --from-inputs dataset1,dataset2\n\n# to outputs with all of their dependencies\nkedro run --to-outputs dataset6,dataset7\n```\n\n## Try it out\n\nHopefully this post gave you the inspiration to get started today, if it did `pip install kedro` and run `kedro new` to try it out.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reasons-to-kedro-notes'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Reasons to Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/realistic-git-workflow'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Realistic Git Workflow</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-01", "edit_link": "https://github.com/edit/main/pages/blog/reasons-to-kedro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574438", "datetime": "2020-11-01 00:00:00+00:00", "slug": "reasons-to-kedro", "jinja": false, "output_html": "markout/reasons-to-kedro/index.html", "long_description": "There are many reasons that you should be using kedro.  If you are on a team of https://waylonwalker.com/what-is-kedro Kedro makes it super easy to get started with their cli that utilizes https://waylonwalker.com/create-new-kedro-project read more a", "super_description": "There are many reasons that you should be using kedro.  If you are on a team of https://waylonwalker.com/what-is-kedro Kedro makes it super easy to get started with their cli that utilizes https://waylonwalker.com/create-new-kedro-project read more about how to start your first kedro project here Kedro provides many tools that help teams collaborate on a single codebase. Kedro makes it easy to collaborate with members who aren Share catalog entries with folks doing EDA. For those who may not be ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672610>, next=<frontmatter.Post object at 0x7f3450652430>)"}, {"cover": "", "title": "I just added react-headroom to my site", "tags": ["webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/react-headroom.md", "description": "It was so easy to get a professional looking navbar with just 3 lines of code. installation is easy There was no instructions for es6 style imports that are com", "content": "It was so easy to get a professional looking navbar with just 3 lines of code.\nThis package seriously is so usable on mobile it is ridiculous.  I found this\npackage from\n[day-4](https://www.gatsbyjs.org/blog/100days/react-component/?utm_campaign=100%20Days%20of%20Gatsby&utm_source=hs_email&utm_medium=email&utm_content=82376619&_hsenc=p2ANqtz-_DBh1A1A-GEy2TujddXq_H1de5wGZ_X6jIqB2wv_PE7QgUk40pfi64jbSVHv-S3bfzKZOQywtoTuup2aeO0o_KpeiF8w&_hsmi=82376619)\nof the 100 days of gatsby challenge.  It is by the wonderful man who brought us\ngatsbyjs Kyle Mathews, so you know its gotta be good.\n\n## install react-headroom\n\ninstallation is easy\n\n``` bash\nnpm i react-headroom\n```\n\n## Import Headroom\n\nThere was no instructions for es6 style imports that are common with gatsbyjs\nsites like mine, but it was intuitive to figure out.\n\n``` js\nimport Headroom from 'react-headroom'\n```\n\n## Using Headroom\n\nSimply wrap your existing content, Nav in my case, with the `<Headroom />`\ncomponent and your off to the races.  The content will pop back into view when\nyou scroll past then back up.\n\n``` html\n<Headroom>\n   <-- Your content goes here -->\n</Headroom>\n```\n\n## See it in action\n\nI think this simple package completely changes the ux of your site on mobile.\nYou can get that sticky nav out of the way, but its still right there with just\na little bit of a scroll up.\n\n![showing it in action on waylonwalker.com](https://images.waylonwalker.com/react-headroom-b.gif)\n\n> Here it is on [waylonwalker.com](https://waylonwalker.com)\n\n## Configurable\n\n`react-headroom` is configurable, but I did not find it necessary.  I really\nlike the simplicity that it brought by just adding the `<Headroom\\>` component.\n\n![react-headroom docs](https://images.waylonwalker.com/react-headroom-docs.png)\n\n## Links\n\nCheck out the relavant links for more details.\n\n**GitHub**: https://github.com/KyleAMathews/react-headroom\n**Demo Site**: https://kyleamathews.github.io/react-headroom/\n**Docs**: https://kyleamathews.github.io/react-headroom/\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reader'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Reader</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/quickly-edit-posts'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Quickly Edit Posts</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-11", "edit_link": "https://github.com/edit/main/pages/blog/react-headroom.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574444", "datetime": "2020-02-11 00:00:00+00:00", "slug": "react-headroom", "jinja": false, "output_html": "markout/react-headroom/index.html", "long_description": "It was so easy to get a professional looking navbar with just 3 lines of code. installation is easy There was no instructions for es6 style imports that are common with gatsbyjs Simply wrap your existing content, Nav in my case, with the  I think thi", "super_description": "It was so easy to get a professional looking navbar with just 3 lines of code. installation is easy There was no instructions for es6 style imports that are common with gatsbyjs Simply wrap your existing content, Nav in my case, with the  I think this simple package completely changes the ux of your site on mobile. Here it is on  react-headroom Check out the relavant links for more details.", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663760>, next=<frontmatter.Post object at 0x7f34506858b0>)"}, {"cover": "/static/neovim-live-substitution.png", "title": "Live Substitution In Neovim", "tags": ["linux", "vim"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/neovim-live-substitution.md", "description": "Replacing text in vim can be quite frustrating especially since it doesn https://twitter.com/ I had to do a bit of searching and found a great post from  I beli", "content": "Replacing text in vim can be quite frustrating especially since it doesn't have\nlive feedback to what is changing. Today I was watching Josh Branchaud's\nVim-Unalphabet series on Youtuve and realized that his vim was doing this and I\nhad to have it.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">neovim can live highlight substitutions.<br><br>:set inccommand=nosplit</p>&mdash; Waylon Walker \ud83d\udc0d (@_WaylonWalker) <a href=\"https://twitter.com/_WaylonWalker/status/1346081617199198210?ref_src=twsrc%5Etfw\">January 4, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n\n## How to do it.\n\nI had to do a bit of searching and found a great post from [vimcasts](http://vimcasts.org/episodes/neovim-eyecandy/) that shows exactly how to get the live search and replace highlighting using `inccomand`\n\n\n## :h inccommand\n\n\n``` vim\n'inccommand' 'icm'\tstring\t(default \"\")\n\t\t\tglobal\n\t\t\t\n\t\"nosplit\": Shows the effects of a command incrementally, as you type.\n\t\"split\"\t : Also shows partial off-screen results in a preview window.\n\n\tWorks for |:substitute|, |:smagic|, |:snomagic|. |hl-Substitute|\n\n\tIf the preview is too slow (exceeds 'redrawtime') then 'inccommand' is\n\tautomatically disabled until |Command-line-mode| is done.\n\n```\n\n## Add this to your config\n\nI believe that this is a neovim only feature, add it into your\n`~/.config/nvim/init.vim` file. You can see it in my\n[dotfiles](https://github.com/WaylonWalker/devtainer/blob/main/nvim/.config/nvim/settings.vim#L155)\nas well.\n\n``` vim\nset inccommand=nosplit\n```\n\n## See it in Action\n\n![example live\nsubstitution](https://images.waylonwalker.com/nvim-live-substitute-inccommand.gif)\n\n## The Video that inspired this\n\nCheck out Josh Branchaud's great series on the Vim-Unalphabet.\n\nhttps://www.youtube.com/watch?v=5jMiYtXz2QA\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/new-machine-tpio'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>New Machine for developing Tests with TestProject.io</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/named-tuples-data-science'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Clean up Your Data Science with Named Tuples</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-04", "edit_link": "https://github.com/edit/main/pages/blog/neovim-live-substitution.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574452", "datetime": "2021-01-04 00:00:00+00:00", "slug": "neovim-live-substitution", "jinja": false, "output_html": "markout/neovim-live-substitution/index.html", "long_description": "Replacing text in vim can be quite frustrating especially since it doesn https://twitter.com/ I had to do a bit of searching and found a great post from  I believe that this is a neovim only feature, add it into your Check out Josh Branchaud https://", "super_description": "Replacing text in vim can be quite frustrating especially since it doesn https://twitter.com/ I had to do a bit of searching and found a great post from  I believe that this is a neovim only feature, add it into your Check out Josh Branchaud https://www.youtube.com/watch?v=5jMiYtXz2QA", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c3a0>, next=<frontmatter.Post object at 0x7f3450696fa0>)"}, {"cover": "", "title": "Vim Notes", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/vim-notes.md", "description": "I have gone quite awhile without using  edit a macro register register quickfix gF <C-x> zn", "content": "# vim notes\n\n## nvim lua\n[norcalli/neovim-plugin](https://github.com/norcalli/neovim-plugin)\n\n## nvim lsp\n\n[python-lsp/python-lsp-server](https://github.com/python-lsp/python-lsp-server)\n\n## Using c to change text\n\nI have gone quite awhile without using ```c``` and instead using ```d```.  The reason that I started using ```c``` is because it automatically places you into insert mode.  This not only saves me one keystroke for commands such as ```diwi``` is now ```ciw```, but it also works with the repeat ```.``` command!!!  This is huge.  When refactoring a document I had been creating a macro to change one word to another, using ```c``` instead of ```d``` allows the use of the ```.``` rather than needing to create a macro.\n\n## Case for vim\n\n**Sublime/VSCode cannot**\n\n* edit a macro register\n* register\n* quickfix\n* gF\n\n## autocomplete\n\n<C-x> <C-p> repeats previously typed text\n\n    1. Whole lines                                     |i CTRL-X CTRL-L|\n    2. keywords in the current file                    |i CTRL-X CTRL-N|\n    3. keywords in 'dictionary'                        |i CTRL-X CTRL-K|\n    4. keywords in 'thesaurus', thesaurus-style        |i CTRL-X CTRL-T|\n    5. keywords in the current and included files      |i CTRL-X CTRL-I|\n    6. tags                                            |i CTRL-X CTRL-]|\n    7. file names                                      |i CTRL-X CTRL-F|\n    8. definitions or macros                           |i CTRL-X CTRL-D|\n    9. Vim command-line                                |i CTRL-X CTRL-V|\n    10. User defined completion                        |i CTRL-X CTRL-U|\n    11. omni completion                                |i CTRL-X CTRL-O|\n    12. Spelling suggestions                           |i CTRL-X s|\n    13. keywords in 'complete'                         |i CTRL-N|\n\n## z-commands\n\n```zn```\t\tFold none: reset 'foldenable'.  All folds will be open.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-spaceflights-stream2'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Spaceflights - part 2 | Stream replay June 7, 2021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/neovim-live-substitution'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Live Substitution In Neovim</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2018-02-01", "edit_link": "https://github.com/edit/main/pages/blog/vim-notes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574458", "datetime": "2018-02-01 00:00:00+00:00", "slug": "vim-notes", "jinja": false, "output_html": "markout/vim-notes/index.html", "long_description": "I have gone quite awhile without using  edit a macro register register quickfix gF <C-x> zn", "super_description": "I have gone quite awhile without using  edit a macro register register quickfix gF <C-x> zn", "year": 2018, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658220>, next=<frontmatter.Post object at 0x7f3450652e80>)"}, {"cover": "", "title": "Kedro Spaceflights - part 2 | Stream replay June 7, 2021", "tags": ["kedro", "python", "stream"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/kedro-spaceflights-stream2.md", "description": "This was my seconf time ever streaming on", "content": "This was my seconf time ever streaming on\n[twitch.tv/waylonwalker](https://twitch.tv/waylonwalker), and I completely botched my mic 2x.\n\n[https://youtu.be/_7MwgKu-844](https://youtu.be/_7MwgKu-844)\n\n## Links\n\n* [Spaceflights Tutorial](https://kedro.readthedocs.io/en/stable/03_tutorial/01_spaceflights_tutorial.html)\n* [my spaceflights repo](https://github.com/WaylonWalker/kedro-spaceflights)\n\n## Notes to get started\n\n``` bash\npipx run kedro new\ncd project\npython -m venv .venv\nsource .venv/bin/activate\npip install kedro\nkedro install\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-static-viz-0-3-0'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Static Viz 0.3.0 is out with Hooks Support</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-spaceflights-stream1'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Spaceflights - part 1 | Stream replay June 4, 2021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-07", "edit_link": "https://github.com/edit/main/pages/blog/kedro-spaceflights-stream2.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574464", "datetime": "2021-06-07 00:00:00+00:00", "slug": "kedro-spaceflights-stream2", "jinja": false, "output_html": "markout/kedro-spaceflights-stream2/index.html", "long_description": "This was my seconf time ever streaming on", "super_description": "This was my seconf time ever streaming on", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652550>, next=<frontmatter.Post object at 0x7f345067f100>)"}, {"cover": "", "title": "Designing a \"Router\" for kedro", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/designing-kedro-router.md", "description": "I released a router-like plugin for kedro back in April 2020.  This was not the first design, the idea actually came from one of the QB folks who taught me kedr", "content": "## nodes_global\n\nI released a router-like plugin for kedro back in April 2020.  This was not the first design, the idea actually came from one of the QB folks who taught me kedro nearly a year before.  We were assembling our pipelines with something called `nodes_global`.  It worked fairly well but did have some issues around being set as a global variable.\n\n_But..._\n\nOne thing in particular that it did not lend itself well to was being able to create a packagable pipeline that I could pip install and append into any of my existing pipelines.  Something I am still trying to work out, maybe I don't need this.  I think I have it working for our internal pipelines and it seems like the way to go, but we don't necessarily end up using it.\n\n_Also..._\n\nWith this pattern all of the nodes needed to be importable by the module containing nodes_global.  I find that this becomes a big hurdle for new pipelines coming from jupyter to overcome and can be most infuriating when their nodes aren't getting ran after they added them.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> If you are a bit unsure about what kedro is make sure to check out my [what-is-kedro](https://waylonwalker.com/what-is-kedro/) article.\n\n\n## @node(inputs='a_raw_cars', outputs='b_int_cars')\nI set off to design something that was flask-like.  Around November I had something working.  You could simply start creating functions. and decorate these functions with a decorator just like with flask.  I even had it setup to autoname the nodes things like `create_b_int_cars`.\n\n_But...._\n\nThis did not lend well to pulling in functions from a library or dynamically creating nodes.  I didn't realize how few nodes I actually make in my pipelines that are a 1:1 relationship between the node and function in real work.  Most examples work this way, but for some reason when I step into a project we end up pulling a lot of functions out of existing libraries, or dynamically creating many datasets from a list of options.\n\n## pytest inspired\n_simplicity_\n\nThe final design ended up being suggested by a colleague of mine who is not using kedro, but is a  brilliant python dev.  The idea was to walk through the project like pytest does looking for modules and variables with a certain pattern (`node`, or `pipeline`).\n\nI have been using this since April and am loving it. It has have very little change since first release.  When I create a new module, that automatically becomes a new pipeline in my `pipelines` dict and all of the variables with the name node get scrapped up and put into a single pipeline.\n\n_Beginner Friendly_\n\nJust like with pytest.  You just start hacking in modules ending with `_nodes.py` with nodes in them and they just appear in your final pipeline.\n\n## How to use it\n\nThe [readme](https://github.com/WaylonWalker/find-kedro) has some great examples.\n\n## Install it\n\n``` python\npip install find-kedro\n```\n\n## Enable it\n\nEnable it by changing one line in your run.py\n\n_<small><mark>run.py</mark></small>_\n\n``` python\nfrom kedro.context import KedroContext\nfrom find_kedro import find_kedro\n\nclass ProjectContext(KedroContext):\n    def _get_pipelines(self) -> Pipeline:\n        return find_kedro()\n```\n\nOr if your using the new `hooks.py` method.  Again no need to import all of your nodes.\n\n_<small><mark>hooks.py</mark></small>_\n\n``` python\nclass ProjectHooks:\n    @hook_impl\n    def register_pipelines(self) -> Dict[str, Pipeline]:\n        \"\"\"Register the project's pipeline.\n        Returns:\n            A mapping from a pipeline name to a ``Pipeline`` object.\n        \"\"\"\n\n        return find_kedro()\n```\n\n## Use it \n\nCheck out the [readme](https://github.com/WaylonWalker/find-kedro) for more examples, but this one is the one that I use and recommend most often.  This method helps keep nodes close to functions that are designed for them.\n\n_<small><mark>my_nodes.py</mark></small>_\n\n``` python\n# my-proj/pipelinies/data_engineering/pipeline\nfrom kedro.pipeline import node\nfrom .nodes import split_data\n\nnodes = []\n\ndef split_data(df: pd.DataFrame, ratio: float) -> Dict[str, pd.DataFrame]:\n   ...\n\nnodes.append(\n    node(\n        split_data,\n        [\"example_iris_data\", \"params:example_test_data_ratio\"],\n        dict(\n            train_x=\"example_train_x\",\n            train_y=\"example_train_y\",\n            test_x=\"example_test_x\",\n            test_y=\"example_test_y\",\n        ),\n    )\n)\n```\n\n\n## Want a simple guide to get started with find kedro\n\n\n<p style='text-align: center' align='center'>\n<a href='https://find.kedro.dev/examples/iris/'>\n  <img\n    style='width:400px; max-width:80%; border-radius: 35px; margin: auto;'\n    width='400'\n    src=\"https://images.waylonwalker.com/find-kedro-examples-iris.png\"\n    alt=\"Find Kedro Iris example\"\n  />\n  </a>\n</p>\n\nIn [this doc](https://find.kedro.dev/examples/iris/) I transform the kedro iris template to find-kedro.\n\n## Ready to start using kedro\n\nIf you still have not tried out kedro, it's easier than you think. Check out [create-new-kedro-project](https://waylonwalker.com/create-new-kedro-project/) to get a project started in just a few minutes.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/create-new-kedro-project/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/create-new-kedro-project-og_250x140.png\" alt=\"article cover for \n Create New Kedro Project\n\"/>\n          <p><strong>\n Create New Kedro Project\n</strong></p>\n      </a>\n  </div>\n\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/devto-comments-from-url'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to get Dev Comments from an article Url</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/debugging-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Debugging Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-08", "edit_link": "https://github.com/edit/main/pages/blog/designing-kedro-router.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574470", "datetime": "2020-10-08 00:00:00+00:00", "slug": "designing-kedro-router", "jinja": false, "output_html": "markout/designing-kedro-router/index.html", "long_description": "I released a router-like plugin for kedro back in April 2020.  This was not the first design, the idea actually came from one of the QB folks who taught me kedro nearly a year before.  We were assembling our pipelines with something called  One thing", "super_description": "I released a router-like plugin for kedro back in April 2020.  This was not the first design, the idea actually came from one of the QB folks who taught me kedro nearly a year before.  We were assembling our pipelines with something called  One thing in particular that it did not lend itself well to was being able to create a packagable pipeline that I could pip install and append into any of my existing pipelines.  Something I am still trying to work out, maybe I don With this pattern all of th", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9670>, next=<frontmatter.Post object at 0x7f345066cf70>)"}, {"cover": "", "title": "I finally fixed my Styled-Components in gatsby.js", "tags": ["webdev", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/fix-styled-components-in-gatsby.md", "description": "I finally fixed my Styled-Components in gatsby.js. I am starting a redesign of I have a small issue that has plagued the site for at least a year I have been us", "content": "I finally fixed my Styled-Components in gatsby.js. I am starting a redesign of\nmy website.  I have started cross posting to [dev.to](https://dev.to) more\nregularly.  With that I have been making more detailed cover images at the\nrecommended `1000x420`.  These images get cut off on my own site, which is a\nbit ridiculous to have my own content not look right on my own site.  But\nbefore we start a heavy redesign I have a small issue that has plagued the site\nfor at least a year!\n\n> I have a small issue that has plagued the site for at least a year!\n\nI have been using styled components in my gatsby.js site for about a year now.  And it has been plagued by styled-components not being in the ssr causing some jank in the styles being loaded.  You can see it in the lighthouse performance report below.  It generally loads super quick, and is only caused on first load.  Anything using the gatsby `<Link/>` component typically is fine and unaffected by the issue.\n\n## The fix\n\nThe fix was so simple it was only 2 lines total. One to install `gatsby-plugin-styled-components` and one to use it.\n\n``` bash\nnpm i gatsby-plugin-styled-components\n```\n\n``` json\nplugins: [\n   'gatsby-plugin-styled-components',\n]\n```\n\n## Before\n\n![](https://images.waylonwalker.com/2020-02-06 15-27-45_Start.png)\n\n## After\n\n![](https://images.waylonwalker.com/2020-02-07 17-20-31_Start.png)\n\n## Why did it take so long to Fix?\n\nThe real issue here was that I really didn't understand the problem as I described it above until I found the fix. It really did seem random that at odd times the styles would seem to vanish.  Sometimes never fully rehydrating at all.  Well actually I had fixed some production sites at work with it, but had no idea why it worked and therefore could not remember how I had fixed it, and google searched yielded no help.\n\n![](https://images.waylonwalker.com/the-moment-i-realized-the-true-problem-1.png)\n\nAfter re-watching Wes Bos's Advanced react course where he describes how to fix this issue for `next.js` sites it became clear that the problem was not random at all.  It was that they do not get statically rendered and are only on the page after react is re-hydrated.  The moment I realized the **true** problem I knew how to google it and quickly found there was a plugin for this.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/flexbox-zombies'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>FlexBox</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/fix-git-commit-author'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Fix git commit author</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-08", "edit_link": "https://github.com/edit/main/pages/blog/fix-styled-components-in-gatsby.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574476", "datetime": "2020-02-08 00:00:00+00:00", "slug": "fix-styled-components-in-gatsby", "jinja": false, "output_html": "markout/fix-styled-components-in-gatsby/index.html", "long_description": "I finally fixed my Styled-Components in gatsby.js. I am starting a redesign of I have a small issue that has plagued the site for at least a year I have been using styled components in my gatsby.js site for about a year now.  And it has been plagued ", "super_description": "I finally fixed my Styled-Components in gatsby.js. I am starting a redesign of I have a small issue that has plagued the site for at least a year I have been using styled components in my gatsby.js site for about a year now.  And it has been plagued by styled-components not being in the ssr causing some jank in the styles being loaded.  You can see it in the lighthouse performance report below.  It generally loads super quick, and is only caused on first load.  Anything using the gatsby  The fix", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3c10>, next=<frontmatter.Post object at 0x7f345065e160>)"}, {"cover": "", "title": "tmux status-bar", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-status-bar.md", "description": "https://youtu.be/mvgM8UH11 The tmux status bar can be a handy tool to remind yourself where you are within You can set a hotkey to show or hide the status bar. ", "content": "https://youtu.be/mvgM8UH11_U\n\nThe tmux status bar can be a handy tool to remind yourself where you are within\ntmux.  It can also include a bunch of system information like battery status,\ncpu, mem, whatever you can get from the command  line.  Honestly I like to keep\nit minimal, and actually keep it turned off most of the time.  I find that it\nhelps a little bit for others to follow along if I keep it on in certain\ncircumstances.\n\n##  show the status bar\n\nYou can set a hotkey to show or hide the status bar.\n\n``` bash\nbind s set-option -g status\nbind C-s set-option -g status\n```\n\n## setting the background transparent\n\nI really want a minimal status bar with very little bling, I want it to get out\nof the way an not draw too much attention, so step one is to set the background\nto transparent.\n\n``` bash\n# default statusbar colors\n#\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nset-option -g status-bg default\nset-option -g status-fg colour240\n```\n\n## setting default colors\n\nI want my status bar to somewhat match the rest of my theme, so I set the\ndefault foreground as magenta and the default background as transparent.\n\n``` bash\n# default window title colors\n#\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\nset-window-option -g window-status-style fg=magenta\nset-window-option -g window-status-style bg=default\n```\n\n## my status bar\n\nHonestly I set this up quite awhile ago, and it does everything I need it to\nfor now.  It shows me the current session that I am in on the left and lists\nout the windows for the session in the middle.\n\n``` bash\nset -g status-left-length 85\nset -g status-left \"working on#[fg=colour135] #S\"\nset -g window-status-current-format \"#[fg=black,bold bg=default]\u2502#[fg=white bg=cyan]#W#[fg=black,bold bg=default]\u2502\"\nset -g window-status-current-format \"#[fg=black,bold bg=default]\u2502#[fg=colour135 bg=black]#W#[fg=black,bold bg=default]\u2502\"\nset -g status-style bg=default\nset -g status-right \"#[fg=magenta] #[bg=gray] %b %d %Y %l:%M %p\"\nset -g status-right '#(gitmux \"#{pane_current_path}\")'\nset -g status-justify centre\n```\n\nFor more format options search for FORMATS in the tmux manpage.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-ta'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux ta</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-start-application'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux start application</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-07", "edit_link": "https://github.com/edit/main/pages/blog/tmux-status-bar.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574482", "datetime": "2021-08-07 00:00:00+00:00", "slug": "tmux-status-bar", "jinja": false, "output_html": "markout/tmux-status-bar/index.html", "long_description": "https://youtu.be/mvgM8UH11 The tmux status bar can be a handy tool to remind yourself where you are within You can set a hotkey to show or hide the status bar. I really want a minimal status bar with very little bling, I want it to get out I want my ", "super_description": "https://youtu.be/mvgM8UH11 The tmux status bar can be a handy tool to remind yourself where you are within You can set a hotkey to show or hide the status bar. I really want a minimal status bar with very little bling, I want it to get out I want my status bar to somewhat match the rest of my theme, so I set the Honestly I set this up quite awhile ago, and it does everything I need it to For more format options search for FORMATS in the tmux manpage. https://waylonwalker.com/tmux-nav-2021/ for m", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1c10>, next=<frontmatter.Post object at 0x7f34506914c0>)"}, {"cover": "", "title": "Python Tips", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/python-tips.md", "description": "** func( locals().update(d)", "content": "## Dictionaries\n\n### Unpacking\n\n* **kwargs\n* func(**input)\n* locals().update(d)\n\n###\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/ipython-config'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Ipython-Config</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-status-bar'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux status-bar</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-01-21", "edit_link": "https://github.com/edit/main/pages/blog/python-tips.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574488", "datetime": "2019-01-21 00:00:00+00:00", "slug": "python-tips", "jinja": false, "output_html": "markout/python-tips/index.html", "long_description": "** func( locals().update(d)", "super_description": "** func( locals().update(d)", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658340>, next=<frontmatter.Post object at 0x7f345064ca00>)"}, {"cover": "", "title": "Ipython-Config", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/ipython-config.md", "description": "I use my ipython terminal daily.  It Activate your virtual environment of choice and pip install it.  Any time you You are using a virtual environment right? Vi", "content": "I use my ipython terminal daily.  It's my go to way of running python most of\nthe time.  After you use it for a little bit you will probably want to setup a\nbit of your own configuration.\n\n\n## install ipython\n\nActivate your virtual environment of choice and pip install it.  Any time you\nare running your project in a virtual environment, you will need to install\nipython inside it to access those packages from ipython.\n\n\n```bash\npip install ipython\n```\n\n> You are using a virtual environment right? Virtual environments like venv or\n> conda can save you a ton of pain down the road.\n\n## profile_default\n\nWhen you install ipython you start out with no config at all.  Runnign `ipython\nprofile create` will start a new profile called `profile_default` that contains\nall of the default configuration.\n\n```\nipython profile create\n```\n\nThis command will create a directory `~/.ipython/profile_default`\n\n## multiple configurations\n\nYou can run multiple configurations by naming them with `ipython profile create\n[profile_name]` This command will create a directory\n`~/.ipython/[profile_name]`\n\n```\nipython profile create my_profile\nipython --profile=my-profile\n```\n\n## startup\n\nInside the profile there will be a startup directory\n`~/.ipython/profile_default/startup`.  Ipython will execute each of the files\nin this directory on startup.  This is particularly handy to create custom\nprompts, search, or import packages automatically for certian profiles.\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/custom-ipython-prompt/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/custom-ipython-prompt-og_250x140.png\" alt=\"article cover for \n Custom Ipython Prompt\n\"/>\n          <p><strong>\n Custom Ipython Prompt\n</strong></p>\n      </a>\n  </div>\n\n\n> This post creates a custom ipython prompt by creating a\n> `~/.ipython/profile_default/startup/prompt.py` file.\n\n## ipython_config.py\n\n\nThere are tons of options that are in the `ipython_config.py` file.  My\nfavorite is to automatically enable my favorite magic command autoreload.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/autoreload-ipython/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/autoreload-ipython-og_250x140.png\" alt=\"article cover for \n Autoreload in Ipython\n\"/>\n          <p><strong>\n Autoreload in Ipython\n</strong></p>\n      </a>\n  </div>\n\n\n``` python\nc.InteractiveShellApp.extensions = ['autoreload'\nc.InteractiveShellApp.exec_lines = []'%autoreload 2']\nc.InteractiveShellApp.exec_lines.append('print(\"Warning: disable autoreload in ipython_config.py to improve performance.\")')\n```\n\n## Want automatic imports??\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/pyflyby/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/pyflyby-og_250x140.png\" alt=\"article cover for \n Smoother Python with automatic imports | pyflyby\n\"/>\n          <p><strong>\n Smoother Python with automatic imports | pyflyby\n</strong></p>\n      </a>\n  </div>\n\n\n> This article covers how I setup automatic imports in ipython\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/ipython-help'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Just Ask Ipython for help</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/interrogate'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Interrogate is a pretty awesome, brand new, cli for Python packages</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-12-20", "edit_link": "https://github.com/edit/main/pages/blog/ipython-config.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574494", "datetime": "2020-12-20 00:00:00+00:00", "slug": "ipython-config", "jinja": false, "output_html": "markout/ipython-config/index.html", "long_description": "I use my ipython terminal daily.  It Activate your virtual environment of choice and pip install it.  Any time you You are using a virtual environment right? Virtual environments like venv or When you install ipython you start out with no config at a", "super_description": "I use my ipython terminal daily.  It Activate your virtual environment of choice and pip install it.  Any time you You are using a virtual environment right? Virtual environments like venv or When you install ipython you start out with no config at all.  Runnign  This command will create a directory  You can run multiple configurations by naming them with  Inside the profile there will be a startup directory https://waylonwalker.com/custom-ipython-prompt/ This post creates a custom ipython promp", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506919d0>, next=<frontmatter.Post object at 0x7f3450696c10>)"}, {"cover": "", "title": "simple click", "tags": ["python", "cli"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/simple-click.md", "description": "Add helpful cli to your python libraries... All of them!", "content": "cli tools are super handy and easy to add to your python libraries to supercharge them. Even if your library is not a cli tool there are a number of things that a cli can do to your library.\n\n## Example Ideas\n\nThings a cli can do to enhance your library.\n\n\ud83c\udd9a print version\n\ud83d\udd76 print readme\n\ud83d\udcdd print changelog\n\ud83d\udcc3 print config\n\u270f change config\n\ud83d\udc69\u200d\ud83c\udf93 run a tutorial\n\ud83c\udfd7 scaffold a project with cookiecutter\n\n## \ud83d\uddb1 [Click](https://click.palletsprojects.com/)\n\n[Click](https://click.palletsprojects.com/) is the most popular python cli tool framework for python. There are others, some old, some new comers that make take the crown. For now [Click](https://click.palletsprojects.com/) is the gold standard if you want to make a powerful cli quickly. If you are dependency conscious and dont need a lot of tooling, use [argparse](https://docs.python.org/3/library/argparse.html).\n\n## Project Structure\n\n    .\n    \u251c\u2500\u2500 setup.py\n    \u2514\u2500\u2500 simple_click\n        \u251c\u2500\u2500 cli.py\n        \u2514\u2500\u2500 __init__.py\n\n## \u276f cli.py\n\n``` python\n    # simple_click/cli.py\n    import click\n\n    __version__ = \"1.0.0\"\n\n    @click.group()\n    def cli():\n       pass\n\n    @cli.command()\n    def version():\n        \"\"\"prints project version\"\"\"\n        click.echo(__version__)\n\n\n    if __name__ == '__main__':\n        cli()\n```\n\n## \u2728 **init**.py\n\nFor our simple_click library `__init__.py__` can be left empty. It is here purely to signify that simple_click is a library. It is likely that you will import other modules here that need to reside at the top level of your library api, your cli does not need to be at the top of of your api.\n\n``` python\n    # __init__.py\n```\n\n## \ud83d\udeaa Entry Points\n\nEntry points are the magic that make python cli tools available as their own command without having python before it or the file extension.\n\n``` python\n    # setup.py\n\n    from setuptools import setup, find_packages\n\n    # this is the \ud83e\udd69 meat of this snippet\n    # simple_click is the command name\n    # = simple_click is the library name\n    # .cli is the cli.py file\n    # :cli is the cli function\n    #\n    # the second item is a shorthand alias to the main command\n\n    entry_points = [\n       \"simple_click = simple_click.cli:cli\",\n       \"scli         = simple_click.cli:cli\",\n    ]\n\n\n    setup(\n        name='simple_click',\n        version='1.0.0',\n        url='https://github.com/mypackage.git',\n        packages=find_packages(),\n        entry_points={\"console_scripts\": entry_points},\n\n    )\n```\n\n## \ud83d\udd76 See it in action\n\n![Simple-click-in-action](https://images.waylonwalker.com/simple_click3.gif)\n\n## \ud83d\udce2 Discuss\n\nWhat do You wish more python libraries included in their cli?  [Tweet it @_waylonwalker](https://twitter.com/intent/tweet?text=@_waylonwalker%20More%20libraries%20should%20...%0A%0Awaylonwalker.com/b/scli)\n\n![Tweet it @_waylonwalker](https://twitter.com/intent/tweet?text=@_waylonwalker%20More%20libraries%20should%20...%0A%0Awaylonwalker.com/b/scli)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/sqlalchemy-models'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>SqlAlchemy Models</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/should-i-switch-to-zeit-now'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Should I switch to Zeit Now</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-29", "edit_link": "https://github.com/edit/main/pages/blog/simple-click.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574502", "datetime": "2020-01-29 00:00:00+00:00", "slug": "simple-click", "jinja": false, "output_html": "markout/simple-click/index.html", "long_description": "cli tools are super handy and easy to add to your python libraries to supercharge them. Even if your library is not a cli tool there are a number of things that a cli can do to your library. Things a cli can do to enhance your library. \ud83c\udd9a print versio", "super_description": "cli tools are super handy and easy to add to your python libraries to supercharge them. Even if your library is not a cli tool there are a number of things that a cli can do to your library. Things a cli can do to enhance your library. \ud83c\udd9a print version For our simple Entry points are the magic that make python cli tools available as their own command without having python before it or the file extension. What do You wish more python libraries included in their cli?  ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663f70>, next=<frontmatter.Post object at 0x7f34506ae1f0>)"}, {"cover": "", "title": "Three things to Automate with Python using Pandas", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/3-things-to-automate-with-python.md", "description": "Here are three things that I see my non programming counterparts doing every single day.  These really sum up so much of what folks do within an office.  So man", "content": "Here are three things that I see my non programming counterparts doing every single day.  These really sum up so much of what folks do within an office.  So many of us dabble in or become power users of spreadsheets without knowing there is an alternative out there that can save us time, automate boring things, and allow us to open up our minds for the part that we add value, Thinking about the data.\n\n## Focus on Value Add Operations\n\nLets face it, stitching together spreadsheets is zero value add by itself, but if you can see something in the data and take action on it, this can be huge value add to your company. Learning just a bit of python will help focus more of your attention on \"value add operations\" and leave the mundane stuff to your computer.\n\n\n## Merge a directory full of spreadsheets into one\n\nI see this one all the time.  One team gets a spreadsheet from another team once per month and they need to stich all the pieces together.  Excel really opens the door for some nasty hidden bugs in your manually stiched together data.  It also takes time out of your day that you dont need to spend.\n\n``` python\nimport pandas as pd\nfrom pathlib import Path\n\nfiles = Path.glob('raw/*.csv')\ncsvs = [pd.read_csv(file) for file in files]\ncsvs_combined = pd.concat(csvs)\ncsvs_combined.to_csv('processed/combined.csv')\n```\n\n## Fetch data from a url\n\nIt might be possible that the other team shares their data on a website.  If you can get access to the data via a url, as in the example below there is no need to go to the website to save the data every week/month, you can have python do that for you.  It's very likely that you will need to combine this with step one in many workflows.  Now your data compiling can be done in one single running of a script.  Your data is still in a format that excel can read and you can stick with a hybrid workflow while you become comfortable in python.\n\nThere is no shame in opening excel to do something in 5 minutes that would take an hour of research to do in python.  If you stick to it though, piece by piece everything will come together.  You will be able to do more in python than you could imagine in excel and you will wonder how you did it without the help of python.\n\n``` python\nimport pandas as pd\n\ncars_url = 'https://www.kaggle.com/abineshkumark/carsdata/download/xrvGk4JtQZJZetxwsCCy%2Fversions%2Fl2HR9tTLKz8MzHMAjBcl%2Ffiles%2Fcars.csv?datasetVersionNumber=1'\ncars = pd.read_csv(cars_url)\n\ncars.to_csv('cars.csv')\n```\n\n## Fetch data from a database\n\nThis one can be a bit trickier, often requires hunting down tables that are undocumented. Getting access, and figuring out the crednetials.  If you can get over that hump though it is likely that you will have access to several data source that you typically use in one place.  From there you can learn how to join them together to create powerful workflows.\n\nSQL can be a very daunting language to learn but if you spend an hour with it you will know enough to at least get the data into python or excel.  You can continue to hone your sql skills and move more of your aggregation/analysis into the database for better performance.  If you are asking for 1M rows for a 10 row report the efficiency gains of doing that aggregation in the database and not sending 1M rows over the wire can be immense.\n\n``` python\nimport pandas as pd\nfrom sqlalchemy import create engine\n\nengine = create_engine('postgresql://scott:tiger@localhost:5432/mydatabase')\n\nsql = 'select * from inventory'\n\nwith engine.connect() as connection:\n    inventory = pd.read_sql(sql, con)\nengine.dispose()\n\ninventory.to_csv('cars')\n```\n\n## Learning to automate has value\n\nI often see folks joking that developers will spend 10 minutes to automate a 1 minute task that they will only ever do once.  There is definitely a limit to when your time is more valueable just doing the task and moving on, but as you hone your skills you will get much faster.\n\nThings that needed research slowly become intuitive.  Things that used to be brain twisting 50 lines can be an easy to read 12.\n\nSlowly you get better.\n\nThings that were unfeasible become part of your wheelhouse.\n\nGive value to the learning process of automating tasks.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/adding-google-fonts-to-a-gatsbyjs-site'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Adding google fonts to a gatsbyjs site</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/2021-content-strategy'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>My Content Strategy For 2021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-11", "edit_link": "https://github.com/edit/main/pages/blog/3-things-to-automate-with-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574508", "datetime": "2020-08-11 00:00:00+00:00", "slug": "3-things-to-automate-with-python", "jinja": false, "output_html": "markout/3-things-to-automate-with-python/index.html", "long_description": "Here are three things that I see my non programming counterparts doing every single day.  These really sum up so much of what folks do within an office.  So many of us dabble in or become power users of spreadsheets without knowing there is an altern", "super_description": "Here are three things that I see my non programming counterparts doing every single day.  These really sum up so much of what folks do within an office.  So many of us dabble in or become power users of spreadsheets without knowing there is an alternative out there that can save us time, automate boring things, and allow us to open up our minds for the part that we add value, Thinking about the data. Lets face it, stitching together spreadsheets is zero value add by itself, but if you can see so", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066ccd0>, next=<frontmatter.Post object at 0x7f3450691d30>)"}, {"cover": "", "title": "JUT | Read Notebooks in the Terminal", "tags": ["linux", "bash", "datascience"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/jut.md", "description": "Trying to read a .ipynb file without starting a jupyter server?  jut has you https://youtu.be/t8AvImnwor0 watch the video version of this post on  jut ! Take a ", "content": "Trying to read a .ipynb file without starting a jupyter server?  jut has you\ncovered.\n\nhttps://youtu.be/t8AvImnwor0\n\n> watch the video version of this post on [YouTube](https://youtu.be/t8AvImnwor0)\n\n## install\n\n`jut` is packaged and available on pypi so installing is as easy as pip installing it.\n\n\n``` bash\npip install jut\n```\n\n![installing jut with pip](https://images.waylonwalker.com/jut-install.gif)\n\n> ! This is my first time including snippets of the video in the article like this, let me know what you think!\n\n## examples\n\n\n``` bash\njut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb\njut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --head 3\njut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --tail 2\n```\n\n![running jut examples](https://images.waylonwalker.com/jut-command.gif)\n\n## what are all the commands available for jut?\n\nTake a look at the help of the `jut` cli to explore all the options that it\noffers.\n\n``` bash\njut --help\n```\n\nThere is some good information on the projects\n[readme](https://github.com/kracekumar/jut) as well.\n\n![getting help with jut](https://images.waylonwalker.com/jut-help.gif)\n\n## without installing\n_using pipx_\n\nDon't want jut cluttering up your venv, or want to save yourself from making a\nnew one, [`pipx`](https://github.com/pypa/pipx) can manage a separate virual\nenvironment for you.  This is one of the biggest selling points for me.\n\n``` bash\npipx run jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --head 3\n```\n\n![running jut with pipx](https://images.waylonwalker.com/jut-pipx.gif)\n\n## nbconvert\n\n`jut` is the lightweight option that I think will fit the bill often for me,\nbut it just doesn't always cut it.  Mostly if there are images in the notebook\nor  large output that is hard to read, its time to pull out the medium guns\nthat sit between fulling running jupyter and `jut`.\n\n``` bash\npip install nbconvert\n```\n\n> nbconvert does not have its own cli, instead it sits under the jupyter command.\n\n\n### converting to html\n\n> Need to see images, go here!\n\n``` bash\nwget https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb\njupyter nbconvert flame_temperature.ipynb --to html\npython -m http.server\n```\n\n> Note, nb convert does not work with a url, you will need to have the notebook locally.\n\n![nbconvert to html to see images](https://images.waylonwalker.com/jut-nbconvert-html.gif)\n\n## what other options does nbconvert offer?\n\n`nbconvert` also offers a standard help flag that you can access by passing in\nthe `--help` flag\n\n``` bash\njupyter nbconvert --help\n```\n\n### converting to markdown\n\n`nbconvert` also supports converting to many other formats, one option that is\nquite interesting for use in the terminal is markdown.  We could simply convert\nthe notebook to markdown and cat it out.\n\n``` bash\njupyter nbconvert flame_temperature.ipynb --to maarkdown\ncat flameflame_temperature.md\n```\n\n![nbconvert to markdown and displaying in bat](https://images.waylonwalker.com/jut-nbconvert-markdown-bat.gif)\n\n### viewing markdown with glow\n\nGlow is a terminal markdown viewer that looks really good.  These days I use\n`bat` as `cat` so I don't get quite as much benefit from `glow`, but it still\nlooks pretty good.\n\n\n```\nglow flameflame_temperature.md\n```\n\n![nbconvert to markdown and displaying in glow](https://images.waylonwalker.com/jut-nbconvert-markdown-glow.gif)\n\n### viewing markdown as slides with lookatme\n_[lookatme](https://github.com/d0c-s4vage/lookatme)_\n\nLookatme is my slideshow tool of choice.  Creating slides in markdown is such a\nfantasic user experience,  It realy lets you go from outline to finished slide\ndeck fluidly.  Refactoring the whole thing is also so much easier than with gui\ntools.  Once you have your idea fleshed out it does make the process of making\nslides in powerpoint much easier if thats what you need.\n\n\nOn to nbconvert, without even changing the notebook we can look at the notebook\nas a slideshow in the terminal.  The only thing that it needs is some markdown\nheaders to start new slides from.\n\n``` bash\nlookatme flameflame_temperature.md\n```\n\n![nbconvert to markdown and displaying as slides with lookatme](https://images.waylonwalker.com/jut-nbconvert-markdown-lookatme.gif)\n\n### viewing markdown with rich\n\nBringing this full circle, lets take a look at the converted markdown with\nrich.  Here you will notice a surprising similarity to what we saw with `jut`.\n\n``` bash\npip install rich\npython -m rich.markdown flame_temperature.md\n```\n\nRich still cannot pull directly from a url or display markdown with out being\ninstalled and managed by yourself.  Unlike how `jut` can leverage [`pipx`](https://github.com/pypa/pipx) to\nmanage the installation sandbox for you.\n\n\n\n## Links\n\n* [jut](https://github.com/kracekumar/jut) - View notebooks in the terminal\n* [nbconvert](https://nbconvert.readthedocs.io/en/latest/usage.html) - convert notebooks to other formats\n* [flame-temperature notebook](https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb) - The sample notebook I used\n* [glow](https://github.com/charmbracelet/glow) - Terminal Markdown viewer\n* [lookatme](https://github.com/d0c-s4vage/lookatme) - Terminal Markdown slideshow tool\n* [pipx](https://github.com/pypa/pipx) - Run python cli's without maintianing a virtual environment\n* [rich](https://github.com/willmcgugan/rich) - Beautiful python terminal formatter\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/just-use-pathlib'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Just Use Pathlib</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-11-20", "edit_link": "https://github.com/edit/main/pages/blog/jut.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574514", "datetime": "2021-11-20 00:00:00+00:00", "slug": "jut", "jinja": false, "output_html": "markout/jut/index.html", "long_description": "Trying to read a .ipynb file without starting a jupyter server?  jut has you https://youtu.be/t8AvImnwor0 watch the video version of this post on  jut ! Take a look at the help of the  There is some good information on the projects Don jut nbconvert ", "super_description": "Trying to read a .ipynb file without starting a jupyter server?  jut has you https://youtu.be/t8AvImnwor0 watch the video version of this post on  jut ! Take a look at the help of the  There is some good information on the projects Don jut nbconvert does not have its own cli, instead it sits under the jupyter command. Need to see images, go here Note, nb convert does not work with a url, you will need to have the notebook locally. nbconvert nbconvert Glow is a terminal markdown viewer that looks", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c190>, next=<frontmatter.Post object at 0x7f34506720d0>)"}, {"cover": "", "title": "tmux fzf session jumper", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/tmux-fzf-session-jump.md", "description": "https://youtu.be/DkJ9rb85LC0 Quickly getting between tmux splits is critical skill for productivity.  You I have used this fzf one keybinding for quite awhile, ", "content": "https://youtu.be/DkJ9rb85LC0\n\nQuickly getting between tmux splits is critical skill for productivity.  You\ncan get by with `next` or `prev` session for awhile, but if you have more than\nabout three session you need something a bit more targeted.\n\n\n## Full Screen selector\n\nI have used this fzf one keybinding for quite awhile,  honestly I did not make\nit up, and cannot remember where it came from. It will open up a session picker\nin a new full screen window.\n\n``` bash\nbind C-j new-window -n \"session-switcher\" \"\\\n    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\\\n    sed '/^$/d' |\\\n    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\\\n    xargs tmux switch-client -t\"\n\n```\n\n## Popup selector\n\nLike with many of my keybindings I have swapped this one out for a popup\nversion.  It just feels so smooth.\n\n``` bash\nbind C-j display-popup -E \"\\\n    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\\\n    sed '/^$/d' |\\\n    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\\\n    xargs tmux switch-client -t\"\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-nav-2021/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png\" alt=\"article cover for \n How I navigate tmux in 2021\n\"/>\n          <p><strong>\n How I navigate tmux in 2021\n</strong></p>\n      </a>\n  </div>\n\n\n> for more information on how I navigate tmux, check out this full post\n\n\nAlso check out the full YouTube\n[tmux-playlist](https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr)\nto see all of the videos in this series.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-has-session'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux has-session</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/tmux-floating-popups'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux floating popups</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "Tags": ["cli", "linux", "tmux"], "date": "2021-08-05", "edit_link": "https://github.com/edit/main/pages/blog/tmux-fzf-session-jump.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574520", "datetime": "2021-08-05 00:00:00+00:00", "slug": "tmux-fzf-session-jump", "jinja": false, "output_html": "markout/tmux-fzf-session-jump/index.html", "long_description": "https://youtu.be/DkJ9rb85LC0 Quickly getting between tmux splits is critical skill for productivity.  You I have used this fzf one keybinding for quite awhile,  honestly I did not make Like with many of my keybindings I have swapped this one out for ", "super_description": "https://youtu.be/DkJ9rb85LC0 Quickly getting between tmux splits is critical skill for productivity.  You I have used this fzf one keybinding for quite awhile,  honestly I did not make Like with many of my keybindings I have swapped this one out for a popup https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post Also check out the full YouTube", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f550>, next=<frontmatter.Post object at 0x7f34506a9040>)"}, {"cover": "", "title": "Send Emails with GitHub Actions", "tags": ["actions"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/send-email-with-github-actions.md", "description": "Here is one useful thing that you can do with GitHub actions no matter what language you use, send email.  You might want to know right away when your ci passes", "content": "Here is one useful thing that you can do with GitHub actions no matter what language you use, send email.  You might want to know right away when your ci passes.  You might want to give your team a nice pat on the back when a new release is deployed.  There might be subscribers wanting to see the latest release notes in their inbox as soon as the latest version is deployed.  Whatever it is, its pretty easy to do with an action right out of the actions marketplace.\n\n## Mail on Star\n\nHere is a silly example that sends an email to yourself anytime someone stars your repo.\n\n``` yml\nname: Mail on Star\n\non:\n  watch:\n    types: [ started ]\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"email\"\n  email:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      - name: \u2728 Send email, you star\n        uses: dawidd6/action-send-mail@v1.3.0\n        with:\n          server_address: smtp.gmail.com\n          server_port: 465\n          username: quadmx08\n          password: ${{ secrets.GMAIL_PASS }}\n          subject: Your a star \u2728\n          body: ${{ github.actor }} just starred your mail-on-star repo!!! ${{ github.repository }}\n          to: ${{ secrets.GMAIL_ADDRESS }}\n          from: ${{ secrets.GMAIL_ADDRESS }}\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/serverless-things-to-investigate'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Serverless things to investigate</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/save-vim-macro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Save Vim Macro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-03-31", "edit_link": "https://github.com/edit/main/pages/blog/send-email-with-github-actions.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574525", "datetime": "2020-03-31 00:00:00+00:00", "slug": "send-email-with-github-actions", "output_html": "markout/send-email-with-github-actions/index.html", "long_description": "Here is one useful thing that you can do with GitHub actions no matter what language you use, send email.  You might want to know right away when your ci passes.  You might want to give your team a nice pat on the back when a new release is deployed.", "super_description": "Here is one useful thing that you can do with GitHub actions no matter what language you use, send email.  You might want to know right away when your ci passes.  You might want to give your team a nice pat on the back when a new release is deployed.  There might be subscribers wanting to see the latest release notes in their inbox as soon as the latest version is deployed.  Whatever it is, its pretty easy to do with an action right out of the actions marketplace. Here is a silly example that se", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663ca0>, next=<frontmatter.Post object at 0x7f3450646e50>)"}, {"cover": "", "title": "List the latest files to change in a git repo", "tags": [], "status": "false", "templateKey": "blog-post", "path": "pages/blog/last-n-git-files.md", "description": "prev What is Kedro next Send Emails with GitHub Actions", "content": "``` bash\nwhile read file; do echo $(git log --pretty=format:%ad -n 1 --date=raw -- $file) $file; done < <(git ls-tree -r --name-only HEAD | grep static/stories) | sort -r | head -n 3 | cut -d \" \" -f 3\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/what-is-kedro-1'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What is Kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/send-email-with-github-actions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Send Emails with GitHub Actions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-08", "edit_link": "https://github.com/edit/main/pages/blog/last-n-git-files.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574531", "datetime": "2020-10-08 00:00:00+00:00", "slug": "last-n-git-files", "jinja": false, "output_html": "markout/last-n-git-files/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e1f0>, next=<frontmatter.Post object at 0x7f3450658b20>)"}, {"cover": "", "title": "What is Kedro", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/what-is-kedro-1.md", "description": "https://waylonwalker.com/what-is-kedro This is my original what-is-kedro article.  There is a brand new one Kedro is an open source data pipeline framework.  It", "content": "\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> This is my original what-is-kedro article.  There is a brand new one\n\n---\n\nKedro is an open source data pipeline framework.  It provides guardrails to set\nyour project up right from the start without needing to know deeply how to\nsetup your own python library for data pipelining.  It includes really great\nways to manipulate `catalogs` and `pipelines`.  This article will cover the 10K\nview of kedro, future articles will dive deper into each one.\n\n[kedro](https://kedro.readthedocs.io) is an open-source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know deeply how to set up your own python library for data pipelining.  It includes great ways to manipulate `catalogs` and `pipelines`.  This article will cover the 10K view of [kedro](https://kedro.readthedocs.io), future articles will dive deeper into each one.\n\n<!-- {% slideshare DAZrqvJmuUUfFF %} -->\n\n\n## Libraries\n\nCurrently, [kedro](https://kedro.readthedocs.io) is broken down into 3 different libraries.\n\n\ud83d\udc8e [kedro](https://kedro.readthedocs.io)\n\n\ud83d\udcc9 [kedro-viz](https://github.com/quantumblacklabs/kedro-viz)\n\n\ud83c\udfd7 [kedro-docker](https://github.com/quantumblacklabs/kedro-docker)\n\n## [kedro](https://kedro.readthedocs.io)\n\n![kedro logo](https://images.waylonwalker.com/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7175616e74756d626c61636b6c6162732f6b6564726f2f6d61737465722f696d672f6b6564726f5f62616e6e65722e6a7067.jpg)\n\n\n[kedro](https://kedro.readthedocs.io) is the core of the ecosystem.  It provides the docs, getting started, `kedro new` templates, and the core library including the catalog and pipeline.\n\n### Catalog\n\n![catalogs](https://dev-to-uploads.s3.amazonaws.com/i/trzfj86dbq0ronis26x1.jpg)\n\nInside this core library is a data catalog object.  This allows you to specify attributes about your data, then load and save it without ever writing a single line of read/write code, which can become very cumbersome.  Older versions would load this into the io variable, currently it loads into the catalog.  The power of the catalog is that it allows you to read and write data by just referencing its name.  Typically this is done inside of a YAML file, but can be done in python.\n\nHere is an example of a CSV dataset stored locally\n\n``` yaml\n# Example 1: Loads a local csv file\nbikes:\n  type: CSVLocalDataSet\n  filepath: \"data/01_raw/bikes.csv\"\n```\n\nThis dataset can be loaded by name\n\n``` python\ncatalog.load('bikes')\n```\n\nThough it's not typical practice it is possible to save data to a catalog entry ad-hoc.  Typically the pipeline is used to run functions and save data for you.\n\n``` python\nimport pandas as pd\nbikes_df = pd.DataFrame({...<bikes_data>...})\ncatalog.datasets.bikes.save(bikes_df)\n```\n\n### Pipeline\n\n![building pipelines](https://images.waylonwalker.com/roman-pentin-T5QT2bmiD4E-unsplash.jpg)\n\nThe pipeline object is the brains of [kedro](https://kedro.readthedocs.io).  When working with [kedro](https://kedro.readthedocs.io) you simply define functions that take in data as arguments, manipulate it, and return a new dataset.  The pipeline will decide what order to execute these functions ini based on their dependencies.  It will then work with the catalog to load the data from the catalog pass it to your function, the save the returned data in the catalog.\n\nHere is an example pipeline from the docs.\n\n``` python\nimport pandas as pd\nimport numpy as np\nfrom kedro.pipeline import Pipeline\nfrom kedro.pipeline import node\n\ndef clean_data(cars: pd.DataFrame,\n               boats: pd.DataFrame) -> Dict[str, pd.DataFrame]:\n    return dict(cars_df=cars.dropna(), boats_df=boats.dropna())\n\ndef halve_dataframe(data: pd.DataFrame) -> List[pd.DataFrame]:\n    return np.array_split(data, 2)\n\nnodes = [\n    node(clean_data,\n         inputs=['cars2017', 'boats2017'],\n         outputs=dict(cars_df='clean_cars2017',\n                      boats_df='clean_boats2017')),\n    node(halve_dataframe,\n         'clean_cars2017',\n         ['train_cars2017', 'test_cars2017']),\n    node(halve_dataframe,\n         dict(data='clean_boats2017'),\n         ['train_boats2017', 'test_boats2017'])\n]\n\npipeline = Pipeline(nodes)\n```\n\n## [kedro-viz](https://github.com/quantumblacklabs/kedro-viz)\n\n[kedro-viz](https://github.com/quantumblacklabs/kedro-viz) is a priceless component to the [kedro](https://kedro.readthedocs.io) ecosystem.  It gives you x-ray vision into your project.  You can see exactly how data flows through your pipeline.  Since it is fully automated it is always up to date and never lies to you.  [kedro-viz](https://github.com/quantumblacklabs/kedro-viz) is an integral part of my daily debugging and refactoring toolbelt.\n\nStarting the viz from the command line is super easy\n\n``` bash\ncd my-kedro-project\nkedro viz\n```\n\n![](https://images.waylonwalker.com/pipeline_visualisation.png)\n\n## [kedro-docker](https://github.com/quantumblacklabs/kedro-docker)\n\n[kedro-docker](https://github.com/quantumblacklabs/kedro-docker) is a simple way to set up your project for production.  It provides a few simple cli commands\n\n``` bash\ncd my-kedro-project\nkedro docker build\nkedro docker run\n```\n\n## Other resources\n\nThe [kedro docs](https://kedro.readthedocs.io/) have a ton of great resources.  They are searchable, but can be a bit of an overwhelming amount of data.\n\nI keep adding to my [kedro notes](https://waylonwalker.com/kedro/) as I find new and interesting things.\n\nI tweet out most of those snippets as I add them, you can find them all here [#kedrotips](https://twitter.com/search?q=%23kedrotips).\n\n## More to come\n\nI am planning to do more articles like this, you can stay up to date with them by following me on [dev.to](https://dev.to/waylonwalker), subscribing to my [rss feed](https://waylonwalker.com/rss.xml), or subscribe to my [newsletter](https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/whats-new-in-kedro-0164'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>What's New in Kedro 0.16.4</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/what-is-kedro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What is Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-24", "jinja": false, "edit_link": "https://github.com/edit/main/pages/blog/what-is-kedro-1.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574537", "datetime": "2020-02-24 00:00:00+00:00", "slug": "what-is-kedro-1", "output_html": "markout/what-is-kedro-1/index.html", "long_description": "https://waylonwalker.com/what-is-kedro This is my original what-is-kedro article.  There is a brand new one Kedro is an open source data pipeline framework.  It provides guardrails to set Currently,  \ud83d\udc8e  \ud83d\udcc9  \ud83c\udfd7  Inside this core library is a data catalo", "super_description": "https://waylonwalker.com/what-is-kedro This is my original what-is-kedro article.  There is a brand new one Kedro is an open source data pipeline framework.  It provides guardrails to set Currently,  \ud83d\udc8e  \ud83d\udcc9  \ud83c\udfd7  Inside this core library is a data catalog object.  This allows you to specify attributes about your data, then load and save it without ever writing a single line of read/write code, which can become very cumbersome.  Older versions would load this into the io variable, currently it loads ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679e50>, next=<frontmatter.Post object at 0x7f34506ae0d0>)"}, {"cover": "", "title": "Four Github Actions for Python", "tags": ["actions", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/four-github-actions-python.md", "description": "If you are developing python packages and using GitHub here are four actions If you are developing python packages and using GitHub here are four actions that y", "content": "If you are developing python packages and using GitHub here are four actions\nthat you can use today to automate your release workflow.  Since python tools\ngenerally have such a simple cli I have opted to use the cli for most of these,\nthat way I know exactly what is happening and have more control over it if I\nneed.\n\n<style>\nh2 img { width: 100%; box-shadow: .5rem .5rem 3rem #141F2D, -.5rem -.5rem 3rem rgba(255,255,255,.1);}\nimg{ max-width: 100% !important;}\n</style>\n\nIf you are developing python packages and using GitHub here are four actions that you can use today to automate your release workflow.  Since python tools generally have such a simple cli I have opted to use the cli for most of these, that way I know exactly what is happening and have more control over it if I need.\n\n* Lint\n* Test\n* Package\n* Upload to PyPi\n\n## Lint With flake8\n\nflake8 is pythons quintessential linting tool to ensure that your code is up to the standards that you have set for the project, and to help prevent hidden bugs.  I am a heavy user of `black` and `isort` as well, but for ci flake8 is typically considered the gold standard. `black` and `isort` will help you automate many fixes suggested by flake8.\n\n``` yaml\n    - name: Lint with flake8\n      run: |\n        pip install flake8 isort black\n        # stop the build if there are Python syntax errors or undefined names\n        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics\n        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide\n        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics\n```\n\n## Testing with pytest\n\npytest is such an amazing project, definitely one to check out and start using if you are not already doing so.\n\n``` yaml\n    - name: Test with pytest\n      run: |\n         pip install pytest\n         pytest\n```\n\n## Building with setuptools\n\nI am still using the older, less hipster, setuptools to build my projects.  Primarily because I am used to to, partly because things such as editable installs are not possible with the newer build tools, and I am a **HEAVY** user of editable installs.\n\n``` yaml\n    - name: build\n      run: |\n        pip install wheel\n        python setup.py sdist bdist_wheel\n```\n\n## Publishing to pypi\n\nHere I am going to use an amazing action from the GitHub marketplace by @webKnjaZ.  It is super simple.  First you need to log into your [pypi.org](https://pypi.org) account, go to account settings, enable 2FA, and add a Token, then paste that toke into a secret inside your repos settings.  Next just drop the name of that secret into the password field of the action and you are off.\n\n**note**: I did put a check in to make sure that push event comes from main.\n\n\n``` yaml\n    - name: pypi-publish\n      if: github.ref == 'refs/heads/main'\n      uses: pypa/gh-action-pypi-publish@v1.1.0\n      with:\n        # PyPI user\n        # Password for your PyPI user or an access token\n        password: ${{ secrets.pypi_password }}\n        # The repository URL to use\n        # repository_url: # optional\n        # The target directory for distribution\n        # packages_dir: # optional, default is dist\n```\n\n\n## That's my four top python actions\n\nThese are the easiest and most basic four actions that every python project on GitHub should have.  Now that actions are available for free on any public repo there is no reason not to use GitHub Actions for any new project.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/four-github-actions-website'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Four github actions for your website</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/forestry-io'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Forestry.io</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-04-13", "edit_link": "https://github.com/edit/main/pages/blog/four-github-actions-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574543", "datetime": "2020-04-13 00:00:00+00:00", "slug": "four-github-actions-python", "output_html": "markout/four-github-actions-python/index.html", "long_description": "If you are developing python packages and using GitHub here are four actions If you are developing python packages and using GitHub here are four actions that you can use today to automate your release workflow.  Since python tools generally have suc", "super_description": "If you are developing python packages and using GitHub here are four actions If you are developing python packages and using GitHub here are four actions that you can use today to automate your release workflow.  Since python tools generally have such a simple cli I have opted to use the cli for most of these, that way I know exactly what is happening and have more control over it if I need. Lint Test Package Upload to PyPi flake8 is pythons quintessential linting tool to ensure that your code i", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3430>, next=<frontmatter.Post object at 0x7f34506be4c0>)"}, {"cover": "", "title": "Personal URL shortener with Netlify Redirects", "tags": ["webdev", "blog"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/personal-url-shortener.md", "description": "Personal URL shortener with Netlify Redirects", "content": "I love using URL shorteners to easily share links without hitting character\nlimits, but they loose their meaning. Services like bit.ly will save my links\nfor me so that I can find them, but I would rather them to be easy to remember.\n[https://bit.ly/2ruLwQz](https://bit.ly/2ruLwQz \"https://bit.ly/2ruLwQz\") does\nnot roll of the tongue so well.\n\n## 301 \ud83e\udd38\u200d\u2640\ufe0f\n\nI recently discovered a really cool feature of netlify that I have always looked past, `_redirects`. It is so simple cool and powerful, every netlify site should do this!\n\n## But how \ud83e\udd37\u200d\u2640\ufe0f\n\nsimply add a `_redirects` file to the root of your your published site with the following format. The trick I found with my gatsby site was that it needed to be in my static directory `/static/_redirects`, not root. Next you just put space separated links on separate lines. #'s can be used for comments.\n\n``` markdown\n# netlify redirects\n# from_url to_url\n\n# Short-Blog\n\n/blog/scli         /blog/simple-click/\n/blog/cmdt         /blog/cmd-exe-tips/\n.\n.\n.\n\n\n# splats\n\n/b*             /blog/:splat\n/n*             /notes/:splat\n\n\n# External\n\n/twitter        https://twitter.com/_WaylonWalker\n/github         https://github.com/WaylonWalker\n/devto          https://dev.to/waylonwalker/\n```\n\n## \ud83d\ude4c Share those short links\n\nNow with shorter links we have more space for our content without needing to use a service like bit.ly that makes our links unreadable.\n\n![url shortener](https://images.waylonwalker.com/URL shortener.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/practice-python-online'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udc0d Practice Python Online</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/parsing-rss-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udc0d Parsing RSS feeds with Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-01-29", "edit_link": "https://github.com/edit/main/pages/blog/personal-url-shortener.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574549", "datetime": "2020-01-29 00:00:00+00:00", "slug": "personal-url-shortener", "jinja": false, "output_html": "markout/personal-url-shortener/index.html", "long_description": "I love using URL shorteners to easily share links without hitting character I recently discovered a really cool feature of netlify that I have always looked past,  simply add a  Now with shorter links we have more space for our content without needin", "super_description": "I love using URL shorteners to easily share links without hitting character I recently discovered a really cool feature of netlify that I have always looked past,  simply add a  Now with shorter links we have more space for our content without needing to use a service like bit.ly that makes our links unreadable. ![", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067f040>, next=<frontmatter.Post object at 0x7f34506790d0>)"}, {"cover": "", "title": "Fix git commit author", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/blog/fix-git-commit-author.md", "description": "I was 20 commits into a hackoberfest PR when I suddenly realized they they all had my work email on them instead of my personal email \ud83d\ude31.", "content": "I was 20 commits into a hackoberfest PR when I suddenly realized they they all had my work email on them instead of my personal email \ud83d\ude31.  This is the story of how I corrected my email address on 19 individual commits after already submitting for a PR.\n\n1. [Change the email for this repo](#change-the-email-for-this-repo)\n1. [Prepare for rebasing](#prepare-for-rebasing)\n1. [start the rebase](#start-the-rebase)\n1. [\ud83d\udee0 Fix First wrong Commit](#fix-first-wrong-commit)\n1. [Fix all commits](#fix-all-commits)\n1. [Done](#done)\n1. [ReCap](#recap)\n\n    \n## Change the email for this repo\n\n_stop the bleeding_\n\nBefore anything else set the email correctly!\n\n``` bash\ncd kedro\ngit config user.name \"Waylon Walker\"\ngit config user.email quadmx08@gmail.com\n```\n\n## Prepare for rebasing\n\nFirst thing is to find how many commits back this mistake goes.  I opened up the git log, and saw mine went back 19 commits.  I rolled back 20 just to be sure.\n\n``` bash\n$ git log\n...\ncommit a355926b9d7ec4c05659adaa254beefbdb036332\nAuthor: WaylonWalker <email@work.com>\nDate:   Sat Oct 17 10:28:59 2020 -0500\n\n    give name of function inside incorrect parameters error\n  \ncommit 1756f5d121bd06c459560b2e982e0d7b6879e9ca\nAuthor: Kiyohito Kunii (Kiyo) <8097799+921kiyo@users.noreply.github.com>\nDate:   Fri Oct 2 15:33:09 2020 +0100\n\n    Fix docs reference for registering `pipelines`\n```\n\n## start the rebase\n\nNow I start the rebase 20 commits back from HEAD.  THis will pop you into a text file with a list of commits, for this change simply replace all `pick` with `edit`.\n\n``` bash\ngit rebase -i HEAD~20\n```\n\n## Note for the first commit\n\nIf you want to rebase back to the start of the repo use the `--root` flag.\n\n``` bash\ngit rebase -i --root\n```\n\nRun git log to see where we ended up.\n\n``` bash\n$ git log\ncommit 1756f5d121bd06c459560b2e982e0d7b6879e9ca\nAuthor: Kiyohito Kunii (Kiyo) <8097799+921kiyo@users.noreply.github.com>\nDate:   Fri Oct 2 15:33:09 2020 +0100\n\n    Fix docs reference for registering `pipelines`\n```\n\nAs expected we ended up on Kiyo's commit. So we can simply move forward without any edits.\n\n``` bash\n$ git rebase --continue\nStopped at e162ca7...  correct function name in tests\nYou can amend the commit now, with\n\n  git commit --amend\n\nOnce you are satisfied with your changes, run\n\n  git rebase --continue\n```\n\n## \ud83d\udee0 Fix First wrong Commit\n\nChecking the log again I an now on my first commit with a mistake.\n\n``` bash\n$ git log\ncommit 95c209a740d6d0340e19a8fc36298cbf874f8bf7 (HEAD)\nAuthor: WaylonWalker <email@work.com>\nDate:   Sat Oct 3 11:59:44 2020 -0500\n\n    correct function name in tests\n\ncommit cde2e8baa3c1c4a9f1da4135258381466b1da40a\nAuthor: Waylon Walker <quadmx08@gmail.com>\nDate:   Sat Oct 17 10:30:07 2020 -0500\n\n    update tests\n\ncommit a355926b9d7ec4c05659adaa254beefbdb036332\nAuthor: Waylon Walker <quadmx08@gmail.com>\nDate:   Sat Oct 17 10:28:59 2020 -0500\n\n    give name of function inside incorrect parameters error\n\ncommit 1756f5d121bd06c459560b2e982e0d7b6879e9ca\nAuthor: Kiyohito Kunii (Kiyo) <8097799+921kiyo@users.noreply.github.com>\nDate:   Fri Oct 2 15:33:09 2020 +0100\n\n    Fix docs reference for registering `pipelines`\n```\n\nRunning the following command will reset the author on the current commit.\n\n``` bash\ngit commit --amend --reset-author\n```\n\nDouble check with a quick `git log` that the author was fixed.\n\n``` bash\ncommit ccaaa56059ee4554731fa83297ca9e8e387a7592 (HEAD)\nAuthor: Waylon Walker <quadmx08@gmail.com>\nDate:   Sat Oct 17 10:35:40 2020 -0500\n\n    correct function name in tests\n\ncommit cde2e8baa3c1c4a9f1da4135258381466b1da40a\nAuthor: Waylon Walker <quadmx08@gmail.com>\nDate:   Sat Oct 17 10:30:07 2020 -0500\n\n    update tests\n\ncommit a355926b9d7ec4c05659adaa254beefbdb036332\nAuthor: Waylon Walker <quadmx08@gmail.com>\nDate:   Sat Oct 17 10:28:59 2020 -0500\n\n    give name of function inside incorrect parameters error\n\ncommit 1756f5d121bd06c459560b2e982e0d7b6879e9ca\nAuthor: Kiyohito Kunii (Kiyo) <8097799+921kiyo@users.noreply.github.com>\nDate:   Fri Oct 2 15:33:09 2020 +0100\n\n    Fix docs reference for registering `pipelines`\n```\n\n## Fix all commits\n\nNow to do this for 18 other commits.  I found that chaining the three commands into a bash one-liner was quite helpful.  I turned off pre-commit hooks with `--no-verify`.  I also turned off the `log` pager by adding `--no-pager`.\n\n``` bash\ngit rebase --continue && \\\ngit commit --amend --reset-author --no-edit --no-verify && \\\ngit --no-pager log -n 3\n```\n\n## Done\n\nThis was quick and easy for 19 commits.  I have tried to loop through changes like this in the past, and it does get a bit hairy.  I find its easier to just setup a one-liner and crank through them one by one.\n\n## A note on changing history...\n\nSince this was done in a rebase it has changed the history of the repo.  This is ok to do only when you are the only person or are in close communication with everyone using the repo.  One thing I have ran into is that if you do this after you submit a PR, but before its completed it duplicates your commits in a merge.  For this particular change I simply closed the first PR and opened a second.  If someone has a better suggestion, I would be glad to know a better way.\n\n## ReCap\n\n``` bash\ncd kedro\ngit config user.name \"Waylon Walker\"\ngit config user.email quadmx08@gmail.com\ngit log\ngit rebase -i HEAD~20\ngit log\ngit rebase --continue\ngit log\ngit rebase --continue && git commit --amend --reset-author --no-edit --no-verify && git --no-pager log -n 3\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/fix-styled-components-in-gatsby'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>I finally fixed my Styled-Components in gatsby.js</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/find-replace'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Find and Replace in the Terminal.</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-17", "edit_link": "https://github.com/edit/main/pages/blog/fix-git-commit-author.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574557", "datetime": "2020-10-17 00:00:00+00:00", "slug": "fix-git-commit-author", "jinja": false, "output_html": "markout/fix-git-commit-author/index.html", "long_description": "I was 20 commits into a hackoberfest PR when I suddenly realized they they all had my work email on them instead of my personal email \ud83d\ude31.  This is the story of how I corrected my email address on 19 individual commits after already submitting for a PR", "super_description": "I was 20 commits into a hackoberfest PR when I suddenly realized they they all had my work email on them instead of my personal email \ud83d\ude31.  This is the story of how I corrected my email address on 19 individual commits after already submitting for a PR. Before anything else set the email correctly First thing is to find how many commits back this mistake goes.  I opened up the git log, and saw mine went back 19 commits.  I rolled back 20 just to be sure. Now I start the rebase 20 commits back from", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658160>, next=<frontmatter.Post object at 0x7f345066ca60>)"}, {"cover": "", "title": "Explicit vs Implicit Returns in Javascript", "tags": ["javascript", "webdev"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/explicit-vs-implicit-returns-in-javascript.md", "description": "Often when reading through javascript examples you will find some arrow Arrow functions are one-liner functions in javascript that have two main syntactical way", "content": "Often when reading through javascript examples you will find some arrow\nfunctions use parentheses `()` while others use braces `{}`.  This key\ndifference is that parentheses will implicitly return the last statement while\nbraces require an explicit return statement.  It is important to understand the\ndifference between them because it is likely that you will find code examples\nof both and trying to edit code written differently than you're used to may\nhave unintended consequences.\n\n## ![Arrow functions](https://images.waylonwalker.com/explicit-vs-implicit-returns-in-javascript-1.png)\n\nArrow functions are one-liner functions in javascript that have two main syntactical ways to create the code block.  with parentheses and braces.  Let's take a look at both ways of creating arrow functions so that when we come accross them in the wild it will all make sense.\n\n## ![implicit returns](https://images.waylonwalker.com/explicit-vs-implicit-returns-in-javascript-2.png)\n\nHere is an example of an arrow function that will implicitly return the last\nstatement without the return keyword.  I believe that these are a bit more restricted\nin that you cannot set variables inside them.  They are a little bit more concise\nand great for **one-liners.**\n\n``` javascript\nconst implicit = thing => (thing)\nundefined\nimplicit('hi')\n\"hi\"\n```\n\n**Note** that the parentheses are not required for this example and not having\nparentheses or braces are implicitly returned as well.\n\n``` javascript\n// same as above\nconst implicit = thing => thing\nundefined\nimplicit('hi')\n\"hi\"\n```\n\n## ![explicit returns](https://images.waylonwalker.com/explicit-vs-implicit-returns-in-javascript-3.png)\n\nIn the following example, the curly braces create an arrow function that must\nexplicitly return anything that you want to return from the function. Since the\nreturn keyword is never used the function returns `undefined` by default.\n\n``` javascript\n// missing return statement\nconst explicit = thing => {thing}\nundefined\nexplicit('hi')\nundefined\n```\n\nIn this example using the return keyword will cause the function to return `thing`\nand behave similarly to our implicit return.\n\n``` javascript\n// same as original\nconst explicit_return = thing => {return thing}\nundefined\nexplicit_return('hi')\n\"hi\"\n```\n\n## ![Multiline arrow functions](https://images.waylonwalker.com/explicit-vs-implicit-returns-in-javascript-4.png)\n\nUntil writing this article I was unaware that you could not have a multiline arrow function with an implicit return statement.  I tried myself and ran into some issues. I also tried to find examples online and could not find one.  If it is possible to write something like below, let me know.\n\n``` javascript\n// more complex example\n// only possible with an explicit return\nconst sayHello = who => {\n    const greeting = 'Hello '\n    const message = greeting + who\n    return message\n    }\nundefined\nsayHello('Waylon')\n\"Hello Waylon\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/filtering-pandas'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Filtering Pandas</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/explain-twitter-cards'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\ude4b\u200d\u2642\ufe0f Can Anyone Explain Twitter Cards to me?</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-03", "edit_link": "https://github.com/edit/main/pages/blog/explicit-vs-implicit-returns-in-javascript.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574563", "datetime": "2020-05-03 00:00:00+00:00", "slug": "explicit-vs-implicit-returns-in-javascript", "jinja": false, "output_html": "markout/explicit-vs-implicit-returns-in-javascript/index.html", "long_description": "Often when reading through javascript examples you will find some arrow Arrow functions are one-liner functions in javascript that have two main syntactical ways to create the code block.  with parentheses and braces.  Let Here is an example of an ar", "super_description": "Often when reading through javascript examples you will find some arrow Arrow functions are one-liner functions in javascript that have two main syntactical ways to create the code block.  with parentheses and braces.  Let Here is an example of an arrow function that will implicitly return the last In the following example, the curly braces create an arrow function that must In this example using the return keyword will cause the function to return  Until writing this article I was unaware that ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452909670>, next=<frontmatter.Post object at 0x7f345068a040>)"}, {"cover": "", "title": "Blog Data With Python", "tags": ["python", "blog", "data"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/blog-data-with-python.md", "description": "Generating an api for a blog is much simpler than one might expect with python. fix missing data", "content": "Generating an api for a blog is much simpler than one might expect with python.\n\n## Markdown\n\n## Frontmatter\n\n## Fill in the blanks\n\nfix missing data\n\n## Fast\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-pipeline-create'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Pipeline Create</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/explicit-vs-implicit-returns-in-javascript'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Explicit vs Implicit Returns in Javascript</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-01-18", "edit_link": "https://github.com/edit/main/pages/blog/blog-data-with-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574569", "datetime": "2021-01-18 00:00:00+00:00", "slug": "blog-data-with-python", "jinja": false, "output_html": "markout/blog-data-with-python/index.html", "long_description": "Generating an api for a blog is much simpler than one might expect with python. fix missing data", "super_description": "Generating an api for a blog is much simpler than one might expect with python. fix missing data", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e8b0>, next=<frontmatter.Post object at 0x7f345065e9d0>)"}, {"cover": "", "title": "Kedro Pipeline Create", "tags": ["kedro", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/kedro-pipeline-create.md", "description": "Kedro pipeline create is a command that makes creating new https://youtu.be/HtyIKqlEoNw The kedro cli comes with the following command to scaffold out The direc", "content": "Kedro pipeline create is a command that makes creating new\npipelines much easier.  There is much less boilerplate that\nyou need to write yourself.\n\nhttps://youtu.be/HtyIKqlEoNw\n\n## creating a new pipeline\n\nThe kedro cli comes with the following command to scaffold out\nnew pipelines.  Note that it will not add it to your\n`pipeline_registry`, to be covered later, you will need to add\nit yourself.\n\n``` bash\nkedro pipeline create example\n```\n\n## results\n\nThe directory structure that it creates looks like this.\n\n``` bash\ntree src/kedro_conda/pipelines\nsrc/kedro_conda/pipelines\n\u251c\u2500\u2500 __init__.py\n\u2514\u2500\u2500 example\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 nodes.py\n    \u251c\u2500\u2500 pipeline.py\n    \u2514\u2500\u2500 README.md\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pug-reveal'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Pug Reveal</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/blog-data-with-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Blog Data With Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-08-22", "edit_link": "https://github.com/edit/main/pages/blog/kedro-pipeline-create.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574574", "datetime": "2021-08-22 00:00:00+00:00", "slug": "kedro-pipeline-create", "jinja": false, "output_html": "markout/kedro-pipeline-create/index.html", "long_description": "Kedro pipeline create is a command that makes creating new https://youtu.be/HtyIKqlEoNw The kedro cli comes with the following command to scaffold out The directory structure that it creates looks like this.", "super_description": "Kedro pipeline create is a command that makes creating new https://youtu.be/HtyIKqlEoNw The kedro cli comes with the following command to scaffold out The directory structure that it creates looks like this.", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065ea00>, next=<frontmatter.Post object at 0x7f345065e790>)"}, {"cover": "./flex.png", "title": "Pug Reveal", "tags": ["webdev"], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/pug-reveal.md", "description": "none", "content": "# Pug Reveal Slides\n\nI recently gave a presentation at the Big Brothers and Big Sisters Data Challenge.  I wanted to use reveal to create my slides.  I have used it before and it is a really nice package.  Compared to PowerPoint it is much easier to incorporate interactive visualizations right into the presentation,easy to re factor and maintain slides.  Since you are just working with text you can easily convert from a list of items on one slide to a set of slides.\n\n## Avoiding Death by PowerPoint\n\nIf you have not seen David JP Phillips [Death By PowerPoint](https://www.youtube.com/watch?v=Iwpi1Lm6dFo)  TEDx, stop now and watch it.  You will never look at slides the same again.  Watching this video ruined me for watching presentations with these issues.  Reveal is a tool that makes it very easy to follow these principles\n\n* You are the center of focus\n* Reduce clutter\n* Focus your users with\n    * size\n    * contrast\n\n## Reduce clutter\n\nIn the video David talks about reducing the number of points we have down to no more than 6. You may be thinking \"What No More than 6, Well I would have to have a hundred slides to get all of my point in\".  to this David tells us, \"The amount of slides in your PowerPoint has never been the problem. It is the amount of objects per slide that are the problem.\"\n\n>The amount of slides in your PowerPoint has never been the problem. It is the amount of objects per slide that are the problem.\n\n## Pug\n\n\n>\"What is this pug thing you speak of?\"\n\nPug is a markup language typically that is into html for the browser.  It is a much less verbose markup language that uses whitespace as syntax.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-rewrite-history/git-rewrite-history'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Rewrite History with Git</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-pipeline-create'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Pipeline Create</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2017-12-31", "category": "Blog", "edit_link": "https://github.com/edit/main/pages/blog/pug-reveal.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574581", "datetime": "2017-12-31 00:00:00+00:00", "slug": "pug-reveal", "jinja": false, "output_html": "markout/pug-reveal/index.html", "long_description": "I recently gave a presentation at the Big Brothers and Big Sisters Data Challenge.  I wanted to use reveal to create my slides.  I have used it before and it is a really nice package.  Compared to PowerPoint it is much easier to incorporate interacti", "super_description": "I recently gave a presentation at the Big Brothers and Big Sisters Data Challenge.  I wanted to use reveal to create my slides.  I have used it before and it is a really nice package.  Compared to PowerPoint it is much easier to incorporate interactive visualizations right into the presentation,easy to re factor and maintain slides.  Since you are just working with text you can easily convert from a list of items on one slide to a set of slides. If you have not seen David JP Phillips  You are th", "year": 2017, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065eaf0>, next=<frontmatter.Post object at 0x7f345065e8b0>)"}, {"cover": "", "title": "Rewrite History with Git", "tags": ["git"], "status": "published", "templateKey": "blog-post", "path": "pages/blog/git-rewrite-history/git-rewrite-history.md", "description": "rebase git commit --amend rage quit git reset HEAD~n  removes modifications keeps hitsory of changes and undoes them git checkout HEAD~n --  keeps modifications", "content": "* rebase\n* git commit --amend\n\n## Unstage learning-python-debugger\n\n``` bash\ngit reset -- <file>\n```\n\n**rage** unstage to wipte out history of staged commit\n``` bash\ngit reset --hard <file>\n```\n\n## Undo file\n\n* rage quit\n* git reset HEAD~n <file>\n    * removes modifications\n    * keeps hitsory of changes and undoes them\n* git checkout HEAD~n -- <file>\n    * keeps modifications\n    * removes history\n\n    * --SOFT\n    * --HARD\n    * --Mixed\n\n## undo n commits back\n\nlocally before push\n``` bash\ngit reset HEAD~n\n```\n\nafter push\n``` bash\ngit revert HEAD~n\n```\n\n## update .gitignore\n\nafter push\n``` bash\ngit rm -r --cached .\ngit commit -am \"Updated .gitignore\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-update-user'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Update Git User</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-rewrite-history'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Rewrite History with Git</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-05", "edit_link": "https://github.com/edit/main/pages/blog/git-rewrite-history/git-rewrite-history.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574586", "datetime": "2019-02-05 00:00:00+00:00", "slug": "git-rewrite-history/git-rewrite-history", "jinja": false, "output_html": "markout/git-rewrite-history/git-rewrite-history/index.html", "long_description": "rebase git commit --amend rage quit git reset HEAD~n  removes modifications keeps hitsory of changes and undoes them git checkout HEAD~n --  keeps modifications removes history --SOFT --HARD --Mixed locally before push after push after push", "super_description": "rebase git commit --amend rage quit git reset HEAD~n  removes modifications keeps hitsory of changes and undoes them git checkout HEAD~n --  keeps modifications removes history --SOFT --HARD --Mixed locally before push after push after push", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c310>, next=<frontmatter.Post object at 0x7f34506a90d0>)"}, {"cover": "", "title": "Minimal Project Structure", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/blog/bit-01/bit_01.md", "description": "How to setup a data science project in python.", "content": "## TLDR\n\nUse **[.gitignore.io](https://www.gitignore.io)** and consider adding an alias to your terminal to quickly add a .gitignore to any project missing one.\n\n``` bash\nalias gitignore='curl https://www.gitignore.io/api/vim,emacs,python,pycharm,sublimetext,visualstudio,visualstudiocode,data > .gitignore'\n```\n\nAdd a minimal **setup.py** to the root of your project, and use the following command to install it.\n\n``` bash\npip install -e .\n```\n\nconsider using **[cookiecutter](https://github.com/audreyr/cookiecutter)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/newsletter/AUG2020'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Newsletter 3</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/git-rewrite-history/git-rewrite-history'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Rewrite History with Git</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-02-10", "edit_link": "https://github.com/edit/main/pages/blog/bit-01/bit_01.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574592", "datetime": "2019-02-10 00:00:00+00:00", "slug": "bit-01/bit_01", "jinja": false, "output_html": "markout/bit-01/bit_01/index.html", "long_description": "Use  Add a minimal  consider using ", "super_description": "Use  Add a minimal  consider using ", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065ed30>, next=<frontmatter.Post object at 0x7f345065eaf0>)"}, {"cover": "", "title": "Newsletter 3", "tags": ["newsletter"], "status": "draft", "templateKey": "blog-post", "path": "pages/newsletter/AUG2020.md", "description": "It I learned the most from this post.  It I GitHub profiles were released recently and I asked on DEV.to  This post was super fun to write.  It Bash is a langua", "content": "It's been quite a busy Month and a half since my last official newsletter With about 14 individual posts going live since then.  I pushed hard over the past two weeks and just made a lot of content about things that I actually do.  Many of these were things that I know quite well and were quite quick to write.  I really enjoyed putting them out there and seeing all of the comments and feedback roll in.\n\n## Highlights\n\n### [Integration testing with Python, TestProject.io, and GitHub Actions](https://waylonwalker.com/testproject-io-py-actions/)\n\nI learned the most from this post.  It's been awhile since I had done any testing with selenium and I wanted to brush up on those skills for some upcoming work.  I chose to test my own website, run it on github actions and use TestProject for reporting.\n\n### [Creating Reusable Bash Scripts](https://waylonwalker.com/reusable-bash/)\n\nI've been writing a ton of bash scripts lately.  In this article I write down a few of the things that I have recently learned to make my scripts just a bit better.\n\n### [\ud83e\udd13 What's on your GitHub Profile](https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3)\n\nGitHub profiles were released recently and I asked on DEV.to \"Whats on your GitHub Profile\".  This was a discussion that turned out some incredible response.  There are so many great profiles posted in the discussion section.  Check them out for inspiration on yours.\n\n### [\ud83d\udd25 How to crush amazing posts on DEV](https://dev.to/waylonwalker/how-to-crush-amazing-posts-on-dev-4cgh)\n\nThis post was super fun to write.  It's specifically for writing DEV.to posts, but is generally useful to any medium length content that sits between a tweet and a book.  I definitly learned a few things during research and in the discussion.  I have picked up a few tricks that make my posts a bit easier to scan and get a bit better engagement than having a wall of text.\n\n## Recent Posts\n\n* [Creating Reusable Bash Scripts](https://waylonwalker.com/reusable-bash/)\n\n    Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks. Even if you are on windows these days you are likely to come across bash inside a cloud VM, Continuous Integration, or even inside of docker.\n\n* [Three things to Automate with Python using Pandas](https://waylonwalker.com/3-things-to-automate-with-python/)\n\n    Here are three things that I see my non programming counterparts doing every single day. These really sum up so much of what folks do within an office.\n\n* [Installing miniconda on linux (from the command line)](https://waylonwalker.com/install-miniconda/)\n\n    Installing miniconda from only the command line can be a bit of an intimidating task your first time. Lets walk through how to do it.\n\n* [Review of the git-auto-commit-action](https://waylonwalker.com/git-auto-commit-action-review/)\n\n    It's a really cool GitHub action that will automatically commit files changed during the action. I was using this to render a new readme based on a template.\n\n* [Black Tech Pipeline](https://waylonwalker.com/pariss-athena-on-black-tech-pipeline/)\n\n    I was particularly inspired by @chantastic episode 103 of the react podcast with @ParissAthena. They spoke about the black tech pipeline as well as Diversity, Equity, and Inclusion. Pariss is quite an inspiration. She has done so much work to create a better place for POC in tech. I like that not only is she helping them get jobs but acting as a mentor for their first few months on the job to make sure that they are able to find their place and fit in.\n\n* [What's New in Kedro 0.16.4](https://waylonwalker.com/whats-new-in-kedro-0164/)\n\n    If we take a look at the release notes I see one **major** feature improvement on the list, auto-discovery of hooks.\n\n* [Integration testing with Python, TestProject.io, and GitHub Actions](https://waylonwalker.com/testproject-io-py-actions/)\n\n    As I continue to build out https://waylonwalker.com/ I sometimes run into some errors that are not caught becuase I do not have good testing implemented. I want to explore some integration testing options using GitHub actions.\n\n* [\ud83d\udd25 How to crush amazing posts on DEV](https://waylonwalker.com/crush-dev-to-posts/)\n\n    Here are a few of my top tips to help make dev.to posts more readable, and drive better engagement.\n\n* [\ud83d\udc0d Practice Python Online](https://waylonwalker.com/practice-python-online/)\n\n    When learning a new skill it's important to practice along the way. In order for me to show up to practice I need to make it easy to show up. An easy way to show up to practice with python is to use an online repl. With these you can try out something quick. Sometimes I see snippets from blogs or tweets and I need to try the out for myself to really understand.\n\n* [Edit On GitHub](https://waylonwalker.com/edit-on-github/)\n\n    I recently added a button to my blog, and subsequently my posts on [DEV.to](https://dev.to/waylonwalker). It's the best thing that I have done for it in a while.\n\n* [Why use a cms](https://waylonwalker.com/why-use-cms/)\n\n    When first learning to code its very common to hard code everything right into the code. This happens with most folks in just about any language. Whether its html or markdown for front end content, or even hardcoding parameters in our backend languages like python, or node.js.\n\n* [\ud83d\udc0d Parsing RSS feeds with Python](https://waylonwalker.com/parsing-rss-python/)\n\n    I am looking into a way to replace my google reader experience that I had back in 2013 before google took it from us. I am starting by learning how to parse feeds with python, and without much previous knowledge it proved to be much easier than anticipated thanks to the `feedparser` library.\n\n* [\ud83d\ude4b\u200d\u2642\ufe0f Can Anyone Explain Twitter Cards to me?](https://waylonwalker.com/explain-twitter-cards/)\n\n    Can someone explain how or why twitter cards render differently from device to device? I do understand that twitter cards a built from meta tags, the full list can be found in their\n\n* [\ud83e\udd13 What's on your GitHub Profile](https://dev.to/waylonwalker/what-s-on-your-github-profile-40p3)\n\n    Comment on the DEV.to thread to show off what is on your GitHub profile.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gratitude/gratitude-147'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gratitude 147</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/bit-01/bit_01'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Minimal Project Structure</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-11", "edit_link": "https://github.com/edit/main/pages/newsletter/AUG2020.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574599", "datetime": "2020-06-11 00:00:00+00:00", "slug": "newsletter/AUG2020", "jinja": false, "output_html": "markout/newsletter/AUG2020/index.html", "long_description": "It I learned the most from this post.  It I GitHub profiles were released recently and I asked on DEV.to  This post was super fun to write.  It Bash is a language that is quite useful for automation no matter what language you write in. Bash can do s", "super_description": "It I learned the most from this post.  It I GitHub profiles were released recently and I asked on DEV.to  This post was super fun to write.  It Bash is a language that is quite useful for automation no matter what language you write in. Bash can do so many powerful system-level tasks. Even if you are on windows these days you are likely to come across bash inside a cloud VM, Continuous Integration, or even inside of docker. Here are three things that I see my non programming counterparts doing e", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506631f0>, next=<frontmatter.Post object at 0x7f345065ef70>)"}, {"cover": "", "title": "Gratitude 147", "tags": [], "status": "draft", "templateKey": "gratitude", "path": "pages/pages/gratitude/gratitude-147.md", "description": "Rhiannon is kicking butt today \ud83e\uddb5", "content": "Rhiannon is kicking butt today \ud83e\uddb5!  She finished setting up our movers,\nstarted looking into full house cleaning services.  And the greatest\njeans ever came in the mail... for me!  I've wore holes right through my\nfavorite jeans that I wear every single day, and have been needing to\nreplace them.  She went the extra mile and researched the most\ncomfortable dad jeans ever.  Mom jeans are a pretty popular thing, and\nkeep your crack in, Dad jeans though, I was completely convinced these\ndid not exist.  She found some.  They fit and move so much better than\nmy old ones.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/making-good-documentation-in-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Making good documentation in python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/newsletter/AUG2020'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Newsletter 3</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-10", "edit_link": "https://github.com/edit/main/pages/pages/gratitude/gratitude-147.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574606", "datetime": "2022-02-10 00:00:00+00:00", "slug": "gratitude/gratitude-147", "jinja": false, "output_html": "markout/gratitude/gratitude-147/index.html", "long_description": "Rhiannon is kicking butt today \ud83e\uddb5", "super_description": "Rhiannon is kicking butt today \ud83e\uddb5", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663550>, next=<frontmatter.Post object at 0x7f345065ed30>)"}, {"cover": "", "title": "Making good documentation in python", "tags": ["python"], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/making-good-documentation-in-python.md", "description": "I just started using portray and it is amazingly simple to use", "content": "# Tools\n\n## Sphinx\n\n## Portray\n\nI just started using portray and it is amazingly simple to use!\n\n# Methodology\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/bash'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udcdd Bash Notes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gratitude/gratitude-147'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gratitude 147</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-22", "edit_link": "https://github.com/edit/main/pages/notes/making-good-documentation-in-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574612", "datetime": "2019-09-22 00:00:00+00:00", "slug": "making-good-documentation-in-python", "jinja": false, "output_html": "markout/making-good-documentation-in-python/index.html", "long_description": "I just started using portray and it is amazingly simple to use", "super_description": "I just started using portray and it is amazingly simple to use", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065ed60>, next=<frontmatter.Post object at 0x7f34506631f0>)"}, {"cover": "", "title": "\ud83d\udcdd Bash Notes", "tags": ["bash", "linux", "python", "cli"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/bash.md", "description": "Waylon Walker's Bash Notes", "content": "Bash is super powerful.\n\n## File System Full\n\n**Show Remaining Space on Drives**\n\n```bash\ndf -h\n```\n\n**show largest files in current directory**\n\n```bash\ndu . -h --max-depth=1\n```\n\n**Move files then symlink them**\n\n``` bash\nmkdir /mnt/mounted_drive\nmv ~/bigdir /mnt/mounted_drive\nln -s /mnt/mounted_drive/bigdir ~/bigdir\n```\n\n## Fuzzy One Liners\n\n```bash\na() {source activate \"$(conda info --envs | fzf | awk '{print $\n```\n\n**edit in vim**\n\n```bash\nvf() { fzf | xargs -r -I % $EDITOR % ;}\n```\n\n**cat a file**\n\n```bash\nvf() { fzf | xargs -r -I % $EDITOR % ;}\n```\n\n**bash execute**\n\n```bash\nbf() { bash \"$(fzf)\" }\n```\n\n**git add**\n\n```bash\ngadd() { git status -s | fzf -m | awk '{print $2}' | xargs git add && git status -s}\n```\n\n**git reset**\n\n```bash\ngreset() { git status -s |  fzf -m | awk '{print $2}' |xargs git reset && git status -s}\n```\n\n**Kill a process**\n\n```bash\nfkill() {kill $(ps aux | fzf | awk '{print($2)}')}\n```\n\n## Finding things\n\n### Files\n\n[fd-find](https://github.com/sharkdp/fd) is amazing for finding files, it even respects your `.gitignore` file \ud83d\ude32.  Install with `apt install fd-find`.\n\n```bash\nfd md\n```\n\n```bash\nag -g python\n```\n\n```bash\nfind . -n \"*.md\"\n```\n\n_++Vanilla Bonus_\n\n### Content\n\n\\** show matching text **\n\n```bash\nag python\n```\n\n```bash\ngrep -iR Python\n```\n\n_++Vanilla Bonus_\n\n\\** show file names only **\n\n```bash\nag -l python\n```\n\n```bash\ngrep -iRl python\n```\n\n_++Vanilla Bonus_\n\n### Recursively Replace text\n\n```bash\nagr() {ag -l \"$1\" | xargs sed -i \"s/$1/$2/g\"}\n```\n\n_++Vanilla Bonus_\n\n```bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s/$1/$2/g\"}\n```\n\n**Extending** `**agr**` **or** `**grepr**`\n\nThere are so many options inside of `grep`, `ag`, and `sed` that you could many an enormous amount of these if you really wanted to, but I like to keep it simple.  These cover 90% of my usage.  If I wanted to change something in the second half I would just paste in this command and edit it. More often though I want to limit the input, say only replace word1 to word2 inside of markdown files.\n\n**Limited Scope**\n\n```bash\nfd md | xargs argr python python3\n```\n\n```bash\nfind . -n \"*.md\" | xargs grepr python python3\n```\n\n_++Vanilla Bonus_\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/refactor-in-cli/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/refactor-in-cli-og_250x140.png\" alt=\"article cover for \n Large Refactor At The Command Line\n\"/>\n          <p><strong>\n Large Refactor At The Command Line\n</strong></p>\n      </a>\n  </div>\n\n\n\n> I use these replace commands heavily when doing large refactorings.\n\n### conditionally configure\n\nI like this one when there is not a good cli into config files and I need to replace something like a true to false if the value is in the config and append to the config if its not.\n\n``` bash\ngrepr() {\n    # replaces first string with second string inside file from third argument\n    # example:\n    #   grepr \"allow_conda_downgrades:.*\" \"allow_conda_downgrades: true\" ~/.condarc\n    if grep -xq $1 $3\n    then\n        sed -i \"s|$1|$2|g\" $3\n    else\n        echo \"$2\" >> $3\n    fi\n}\n```\n\n### Watch the time\n\n``` bash\nwatch -n 1 date\n```\n\n_++Vanilla Bonus_\n\n**with figlet**\n\n``` bash\nwatch -n 1 bash -c \"date | figlet\"\n```\n\n### watch a function\n\n``` bash\nrun () {\ndate\naws s3 sync $BUCKET .\n}\nexport -f run\nwatch -n 10 run\n```\n\n### if conda environment does not exist create it\n\n``` bash\nconda info --envs | grep my_env && echo \"my_env environment is installed\" || conda create -n my_env python=3.8 -y\nsource activate my_env\n```\n\n# Rename multiple files\n\nmore info from [linuxize](https://linuxize.com/post/how-to-rename-files-in-linux/)\n\n``` bash\nfor f in *.png; do\n   mv ${f} prefix-${f}\ndone\n```\n\n### using the rename command\n\n``` bash\nsudo apt install rename\n```\n\n``` bash\nrename \"s/.GIF/.gif/\" *.GIF\n```\n\n## convert all files in a directory to unix\n\n``` bash\ndos2unix **/*\n```\n\n## recursively remove all whitespace from .py files\n\n``` bash\nfind **/*.py -type f -exec sed -i 's/ *$//' '{}' ';'\n```\n\n## recursively autopep8\n\n``` python\nfind . -name '*.py' -exec autopep8 --in-place '{}' \\;\n```\n\n## make bash script a runnable command\n\ninclude a shebang\n\n``` bash\n#! /bin/bash\n```\n\nchmod\n\n``` bash\nchmod +x /usr/local/bin/my_script\n```\n\naccept positional input\n\n``` bash\n#! /bin/bash\ninput=$1\necho input\n```\n\n## Using pyp\n\n``` bash\npipx install pyp\n```\n\n## replacement for cut\n\n``` bash\n\u276f python -m http.server 5000 &\n[1] 8574\n\n\u2726 \u276f Serving HTTP on 0.0.0.0 port 5000 (http://0.0.0.0:5000/) ...\n\n\u2726 \u276f ps aux | grep \"python -m http.server\" | grep -v grep | pyp 'line.split()[1]' | xargs kill\n[1]  + terminated  python -m http.server 5000\n```\n\n## replacement for wc\n\n``` bash\nconda info --envs | pyp 'len(lines) - 3 # account for header and base'\n```\n\n## print contents of shell function\n\n``` bash\ndeclare -f <function-name>\n```\n\n## batch rename files\n\n``` bash\nfor f in *.jpeg; do\n    mv -- \"$f\" \"${f%.jpeg}.jpg\"\ndone\n```\n\n## convert markdown files to reveal.js\n\nhttps://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides\ninstall pandoc\n\n``` bash\napt install pandoc\n```\n\nsetup\n\n``` bash\nwget https://github.com/hakimel/reveal.js/archive/master.tar.gz\ntar -xzvf master.tar.gz\nmv reveal.js-master reveal.js\n```\n\nconvert\n\n``` bash\npandoc -t revealjs -s -o myslides.html myslides.md -V revealjs-url=https://unpkg.com/reveal.js@3.9.2/\n```\n\n## Render Markdown at the command line\n\n[Glow](https://github.com/charmbracelet/glow) is a terminal markdown renderer written in go.  There iis a prebuilt binary that can simply be unzipped and executed to render markdow.\n\n``` bash\nwget https://github.com/charmbracelet/glow/releases/download/v0.2.0/glow_0.2.0_linux_x86_64.tar.gz\ntar -xzf glow_0.2.0_linux_x86_64.tar.gz\nchmod +x glow\nsudo mv glow /usr/bin\n\nglow <filename>\n```\n\n## Autocomplete for click applications\n\nsee the [docs](https://click.palletsprojects.com/en/7.x/bashcomplete/) for more details\n\n## Autocomplete for non click python cli's\n\nshtab [https://github.com/iterative/shtab](https://github.com/iterative/shtab \"https://github.com/iterative/shtab\")\n\n## Ensure functions reset context\n\n\n``` bash\nproject_log() {\n   _dir=$(pwd)\n   _project_log() {\n      cd ~/projects/project\n      git log\n   }\n   _project_log $@ && cd $_dir || cd $_dir\n}\n```\n\n## Finding Files\n\n``` bash\nrg --files . | grep bash\nrg --files . | rg bash\nrg --files . | ag bash\nrg --files . | fzf\nrg -e 'hook' -g '*.md'\nrg -e 'hook' -g '*.py'\n\nrg --files-with-matches\nrg --files-without-match\n```\n\n## mu-repo\n\n``` bash\n# installation\npip install mu-repo\n\n## register repos\nmu register --recursive\nmu list\n\n# run git commands\nmu status --short\nmu diff -U0 --color | bat\n\n# run shell commands\nmu sh $(grep -iRl \"KEDRO_GID=0\" | xargs sed -i \"s/KEDRO_GID=0/KEDRO_GID=5/g\")\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/mu-repo/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/mu-repo-og_250x140.png\" alt=\"article cover for \n Maintianing multiple git repos with mu-repo\n\"/>\n          <p><strong>\n Maintianing multiple git repos with mu-repo\n</strong></p>\n      </a>\n  </div>\n\n\n> See the full post for mu-repo for more\n\n\n## mu unregister all\n\nI ran into some issues with mu unregister * before, but this seems to work everywhere.\n\n``` bash\nmu list | tail -n +3 | xargs -I {} mu unregister {}\n```\n\n\n## mu register all repos that have an rg match\n\nAdd all repos that have a versionspec of 3.7 in them.\n\n``` bash\nrg --hidden=true 'versionSpec:.*.3.7' -l | xargs -I {} mu register {}\n```\n\n## xrandr\n\n``` bash\nxrandr -s 1920x1080\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/bind-dynamic-lambdas'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>TIL: Bind arguments to dynamically generated lambdas in python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/autoreload-ipython'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Autoreload in Ipython</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-08", "edit_link": "https://github.com/edit/main/pages/notes/bash.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574618", "datetime": "2019-09-08 00:00:00+00:00", "slug": "bash", "jinja": false, "output_html": "markout/bash/index.html", "long_description": "Bash is super powerful. * * There are so many options inside of  https://waylonwalker.com/refactor-in-cli/ I use these replace commands heavily when doing large refactorings. I like this one when there is not a good cli into config files and I need t", "super_description": "Bash is super powerful. * * There are so many options inside of  https://waylonwalker.com/refactor-in-cli/ I use these replace commands heavily when doing large refactorings. I like this one when there is not a good cli into config files and I need to replace something like a true to false if the value is in the config and append to the config if its not. more info from  include a shebang chmod accept positional input https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides se", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450679790>, next=<frontmatter.Post object at 0x7f34506a99d0>)"}, {"cover": "", "title": "Kedro Basics", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/kedro-basics.md", "description": "In my upcoming free kedro course, you can learn how to start building pipelines in 5 days.", "content": "Learn Kedro in 5 days\n\n## Day 0 Setup\n\n* vm\n* install\n* python\n* editor\n\n## Day 1\n\n* kedro new\n* kedro viz\n\n## Day 2\n\n* catalog\n* filter catalog\n* load data\n* fsspec\n\n## Day 3\n\n* pipeline\n* nodes\n\n## Day 4\n\n\n* filter pipeline\n* run partial pipeline\n\n## Day 5\n\n* kedro docker\n* GitHub Actions\n\n## Advanced Kedro\n\n* hooks\n* custom datasets\n* modular pipelines\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-catalog'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Catalog</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-08-08", "edit_link": "https://github.com/edit/main/pages/notes/kedro-basics.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574624", "datetime": "2020-08-08 00:00:00+00:00", "slug": "kedro-basics", "jinja": false, "output_html": "markout/kedro-basics/index.html", "long_description": "Learn Kedro in 5 days vm install python editor kedro new kedro viz catalog filter catalog load data fsspec pipeline nodes filter pipeline run partial pipeline kedro docker GitHub Actions hooks custom datasets modular pipelines", "super_description": "Learn Kedro in 5 days vm install python editor kedro new kedro viz catalog filter catalog load data fsspec pipeline nodes filter pipeline run partial pipeline kedro docker GitHub Actions hooks custom datasets modular pipelines", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672040>, next=<frontmatter.Post object at 0x7f345066c190>)"}, {"cover": "", "title": "\ud83d\udcdd Kedro Preflight Notes", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/kedro-preflight.md", "description": "run checks before running the pipeline", "content": "This is a very rough idea for a kedro package to prevent time lost to get partway through a pipeline run only to realize that you dont have access to data or resources.\n\n## Must Haves\n\n* check that inputs exist or are of a type to skip (sql)\n\n# Good to haves\n* check that all input and output databases are accessible with good credentials\n* check for s3 bucket access\n* check for spark install\n\n\n## Implementation\n\n``` python\n@hook_spec\ndef before_pipeline_run(run_params, pipeline, catalog):\n\n```\n\n## run params\n``` json\n{\n  \"run_id\": str\n  \"project_path\": str,\n  \"env\": str,\n  \"kedro_version\": str,\n  \"tags\": Optional[List[str]],\n  \"from_nodes\": Optional[List[str]],\n  \"to_nodes\": Optional[List[str]],\n  \"node_names\": Optional[List[str]],\n  \"from_inputs\": Optional[List[str]],\n  \"load_versions\": Optional[List[str]],\n  \"pipeline_name\": str,\n  \"extra_params\": Optional[Dict[str, Any]]\n}\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-run'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Running your Kedro Pipeline from the command line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-pipeline-registry'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro pipeline_registry.py</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-09", "edit_link": "https://github.com/edit/main/pages/notes/kedro-preflight.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574630", "datetime": "2020-05-09 00:00:00+00:00", "slug": "kedro-preflight", "jinja": false, "output_html": "markout/kedro-preflight/index.html", "long_description": "This is a very rough idea for a kedro package to prevent time lost to get partway through a pipeline run only to realize that you dont have access to data or resources. check that inputs exist or are of a type to skip (sql) check that all input and o", "super_description": "This is a very rough idea for a kedro package to prevent time lost to get partway through a pipeline run only to realize that you dont have access to data or resources. check that inputs exist or are of a type to skip (sql) check that all input and output databases are accessible with good credentials check for s3 bucket access check for spark install", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345063bd30>, next=<frontmatter.Post object at 0x7f3450640a00>)"}, {"cover": "", "title": "Custom Python Exceptions", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/custom-python-exceptions.md", "description": "Custom Python Exceptions", "content": "## Custom Exceptions\n\n```\nclass ProjectNameError(NameError):\n    pass\n\n\nclass UserNameError(NameError):\n    pass\n\n\nclass CondaEnvironmentError(RuntimeError):\n    pass\n\n\nclass BucketNotDefinedError(NameError):\n    pass\n\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/custom-scrollbar-design'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Custom Scrollbar Design</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/custom-ipython-prompt'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Custom Ipython Prompt</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-25", "edit_link": "https://github.com/edit/main/pages/notes/custom-python-exceptions.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574636", "datetime": "2019-09-25 00:00:00+00:00", "slug": "custom-python-exceptions", "jinja": false, "output_html": "markout/custom-python-exceptions/index.html", "long_description": "", "super_description": "", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652af0>, next=<frontmatter.Post object at 0x7f3450691100>)"}, {"cover": "", "title": "rebrand", "tags": ["blog"], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/rebrand.md", "description": "A few notes for my next refactoring of waylonwalker.com", "content": "* simple landing page\n  * https://swyx.io\n  * [joel on software](https://www.joelonsoftware.com/)\n      * recent\n      * reading lists\n* More from waylon just above footer\n  * 4x2 grid\n* link strategy\n  * latest post\n  * next/prev\n  * similar tags\n* search in nav\n* tag stickers\n* simple cards?\n* bookmarks?\n* nav style stinks\n* single post template\n* flat routes no need to /blog /notes\n* post types\n  * \ud83c\udf33  full\n  * \ud83c\udf31  budding\n  * \ud83d\udd8a  Note\n  * \ud83d\udcbb  hot tip\n* usage of tags\n* MDX\n  * stories\n  * slides\n  * \u26a0\n  * \u274c\n  * \u2714\n  * kedro viz\n  * charts\n  * inlink component\n  * [https://joshwcomeau.com/](https://joshwcomeau.com/ \"https://joshwcomeau.com/\")\n  * auto-card oneline links\n* meta posts\n  * about\n  * uses\n  * how site is built\n  * how to search\n* stories\n\n## TODO\n\n* review package.json\n* update package.json\n\n## Done\n\n* ahrefs\n  * fix canonical urls\n  * fix broken inlinks\n* convert to one post template\n*\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/gatsby-scripts-with-onload'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gatsby Scripts with onload</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/custom-python-exceptions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Custom Python Exceptions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-14", "edit_link": "https://github.com/edit/main/pages/notes/rebrand.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574643", "datetime": "2020-11-14 00:00:00+00:00", "slug": "rebrand", "jinja": false, "output_html": "markout/rebrand/index.html", "long_description": "simple landing page https://swyx.io recent reading lists More from waylon just above footer 4x2 grid link strategy latest post next/prev similar tags search in nav tag stickers simple cards? bookmarks? nav style stinks single post template flat route", "super_description": "simple landing page https://swyx.io recent reading lists More from waylon just above footer 4x2 grid link strategy latest post next/prev similar tags search in nav tag stickers simple cards? bookmarks? nav style stinks single post template flat routes no need to /blog /notes post types \ud83c\udf33  full \ud83c\udf31  budding \ud83d\udd8a  Note \ud83d\udcbb  hot tip usage of tags MDX stories slides \u26a0 \u274c \u2714 kedro viz charts inlink component auto-card oneline links meta posts about uses how site is built how to search stories review package.j", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3452909910>, next=<frontmatter.Post object at 0x7f3450663580>)"}, {"cover": "", "title": "Gatsby Scripts with onload", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/gatsby-scripts-with-onload.md", "description": "This might be useful", "content": "This might be useful\n\n[https://github.com/nfl/react-helmet/issues/146](https://github.com/nfl/react-helmet/issues/146 \"https://github.com/nfl/react-helmet/issues/146\")\n\n[https://github.com/gatsbyjs/gatsby/issues/13136](https://github.com/gatsbyjs/gatsby/issues/13136 \"https://github.com/gatsbyjs/gatsby/issues/13136\")\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/git-auto-commit-action-review'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Review of the git-auto-commit-action</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/gatsby-remark-embedder'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>gatsby-remark-embedder</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-22", "edit_link": "https://github.com/edit/main/pages/notes/gatsby-scripts-with-onload.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574649", "datetime": "2020-05-22 00:00:00+00:00", "slug": "gatsby-scripts-with-onload", "jinja": false, "output_html": "markout/gatsby-scripts-with-onload/index.html", "long_description": "This might be useful", "super_description": "This might be useful", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506ae460>, next=<frontmatter.Post object at 0x7f34506911f0>)"}, {"cover": "", "title": "Resume Tips", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/resume-tips.md", "description": "customize for the job Why are you a good fit? What will you bring to the role? Give real outcomes give real experience Stop tech vomiting if you link to GitHub ", "content": "* customize for the job\n* Why are you a good fit?\n* What will you bring to the role?\n* Give real outcomes\n* give real experience\n* Stop tech vomiting\n* if you link to GitHub\n  * Make a profile readme\n  * Guide me to your best work\n  * have some activity\n* if you link to LinkedIn\n  * Provide some benefit that is not on your resume\n* Have a logical flow of experience (dont make me hunt for past experience)\n* Keep it under 2 pages\n* Who you know.\n* Reference real experience\n  * Deployed 12 data pipelines with over 500 nodes to process 200GB of data at a Fortune 100 company\n  * vs\n  * Knowledge of Data Engineering methodology with python EC2\n* Dont be so fluffy\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reusable-bash'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Creating Reusable Bash Scripts</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reset-ipython'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Reclaim memory usage in Jupyter</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-06", "edit_link": "https://github.com/edit/main/pages/notes/resume-tips.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574655", "datetime": "2020-11-06 00:00:00+00:00", "slug": "resume-tips", "jinja": false, "output_html": "markout/resume-tips/index.html", "long_description": "customize for the job Why are you a good fit? What will you bring to the role? Give real outcomes give real experience Stop tech vomiting if you link to GitHub Make a profile readme Guide me to your best work have some activity if you link to LinkedI", "super_description": "customize for the job Why are you a good fit? What will you bring to the role? Give real outcomes give real experience Stop tech vomiting if you link to GitHub Make a profile readme Guide me to your best work have some activity if you link to LinkedIn Provide some benefit that is not on your resume Have a logical flow of experience (dont make me hunt for past experience) Keep it under 2 pages Who you know. Reference real experience Deployed 12 data pipelines with over 500 nodes to process 200GB ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1220>, next=<frontmatter.Post object at 0x7f3450696af0>)"}, {"cover": "", "title": "What DataScientists Should Know About S3", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/s3-datascience.md", "description": "What DataScientists Should Know About S3", "content": "\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reader'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Reader</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/resume-tips'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Resume Tips</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-12-15", "edit_link": "https://github.com/edit/main/pages/notes/s3-datascience.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574661", "datetime": "2019-12-15 00:00:00+00:00", "slug": "s3-datascience", "jinja": false, "output_html": "markout/s3-datascience/index.html", "long_description": "", "super_description": "", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663760>, next=<frontmatter.Post object at 0x7f3450663dc0>)"}, {"cover": "", "title": "Reader", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/reader.md", "description": "Notes about my reader idea", "content": "## Inputs\n\nThe input will be a yaml file containing a list of `Items` you want to stay up to date with.  Inside each item will be a url, and weight.\n\n\n``` yaml\nemail:\n    max-entries: 10\n    recipients:\n      - waylon@waylonwalker.com\nmarkdown:\n    max-entries: 100\n    output:\n        - README.md\njson:\n    max-entries: 1000\n    output:\n        - feeds/feed.json\nrss:\n    max-entries: 1000\n    output:\n        - feeds/feed.xml\nhtml:\n    max-entries: 100\n    output:\n        index.html\n\nitems:\n    Waylon Walker:\n    weight: 5\n    url: https://waylonwalker.com/rss.xml\n    @_WaylonWalker:\n    weight: 3\n    twitter: https://twitter.com/_waylonwalker\n    DEV Waylon Walker:\n    weight: 8\n    url: https://dev.to/waylonwalker\n    Stack Overflow Kedro:\n    weight: 5\n    url: https://stackoverflow.com/questions/tagged/kedro\n    Kedro GitHub:\n    weight: 4\n    url: https://github.com/quantumblacklabs/kedro\n    Kedro Pypi\n        weight: 10\n        url: https://pypi.org/project/kedro/\n```\n\n\n## Types\n\n* rss feed (primary source)\n* youtube feed\n* Stack Overflow tags\n* GitHub repo activity\n* pypi release\n* dev.to post\n* Twitter Search # user will need an api key\n\n# Methodology\n\nEach url will be pulled in and parsed into a standard data scructure.  Some items may yield special feaures, a schemaless/nosql datastructure may be best.  Pipeline will decide to how to weight posts based on users weight, recent position on feed, .\n\n```\na_raw (raw plain text / json items) -> b_int (cleaned items) -> c_pri (single feed of items) -> d_fea (weighted feed of items) -> e_out (requested output formats)\n```\n\n## output\n\nPipeline outputs will be email, json, markdown, xml, html.  Each will be able to be configured by the config file (max-entries, output location).\n\n\n## Running\n\nUsers will be able to create their own reader.  Here is a list of possiblilites.  Users will not have the pipeline inside their repo. It will pull the pipeline from a package repo, pypi, dockerhub, GitHub.\n\n* fork a template repo (might be cumbersome to update)\n* use a GitHub action from the Marketplace (easier to update)\n* GH actions will run the pipeline on a schedule\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reading-list'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Reading List</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/react-headroom'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>I just added react-headroom to my site</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-12", "edit_link": "https://github.com/edit/main/pages/notes/reader.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574667", "datetime": "2020-07-12 00:00:00+00:00", "slug": "reader", "jinja": false, "output_html": "markout/reader/index.html", "long_description": "The input will be a yaml file containing a list of  rss feed (primary source) youtube feed Stack Overflow tags GitHub repo activity pypi release dev.to post Twitter Search # user will need an api key Each url will be pulled in and parsed into a stand", "super_description": "The input will be a yaml file containing a list of  rss feed (primary source) youtube feed Stack Overflow tags GitHub repo activity pypi release dev.to post Twitter Search # user will need an api key Each url will be pulled in and parsed into a standard data scructure.  Some items may yield special feaures, a schemaless/nosql datastructure may be best.  Pipeline will decide to how to weight posts based on users weight, recent position on feed, . Pipeline outputs will be email, json, markdown, xm", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c4c0>, next=<frontmatter.Post object at 0x7f3450658040>)"}, {"cover": "", "title": "Serverless things to investigate", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/serverless-things-to-investigate.md", "description": "Free only one step is free can take rss to social Free to get started Free 7 day trial $4.99 cheapest after", "content": "## Social Automation\n\n### Zappier\n\n* Free\n* only one step is free\n* can take rss to social\n\n### Automate.io\n\n*\n\n## Form submission\n\n[https://getform.io](https://getform.io/ \"https://getform.io\")\n\nFree to get started\n\n[https://formkeep.com/?#pricing](https://formkeep.com/)\n\nFree 7 day trial $4.99 cheapest after\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/setup-yamlls'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Setup a yaml schema | yamlls for a silky smooth setup</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/send-email-with-github-actions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Send Emails with GitHub Actions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-02-10", "edit_link": "https://github.com/edit/main/pages/notes/serverless-things-to-investigate.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574672", "datetime": "2020-02-10 00:00:00+00:00", "slug": "serverless-things-to-investigate", "jinja": false, "output_html": "markout/serverless-things-to-investigate/index.html", "long_description": "Free only one step is free can take rss to social Free to get started Free 7 day trial $4.99 cheapest after", "super_description": "Free only one step is free can take rss to social Free to get started Free 7 day trial $4.99 cheapest after", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345067fe50>, next=<frontmatter.Post object at 0x7f3450658b20>)"}, {"cover": "", "title": "Filtering Pandas", "tags": ["python", "data"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/filtering-pandas.md", "description": "Filtering pandas DataFrames many different ways.", "content": "## query\n\nGood for method chaining, i.e. adding more methods or filters without assigning a new variable.\n\n```python\n# is\nskus.query('AVAILABILITY == \" AVAILABLE\"')\n# is not\nskus.query('AVAILABILITY != \" AVAILABLE\"')\n```\n\n## masking\n\ngeneral purpose, this is probably the most common method you see in training/examples\n\n```python\n# is\nskus[skus['AVAILABILITY'] == 'AVAILABLE']\n# is not\nskus[~skus['AVAILABILITY'] == 'AVAILABLE']\n```\n\n## isin\n\ncapable of including multiple strings to include\n\n    # is in\n    df[df.AVAILABILITY.isin(['AVAILABLE', 'AVL'])]\n    # is not in\n    df[~df.AVAILABILITY.isin(['AVAILABLE', 'AVL'])]\n\n## contains\n\nGood For partial matches\n\n    # contains\n    df[df.AVAILABILITY.str.contains('AVA')]\n    # not contains\n    df[~df.AVAILABILITY.str.contains('AVA')]\n\n## MASKS\n\nanything that we put inside of square brackets can be set as a variable then passed in.\n\n    service_mask = skus['AVAILABILITY'] == 'AVAILABLE'\n    name_mask = skus['NAME'] == 'Dell chromebook 11'\n\n### Operators\n\n& - and\n\\~ - not\n| - or\n\n### AVAILABLE and NAME\n\n    df[service_mask & name_mask]\n\n### AVAILABLE or NAME\n\n    df[service_mask | name_mask]\n\n### AVAILABLE and not NAME\n\n    df[service_mask & ~name_mask]\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/find-kedro-release'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>\ud83d\udce2 Announcing find-kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/explicit-vs-implicit-returns-in-javascript'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Explicit vs Implicit Returns in Javascript</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-24", "edit_link": "https://github.com/edit/main/pages/notes/filtering-pandas.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574678", "datetime": "2019-09-24 00:00:00+00:00", "slug": "filtering-pandas", "jinja": false, "output_html": "markout/filtering-pandas/index.html", "long_description": "Good for method chaining, i.e. adding more methods or filters without assigning a new variable. general purpose, this is probably the most common method you see in training/examples capable of including multiple strings to include Good For partial ma", "super_description": "Good for method chaining, i.e. adding more methods or filters without assigning a new variable. general purpose, this is probably the most common method you see in training/examples capable of including multiple strings to include Good For partial matches anything that we put inside of square brackets can be set as a variable then passed in. &", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068afa0>, next=<frontmatter.Post object at 0x7f345065e9d0>)"}, {"cover": "", "title": "Maintianing multiple git remotes", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/maintianing-multiple-git-remotes.md", "description": "prev Building Rich a Dev Server next What is something you should have learned or understood earlier?", "content": "``` bash\ngit remote -v\ngit remote add gitlab <url>\ngit push gitlab main\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/markata-dev-server'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Building Rich a Dev Server</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/learn-early'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What is something you should have learned or understood earlier?</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-07", "edit_link": "https://github.com/edit/main/pages/notes/maintianing-multiple-git-remotes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574686", "datetime": "2020-05-07 00:00:00+00:00", "slug": "maintianing-multiple-git-remotes", "jinja": false, "output_html": "markout/maintianing-multiple-git-remotes/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a9ee0>, next=<frontmatter.Post object at 0x7f345068a550>)"}, {"cover": "", "title": "Twitter deepdives", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/twitter-deepdives.md", "description": "Inspired by Chris Achard List comps Classes Inheritance Background Click Lambdas Cataloging Custom datasets Reusable pipelines find-kedro Email course inspired ", "content": "Inspired by Chris Achard\n\n## My ideas\n\n### Python\n\n* List comps\n* Classes\n* Inheritance\n* Background\n* Click\n* Lambdas\n\n### Kedro\n\n* Cataloging\n* Custom datasets\n* Reusable pipelines\n* find-kedro\n\n### Learn kedro in 5 days\n\nEmail course inspired by learn d3 in 5 days\n\n### Mail\n\n* Share your knowledge\n* Practice\n* Practice in public\n* Make practice easy\n* Share your notes\n* Digital Gardening\n* Own your content\n* Build your audience\n* Be nice\n* Have empathy\n* Learn your way\n* Continuous learning\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/variable-names-don-t-need-their-type'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Variables names don't need their type</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/trim-branches'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Trim unused git branches</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-01", "edit_link": "https://github.com/edit/main/pages/notes/twitter-deepdives.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574692", "datetime": "2020-05-01 00:00:00+00:00", "slug": "twitter-deepdives", "jinja": false, "output_html": "markout/twitter-deepdives/index.html", "long_description": "Inspired by Chris Achard List comps Classes Inheritance Background Click Lambdas Cataloging Custom datasets Reusable pipelines find-kedro Email course inspired by learn d3 in 5 days Share your knowledge Practice Practice in public Make practice easy ", "super_description": "Inspired by Chris Achard List comps Classes Inheritance Background Click Lambdas Cataloging Custom datasets Reusable pipelines find-kedro Email course inspired by learn d3 in 5 days Share your knowledge Practice Practice in public Make practice easy Share your notes Digital Gardening Own your content Build your audience Be nice Have empathy Learn your way Continuous learning", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506798b0>, next=<frontmatter.Post object at 0x7f3450685b20>)"}, {"cover": "", "title": "SqlAlchemy Models", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/sqlalchemy-models.md", "description": "My Notes about using sqlalchemy models", "content": "## Make a connection\n\n```python\nfrom sqlalchemy import create_engine\ndef get_engine():\n    return create_engine(\"sqlite:///mode_examples.sqlite\")\n```\n\n\n## Make a session\n\n``` python\nfrom sqlalchemy.orm import sessionmaker\ndef get_session():\n    con = get_engine()\n    Base.bind = con\n    Base.metadata.create_all()\n    Session = sessionmaker(bind=con)\n    session = Session()\n    return session\n```\n\n## Make a Base Class\n\n``` python\nfrom sqlalchemy.ext.declarative import declarative_base\nBase = declarative_base()\nBase.metadata.bind = get_engine()\n```\n\n## Make your First Model\n\n``` python\nclass User(Base):\n    __tablename__ = \"users\"\n    username = Column('username', Text())\n    firstname = Column('firstname', Text())\n    lastname = Column('lastname', Text())\n```\n\n## Make your own Base Class to inherit From\n\n``` python\nclass MyBaseHelper:\n    def to_dict(self):\n        return {k: v for k, v in self.__dict__.items() if k[0] != \"_\"}\n\n    def update(self, **attrs):\n        for key, value in attrs.items():\n            if hasattr(self, key):\n                setattr(self, key, value)\n```\n\n## Use the Custom Base Class\n\n``` python\nclass User(Base, MyBaseHelper):\n    __tablename__ = \"users\"\n    username = Column('username', Text())\n    firstname = Column('firstname', Text())\n    lastname = Column('lastname', Text())\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/stand-with-your-team'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Stand With Your Team</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/simple-click'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>simple click</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-12-21", "edit_link": "https://github.com/edit/main/pages/notes/sqlalchemy-models.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574698", "datetime": "2019-12-21 00:00:00+00:00", "slug": "sqlalchemy-models", "jinja": false, "output_html": "markout/sqlalchemy-models/index.html", "long_description": "", "super_description": "", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450640d30>, next=<frontmatter.Post object at 0x7f3450658e50>)"}, {"cover": "", "title": "Testing Data Pipelines", "tags": ["kedro", "python"], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/testing-data-pipelines.md", "description": "Thinking through testing best practices for Data Pipelines", "content": "# Lint/Format/Doc\n\n* black\n* flake8\n* interrogate\n* mypy\n\n# Pipeline Assertions\n\n* pipeline constructs\n* pipeline as expected nodes\n* pipeline has minimum nodes\n* test minimum tags\n* test alternate tags\n\n# Catalog Assertions\n\n* test catalog follows naming structure\n* \n\n# Node Tests\n\n* test function does the correct operations on test data\n\n# Great Expectations\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/new-machine-tpio'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>New Machine for developing Tests with TestProject.io</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/sqlalchemy-models'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>SqlAlchemy Models</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-16", "edit_link": "https://github.com/edit/main/pages/notes/testing-data-pipelines.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574704", "datetime": "2020-11-16 00:00:00+00:00", "slug": "testing-data-pipelines", "jinja": false, "output_html": "markout/testing-data-pipelines/index.html", "long_description": "black flake8 interrogate mypy pipeline constructs pipeline as expected nodes pipeline has minimum nodes test minimum tags test alternate tags test catalog follows naming structure test function does the correct operations on test data", "super_description": "black flake8 interrogate mypy pipeline constructs pipeline as expected nodes pipeline has minimum nodes test minimum tags test alternate tags test catalog follows naming structure test function does the correct operations on test data", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c3a0>, next=<frontmatter.Post object at 0x7f3450663f70>)"}, {"cover": "", "title": "New Machine for developing Tests with TestProject.io", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/new-machine-tpio.md", "description": "Today I setup a new machine on Digital Ocean to use with TestProject.io, Here are my installation notes.", "content": "Today I setup a new machine on Digital Ocean to use with TestProject.io,  Here are my installation notes.\n\n``` bash\napt update && apt upgrade -y\n\napt install zsh\nchsh zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\ncurl -fsSL https://starship.rs/install.sh | bash\necho 'eval \"$(starship init zsh)\"' >> ~/.zshrc\n\n# python\nsudo apt update\nsudo apt install python3-pip -y\necho 'alias python=python3' >> ~/.zshrc\necho 'alias pip=pip3' >> ~/.zshrc\n\n# pipx\napt install python3-venv\npip install pipx\npipx install black\npipx install shell-functools\npip install ipython\n\n\n# docker\nsudo apt update\nsudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt update\nsudo apt install docker-ce\n\n# docker-compose\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n\n# configure git\ngit config --global user.name \"Waylon Walker\"\ngit config --global user.email waylon@waylonwalker.com\n\n# fzf\ngit clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\n~/.fzf/install\n\n# forgit\ngit clone https://github.com/wfxr/forgit ~/.forgit\necho \". ~/.forgit/forgit.plugin.zsh\" >> ~/.zshrc\n\n# ag\napt install silversearcher-ag\n\n# bat\napt install bat\necho \"alias cat=batcat\" >> ~/.zshrc\n\n# testproject.io tokens\necho 'export TP_AGENT_ALIAS=\"Digital Ocean Agent\"' >>\" ~/.zshrc\necho \"export TP_AGENT_API_KEY=<your-key> >>\" ~/.zshrc\necho \"export TP_DEV_TOKEN=<your-token> >>\" ~/.zshrc\n\n```\n\n\nenvsubst < .github/ci/docker-compose.yml > docker-compose.yml\n\n``` yaml\n# .github/ci/docker-compose.yml\nversion: \"3.1\"\nservices:\n  testproject-agent:\n    image: testproject/agent:latest\n    container_name: testproject-agent\n    depends_on:\n      - chrome\n      - firefox\n    environment:\n      TP_API_KEY: \"${TP_API_KEY}\"\n      TP_AGENT_ALIAS: \"GitHub Action Agent\"\n      TP_AGENT_TEMP: \"true\"\n      TP_SDK_PORT: \"8686\"\n      CHROME: \"chrome:4444\"\n      CHROME_EXT: \"localhost:5555\"\n      FIREFOX: \"firefox:4444\"\n      FIREFOX_EXT: \"localhost:6666\"\n    ports:\n    - \"8585:8585\"\n    - \"8686:8686\"\n  chrome:\n    image: selenium/standalone-chrome\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n    - \"5555:4444\"\n  firefox:\n    image: selenium/standalone-firefox\n    volumes:\n      - /dev/shm:/dev/shm\n    ports:\n    - \"6666:4444\"\n```\n\n\n``` bash\ndocker-compose -f docker-compose.yml\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/newsboat'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Newsboat</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/neovim-live-substitution'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Live Substitution In Neovim</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-25", "edit_link": "https://github.com/edit/main/pages/notes/new-machine-tpio.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574710", "datetime": "2020-07-25 00:00:00+00:00", "slug": "new-machine-tpio", "jinja": false, "output_html": "markout/new-machine-tpio/index.html", "long_description": "Today I setup a new machine on Digital Ocean to use with TestProject.io,  Here are my installation notes. envsubst ", "super_description": "Today I setup a new machine on Digital Ocean to use with TestProject.io,  Here are my installation notes. envsubst ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450685220>, next=<frontmatter.Post object at 0x7f3450652e80>)"}, {"cover": "", "title": "Kedro Factory", "tags": ["blog"], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/kedro-factory.md", "description": "Kedro Plugin Idea for creating Dags quickly", "content": "Dynamically generate kedro pipelines with yaml or script\n\nInspiration\n\n* [dag-factory](https://github.com/ajbosco/dag-factory)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/amazon-web-services'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Amazon Web Services</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/new-machine-tpio'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>New Machine for developing Tests with TestProject.io</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-16", "edit_link": "https://github.com/edit/main/pages/notes/kedro-factory.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574715", "datetime": "2020-11-16 00:00:00+00:00", "slug": "kedro-factory", "jinja": false, "output_html": "markout/kedro-factory/index.html", "long_description": "Dynamically generate kedro pipelines with yaml or script Inspiration", "super_description": "Dynamically generate kedro pipelines with yaml or script Inspiration", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c940>, next=<frontmatter.Post object at 0x7f345066c3a0>)"}, {"cover": "", "title": "Amazon Web Services", "tags": ["cli"], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/amazon-web-services.md", "description": "I started using aws in March 2019.  Here are some of my notes.", "content": "I started using aws in March 2019.  Here are some of my notes.\n\n## aws-cli\n\n## ec-2\n\n## SageMaker\n\n## S3\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/reading-list'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Reading List</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-factory'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Factory</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-22", "edit_link": "https://github.com/edit/main/pages/notes/amazon-web-services.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574721", "datetime": "2019-09-22 00:00:00+00:00", "slug": "amazon-web-services", "jinja": false, "output_html": "markout/amazon-web-services/index.html", "long_description": "I started using aws in March 2019.  Here are some of my notes.", "super_description": "I started using aws in March 2019.  Here are some of my notes.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066c4c0>, next=<frontmatter.Post object at 0x7f345066c070>)"}, {"cover": "", "title": "Reading List", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/reading-list.md", "description": "Things to read later", "content": "## Latest Post\n\nhttps://waylonwalker.com/latest/\n\nSTOP LEAVING Browser Tabs open and save them here!\n\n* [jbrancha til](https://dev.to/jbranchaud/how-i-built-a-learning-machine-45k9)\n* [The Video Course Launch that Made Me Think](https://christoph-rumpel.com/2020/8/the-video-course-launch-that-made-me-think)\n* [photo prism](https://demo.photoprism.app/browse)\n* [box python library](https://github.com/cdgriffith/Box/wiki/Types-of-Boxes#camel-killer-box)\n* [kedro on hn](https://news.ycombinator.com/item?id=30037766#30039809)\n* [How can a Data Scientist refactor Jupyter notebooks towards production-quality code?](https://laszlo.substack.com/p/how-can-a-data-scientist-refactor)\n* [Sourcing vs executing in Bash](https://qmacro.org/autodidactics/2021/10/14/sourcing-vs-executing-in-bash/)\n* [Should We Follow The Open-Closed Principle?](https://thevaluable.dev/open-closed-principle-revisited/)\n* [Create multi-dimensional arrays in pure Python: The Correct Way](https://limdauto.me/blog/create-multi-dimensional-arrays-in-pure-python/)\n* [Beware of These 9 Red Flags in a Developer Interview](https://javascript.plainenglish.io/beware-of-these-9-red-flags-in-a-developer-interview-16b7bf63336a)\n* [How to Overcome Impostor Syndrome as a Developer](https://igorasilveira.hashnode.dev/how-to-overcome-impostor-syndrome-as-a-developer-ckv6ej6lc15qtp5s1hz5da4q3)\n* [lazy load youtube videos](https://css-tricks.com/lazy-load-embedded-youtube-videos/)\n* [lite youtube embeds](https://www.labnol.org/internet/light-youtube-embeds/27941/)\n* [full subtitle youtube search](https://filmot.com/)\n\n---\n\n* Jungle Scout - [Kedro Case Study](https://junglescouteng.medium.com/jungle-scout-case-study-kedro-airflow-and-mlflow-use-on-production-code-150d7231d42e)\n* [Kedro Sessions](https://github.com/quantumblacklabs/kedro/commit/b42845e2e9a6d96e395a5a6f75980ef55c24fddc)\n* Julia Evans - [A few things I've learned about email marketing](https://jvns.ca/blog/2020/10/28/a-few-things-i-ve-learned-about-email-marketing/)\n* git course - [katacoda](https://www.katacoda.com/courses/git/1)\n* [data-science-twitch-streamers-round-up](https://www.jessemaegan.com/blog/2021-05-28-data-science-twitch-streamers-round-up/)\n* [pandas assign](https://twitter.com/__mharrison__/status/1415728695264776192/photo/1)\n\n\n## nix\n\nhttps://ianthehenry.com/posts/how-to-learn-nix/python3-alpha/\n\n## textual css\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">BTW.<br><br>Do this in one terminal:<br><br>textual console<br><br>Run scripts with:<br><br>textual run <a href=\"https://t.co/3CuaqTyxjl\">https://t.co/3CuaqTyxjl</a> --dev</p>&mdash; Will McGugan (@willmcgugan) <a href=\"https://twitter.com/willmcgugan/status/1531294412696956930?ref_src=twsrc%5Etfw\">May 30, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n## neovim\n\n* [nvim-lua-guide](https://github.com/nanotee/nvim-lua-guide)\n* [neorants](https://mlingelbach.com/neovim/issue_1/)\n* [telescope 987](https://github.com/nvim-telescope/telescope.nvim/pull/987)\n* [nvim how to doc plugins](https://github.com/tjdevries/tree-sitter-lua#how-to-generate-documentation)\n\n## Topic Ideation\n\n* [semrush](https://www.semrush.com/topic-research/61f49a2c01de510001fec3bb/overview/)\n\n## prime and nic\n\nhttps://www.twitch.tv/videos/1229603481\n\n## How to Remove Background Sound in Real-Time for Linux\n\u2002by\n@adfpizarro\n\nhttps://hackernoon.com/how-to-remove-background-sound-in-real-time-for-linux-uvea3w7n\n\nhttps://ultimatemotherfuckingwebsite.com/\n\n## \ud83d\udd25 git aliases\n\nhttps://github.com/jsatk/dotfiles/blob/ck/tag-git/gitconfig\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/realistic-git-workflow'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Realistic Git Workflow</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reader'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Reader</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-28", "edit_link": "https://github.com/edit/main/pages/notes/reading-list.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574728", "datetime": "2020-10-28 00:00:00+00:00", "slug": "reading-list", "jinja": false, "output_html": "markout/reading-list/index.html", "long_description": "https://waylonwalker.com/latest/ STOP LEAVING Browser Tabs open and save them here Jungle Scout -  Julia Evans -  git course -  https://ianthehenry.com/posts/how-to-learn-nix/python3-alpha/ https://twitter.com/willmcgugan/status/1531294412696956930 h", "super_description": "https://waylonwalker.com/latest/ STOP LEAVING Browser Tabs open and save them here Jungle Scout -  Julia Evans -  git course -  https://ianthehenry.com/posts/how-to-learn-nix/python3-alpha/ https://twitter.com/willmcgugan/status/1531294412696956930 https://www.twitch.tv/videos/1229603481 by https://hackernoon.com/how-to-remove-background-sound-in-real-time-for-linux-uvea3w7n https://ultimatemotherfuckingwebsite.com/ https://github.com/jsatk/dotfiles/blob/ck/tag-git/gitconfig", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450652430>, next=<frontmatter.Post object at 0x7f3450663760>)"}, {"cover": "", "title": "Digital Ocean", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/digital-ocean.md", "description": "I love digital ocean for it", "content": "I love digital ocean for it's **simplicity** and its commitment to open source.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/do-you-hoist'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Do You Hoist</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/digital-gardening-stream-6-6-2021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83c\udf31 Digital Gardening | gif to Mp4 | Stream replay June 4, 2021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-22", "edit_link": "https://github.com/edit/main/pages/notes/digital-ocean.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574734", "datetime": "2019-09-22 00:00:00+00:00", "slug": "digital-ocean", "jinja": false, "output_html": "markout/digital-ocean/index.html", "long_description": "I love digital ocean for it", "super_description": "I love digital ocean for it", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506f20d0>, next=<frontmatter.Post object at 0x7f34506851f0>)"}, {"cover": "", "title": "Find and Replace in the Terminal.", "tags": ["linux", "bash"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/find-replace.md", "description": "notes about find and replace techniques", "content": "## grepr\n\n```bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s/$1/$2/g\"}\n\n```bash\ngrepr() {grep -iRl \"$1\" | xargs sed -i \"s/$1/$2/g\"}\n```\n\n## grepd\n\n``` python\ngrepd() {grep -iRl \"$1\" | xargs sed -i \"/^$1/d\"}\n```\n\n## CocSearch\n\n\n``` bash\n:CocSearch status: 'false' -g *.md\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/fix-git-commit-author'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Fix git commit author</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/find-kedro-release'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>\ud83d\udce2 Announcing find-kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-12", "edit_link": "https://github.com/edit/main/pages/notes/find-replace.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574740", "datetime": "2020-11-12 00:00:00+00:00", "slug": "find-replace", "jinja": false, "output_html": "markout/find-replace/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345065e160>, next=<frontmatter.Post object at 0x7f345068afa0>)"}, {"cover": "", "title": "Kedro", "tags": ["kedro", "python"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/kedro.md", "description": "My Notes about using kedro", "content": "## [#kedrotips](https://twitter.com/search?q=%23kedrotips&f=live)\n\nI am tweeting out most of these snippets as I add them, you can find them all here [#kedrotips](https://twitter.com/search?q=%23kedrotips).\n\n## \ud83d\udde3 Heads up\n\nBelow are some quick snippets/notes for when using kedro to build data pipelines. So far I am just compiling snippets. Eventually I will create several posts on kedro. These are mostly things that I use In my everyday with kedro. Some are a bit more essoteric. Some are helpful when writing production code, some are useful more usefule for exploration.\n\n## \ud83d\udcda Catalog\n\n![catalogs](https://images.waylonwalker.com/jesse-orrico-h6xNSDlgciU-unsplash.jpg)\n_Photo by jesse orrico on Unsplash_\n\n### CSVLocalDataSet\n\n**python**\n\n``` python\nimport pandas as pd\niris = pd.read_csv('https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv')\n\ndata_set = CSVLocalDataSet(filepath=\"test.csv\",\n                                 load_args=None,\n                                 save_args={\"index\": False})\n\niris_data_set.save(iris)\nreloaded_iris = iris_data_set.load()\n```\n\n**yaml**\n\n``` yaml\ntest_data:\n   type: CSVLocalDataset\n   filepath: test.csv\n   load_args: None\n   save_args:\n      index: False\n```\n\n## CSVHTTPDataSet\n\n``` python\ncities = CSVHTTPDataSet(\n    fileurl=\"https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv\",\n    auth=None,\n    load_args=None)\n\niris = iris_data_set.load()\n```\n\n``` yaml\ncities:\n   type: CSVHTTPDataSet\n    fileurl: https://people.sc.fsu.edu/~jburkardt/data/csv/cities.csv\n    auth: None\n    load_args: None\n```\n\n## HDFLocalDataSet\n\n``` python\nimport pandas as pd\nfrom kedro.io import HDFLocalDataSet\n\niris = pd.read_csv('https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv')\niris_data_set = HDFLocalDataSet(filepath=\"iris.hdf\",\n                           key=\"test_hdf_key\",\n                           load_args=None,\n                           save_args=None)\n\niris_data_set.save(iris)\nreloaded_iris = iris_data_set.load()\n```\n\n``` yaml\ncars:\n   type: HDFLocalDataSet\n   filepath: test.hdf\n   key: test_hdf_key\n```\n\n## HDFS3LocalDataSet\n\n``` python\nimport pandas as pd\nfrom kedro.io import HDFS3DataSet\n\niris = pd.read_csv('https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv')\niris_data_set = HDFS3DataSet(filepath=\"iris.hdf\",\n                        bucket_name=\"bucket-us-west-1\",\n                        key=\"test_hdf_key\",\n                        load_args=None,\n                        save_args=None)\n\niris_data_set.save(iris)\nreloaded_iris = iris_data_set.load()\n```\n\n``` yaml\ncars:\n   type: HDFS3DataSet\n   filepath: cars.hdf\n   bucket_name: bucket-us-west-1\n   key: test_hdf_key\n```\n\n## JSONLocalDataSet\n\n``` python\nimport pandas as pd\nfrom kedro.io import JSONLocalDataSet\n\niris = pd.read_csv('https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv')\ncars = JSONLocalDataSet(filepath=\"iris.json\",\n                        load_args=None,\n                        save_args=None)\n\niris_data_set.save(iris)\nreloaded_iris = iris_data_set.load()\n```\n\n``` yaml\ncars:\n   type: JSONLocalDataSet\n   filepath: iris.json\n```\n\n## ParquetLocalDataSet\n\n``` python\nimport pandas as pd\nfrom kedro.io import ParquetLocalDataSet\n\niris = pd.read_csv('https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B%20cookiecutter.repo_name%20%7D%7D/data/01_raw/iris.csv')\n\niris_data_set = ParquetLocalDataSet('iris',\n                           engine='auto',\n                           load_args=None,\n                           save_args=None,\n                           version=None)\n\niris_data_set.save(iris)\nreloaded_iris = iris_data_set.load()\n```\n\n``` yaml\ncars:\n   type: JSONLocalDataSet\n   filepath: cars\n```\n\nPickleS3DataSet\n\nSQLTableDataSet\n\nSQLQueryDataSet\n\nTextLocalDataSet\n\nExcelLocalDataSet\n\n## \u23f3 Loading Data\n\n![loading data](https://images.waylonwalker.com/battlecreek-coffee-roasters-eg6OUchGCsw-unsplash.jpg)\n_Photo by Battlecreek Coffee Roasters on Unsplash_\n\n### Simple Loading\n\n``` python\ndf = catalog.load('cars')\n```\n\n### list all datasets\n\n``` python\ncatalog.list()\n```\n\n### Saving Data\n\n``` python\ncatalog.save('cars', cars)\n```\n\n### \ud83d\udd0d Finding data\n\n**simple keyword search**\n\n``` python\nquery = 'raw'\n[data for data in catalog.list() if query in data]\n```\n\n_see on_ [_#kedrotips_](https://twitter.com/_WaylonWalker/status/1197130980659732480?s=20)\n\n**multi keyword serch**\n\n``` python\nquery = 'raw sales'\ndata_sets = catalog.list()\nfor word in query.split():\n\tdata_sets = [\n       data\n       for data in data_sets\n       if query in data\n       ]\n```\n\n_see on_ [_#kedrotips_](https://twitter.com/_WaylonWalker/status/1197528461587419139?s=20)\n\n**\ud83d\udc12 monkey patch it**\n\n``` python\ndef query(*search_terms):\n     data_sets = catalog.list()\n     for search in search_terms:\n         data_sets = [\n         data\n         for data in data_sets\n         if search in data\n         ]\n     return data_sets\n\ncatalog.query = query\n```\n\n_see on [#kedrotips](https://twitter.com/_WaylonWalker/status/1197855759507300352?s=20)\n\n### \ud83e\udd19 YOLO\n\n_You Only Load Once_\n\n**simple**\n\n``` python\ndata = [catalog.load(d)\n        for d in\n        catalog.query('c_pri', 'cars')\n        ]\n```\n\n**more refined**\n\n``` python\ndata = {\n   d: catalog.load(d)\n   for d in catalog.query('c_pri', 'cars')\n   }\n```\n\n**\ud83c\udf77 refined like a fine wine**\n\n``` python\nfrom types import SimpleNamespace\ndata = SimpleNamespace**{\n   d: catalog.load(d)\n   for d in catalog.query('c_pri', 'cars')\n   })\n```\n\n**\ud83e\uddc0 Make it a function**\n_getting funcy_\n\n``` python\nfrom types import SimpleNamespace\n\ndef yolo(*search_terms):\n   \"\"\"you only load once\n   using query method from previous tip\"\"\"\n   data = SimpleNamespace(**{\n       d: catalog.load(d)\n   for d in catalog.query(*search_terms)\n    })\n    return data\n\nall_pri = yolo('c_pri')\n```\n\n**\ud83d\udc12 monkey patch it**\n\n``` python\nfrom functools import partial\n\ncatalog.yolo = yolo\ncatalog.yolo.__doc__ = \"you only load once\"\n\nall_pri = catalog.yolo('c_pri')\n```\n\n\n### adding catalogs together\n\n``` python\nfrom kedro.io import DataCatalog\nDataCatalog({**cat1.__dict__['_data_sets'], **cat2.__dict__['_data_sets']})\n```\n## \ud83d\udee2 Building pipelines\n\n![building pipelines](https://images.waylonwalker.com/roman-pentin-T5QT2bmiD4E-unsplash.jpg)\n_Photo by roman pentin on Unsplash_\n\n### \ud83d\udccd Creating Nodes\n\n``` python\nfrom kedro.pipeline import node\nnode = node(lambda x: x.dropna(), inputs='raw_cars', outputs='int_cars')\n```\n\n``` python\nfrom kedro.pipeline import node\n\ndef drop_columns(df, *columns):\n   for column in columns:\n      df = df.drop(columns=column)\n   return df\n\nnode = node(\n   lambda x: drop_columns(x, 'vs', 'am', 'gear', 'carb'),\n   inputs='int_cars',\n   outputs='pri_cars'\n   )\n```\n\n### \ud83d\udee2 Creating a pipeline\n\n### Don't be so verbose\n\nCreate similar nodes dynamically\n\n``` python\ndef halve_dataframe(data: pd.DataFrame) -> List[pd.DataFrame]:\n   \"\"\" splits a dataframe in half \"\"\"\n    return np.array_split(data, 2)\n\nnodes = []\ndatasets = [\n   'cars', 'trucks', 'boats', 'motorcycles', 'planes',\n   'ships', 'busses', 'trains', 'subways'\n   ]\n\n# creates a pipeline node for every dataset in the datasets list\nfor dataset in datasets\n   nodes.append(\n       node(halve_dataframe,\n            'e_modin_{dataset}',\n            ['train_{dataset}', 'test_{dataset}']),\n   )\n```\n\n## \ud83c\udfc3\u200d\u2642\ufe0f Running Pipelines\n\n![running pipelines](https://images.waylonwalker.com/rodion-kutsaev-xNdPWGJ6UCQ-unsplash.jpg)\n_Photo by Rodion Kutsaev on Unsplash_\n\n**\ud83d\udd16 filter by tags**\n\n``` python\nnodes = pipeline.only_nodes_with_tags('cars')\n```\n\n_see on_ [_#kedrotips_](https://twitter.com/_WaylonWalker/status/1195319044808888321?s=20)\n\n**filter by node**\n\n``` python\nnodes = pipeline.only_nodes('b_int_cars')\n```\n\n_see on [#kedrotips](https://twitter.com/_WaylonWalker/status/1196406204479737856?s=20)\n\n**filter nodes like**\n\n``` python\nquery_string = 'cars'\nnodes = [\n   node.name\n   for node in pipeline.nodes\n   if query_string in node.name\n   ]\npipeline.only_nodes(*nodes)\n```\n\n_see on_ [_#kedrotips_](https://twitter.com/_WaylonWalker/status/1196813895228428288?s=20)\n\n**only nodes with tags** _or_\n\n``` python\nnodes = pipeline.only_nodes_with_tags('cars', 'trains')\n```\n\n**only nodes with tags** _and_\n\n``` python\nraw_nodes = pipeline.only_nodes_with_tags('raw')\ncar_nodes = pipeline.only_nodes_with_tags('cars')\nraw_car_nodes = raw_nodes & car_nodes\n```\n\n``` python\nraw_nodes = (\n   pipeline\n   .only_nodes_with_tags('raw')\n   .only_nodes_with_tags('cars')\n   )\n```\n\n**add pipelines**\n\n``` python\ncar_nodes = pipeline.only_nodes_with_tags('cars')\ntrain_nodes = pipeline.only_nodes_with_tags('trains')\ntransportation_nodes = car_nodes + train_nodes\n```\n\n**ensure nodes are attached**\n\n``` python\ncars_attached = len(\n   pipeline\n   .only_nodes_with_tags('cars')\n   .grouped_nodes\n   ) == 1\n```\n\n### \ud83c\udf82 Pipeline Decorators\n\n[example - log_time](https://kedro.readthedocs.io/en/latest/_modules/kedro/pipeline/decorators.html#log_time)\n\n``` python\nfrom kedro.pipeline.decorators import log_time, mem_profile\npipeline.decorate(log_running_time)\n```\n\n## Pipeline IO\n\n`pipleine.all_inputs()` and `pipeline.all_outputs()` return sets of pipeline inputs and outputs and you can do set operations on them.  This is particularly useful to find the upper and lower edges of your pipeline or subset of pipeline.  The pipeline object here is any `kedro` pipeline including a filtered subset.\n\n### Find all raw data\n\n``` python\npipeline.all_inputs() - pipeline.all_outputs()\n```\n\n### Find all final data\n\n``` python\npipeline.all_outputs() - pipeline.all_inputs()\n```\n\n### Find all nodes that do not raw\n\nThis one is probably one that is pushing the limits of what I would do in a list comprehension that I use in prod or even put into a text editor, but I commonly use ipython for my adhoc work and keeping it all in one line is very handy.  Complex list comprehensions kinda start becoming like regex in a way that they are really easy to write and really hard to read.  I don't think this one quite hits that point but its getting close.\n\nI find this one super useful to help me either move data beween environments, or avoid unnecessary database calls.\n\n``` python\nraw_inputs = pipeline.all_inputs() - pipeline.all_outputs()\nraw_nodes = [node for node in pipeline.nodes if [i for i in raw_inputs if i in set(node.inputs)] != []]\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-basics'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Kedro Basics</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/jut'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>JUT | Read Notebooks in the Terminal</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-11-02", "edit_link": "https://github.com/edit/main/pages/notes/kedro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574746", "datetime": "2019-11-02 00:00:00+00:00", "slug": "kedro", "jinja": false, "output_html": "markout/kedro/index.html", "long_description": "I am tweeting out most of these snippets as I add them, you can find them all here  Below are some quick snippets/notes for when using kedro to build data pipelines. So far I am just compiling snippets. Eventually I will create several posts on kedro", "super_description": "I am tweeting out most of these snippets as I add them, you can find them all here  Below are some quick snippets/notes for when using kedro to build data pipelines. So far I am just compiling snippets. Eventually I will create several posts on kedro. These are mostly things that I use In my everyday with kedro. Some are a bit more essoteric. Some are helpful when writing production code, some are useful more usefule for exploration. PickleS3DataSet SQLTableDataSet SQLQueryDataSet TextLocalDataS", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450663280>, next=<frontmatter.Post object at 0x7f3450658af0>)"}, {"cover": "static/codeit-bro-interview.png", "title": "Codeit Bro Interview", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/codeit-bro-interview.md", "description": "use this profile image Please share your professional role as a data scientist?  I graduated with a Mechanical Engineering Degree 8 years ago.  Much of my work ", "content": "![profile image](https://images.waylonwalker.com/profile.jpg)\n\n> use this profile image\n\n> Please share your professional role as a data scientist? \\[Also feel free to\n> share about your personal projects, publications, etc.\\]\n\nI graduated with a Mechanical Engineering Degree 8 years ago.  Much of my work\n[early in my career](https://waylonwalker.com/eight-years-cat/) was wrapped\naround analyzing larger datasets for my group to understand quality, drive\nchanges to improve quality or prove that quality was already good.\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/eight-years-cat'>\n<img\nstyle='width:500px; max-width:80%; margin: auto;'\nsrc=\"https://images.waylonwalker.com/eight-years-cat.png\"\nalt=\"My first eight years as a working professional article\"\n/>\n</a>\n</p>\n\nThree years ago I made the switch to Data Science and have loved every minute of\nit.  It is a very dynamic field that is continually changing and there are\nalways a new set of skills to learn and hone in on.  I talk a lot about the\nmindset of always learning, sharing knowledge, and communicating in my\n[newsletter](https://waylonwalker.com/newsletter)\n\n> What are the most difficult challenges you faced as a data scientist and how\n> you resolved them?\n\nDeployment is a high bar to enter.  Jupyter notebooks provide a suspiciously simple start into Data Science.  Folks with very little coding experience can easily get up and running and start bringing value back into their organization, but as you want to start sharing these notebooks, re-using components of them, and scheduling them to run autonomously the bar is raised very quickly.  Many places will have teams dedicated to each piece of the process, but all too often if you want your project to be successful you have to step out of your comfort zone and do much of it yourself.\n\nGetting started in Data Science\n\n* Jupyter\n\nGoing to production\n\n* packaging\n* creating cli's\n* linux\n* bash\n* cron\n* CI/CD\n* git\n* Docker\n* AWS\n* Pipelines\n* Schedulers/orchestration\n* Virtual Machines\n* hosting docs\n* hosting models/apis\n* Visualizations\n* Databases\n* blob storage\n* ...\n\n> What are the most required skills for a data scientist?\n\n* Communication\n* project Estimation\n* Subject Matter Expertise\n* Python\n\nA good understanding of the business problems you are trying to solve.  This\nrequires very good communication between Subject matter experts and the Data\nScience team.\n\nFor the technical side, python is the core skill that I stick with.  As I said\nbefore this quickly starts to grow as you start needing to take projects into\nproduction.  Learning how to write good python efficiently without needing to\nlook up much really frees up your brain to focus on the harder challenge of\nsolving the problem at hand.\n\nLearn how to frame up your problem ahead of time and be flexible in just the\nright ways.\n\nLet's make up a fictitious transportation company that is split into a number of divisions for car, train, bus, etc.  All too often I see projects setup as a pilot for the car division, or even a micro subset of the car division.  The proof of concept takes off, and now we need to expand the project from one city to a whole region, but since the city was hard coded in it makes it really hard to expand. After a few months we have a lot of copy and paste code and at some point it becomes nearly impossible to make any changes without needing to change everything, or expand to new regions or divisions. Understand the inputs to your problem set early on and plan for them to change.\n\n> How a beginner can create a roadmap to become a successful data scientist in\n> the present scenario?\n\nSomeone who is currently working in any sort of role that involves manipulating data in excel can get their foot in the door by automating the work their team does in python, or visualizing it in a more powerful tool.\n\nYou will quickly find that you can handle much more data than spreadsheet tools can, you can start expanding projects to utilize more data, or use that extra free time to find new insights you didn't have time for before.\n\n> How much Maths is required to be a good data scientist? \\[You can also share\n> which concepts should everyone focus on more\\]\n\nI have a lot of math background from my Mechanical Engineering degree that I haven't use in years.\n\nTo be clear I am not generally building models in my day to day.  My role kind\nof sits between Data Engineering and MLOps these days.  I scaffold up new\nprojects for the team, take on more complex data pipelining projects, and own\nour whole deployment system.  None of this really requires advanced math on a\nday to day basis.\n\n> What are some concepts that everyone should know more\n\nLinters.  They are so easy to run that no one should be bad code that fails\nlinting these days.  You can set them to run from your favorite editor, the\ncommand line, in a git commit, from GitHub Actions, or an Azure pipeline, just\nfigure out the ones that fit you and run them.\n\n> Will data science be replaced by AI?\n\nEverything that we see today will be different in the future whether replaced by\nAI or the next hot topic.  There might be subsets of our work that is completely\nautomated away.  I think it will be a great opportunity to focus our minds on\nmore difficult things that AI cannot.  Data Science is a relatively new field,\nbe ready for it to change and move with it.\n\n> Words of advice for people without a Computer Science background?\n\nYou can do it, there are more folks out there crushing Data Science and Software Engineering in general without a Computer Science background than you realize. Don't let the imposter syndrome get to you.  Keep honing your skills and be confident.\n\n* Be flexible\n* Always be open and ready for change\n* Never stop learning\n* Keep a positive attitude\n* Be kind to others\n\n> Tell us about your journey towards becoming a successful data scientist?\n\nsee Q1\n\n> Which tools you use for Data Science and which one do you recommend for\n> beginners?\n\nAs a beginner definitely focus on a minimal number of things at a time.  As you go through the journey of learning anything you will likely to see articles that tell you that your tech of choice is dead and should never be used because some new hotness it so much better.  Focus on skills that have a real job market and solve real problems don't worry so much about it that you never learn one.\n\nPython is my core skill, it can do so much so quickly and has a very strong ecosystem in data.\n\nA skill I would add in general is to deploy early.  Too often we spend months on prototypes that need rewritten for the prod environment, when they could have just been written for prod from the beginning while ci tooling could have kept the project cleaner and easier to work with.  Whether its GitHub actions or Azure Pipelines CI/CD is cheaper and easier to setup than ever.  There is a fluid movement that happens when you are working with clean code along the way rather than cleaning it up after its all done.  Simplifying your work opens up mental space to put more focus on your problem at hand.\n\n<p style='text-align: center'>\n<a href='https://waylonwalker.com/what-are-github-actions'>\n<img\nstyle='width:500px; max-width:80%; margin: auto;'\nsrc=\"https://images.waylonwalker.com/what-are-github-actions.png\"\nalt=\"introductory article to GitHub actions\"\n/>\n</a>\n</p>\n\n> check out this article about github actions\n\n> Is data science a stressful job?\n\nIt definitely can be if you let it.  Manage expectations and scope creep well and you will be fine.  My most stressful times have probably been when I over committed to something and it was my own fault for setting myself up for stress.\n\n> What type of problems you faced every day as a data scientist?\n\nAt a high level the business I support remanufactures ( similar to recycling ) parts for heavy equipment.  I find ways to re-use more core material to save cost and reduce emissions.  A lot of what I do is solving business problems with code.  This might be a problem that has been solved by hand for a small focused subset of a population and expanding it to everything.  More and more of my time is being dedicated to coaching.  Whether in the form of code review, pair programming, or general mentoring.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/create-custom-kedro-dataset'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create Custom Kedro Dataset</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/cmd-exe-tips'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>cmd.exe tips</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-11-02", "edit_link": "https://github.com/edit/main/pages/notes/codeit-bro-interview.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574752", "datetime": "2020-11-02 00:00:00+00:00", "slug": "codeit-bro-interview", "jinja": false, "output_html": "markout/codeit-bro-interview/index.html", "long_description": "use this profile image Please share your professional role as a data scientist?  I graduated with a Mechanical Engineering Degree 8 years ago.  Much of my work Three years ago I made the switch to Data Science and have loved every minute of What are ", "super_description": "use this profile image Please share your professional role as a data scientist?  I graduated with a Mechanical Engineering Degree 8 years ago.  Much of my work Three years ago I made the switch to Data Science and have loved every minute of What are the most difficult challenges you faced as a data scientist and how Deployment is a high bar to enter.  Jupyter notebooks provide a suspiciously simple start into Data Science.  Folks with very little coding experience can easily get up and running a", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506917c0>, next=<frontmatter.Post object at 0x7f345063b1f0>)"}, {"cover": "", "title": "Pyspark", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/pyspark.md", "description": "I have been using pyspark since March 2019, here are my thoughts.", "content": "I have been using pyspark since March 2019, here are my thoughts.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/adding-google-fonts-to-a-gatsbyjs-site'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Adding google fonts to a gatsbyjs site</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/codeit-bro-interview'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Codeit Bro Interview</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-22", "edit_link": "https://github.com/edit/main/pages/notes/pyspark.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574757", "datetime": "2019-09-22 00:00:00+00:00", "slug": "pyspark", "jinja": false, "output_html": "markout/pyspark/index.html", "long_description": "I have been using pyspark since March 2019, here are my thoughts.", "super_description": "I have been using pyspark since March 2019, here are my thoughts.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345066ccd0>, next=<frontmatter.Post object at 0x7f345066c820>)"}, {"cover": "", "title": "Adding google fonts to a gatsbyjs site", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/adding-google-fonts-to-a-gatsbyjs-site.md", "description": "https://stackoverflow.com/questions/47488440/how-do-i-add-google-fonts-to-a-gatsby-site", "content": "[stack overflow link](https://stackoverflow.com/questions/47488440/how-do-i-add-google-fonts-to-a-gatsby-site)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/audio-for-blog'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Adding Audio to my blog posts</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/3-things-to-automate-with-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Three things to Automate with Python using Pandas</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-17", "edit_link": "https://github.com/edit/main/pages/notes/adding-google-fonts-to-a-gatsbyjs-site.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574763", "datetime": "2020-05-17 00:00:00+00:00", "slug": "adding-google-fonts-to-a-gatsbyjs-site", "jinja": false, "output_html": "markout/adding-google-fonts-to-a-gatsbyjs-site/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646b80>, next=<frontmatter.Post object at 0x7f345065e430>)"}, {"cover": "", "title": "Building Cli apps in Python", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/building-cli-apps-in-python.md", "description": "learning about building cli apps in python", "content": "## Packages\n\n## [Click](https://click.palletsprojects.com/en/7.x/ \"Click\")\n\n### Inputs\n\nClick primarily takes two forms of inputs Options and arguments.  I think of options as keyword argument and arguments as regular positional arguments.\n\n#### Option\n\n* typically aliased with a shorthand ('-v', '--verbose')\n\n---\n\n**From the [Docs](https://click.palletsprojects.com/en/7.x/options/)\n\nTo get the Python argument name, the chosen name is converted to lower case, up to two dashes are removed as the prefix, and other dashes are converted to underscores.\n\n``` python\n@click.command()\n@click.option('-s', '--string-to-echo')\ndef echo(string_to_echo):\n    click.echo(string_to_echo)\n```\n\n``` python\n@click.command()\n@click.option('-s', '--string-to-echo', 'string')\ndef echo(string):\n    click.echo(string)\n```\n\n---\n\n#### Argument\n\n* positional\n* required\n* no help text supplied by click\n\n## [Yaspin](https://pypi.org/project/yaspin/ \"Yaspin\")\n\n![Yaspin Gif](https://images.waylonwalker.com/yaspin-demo.gif)\n\n## [Click Help Colors](https://github.com/click-contrib/click-help-colors)\n\n## ![Click Help Colors Example](https://raw.githubusercontent.com/r-m-n/click-help-colors/master/examples/1.png)\n\n## [Colorama](https://github.com/tartley/colorama \"colorama\")\n\n[Colorama Example](https://github.com/tartley/colorama/raw/master/screenshots/ubuntu-demo.png)\n\n### [Click DidYouMean](https://github.com/click-contrib/click-didyoumean)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/building-kedro-dev'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Building kedro.dev</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/break-pane'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>tmux break-pane</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-11-11", "edit_link": "https://github.com/edit/main/pages/notes/building-cli-apps-in-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574771", "datetime": "2019-11-11 00:00:00+00:00", "slug": "building-cli-apps-in-python", "jinja": false, "output_html": "markout/building-cli-apps-in-python/index.html", "long_description": "Click primarily takes two forms of inputs Options and arguments.  I think of options as keyword argument and arguments as regular positional arguments. typically aliased with a shorthand ( ** To get the Python argument name, the chosen name is conver", "super_description": "Click primarily takes two forms of inputs Options and arguments.  I think of options as keyword argument and arguments as regular positional arguments. typically aliased with a shorthand ( ** To get the Python argument name, the chosen name is converted to lower case, up to two dashes are removed as the prefix, and other dashes are converted to underscores. positional required no help text supplied by click", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506a1d30>, next=<frontmatter.Post object at 0x7f345063bb80>)"}, {"cover": "", "title": "Kedro Catalog", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/kedro-catalog.md", "description": "I am exploring a kedro catalog meta data hook", "content": "I am exploring a kedro catalog meta data hook, these are some notes about what I am thinking.\n\n## Process\n\n* metadata will be attached to the dataset object under a `.metadata` attribute\n* metadata will be updated `after_node_run`\n* metadata will be empty until a pipeline is ran with the hook on\n* optionally a function to add metadata will be added\n* metadata will be stored in a file next to the `filepath`\n* meta\n\n\n## Problems This Hook Should solve\n\n* what datasets have a columns with `sales` in the name\n* what datasets were updated after last tuesday\n* which pipeline node created this dataset\n* how many rows are in this dataset (without reloading all datasets)\n\n\n## implementation details\n\n* metadata will be attached to each dataset as a dictionary\n* list/dict comprehensions can be used to make queries\n\n## Metadata to Capture\n\ntry pandas method -> try spark -> try dict/list -> none\n\n* column names\n* length\n* Null count\n* created_by node name\n\n\n## Database?\n\nIs there an easy way to create a nosql database in memory from a a list of dictionaries?\n\n* [list-dict-DB](https://pypi.org/project/list-dict-DB/)\n* [dataset](https://dataset.readthedocs.io/en/latest/)\n* [TinyDB](https://tinydb.readthedocs.io/en/latest/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/kedro-catalog-create-cli'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>kedro catalog create</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/kedro-basics'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Kedro Basics</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-24", "edit_link": "https://github.com/edit/main/pages/notes/kedro-catalog.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574777", "datetime": "2020-07-24 00:00:00+00:00", "slug": "kedro-catalog", "jinja": false, "output_html": "markout/kedro-catalog/index.html", "long_description": "I am exploring a kedro catalog meta data hook, these are some notes about what I am thinking. metadata will be attached to the dataset object under a  metadata will be updated  metadata will be empty until a pipeline is ran with the hook on optionall", "super_description": "I am exploring a kedro catalog meta data hook, these are some notes about what I am thinking. metadata will be attached to the dataset object under a  metadata will be updated  metadata will be empty until a pipeline is ran with the hook on optionally a function to add metadata will be added metadata will be stored in a file next to the  meta what datasets have a columns with  what datasets were updated after last tuesday which pipeline node created this dataset how many rows are in this dataset", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068aa00>, next=<frontmatter.Post object at 0x7f3450663280>)"}, {"cover": "", "title": "python-deepwatch", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/python-deepwatch.md", "description": "Is it possible to deep watch a single python function for changes? keeping track of a python functions hash is quite simple.  There is a Using hashlib provides ", "content": "Is it possible to deep watch a single python function for changes?\n\n## Shallow Watch\n\nkeeping track of a python functions hash is quite simple.  There is a`__hash__` method attached to every python function.  Calling it will return a hash of the function. If the function changes the hash will change.\n\n``` python\n[ins] In [1]: def test():\n         ...:     return \"hello\"\n\n[ins] In [2]: test.__hash__()\nOut[2]: 8760526380347\n\n[ins] In [3]: test.__hash__()\nOut[3]: 8760526380347\n\n[ins] In [4]: def test():\n         ...:     return \"hello world\"\n\n[ins] In [5]: test.__hash__()\nOut[5]: 8760525617988\n\n[ins] In [6]: def test():\n         ...:     return \"hello\"\n\n[ins] In [7]: test.__hash__()\nOut[7]: 8760526380491\n```\n\nUsing hashlib provides a consistent hash.\n\n``` python\nimport inspect\nimport hashlib\ndef test():\n\treturn \"hello\"\n\n[ins] In [17]: m.update(inspect.getsource(test).encode())\n\n[ins] In [18]: m\nOut[18]: <sha256 HASH object @ 0x7f7b7b70fde0>\n\n[ins] In [19]: m.hexdigest()\nOut[19]: '1f2ff4c69eb69b545469686edd6f849136e104cd535785891586d90620328757'\n\n[ins] In [20]: m.update(inspect.getsource(test).encode())\n\n[ins] In [21]: m.hexdigest()\nOut[21]: '93638f2c944f34a9069af9242657b7de556fcc63742f4c27c4c8deedeb976a5f'\n\n[ins] In [22]: m = hashlib.sha256()\n\n[ins] In [23]: m.update(inspect.getsource(test).encode())\n\n[ins] In [24]: m.update(inspect.getsource(test).encode())\n\n[ins] In [25]: m = hashlib.sha256()\n\n[ins] In [26]: m.update(inspect.getsource(test).encode())\n\n[ins] In [27]: m.hexdigest()\nOut[27]: '1f2ff4c69eb69b545469686edd6f849136e104cd535785891586d90620328757'\n\n[ins] In [28]: def test():\n          ...:     return \"hello world\"\n\n[ins] In [29]: m = hashlib.sha256()\n\n[ins] In [30]: m.update(inspect.getsource(test).encode())\n\n[ins] In [31]: m.hexdigest()\nOut[31]: '121fa3a3f295d49d4609505bc5e96d8b6a8ed3b496e4f3dc6c0ead73bef4e3c7'\n\n[ins] In [32]: def test():\n          ...:     return \"hello\"\n\n[ins] In [33]: m = hashlib.sha256()\n\n[ins] In [34]: m.update(inspect.getsource(test).encode())\n\n[ins] In [35]: m.hexdigest()\nOut[35]: '1f2ff4c69eb69b545469686edd6f849136e104cd535785891586d90620328757'\n```\nNow we have a consistent way to hash function code.\n\n## Deep hashing\n\n\n### Find dependencies\n\nsetup a function in a module with a dependency\n``` python\n       \u2502 File: one.py\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 def one():\n   2   \u2502     return 1\n   3   \u2502\n   4   \u2502 def two():\n   5   \u2502     return one() + one()\n```\n\n``` python\n>>> import one\n>>> one.one.__code__.co_names\n()\n>>> one.two.__code__.co_names\n('one', )\n```\n\n## Create Generic module importer by filepath\n\n``` python\nimport importlib\nimport importlib.util\nimport os\n\ndef _import(path: Path, directory: Path, verbose: bool = False):\n    \"\"\"dynamically imports module given a path\"\"\"\n    cwd = os.getcwd()\n    os.chdir(directory)\n    name = path.name\n    # path = str(path).replace(str(directory) + \"/\", \"\")\n    path = _make_path_relative(path, directory)\n    try:\n        spec = importlib.util.spec_from_file_location(name, path)\n        module = importlib.util.module_from_spec(spec)\n        spec.loader.exec_module(module)\n    except (ModuleNotFoundError, ValueError):\n        module = _use_importmodule(\n            str(path).replace(os.sep, \".\").replace(\".py\", \"\"), verbose=verbose\n        )\n    os.chdir(cwd)\n\n    return module\n\n\ndef _use_importmodule(path: Path, verbose: bool = False):\n    \"\"\"\n    relative imports do not work well with importlib.util.spec_from_file_location,\n    and require a sys.path.append to be imported correctly.  For this reason\n    importlib.import_module is the second option.\n    \"\"\"\n\n    # Not sure if this is needed, but it was never hit in a test\n    # if path[0] == \".\":\n    #     path = path[1:]\n\n    sys.path.append(os.getcwd())\n    mod = importlib.import_module(path)\n    sys.path.pop()  # clean up path, do not permananatly change users path\n    return mod\n\n```\n\n### get code of dependency\n\nthe inspect module can tell us the filename of our current module.\n\n``` python\nimport inspect\nmodule_path = inspect.getfile(one.one)\nmodule = _import(module_path)\n```\n\nnow we can hash the dependency\n\n``` python\nnested_function = eval(f'module.{one.two.__code__.co_names[0]}\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/python-find-available-port'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python Find Available Port</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/python-data-science-background'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Background Tasks in Python for Data Science</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-04-27", "edit_link": "https://github.com/edit/main/pages/notes/python-deepwatch.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574783", "datetime": "2020-04-27 00:00:00+00:00", "slug": "python-deepwatch", "jinja": false, "output_html": "markout/python-deepwatch/index.html", "long_description": "Is it possible to deep watch a single python function for changes? keeping track of a python functions hash is quite simple.  There is a Using hashlib provides a consistent hash. Now we have a consistent way to hash function code. setup a function in", "super_description": "Is it possible to deep watch a single python function for changes? keeping track of a python functions hash is quite simple.  There is a Using hashlib provides a consistent hash. Now we have a consistent way to hash function code. setup a function in a module with a dependency the inspect module can tell us the filename of our current module. now we can hash the dependency", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450691c10>, next=<frontmatter.Post object at 0x7f34506b3790>)"}, {"cover": "", "title": "Just Use Pathlib", "tags": ["python"], "status": "published", "templateKey": "blog-post", "path": "pages/notes/just-use-pathlib.md", "description": "Pathlib is an amazing cross-platform path tool.", "content": "Pathlib is an amazing cross-platform path tool.\n\n## Import\n\n```python\nfrom pathlib import Path\n```\n\n## Create path object\n\n**Current Directory**\n\n```python\ncwd = Path('.').absolute()\n```\n\n**Users Home Directory**\n\n```python\nhome = Path.home()\n```\n\n**module directory**\n\n```python\nmodule_path = Path(__file__)\n```\n\n**Others**\nLet's create a path relative to our current module.\n\n```python\ndata_path = Path(__file__) / 'data'\n```\n\n## Check if files exist\n\n## Make Directories\n\n```python\ndata_path.mkdir(parents=True, exists_ok=True)\n```\n\n## rename files\n\n```python\nPath(data_path /'example.csv').rename('real.csv')\n```\n\n## List files\n\n## Glob Files\n\n```python\ndata_path.glob('*.csv')\n```\n\n**recursively**\n\n```python\ndata_path.rglob('*.csv')\n```\n\n## Write\n\n```python\nPath(data_path / 'meta.txt').write_text(f'created on {datetime.datetime.today()})\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/jut'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>JUT | Read Notebooks in the Terminal</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/journey'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>It's not all about winning</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-09-26", "edit_link": "https://github.com/edit/main/pages/notes/just-use-pathlib.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574788", "datetime": "2019-09-26 00:00:00+00:00", "slug": "just-use-pathlib", "jinja": false, "output_html": "markout/just-use-pathlib/index.html", "long_description": "Pathlib is an amazing cross-platform path tool.", "super_description": "Pathlib is an amazing cross-platform path tool.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658af0>, next=<frontmatter.Post object at 0x7f34506a1af0>)"}, {"cover": "", "title": "Debugging Python", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/debugging-python.md", "description": "Debugging Python", "content": "## Using pdb\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/designing-kedro-router'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Designing a \"Router\" for kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/data-scientist-advice'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>What is YOUR Advice for New Data Scientists</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-10-01", "edit_link": "https://github.com/edit/main/pages/notes/debugging-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574794", "datetime": "2019-10-01 00:00:00+00:00", "slug": "debugging-python", "jinja": false, "output_html": "markout/debugging-python/index.html", "long_description": "", "super_description": "", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450658790>, next=<frontmatter.Post object at 0x7f34506a9100>)"}, {"cover": "", "title": "\ud83d\udcdd Packages to Investigate Notes", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/packages-to-investigate.md", "description": "jmespath Tabnine |-|-| I definitely want to try this out with kedro. Bulwark is a package for convenient property-based testing of pandas dataframes, supported ", "content": "* jmespath\n* Tabnine\n\n## Bulwark\n\n|-|-|\n|github: |[https://github.com/zaxr/bulwark](https://github.com/zaxr/bulwark)|\n\nI definitely want to try this out with kedro.\n\nBulwark is a package for convenient property-based testing of pandas dataframes, supported for Python 3.5+.\n\n## Example\n\n        import bulwark.decorators as dc\n\n        @dc.IsShape((-1, 10))\n        @dc.IsMonotonic(strict=True)\n        @dc.HasNoNans()\n        def compute(df):\n            # complex operations to determine result\n            ...\n        return result_df\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/pariss-athena-on-black-tech-pipeline'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Black Tech Pipeline</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/out-of-space'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Out of Space</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2019-10-14", "edit_link": "https://github.com/edit/main/pages/notes/packages-to-investigate.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574800", "datetime": "2019-10-14 00:00:00+00:00", "slug": "packages-to-investigate", "jinja": false, "output_html": "markout/packages-to-investigate/index.html", "long_description": "jmespath Tabnine |-|-| I definitely want to try this out with kedro. Bulwark is a package for convenient property-based testing of pandas dataframes, supported for Python 3.5+.", "super_description": "jmespath Tabnine |-|-| I definitely want to try this out with kedro. Bulwark is a package for convenient property-based testing of pandas dataframes, supported for Python 3.5+.", "year": 2019, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450646430>, next=<frontmatter.Post object at 0x7f34506b3550>)"}, {"cover": "", "title": "Reasons to Kedro", "tags": [], "status": "published", "templateKey": "blog-post", "path": "pages/notes/reasons-to-kedro-notes.md", "description": "collaboration Sharable catalog small nodes over monolithic notebooks catalog easily load anything without needing to run No need to write read/write code pipeli", "content": "## Reasons to Kedro\n\n* collaboration\n  * Sharable catalog\n  * small nodes over monolithic notebooks\n* catalog\n  * easily load anything without needing to run\n  * No need to write read/write code\n* pipeline\n  * No need to keep execution order in your head\n  * easily run a slice of a pipeline\n* plugins\n  * pip install\n  * make your own\n* hooks\n* flexible expandable cli\n\n## Reasons Not to Kedro\n\n* Already utilizing another DAG framework\n* Data is not in a widely supported format\n* Micro short-lived project\n* Large Project / Deadline\n  * Use a lower profile project to learn first\n* Team not willing to change\n* Need minimal dependencies\n* God Project - kedro owns everything??\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/refactor-in-cli'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Large Refactor At The Command Line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reasons-to-kedro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>reasons-to-kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-10-31", "edit_link": "https://github.com/edit/main/pages/notes/reasons-to-kedro-notes.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574806", "datetime": "2020-10-31 00:00:00+00:00", "slug": "reasons-to-kedro-notes", "jinja": false, "output_html": "markout/reasons-to-kedro-notes/index.html", "long_description": "collaboration Sharable catalog small nodes over monolithic notebooks catalog easily load anything without needing to run No need to write read/write code pipeline No need to keep execution order in your head easily run a slice of a pipeline plugins p", "super_description": "collaboration Sharable catalog small nodes over monolithic notebooks catalog easily load anything without needing to run No need to write read/write code pipeline No need to keep execution order in your head easily run a slice of a pipeline plugins pip install make your own hooks flexible expandable cli Already utilizing another DAG framework Data is not in a widely supported format Micro short-lived project Large Project / Deadline Use a lower profile project to learn first Team not willing to ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506b3e50>, next=<frontmatter.Post object at 0x7f3450658430>)"}, {"cover": "", "title": "Upcoming Posts", "tags": [], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/upcoming-posts.md", "description": "Upcoming posts to the blog.  Have an idea edit Kedro run changed How I manage Environments My Data Workflow. Daily Schedule desk keeb Material Shell Why blog se", "content": "Upcoming posts to the blog.  Have an idea edit \n[this post](https://github.com/WaylonWalker/waylonwalker.com/edit/main/pages/notes/upcoming-posts.md)\n, submit a PR and we will talk.\n\n## \ud83e\udde0\n\n* Kedro run changed\n* How I manage Environments\n* My Data Workflow.\n* Daily Schedule\n* desk\n* keeb\n* Material Shell\n* Why blog\n* search with fuse.js\n* Testing a blog with ahrefs\n* matrix testing in github actions\n\n\n* Think like a Senior Dev\n* \n\n\n## Editor\n\n* tmux\n* vim\n* shortcuts\n* gitui\n* fzf\n    * [devinsideyou](https://www.youtube.com/watch?v=tB-AgxzBmH8)\n\n\n\n## Core\n\n* gracefully adopt kedro\n  * catalog - in progress\n  * pipeline\n* kedro\n  * Silent Logger\n  * Templated config loader\n  * params/env\n  * 10 reasons you shouldnt use kedro\n  * 10 reasons to use \n  * filter viz\n  * Steel-toes env\n  * Why framework\n  * How I write pipelines\n  * when I write pipelines\n  * pipeline node templates\n  * Convert a notebooks to pipelines\n  * Testing Pipelines\n* professional python\n  * cookiecutter\n  * flake8\n  * black\n  * mypy\n  * pre-commit\n  * click\n  * pytest\n    * git\n    * parametrize\n    * environment variables\n* My top pandas methods\n* Actions\n  * How I cut my gatsby deployment in half\n* VSCODE update\n  * plugins I use\n  * \n* uses\n\n## python\n\n* [What does if **name** == \u201c**main**\u201d: do?](https://stackoverflow.com/questions/419163/what-does-if-name-main-do)\n* [ternary operators](https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator)\n* [check if file exists](https://stackoverflow.com/questions/82831/how-do-i-check-whether-a-file-exists-without-exceptions)\n* [calling external commands](https://stackoverflow.com/questions/89228/calling-an-external-command-from-python)\n* [merging dictionaries](https://stackoverflow.com/questions/38987/how-do-i-merge-two-dictionaries-in-a-single-expression-taking-union-of-dictiona)\n* zip\n\n## learning\n\n* mdx\n* touch typing\n\n## Newsletter\n\n* Don't jump too early\n* keep a pulse on new things\n* be nice\n* take breaks\n* push at the right time\n* practice\n* optimize the hard things\n* failure\n* dont listen to the haters\n* Just start (make 20 minutes)\n* Mistakes Happen\n* Accountability\n* Giving without Expectations\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/upcoming-streams'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Upcoming Stream</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/reasons-to-kedro-notes'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Reasons to Kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-27", "edit_link": "https://github.com/edit/main/pages/notes/upcoming-posts.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574813", "datetime": "2020-06-27 00:00:00+00:00", "slug": "upcoming-posts", "jinja": false, "output_html": "markout/upcoming-posts/index.html", "long_description": "Upcoming posts to the blog.  Have an idea edit Kedro run changed How I manage Environments My Data Workflow. Daily Schedule desk keeb Material Shell Why blog search with fuse.js Testing a blog with ahrefs matrix testing in github actions Think like a", "super_description": "Upcoming posts to the blog.  Have an idea edit Kedro run changed How I manage Environments My Data Workflow. Daily Schedule desk keeb Material Shell Why blog search with fuse.js Testing a blog with ahrefs matrix testing in github actions Think like a Senior Dev tmux vim shortcuts gitui fzf gracefully adopt kedro catalog - in progress pipeline kedro Silent Logger Templated config loader params/env 10 reasons you shouldnt use kedro 10 reasons to use filter viz Steel-toes env Why framework How I wr", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506722b0>, next=<frontmatter.Post object at 0x7f3450672610>)"}, {"cover": "", "title": "Upcoming Stream", "tags": ["stream", "kedro", "python", "blog"], "status": "draft", "templateKey": "blog-post", "path": "pages/notes/upcoming-streams.md", "description": "https://stackoverflow.com/questions/16720541/python-string-replace-regular-expression I am starting to stream 3 days per week, before I start work in the mornin", "content": "https://stackoverflow.com/questions/16720541/python-string-replace-regular-expression\n\nI am starting to stream 3 days per week, before I start work in the morning.\nThese streams will likely be me just talking through things I am already doing.\n\n## Making DAGs do \ud83d\udd2eMagical Things | Open Source \ud83d\udc0dPython | kedro plugins |\n\n_Science & Technology | Every Monday \u2022 7:00 AM - 9:00 AM CDT_\n\nOn Monday's I am going to be working on open source packages/plugins for kedro.\n\n* kedro-diff\n* test kedro-diff on piplines with history\n* setup deploy pipeline\n* deply to pypi\n\n## \ud83c\udf31 Digital Gardening | Blogging with \ud83d\udc0dPython | Building \ud83d\udd2eMarkata a static site generator in python for waylonwalker.com\n\n_Science & Technology | Every Wednesday \u2022 7:00 AM - 9:00 AM CDT_\n\nOn Wednesday morning I will be working on my personal website and the static\nsite generator that I built for it, Markata.\n\n### Features\n* DONE ~one_line_gif~\n* DONE automate mp4's - https://ahrefs.com/site-audit/2096186/66/data-explorer?columns=pageRating%2Curl%2ChttpCode%2CcontentType%2Csize%2CloadingTime%2CincomingImage&filterCollapsed=true&filterId=47a66a23cd538da9d08ea5e2c4f7c812&issueId=c64d8113-d0f4-11e7-8ed1-001e67ed4656&sorting=-size&udUrl=https%3A%2F%2Fimages.waylonwalker.com%2Ftqdm2.gif\n* Fix big images - https://ahrefs.com/site-audit/2096186/66/data-explorer?columns=pageRating%2Curl%2ChttpCode%2CcontentType%2Csize%2CloadingTime%2CincomingImage&filterCollapsed=true&filterId=47a66a23cd538da9d08ea5e2c4f7c812&issueId=c64d8113-d0f4-11e7-8ed1-001e67ed4656&sorting=-size\n* Fix Amp issues\n* speed up build times\n* measure plugin performance\n* speed up images.waylonwalker builds\n* build footer\n\n### Error Correction\n\n* redirect detector\n* detect multiple H1\n* title too short (50-70 characters) \n* missing alt text\n\n\n## Building DAGS with \ud83d\udc0d Python | \ud83d\udee2 Writing data pipelines wih Kedro\n\n_Science & Technology | Every Friday \u2022 7:00 AM - 9:00 AM CDT_\n\nFriday will be all about building DAG's or data related things in python.  I\nmight reach for something like tidy tuesday, makeover monday, or just do my own\nthing.  I have a few ideas of things to do on my own first.\n\n* open pypi package names\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-web-conf-snippet'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>python web conf snippet</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/upcoming-posts'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Upcoming Posts</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-06-08", "edit_link": "https://github.com/edit/main/pages/notes/upcoming-streams.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574819", "datetime": "2021-06-08 00:00:00+00:00", "slug": "upcoming-streams", "jinja": false, "output_html": "markout/upcoming-streams/index.html", "long_description": "https://stackoverflow.com/questions/16720541/python-string-replace-regular-expression I am starting to stream 3 days per week, before I start work in the morning. On Monday kedro-diff test kedro-diff on piplines with history setup deploy pipeline dep", "super_description": "https://stackoverflow.com/questions/16720541/python-string-replace-regular-expression I am starting to stream 3 days per week, before I start work in the morning. On Monday kedro-diff test kedro-diff on piplines with history setup deploy pipeline deply to pypi On Wednesday morning I will be working on my personal website and the static DONE ~one DONE automate mp4 Fix big images - https://ahrefs.com/site-audit/2096186/66/data-explorer?columns=pageRating%2Curl%2ChttpCode%2CcontentType%2Csize%2Cloa", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672a60>, next=<frontmatter.Post object at 0x7f34506723a0>)"}, {"cover": "", "title": "python web conf snippet", "tags": ["python"], "status": "draft", "templateKey": "til", "path": "pages/til/python-web-conf-snippet.md", "description": "prev Unzip minecraft mods to their directory from the command line next Upcoming Stream", "content": "## From my terminal\n\n``` bash\npipx run \\\n --spec git+https://github.com/waylonwalker/lookatme \\\n lookatme {filepath} \\\n --live-reload \\\n --style gruvbox-dark\n```\n\n## From Neovim\n\n``` vim\nnnoremap <leader><leader>s <cmd>lua require'telegraph'.telegraph({cmd='pipx run --spec git+https://github.com/waylonwalker/lookatme lookatme {filepath} --live-reload --style gruvbox-dark', how='tmux'})<CR>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/linux-unzip-directory'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Unzip minecraft mods to their directory from the command line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/upcoming-streams'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Upcoming Stream</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2100-03-20", "edit_link": "https://github.com/edit/main/pages/til/python-web-conf-snippet.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574825", "datetime": "2100-03-20 00:00:00+00:00", "slug": "til/python-web-conf-snippet", "jinja": false, "output_html": "markout/til/python-web-conf-snippet/index.html", "long_description": "", "super_description": "", "year": 2100, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672700>, next=<frontmatter.Post object at 0x7f34506722b0>)"}, {"cover": "", "title": "Unzip minecraft mods to their directory from the command line", "tags": ["linux", "bash", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/linux-unzip-directory.md", "description": "This morning I was trying to install a modpack on my minecraft server after So I Then I go back to my server and download the modpack with wget. Now I can unzip", "content": "This morning I was trying to install a modpack on my minecraft server after\ngetting a zip file, and its quite painful when I unzip everything in the\ncurrent directory rather than the directory it belongs in.\n\n## I had the files on a Windows Machine\n\nSo I've been struggling to get mods installed on linux lately and the easiest\nway to download the entire pack rather than each mod one by one seems to be to\nuse the overwolf application on windows.  Once I have the modpack I can start\nmyself a small mod-server by zipping it, putting it in a mod-server directory\nand running a python `http.server`\n\n```bash\npython -m http.server\n```\n\n## Downoading on the server\n\nThen I go back to my server and download the modpack with wget.\n\n``` python\nwget 10.0.0.171:8000/One%2BBlock%2BServer%2BPack-1.4.zip\n```\n\n## Unzip to the minecraft-data directory\n\nNow I can unzip my mods into the `minecraft-data` directory.\n\n```bash\nunzip One+Block+Server+Pack-1.4.zip -d minecraft-data\n```\n## Running the server with docker\nI run the minecraft server with docker, which is setup to mount the\nminecraft-data directory.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/docker-minecraft-server/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/docker-minecraft-server-og_250x140.png\" alt=\"article cover for \n Running a Minecraft Server in Docker\n\"/>\n          <p><strong>\n Running a Minecraft Server in Docker\n</strong></p>\n      </a>\n  </div>\n\n\nA bit more on that in the other post, but when I download the whole modpack\nlike this I make these changes to my docker compose. (commented out lines)\n\n```yaml\nversion: \"3.8\"\n\nservices:\n  mc:\n    container_name: walkercraft\n    image: itzg/minecraft-server:java8\n    environment:\n      EULA: \"TRUE\"\n      TYPE: \"FORGE\"\n      VERSION: 1.15.2\n      # MODS_FILE: /extras/mods.txt\n      # REMOVE_OLD_MODS: \"true\"\n    tty: true\n    stdin_open: true\n    restart: unless-stopped\n    ports:\n      - 25565:25565\n    volumes:\n      - ./minecraft-data:/data\n      # - ./mods.txt:/extras/mods.txt:ro\n\nvolumes:\n  data:\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/list-all-files-containing-phrase'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>List all the files containing a phrase</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/linux-tty'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>A TTY Can Save Your Bacon</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-02", "edit_link": "https://github.com/edit/main/pages/til/linux-unzip-directory.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574831", "datetime": "2022-04-02 00:00:00+00:00", "slug": "til/linux-unzip-directory", "jinja": false, "output_html": "markout/til/linux-unzip-directory/index.html", "long_description": "This morning I was trying to install a modpack on my minecraft server after So I Then I go back to my server and download the modpack with wget. Now I can unzip my mods into the  I run the minecraft server with docker, which is setup to mount the htt", "super_description": "This morning I was trying to install a modpack on my minecraft server after So I Then I go back to my server and download the modpack with wget. Now I can unzip my mods into the  I run the minecraft server with docker, which is setup to mount the https://waylonwalker.com/til/docker-minecraft-server/ A bit more on that in the other post, but when I download the whole modpack", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8f70>, next=<frontmatter.Post object at 0x7f34506090d0>)"}, {"cover": "", "title": "Configure Git to Always Push to the Current Branch", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/git-push-default-current.md", "description": "Has no upstream branch errors in git can be such a damn productivity killer. If you have not yet configured git to always push to the current branch, you Let Yo", "content": "Has no upstream branch errors in git can be such a damn productivity killer.\nYou gotta stop your flow and swap over the branch, there is a config so that\nyou don't have to do this.\n\n## **fatal** has no upstream branch\n\nIf you have not yet configured git to always push to the current branch, you\nwill get a `has no upstream branch` error if you don't explicitly set it.\n\nLet's show an example\n\n``` bash\ngit checkout -b feat/ingest-inventory-data\ngit add conf/base/catalog.yml\ngit commit -m \"feat: ingest inventory data from abc-db\"\ngit push\n```\n\nYou will be presented with the following error.\n\n``` bash\nfatal: The current branch feat/ingest-inventory-data has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin feat/ingest-inventory-data\n```\n## Option 1: follow the instructions\n\nTo resolve this fatal error your first option is simply to follow the\ninstructions given.  Just copy and paste it in.\n\n``` bash\ngit push --set-upstream origin feat/ingest-inventory-data\n```\n\n## Option 2: push to current bransh wihtout setting upstream\n\nHonestly I am pretty aware of the branch I am on, and Very few times have I\never accidently pushed to the wrong branch.  The one that you might have a\nbigger chance with a more detrimental effect is `main`, which I will argue you\nshould have blocked to require a passing `ci`, and potentially reviewers to\nmerge in.  Therefore you can't even push to `main` anyways.\n\nTo just push to the branch you are currently on each and every time and never\nsee this error again, you can run this to configure git to always push to your\ncurrent branch.\n\n``` bash\ngit config --global push.default current\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-python-all-commits'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>List all git commits with GitPython</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-pager'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Set Your Git Pager Config</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-09", "edit_link": "https://github.com/edit/main/pages/til/git-push-default-current.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574837", "datetime": "2022-03-09 00:00:00+00:00", "slug": "til/git-push-default-current", "jinja": false, "output_html": "markout/til/git-push-default-current/index.html", "long_description": "Has no upstream branch errors in git can be such a damn productivity killer. If you have not yet configured git to always push to the current branch, you Let You will be presented with the following error. To resolve this fatal error your first optio", "super_description": "Has no upstream branch errors in git can be such a damn productivity killer. If you have not yet configured git to always push to the current branch, you Let You will be presented with the following error. To resolve this fatal error your first option is simply to follow the Honestly I am pretty aware of the branch I am on, and Very few times have I To just push to the branch you are currently on each and every time and never", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f84c0>, next=<frontmatter.Post object at 0x7f3450604040>)"}, {"cover": "", "title": "A better copy-mode bind for Tmux", "tags": ["tmux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/tmux-copy-mode-binding.md", "description": "The default keybinding for copy-mode  To do this I just popped open my  I have a full video on copy-mode you can find here. https://waylonwalker.com/tmux-copy-m", "content": "The default keybinding for copy-mode `<prefix>-[` is one that is just so\nawkward for me to hit that I end up not using it at all.  I was on a\ncall with my buddy Nic this week and saw him just fluidly jump into\n`copy-mode` in an effortless fashion, so I had to ask him for his\nkeybinding and it just made sense. Enter, that's it.  So I have addedt\nhis to my `~/.tmux.conf` along with one for `alt-enter` and have found\nmyself using it way more so far.\n\n## Setting copy-mode to enter\n\nTo do this I just popped open my `~/.tmux.conf` and added the following.\nNow I can get to `copy-mode` with `<prefix>-Enter` which is `control-b\nEnter`, or `alt-enter`.\n\n```bash\nbind Enter copy-mode\nbind -n M-Enter copy-mode\n```\n\n## More on copy-mode\n\nI have a full video on copy-mode you can find here.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-copy-mode/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-copy-mode-og_250x140.png\" alt=\"article cover for \n tmux copy-mode\n\"/>\n          <p><strong>\n tmux copy-mode\n</strong></p>\n      </a>\n  </div>\n\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/tmux-pop-size'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Tmux Pop size</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/tmux-copier-templates'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Tmux hotkey for copier templates</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-13", "edit_link": "https://github.com/edit/main/pages/til/tmux-copy-mode-binding.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574843", "datetime": "2022-02-13 00:00:00+00:00", "slug": "til/tmux-copy-mode-binding", "jinja": false, "output_html": "markout/til/tmux-copy-mode-binding/index.html", "long_description": "The default keybinding for copy-mode  To do this I just popped open my  I have a full video on copy-mode you can find here. https://waylonwalker.com/tmux-copy-mode/", "super_description": "The default keybinding for copy-mode  To do this I just popped open my  I have a full video on copy-mode you can find here. https://waylonwalker.com/tmux-copy-mode/", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506215e0>, next=<frontmatter.Post object at 0x7f34505f8970>)"}, {"cover": "", "title": "Set User Agent on pandas read_csv", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/pandas-read-csv-user-agent.md", "description": "I keep a small  I recently switched hosting from netlify over to cloudflare.  Well cloudflare This breaks my go to example dataset. What After a bit of googling", "content": "I keep a small [cars.csv](https://waylonwalker.com/cars.csv) on my website for\nquickly trying out different pandas operations.  It's very handy to keep around\nto help what a method you are unfamiliar with does, or give a teammate an\nexample they can replicate.\n\n## Hosts switched\n\nI recently switched hosting from netlify over to cloudflare.  Well cloudflare\ndoes some work to block certain requests that it does not think is a real user.\nOne of these checks is to ensure there is a real user agent on the request.\n\n## Not my go to dataset \ud83d\ude2d\n\nThis breaks my go to example dataset.\n\n```python\npd.read_csv(\"https://waylonwalker.com/cars.csv\")\n\n# HTTPError: HTTP Error 403: Forbidden\n```\n\n## But requests works???\n\nWhat's weird is, requests still works just fine!  Not sure why using urllib the\nway pandas does breaks the request, but it does.\n\n```python\nrequests.get(\"https://waylonwalker.com/cars.csv\")\n\n<Response [200]>\n```\n\n## Setting the User Agent in pandas.read_csv\n\n_this fixed the issue for me!_\n\nAfter a bit of googling I realize that this is a common thing, and that setting\nthe user-agent fixes it.  This is the point I remember seeing in the cloudflare\ndashbard that they protect against a lot of different attacks, aparantly it\ntreats `pd.read_csv` as an attack on my cloudflare pages site.\n\n```python\npd.read_csv(\"https://waylonwalker.com/cars.csv\", storage_options = {'User-Agent': 'Mozilla/5.0'})\n\n# success\n```\n\n## Now my data is back\n\nNow this works again, but it feels like just a bit more effort than I want to\ndo by hand.  I might need to look into my cloudflare settings to see if I can\nallow this dataset to be accessed by `pd.read_csv`.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pastel-cli'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Mixing Colors at the Command Line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/open-ssh-setup'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Setup SSH from chromebook to home desktop</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-27", "edit_link": "https://github.com/edit/main/pages/til/pandas-read-csv-user-agent.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574849", "datetime": "2022-03-27 00:00:00+00:00", "slug": "til/pandas-read-csv-user-agent", "jinja": false, "output_html": "markout/til/pandas-read-csv-user-agent/index.html", "long_description": "I keep a small  I recently switched hosting from netlify over to cloudflare.  Well cloudflare This breaks my go to example dataset. What After a bit of googling I realize that this is a common thing, and that setting Now this works again, but it feel", "super_description": "I keep a small  I recently switched hosting from netlify over to cloudflare.  Well cloudflare This breaks my go to example dataset. What After a bit of googling I realize that this is a common thing, and that setting Now this works again, but it feels like just a bit more effort than I want to", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609160>, next=<frontmatter.Post object at 0x7f3450609820>)"}, {"cover": "", "title": "How I setup a sqlite cache in python", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-diskcache.md", "description": "When I need to cache some data between runs or share a cache accross multiple Install diskcache into your virtual environement of choice using pip from your com", "content": "When I need to cache some data between runs or share a cache accross multiple\nprocesses my go to library in python is `diskcache`.  It's built on sqlite with\njust enough cacheing niceties that make it very worth it.\n\n## install diskcache\n\nInstall diskcache into your virtual environement of choice using pip from your command line.\n\n```bash\npython -m pip install diskcache\n```\n\n## setup the cache\n\nThere are a couple of different types of cache, `Cache`, `FanoutCache`,\nand `DjangoCache`, you can read more about those in the\n[docs](https://grantjenks.com/docs/diskcache)\n\n```python\nfrom diskcache import Cache\ncache = FanoutCache('.mycache', statistics=True)\n```\n\n\n\n## Adding to the cache\n\nAdding to the cache only needs a key and value.\n\n``` python\ncache.add('me', 'waylonwalker' )\n```\n\n## Set the expire time\n\nOptionally you can set the seconds before it expires.  The cache invalidation\ntools like this is what really makes diskcache shine over using raw sqlite or\nany sort of static file.\n\n``` python\ncache.add('me', 'waylonwalker', expire=60)\n```\n\n## tagging\n\nDiskcache supports tagging entries added to the cache.\n\n``` python\n# add an item to the cache with a tag\ncache.add('me', 'waylonwalker', expire=60, tag='people')\n```\n\nThis seems to let you do a few new things like getting items from the cache by\nboth key and tag, or evict all tags from the cache.\n\n``` python\n# evict all items tagged as 'people' from the cache\ncache.evict(tag='people')\n```\n\n## Reading from the cache\n\nYou can read from the cache by using the `.get` method and giving it the key\nyou want to retrieve.\n\n```python\nwho = cache.get('me')\n# who == 'waylonwalker'\n```\n\n## Cache Misses\n\nCache misses will return a `None` just like any dictionary `.get` miss.\n\n```\nmissed = cache.get('missing')\n# missed == None\n```\n\n## \u2b50\n\nGive Grant some love and give\n[grantjenks/python-diskcache](https://github.com/grantjenks/python-diskcache) a\n\u2b50.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-docstring-ast'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Get Python docstring with ast</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-dict-get'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>python dict get</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-29", "edit_link": "https://github.com/edit/main/pages/til/python-diskcache.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574856", "datetime": "2022-03-29 00:00:00+00:00", "slug": "til/python-diskcache", "jinja": false, "output_html": "markout/til/python-diskcache/index.html", "long_description": "When I need to cache some data between runs or share a cache accross multiple Install diskcache into your virtual environement of choice using pip from your command line. There are a couple of different types of cache,  Adding to the cache only needs", "super_description": "When I need to cache some data between runs or share a cache accross multiple Install diskcache into your virtual environement of choice using pip from your command line. There are a couple of different types of cache,  Adding to the cache only needs a key and value. Optionally you can set the seconds before it expires.  The cache invalidation Diskcache supports tagging entries added to the cache. This seems to let you do a few new things like getting items from the cache by You can read from th", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345059af40>, next=<frontmatter.Post object at 0x7f34505fdb80>)"}, {"cover": "", "title": "Nix Versions By Commit Count", "tags": ["catalytic"], "status": "published", "templateKey": "til", "path": "pages/til/nixery-versions-by-commit-count.md", "description": "I was listening to  Since many things still want to see a version number, there is one automatic", "content": "I was listening to [shipit37](https://changelog.com/shipit/37) with Vincent\nAmbo talking about building fully declaritive systems with nix.  Vincent is\nbuilding out Nixery and strongly believes that standard versioning systems are\nflawed.  If we have good ci setup, and every commit is a good commit the idea\nof a release is just some arbitrary point in history that the maintainer\ndecided was a good time to release, and has less to do about features and\nquality.\n\nSince many things still want to see a version number, there is one automatic\nalways increasing number that is a part of every single git repo, and that is\nthe commit count.  Nixery is versioned by commit count.  When counting on the\nmain branch there is no way for two points in time to share the same version.\nThe git cli will count all commits by default so you have to be careful to only\ninclude commits from the branch you want to version/release from.\n\n``` bash\ngit rev-list main --count\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/nvim-rename-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Rename Python Variables with nvim</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/nix-install-java8'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>nix rescues modded minecraft night</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-02", "edit_link": "https://github.com/edit/main/pages/til/nixery-versions-by-commit-count.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574862", "datetime": "2022-02-02 00:00:00+00:00", "slug": "til/nixery-versions-by-commit-count", "jinja": false, "output_html": "markout/til/nixery-versions-by-commit-count/index.html", "long_description": "I was listening to  Since many things still want to see a version number, there is one automatic", "super_description": "I was listening to  Since many things still want to see a version number, there is one automatic", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8280>, next=<frontmatter.Post object at 0x7f34506043a0>)"}, {"cover": "", "title": "Rename Python Variables with nvim", "tags": ["python", "vim", "vim"], "status": "published", "templateKey": "til", "path": "pages/til/nvim-rename-python.md", "description": "I don I first tried the nvim lsp rename, and it failed, Then I pip installed Once you have rope installed you can call rename on the variable.", "content": "I don't use refactoring tools as much as I probably should.  mostly\nbecause I work with small functions with unique names, but I recently\nhad a case where a variable name `m` was everywhere and I wanted it\nnamed better.  This was not possible with find and replace, because\nthere were other `m`'s in this region.\n\n\nI first tried the nvim lsp rename, and it failed, Then I pip installed\nrope, a refactoring tool for python, and it just worked!\n\n```bash\npip install rope\n```\n\nOnce you have rope installed you can call rename on the variable.\n\n```vim\n:lua vim.lsp.buf.rename()\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/nvim-telescope-custom-command'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Opening files in vim from output of command</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/nixery-versions-by-commit-count'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Nix Versions By Commit Count</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-16", "edit_link": "https://github.com/edit/main/pages/til/nvim-rename-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574868", "datetime": "2022-01-16 00:00:00+00:00", "slug": "til/nvim-rename-python", "jinja": false, "output_html": "markout/til/nvim-rename-python/index.html", "long_description": "I don I first tried the nvim lsp rename, and it failed, Then I pip installed Once you have rope installed you can call rename on the variable.", "super_description": "I don I first tried the nvim lsp rename, and it failed, Then I pip installed Once you have rope installed you can call rename on the variable.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8610>, next=<frontmatter.Post object at 0x7f34505f8160>)"}, {"cover": "", "title": "Configure Git to Autocorrect Your Fat Fingers", "tags": ["git", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/git-config-help-autocorrect.md", "description": "If you have ever mistyped a git command very close to an existing one What you might not have known is that you can configure git to just run Now when you typo ", "content": "If you have ever mistyped a git command very close to an existing one\nyou have likely seen this message.\n\n``` bash\n\u276f git chekout dev\ngit: 'chekout' is not a git command. See 'git --help'.\n\nThe most similar command is\n        checkout\n```\n\n## Automatically run the right one\n\nWhat you might not have known is that you can configure git to just run\nthis command for you.\n\n``` bash\n# Gives you 0.1 seconds to respond\ngit config --global help.autocorrect 1\n\n# Gives you 1 seconds to respond\ngit config --global help.autocorrect 10\n\n# Gives you 5 seconds to respond\ngit config --global help.autocorrect 50\n```\n\n## Fat Fingers Gone\n\nNow when you typo a git command it will autmatically run after the\nconfigured number of tenths of a second.\n\n``` bash\n\u276f git chkout get-error\nWARNING: You called a Git command named 'chkout', which does not exist.\nContinuing in 1.0 seconds, assuming that you meant 'checkout'.\nM       pages/blog/how-i-deploy-2021.md\nM       pages/hot_tips/001.md\nM       pages/templates/gratitude_card.html\nM       plugins/index.py\nM       plugins/publish_amp.py\nM       plugins/render_template_variables.py\nM       plugins/youtube.py\nM       requirements.txt\nM       static/index.html\nSwitched to branch 'get-error'\n```\n\n## My config\n\nI'm rocking 10 for now just to see how I feel about it, but honestly I\ncannot think of a time that I have seen the original warning that was\nnot what I wanted.  This at least gives me some time to respond if I am\nunsure.\n\n``` bash\ngit config --global help.autocorrect 10\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-diff-filter'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>git diff-filter</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-checkout-worktree'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Git Worktrees are not so Scary</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-15", "edit_link": "https://github.com/edit/main/pages/til/git-config-help-autocorrect.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574874", "datetime": "2022-03-15 00:00:00+00:00", "slug": "til/git-config-help-autocorrect", "jinja": false, "output_html": "markout/til/git-config-help-autocorrect/index.html", "long_description": "If you have ever mistyped a git command very close to an existing one What you might not have known is that you can configure git to just run Now when you typo a git command it will autmatically run after the I", "super_description": "If you have ever mistyped a git command very close to an existing one What you might not have known is that you can configure git to just run Now when you typo a git command it will autmatically run after the I", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621040>, next=<frontmatter.Post object at 0x7f345060ea90>)"}, {"cover": "", "title": "Glances webui with pipx", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/pipx-w.md", "description": "Glances has a pretty incredible webui to view system processes and information The nice thing about the webui is that it can be accessed from a remote system. Y", "content": "Glances has a pretty incredible webui to view system processes and information\nlike htop, or task manager for windows.\n\nThe nice thing about the webui is that it can be accessed from a remote system.\nThis would be super nice on something like a raspberry pi, or a vm running in\nthe cloud.  Its also less intimidating and easier to search if you are not a\nterminal junky.\n\n## install\n\nYou will need to install glances to use the glances webui.  We can still use\n`pipx` to manage our virtual environment for us so that we do not need to do so\nmanually or run the risk of globally installed package dependency hell.\n\n``` bash\npipx install glances\npipx inject glances \"glances[web]\"\n```\n\nYou will be presented with this success message.\n\n``` bash\n  injected package glances into venv glances\ndone! \u2728 \ud83c\udf1f \u2728\n```\n\n## running the webui\n\nNow that you have glances installed you can run it with the `-w` flag to run\nthe webui.\n\n``` bash\nglances -w\n```\n\nThis will present you with the following success message.\n\n``` bash\nGlances Web User Interface started on http://0.0.0.0:61208/\n```\n\n## Open it in your browser\n\nNow that its running you can open your web browser to `localhost:61208` and be\npresented with the glances webui.\n\n![running the glances webui on my system](https://images.waylonwalker.com/glances-w.png)\n\n## Links\n\n* [pipx](https://pypa.github.io/pipx/)\n* [website](https://nicolargo.github.io/glances/)\n* [docs](https://glances.readthedocs.io/en/latest/index.html)\n* [github](https://github.com/nicolargo/glances)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pluggy-minimal-example'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>A Minimal Pluggy Example</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pipx-run-glances'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Run glances without install with pipx</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-20", "edit_link": "https://github.com/edit/main/pages/til/pipx-w.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574879", "datetime": "2022-02-20 00:00:00+00:00", "slug": "til/pipx-w", "jinja": false, "output_html": "markout/til/pipx-w/index.html", "long_description": "Glances has a pretty incredible webui to view system processes and information The nice thing about the webui is that it can be accessed from a remote system. You will need to install glances to use the glances webui.  We can still use You will be pr", "super_description": "Glances has a pretty incredible webui to view system processes and information The nice thing about the webui is that it can be accessed from a remote system. You will need to install glances to use the glances webui.  We can still use You will be presented with this success message. Now that you have glances installed you can run it with the  This will present you with the following success message. Now that its running you can open your web browser to ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609a60>, next=<frontmatter.Post object at 0x7f34506214f0>)"}, {"cover": "", "title": "Simple Plain Text Diagrams in HTML", "tags": ["webdev", "webdev", "webdev"], "status": "published", "templateKey": "til", "path": "pages/til/mermaid-html.md", "description": "Since GitHub started supporting mermaid in their markdown I wanted to The docs kinda just jumped right into their mermaid language and really You  just write me", "content": "Since GitHub started supporting mermaid in their markdown I wanted to\ntake another look at how to implement it on my site, I think it has some\nvery nice opportunities in teaching, documenting, and explaining things.\n\nThe docs kinda just jumped right into their mermaid language and really\nwent through that in a lot of depth, and skipped over how to implement\nit yourself, turns out its pretty simple. You  just write mermaid syntax\nin a div with a class of mermaid on it!\n\n``` html\n<script src='https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js'></script>\n<div class='mermaid'>\ngraph TD;\na --> A\nA --> B\nB --> C\n</div>\n```\n\n>  You  just write mermaid syntax in a div with a class of mermaid on\n>  it!\n\nThe above gets me this diagram.\n\n<script src='https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js'></script>\n<div class='mermaid'>\ngraph TD;\na --> A\nA --> B\nB --> C\n</div>\n\nThis feels so quick and easy to start getting some graphs up and running, but\ndoes lead to layout shift and extra bytes down the pipe.  The best solution in\nmy opionion would be to forgo the js and ship svg.  That said, this is do dang\nconvenient I will be using it for some things.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/mermaid-subgraphs'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Grouping Mermaid nodes in Subgraphs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/mermaid-highlight'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Mermaid Highlight</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-03", "edit_link": "https://github.com/edit/main/pages/til/mermaid-html.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574885", "datetime": "2022-03-03 00:00:00+00:00", "slug": "til/mermaid-html", "jinja": false, "output_html": "markout/til/mermaid-html/index.html", "long_description": "Since GitHub started supporting mermaid in their markdown I wanted to The docs kinda just jumped right into their mermaid language and really You  just write mermaid syntax in a div with a class of mermaid on The above gets me this diagram. This feel", "super_description": "Since GitHub started supporting mermaid in their markdown I wanted to The docs kinda just jumped right into their mermaid language and really You  just write mermaid syntax in a div with a class of mermaid on The above gets me this diagram. This feels so quick and easy to start getting some graphs up and running, but", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604df0>, next=<frontmatter.Post object at 0x7f34505fd790>)"}, {"cover": "", "title": "Installing Pipx on Ubuntu", "tags": ["python", "linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/installing-pipx-on-ubuntu.md", "description": "I recently paired up with another dev running windows with Ubuntu running in Open up a terminal and get your required system dependencies using the apt I like r", "content": "I recently paired up with another dev running windows with Ubuntu running in\nwsl, and we had a bit of a stuggle to get our project off the ground because\nthey were missing com system dependencies to get going.\n\n## Straight in the terminal\n\nOpen up a terminal and get your required system dependencies using the apt\npackage manager and the standard ubuntu repos.\n\n``` bash\nsudo apt update\nsudo apt upgrade\nsudo apt install \\\n      python3-dev \\\n      python3-pip \\\n      python3-venv \\\n      python3-virtualenv\npip install pipx\n```\n\n## Using an Ansible-Playbook\n\nI like running things like this through an ansible-playbook as it give me some\nextra control and repeatability next time I have a new machine to setup.\n\n``` yaml\n- hosts: localhost\n  gather_facts: true\n  become: true\n  become_user: \"{{ lookup('env', 'USER') }}\"\n\n  pre_tasks:\n    - name: update repositories\n      apt: update_cache=yes\n      become_user: root\n      changed_when: False\n  vars:\n    user: \"{{ ansible_user_id }}\"\n  tasks:\n    - name: Install System Packages 1 (terminal)\n      become_user: root\n      apt:\n        name:\n          - build-essential\n          - python3-dev\n          - python3-pip\n          - python3-venv\n          - python3-virtualenv\n    - name: check is pipx installed\n      shell: command -v pipx\n      register: pipx_exists\n      ignore_errors: yes\n\n    - name: pipx\n      when: pipx_exists is failed\n      pip:\n        name: pipx\n      tags:\n        - pipx\n```\n\n## video clip\n\nHere is a clip of me getting pipx running on ubuntu 21.10, and running a few of\nmy favorite pipx commands.\n\n![installation video](https://images.waylonwalker.com/pipx-install-ubuntu.gif)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/kedro-lambda-node'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Lambda Function as a Kedro Node</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/installing-homebrew-linux'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Installing Homebrew on Linux</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-10", "edit_link": "https://github.com/edit/main/pages/til/installing-pipx-on-ubuntu.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574891", "datetime": "2022-01-10 00:00:00+00:00", "slug": "til/installing-pipx-on-ubuntu", "output_html": "markout/til/installing-pipx-on-ubuntu/index.html", "long_description": "I recently paired up with another dev running windows with Ubuntu running in Open up a terminal and get your required system dependencies using the apt I like running things like this through an ansible-playbook as it give me some Here is a clip of m", "super_description": "I recently paired up with another dev running windows with Ubuntu running in Open up a terminal and get your required system dependencies using the apt I like running things like this through an ansible-playbook as it give me some Here is a clip of me getting pipx running on ubuntu 21.10, and running a few of", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fddf0>, next=<frontmatter.Post object at 0x7f345061b280>)"}, {"cover": "", "title": "Opening files in vim from output of command", "tags": ["vim"], "status": "published", "templateKey": "til", "path": "pages/til/nvim-telescope-custom-command.md", "description": "Many command line tools can output a list of files, this is quite powerful. Telescope is the fuzzy file finder I use every day inside of neovim.  Its pretty Thi", "content": "Many command line tools can output a list of files, this is quite powerful.\nI often want to search for something, then open it from a fuzzy picker.  This\ncan be done with fzf in the terminal, but often I am already in vim and I want\nto open it inside my current session.\n\n## Telescope\n_how to pass a custom command to telescope_\n\nTelescope is the fuzzy file finder I use every day inside of neovim.  Its pretty\nfantastic and easy to extent like this.  This first example I am only passing in\nfiles from the current working directory by using `ls`.\n\n``` vim\n:Telescope find_files find_command=ls\n```\n\nThis brings up a normal Telescope picker with results from the `ls` command.\n\n## More arguments\n_how to pass a muli-argument command to telescope_\n\nAdding more arguments can be done by comma separating them as shown in the\nexample below.  This command will run the silver-searcher, search for all\noccurences of nvim inside of a markdown file, and return only the filepaths so\nTelescope can pick from them.\n\n```vim\n:Telescope find_files find_command=ag,nvim,--md,-l\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/nvim-telescope-hidden-files'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Finding hidden (dotfiles) using Telescope in neovim</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/nvim-rename-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Rename Python Variables with nvim</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-27", "edit_link": "https://github.com/edit/main/pages/til/nvim-telescope-custom-command.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574898", "datetime": "2021-12-27 00:00:00+00:00", "slug": "til/nvim-telescope-custom-command", "jinja": false, "output_html": "markout/til/nvim-telescope-custom-command/index.html", "long_description": "Many command line tools can output a list of files, this is quite powerful. Telescope is the fuzzy file finder I use every day inside of neovim.  Its pretty This brings up a normal Telescope picker with results from the  Adding more arguments can be ", "super_description": "Many command line tools can output a list of files, this is quite powerful. Telescope is the fuzzy file finder I use every day inside of neovim.  Its pretty This brings up a normal Telescope picker with results from the  Adding more arguments can be done by comma separating them as shown in the", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506094c0>, next=<frontmatter.Post object at 0x7f34505f8280>)"}, {"cover": "", "title": "My first impressions with pyenv", "tags": ["python", "linux", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/pyenv-first-impressions.md", "description": "pyenv provides an easy way to install almost any version of python from I needed to install an older version of python on ubuntu I Based on the Readme it looked", "content": "pyenv provides an easy way to install almost any version of python from\na large list of distributions. I have simply been using the version of\npython from the os package manager for awhile, but recently I bumped my\nhome system to Ubuntu 21.10 impish, and it is only 3.9+ while the\nlibraries I needed were only compatable with up to 3.8.\n\n> I needed to install an older version of python on ubuntu\n\nI've been wanting to check out pyenv for awhile now, but without a\nburning need to do so.\n\n## installing\n\nBased on the Readme it looked like I needed to install using homebrew,so this\nis what I did, but I later realized that there is a pyenv-installer repo that\nmay have saved me this need.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/installing-homebrew-linux/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/installing-homebrew-linux-og_250x140.png\" alt=\"article cover for \n Installing Homebrew on Linux\n\"/>\n          <p><strong>\n Installing Homebrew on Linux\n</strong></p>\n      </a>\n  </div>\n\n\n## List out install candidates\n\nYou can list all of the available versions to install with\n`pyenv install --list`.  It does reccomend updating pyenv if you suspect\nthat it is missing one.  At the time of writing this comes out to 532\ndifferent versions!\n\n``` bash\npyenv install --list\n```\n\n## Let's install the latest 3.8 patch\n\nInstalling a version is as easy as `pyenv install 3.8.12`.  This will\ninstall it, but not make it active anywhere.\n\n```\npyenv install 3.8.12\n```\n\n## let's use python 3.8.12 while in this directory\n\nRunning `pyenv local` will set the version of python that we wish to use\nwhile in this directory and any directory underneath of it while using\nthe pyenv command.\n\n``` bash\npyenv local python3.8.12\n```\n\n## .python-version file\n\nThis creates a `.python-version` files in the directory I ran it in,\nthat contains simply the version number.\n\n``` bash\n3.8.12\n```\n\n## using with pipx\n\nI immediately ran into the same issue I was having before when trying to\nrun pipx, as pipx was running my system python.  I had to install pipx\nin the python3.8 environment to get it to use it.\n\n``` bash\npyenv exec pip install pipx\npyenv exec pipx run kedro new\n```\n\n## python is still the system python\n\nWhen I open a terminal and call `python` its still my system python that\nI installed and set with update-alternatives.  I am not sure if this is\nexpected or based on how I had installed the system python previously,\nbut it's what happened on my system.\n\n```\nupdate-alternatives --query python\n\nName: python\nLink: /home/walkers/.local/bin/python\nStatus: auto\nBest: /usr/bin/python3\nValue: /usr/bin/python3\n```\n\n## making a virtual environment\n\nTo make a virtual environment, I simply ran `pyenv exec python` in place\nof where I would normally run python and it worked for me.  There is a\nwhole package to get pyenv and venv to play nicely together, so I\nsuspect that there is more to it, but this worked well for me and I was\nhappy.\n\n```\npyenv exec python -m venv .venv --prompt $(basename $PWD)\n```\n\nNow when my virtual environment is active it points to the python in\nthat virtual environment, and is the version of python that was used to\ncreate the environment.\n\n## Links\nhttps://github.com/pyenv/pyenv#installation\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pyenv-no-sqlite3'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>pyenv no module named '_sqlite3'</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/practice-kedro'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Practice making pipelines with kedro</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-30", "edit_link": "https://github.com/edit/main/pages/til/pyenv-first-impressions.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574904", "datetime": "2021-12-30 00:00:00+00:00", "slug": "til/pyenv-first-impressions", "jinja": false, "output_html": "markout/til/pyenv-first-impressions/index.html", "long_description": "pyenv provides an easy way to install almost any version of python from I needed to install an older version of python on ubuntu I Based on the Readme it looked like I needed to install using homebrew,so this https://waylonwalker.com/til/installing-h", "super_description": "pyenv provides an easy way to install almost any version of python from I needed to install an older version of python on ubuntu I Based on the Readme it looked like I needed to install using homebrew,so this https://waylonwalker.com/til/installing-homebrew-linux/ You can list all of the available versions to install with Installing a version is as easy as  Running  This creates a  I immediately ran into the same issue I was having before when trying to When I open a terminal and call  To make a", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8b80>, next=<frontmatter.Post object at 0x7f3450616f70>)"}, {"cover": "", "title": "Pygame Boilerplate Apr 2022", "tags": ["python", "gamedev"], "status": "published", "templateKey": "til", "path": "pages/til/pygame-boilerplate-apr-2022.md", "description": "I I What currently have is a single module starter package that is on github Since it You can make a quick game by inheriting from Game, and calling Here is wha", "content": "I'm poking a bit into gamedev.  Partly to better understand, partly\nbecause it's stretching different parts of my brain/skillset than\nwriting data pipelines does, but mostly for the experience of designing\nthem with my 9yo Wyatt.\n\n## pygame boilerplates\n\nI've seen several pygame boilerplate templates, but they all seem to\nrely heavily on globl variables.  That's just not how I generally\ndevelop anything.  I want a package that I can pip install, run, import,\ntest, all the good stuff.\n\n## My current starter\n\nWhat currently have is a single module starter package that is on github\nso that I can install it and start building games with very little code.\n\n## Installation\n\nSince it's a package on GitHub you can install it with the git+ prefix.\n\n``` bash\npip install git+https://github.com/WaylonWalker/pygame-starter\n```\n\n## Example Game\n\nYou can make a quick game by inheriting from Game, and calling\n`.run()`.  This example just fills the screen with an aqua color, but\nyou can put all of your game logic in the `game` method.\n\n``` python\nfrom pygame_starer import Game\n\nclass MyGame(Game):\n    def game(self):\n        self.screen.fill((128, 255, 255))\n\nif __name__ == \"__main__\":\n    game = MyGame()\n    game.run()\n\n```\n\n## The starter\n\nHere is what the current `game.py` looks like.  I will probably update\nit as time goes on and I learn more about the things I want to do with\nit.\n\n```python\nfrom typing import Tuple\n\nimport pygame\n\n\nclass Game:\n    def __init__(\n        self,\n        screen_size: Tuple[int, int] = (854, 480),\n        caption: str = \"pygame-starter\",\n        tick_speed: int = 60,\n    ):\n        \"\"\"\n\n        screen_size (Tuple[int, int]): The size of the screen you want to use, defaults to 480p.\n        caption (str): the name of the game that will appear in the title of the window, defaults to `pygame-starter`.\n        tick_speed (int): the ideal clock speed of the game, defaults to 60\n\n        ## Example Game\n\n        You can make a quick game by inheriting from Game, and calling\n        `.run()`.  This example just fills the screen with an aqua color, but\n        you can put all of your game logic in the `game` method.\n\n        ``` python\n        from pygame_starer import Game\n\n        class MyGame(Game):\n            def game(self):\n                self.screen.fill((128, 255, 255))\n\n        if __name__ == \"__main__\":\n            game = MyGame()\n            game.run()\n\n        ```\n        \"\"\"\n        pygame.init()\n        pygame.display.set_caption(caption)\n\n        self.screen_size = screen_size\n        self.screen = pygame.display.set_mode(self.screen_size)\n        self.clock = pygame.time.Clock()\n        self.tick_speed = tick_speed\n\n        self.running = True\n        self.surfs = []\n\n    def should_quit(self):\n        \"\"\"check for pygame.QUIT event and exit\"\"\"\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                self.running = False\n\n    def game(self):\n        \"\"\"\n        This is where you put your game logic.\n\n        \"\"\"\n        ...\n\n    def reset_screen(self):\n        \"\"\"\n        fill the screen with black\n        \"\"\"\n        self.screen.fill((0, 0, 0))\n\n    def update(self):\n        \"\"\"\n        run one update cycle\n        \"\"\"\n        self.should_quit()\n        self.reset_screen()\n        self.game()\n        for surf in self.surfs:\n            self.screen.blit(surf, (0, 0))\n        pygame.display.update()\n        self.clock.tick(self.tick_speed)\n\n    def run(self):\n        \"\"\"\n        run update at the specified tick_speed, until exit.\n        \"\"\"\n        while self.running:\n            self.update()\n        pygame.quit()\n\n\nif __name__ == \"__main__\":\n    game = Game()\n    game.run()\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pygame-event-queue'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>pygame events are queued | Don't make this mistake</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pyenv-no-sqlite3'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pyenv no module named '_sqlite3'</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-03", "edit_link": "https://github.com/edit/main/pages/til/pygame-boilerplate-apr-2022.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574909", "datetime": "2022-04-03 00:00:00+00:00", "slug": "til/pygame-boilerplate-apr-2022", "jinja": false, "output_html": "markout/til/pygame-boilerplate-apr-2022/index.html", "long_description": "I I What currently have is a single module starter package that is on github Since it You can make a quick game by inheriting from Game, and calling Here is what the current ", "super_description": "I I What currently have is a single module starter package that is on github Since it You can make a quick game by inheriting from Game, and calling Here is what the current ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061ba60>, next=<frontmatter.Post object at 0x7f34505f8b80>)"}, {"cover": "", "title": "pyenv no module named '_sqlite3'", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/pyenv-no-sqlite3.md", "description": "I I talked about why and how to use pyenv along with my first impressions in According to  libsqlite3-dev When I make a fresh env and install ipython I still ge", "content": "I've been trying to adopt pyenv for a few months, but have been completely\nblocked by this issue on one of the main machines I use.  Whenever I start up\nipython I get the following error.\n\n```\nImportError: No module named '_sqlite3\n```\n\nI talked about why and how to use pyenv along with my first impressions in\n[this post](/til/pyenv-first-impressions)\n\n## pyenv/issues/678\n\nAccording to [#678](https://github.com/pyenv/pyenv/issues/678) I need to\ninstall `libsqlite3-dev` on ubuntu to resolve this issue.\n\n## install libsqlite3-dev\n\n`libsqlite3-dev` can be installed using apt\n\n```bash\nsudo apt install libsqlite3-dev\n```\n\n## But wait....\n\nWhen I make a fresh env and install ipython I still get the same error and I am\nstill not able to use ipython with pyenv.\n\n```python\nImportError: No module named '_sqlite3\n```\n\n## re-install python\n\nAfter having this issue for awhile an coming back to\n[#678](https://github.com/pyenv/pyenv/issues/678) several times I realized that\n`libsqlite3-dev` needs to be installed while during install.\n\n```bash\npyenv install 3.8.13\n```\n\nI think I had tried this several times, but was missing the `-y` option each\ntime.  You gotta read errors like this, I am really good at glossing over them.\n\n![pyenv-install-exists](https://screenshots.waylonwalker.com/pyenv-install-exists.webp)\n\n## Let's never have this issue again.\n\nWhen you spend months living with little errors like this and finally fix it,\nits good to make sure that it never happens again.  Whenever I start a new\nubuntu machine I run an ansible playbook that does all the setup for me.  I\nadded `libsqlite3-dev` to my core install in\n[64c85ca](https://github.com/WaylonWalker/devtainer/commit/64c85ca1b38eefe95dfc8723c1e83e8e334cf4dc)\nnow it will be on all of my machines and not break again.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pygame-boilerplate-apr-2022'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Pygame Boilerplate Apr 2022</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pyenv-first-impressions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>My first impressions with pyenv</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-31", "edit_link": "https://github.com/edit/main/pages/til/pyenv-no-sqlite3.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574915", "datetime": "2022-05-31 00:00:00+00:00", "slug": "til/pyenv-no-sqlite3", "jinja": false, "output_html": "markout/til/pyenv-no-sqlite3/index.html", "long_description": "I I talked about why and how to use pyenv along with my first impressions in According to  libsqlite3-dev When I make a fresh env and install ipython I still get the same error and I am After having this issue for awhile an coming back to I think I h", "super_description": "I I talked about why and how to use pyenv along with my first impressions in According to  libsqlite3-dev When I make a fresh env and install ipython I still get the same error and I am After having this issue for awhile an coming back to I think I had tried this several times, but was missing the  When you spend months living with little errors like this and finally fix it,", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8730>, next=<frontmatter.Post object at 0x7f34505f8940>)"}, {"cover": "", "title": "Remove Vim Tab Characters", "tags": ["vim", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/remove-vim-tab-characters.md", "description": "I It turns out they are tabs, and you can get rid of the little leading", "content": "I've been stuck many times looking at a vim buffer with little question\nmarks at the beginning of each line and trying to get rid of them.  for\nso long I didn't know what they were so trying to get rid of them was\nimpossible.\n\n![example of what the tab character renders as in my editor](https://images.waylonwalker.com/vim-tab-characters.png)\n\nIt turns out they are tabs, and you can get rid of the little leading\nquestion marks with this substitution command.\n\n``` vim\n:%s/\\t/    /g\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/review-pull-requests-with-git-worktrees'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Review Pull Requests with git worktrees</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-sys-excepthook'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python sys.excepthook</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-06", "edit_link": "https://github.com/edit/main/pages/til/remove-vim-tab-characters.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574921", "datetime": "2022-01-06 00:00:00+00:00", "slug": "til/remove-vim-tab-characters", "jinja": false, "output_html": "markout/til/remove-vim-tab-characters/index.html", "long_description": "I It turns out they are tabs, and you can get rid of the little leading", "super_description": "I It turns out they are tabs, and you can get rid of the little leading", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b160>, next=<frontmatter.Post object at 0x7f34505fd730>)"}, {"cover": "", "title": "Automatically Generate a list of Markown Links in Vim", "tags": ["vim", "webdev", "meta"], "status": "published", "templateKey": "til", "path": "pages/til/vim-markdown-links.md", "description": "Let Before you run someone Something that I have always appreciated form Searchng through the internet I was able to find an article from Here is my interpretat", "content": "Let's make a vim command to automatically collect all the links in these\nposts at the end of each article.  Regex confuses the heck out of me...\nI don't have my regex liscense, but\nregex can be so darn powerful especially in an editor.\n\n## Step one\n\nBefore you run someone's regex from the internet that you don't fully\nunderstand, check your `git status` and make sure you are all clear with\ngit before you wreck something\n\n## Inspiration\n\nSomething that I have always appreciated form\n[Nick Janetakis](https://nickjanetakis.com/) is his links section.  I\noften try to gather up the links at the end of my posts, but often end\nup not doing it or forgetting.\n\n## Making a Links section\n\nSearchng through the internet I was able to find an article from\nVitaly Parnas called\n[vim ref links](https://vitalyparnas.com/guides/vim-ref-links/) that did\nalmost exactly what I needed, except it was more complicated and made\nthem into ref liks.\n\nHere is my interpretation of the code I took from Vitaly's post.  It\nmakes a Links section like the one at the bottom of this post.\n\n``` vim\nfunction! MdLinks()\n    $norm o## Links\n    $norm o\n    g/\\[[^\\]]\\+\\]([^)]\\+)/t$\n    silent! '^,$s/\\v[^\\[]*(\\[[^\\]]+\\])\\(([^)]+)\\)[^\\[]*/* \\1(\\2)/g\n    nohl\nendfunction\ncommand! MdLinks call MdLinks()\n```\n\nSo far it is working for me and saving me a few seconds off each post I\nmake.\n\n## Links\n\n* [Nick Janetakis](https://nickjanetakis.com/)\n* [vim ref links](https://vitalyparnas.com/guides/vim-ref-links/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/vim-plugged-snapshot'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>vim plugged snapshot</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/vim-cmd'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Vim remaps use cmd in place of :</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-19", "edit_link": "https://github.com/edit/main/pages/til/vim-markdown-links.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574927", "datetime": "2022-03-19 00:00:00+00:00", "slug": "til/vim-markdown-links", "jinja": false, "output_html": "markout/til/vim-markdown-links/index.html", "long_description": "Let Before you run someone Something that I have always appreciated form Searchng through the internet I was able to find an article from Here is my interpretation of the code I took from Vitaly So far it is working for me and saving me a few seconds", "super_description": "Let Before you run someone Something that I have always appreciated form Searchng through the internet I was able to find an article from Here is my interpretation of the code I took from Vitaly So far it is working for me and saving me a few seconds off each post I", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fda90>, next=<frontmatter.Post object at 0x7f345060edc0>)"}, {"cover": "", "title": "Tmux hotkey for copier templates", "tags": ["python", "linux", "tmux"], "status": "published", "templateKey": "til", "path": "pages/til/tmux-copier-templates.md", "description": "I have added a hotkey to my copier template setup to quickly access all my I", "content": "I have added a hotkey to my copier template setup to quickly access all my\ntemplates at any time from tmux.  At any point I can hit `<c-b><c-b>`, thats\nholding control and hitting `bb`, and I will get a popup list of all of my\ntemplates directory names.  Its an fzf list, which means that I can fuzzy\nsearch through it for the template I want, or arrow key to the one I want if I\nam feeling insane.  I even setup it up so that the preview is a list of the\nfiles that come with the template in tree view.\n\n``` bash\nbind-key c-b popup -E -w 80% -d '#{pane_current_path}' \"\\\n    pipx run copier copy ~/.copier-templates/`ls ~/.copier-templates |\\\n    fzf --header $(pwd) --preview='tree ~/.copier-templates/{} |\\\n    lolcat'` . \\\n    \"\n```\n\nI've had this on my systems for a few weeks now and I am constantly using it\nfor my [tils](https://waylonwalker.com/til/),\n[blogs](https://waylonwalker.com/archive), and my .envrc file that goes into\nall of my projects to make sure that I have a virtual environment installed and\nrunning any time I open it.\n\n![this is what it looks like when I open my copier templates popup](https://images.waylonwalker.com/copier-templates-tmux-popup.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/tmux-copy-mode-binding'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>A better copy-mode bind for Tmux</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/textual-popup-hack'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Textual Popup Hack</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-24", "edit_link": "https://github.com/edit/main/pages/til/tmux-copier-templates.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574933", "datetime": "2022-01-24 00:00:00+00:00", "slug": "til/tmux-copier-templates", "jinja": false, "output_html": "markout/til/tmux-copier-templates/index.html", "long_description": "I have added a hotkey to my copier template setup to quickly access all my I", "super_description": "I have added a hotkey to my copier template setup to quickly access all my I", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672b80>, next=<frontmatter.Post object at 0x7f345061b1f0>)"}, {"cover": "", "title": "Installing Rust and Cargo on Ubuntu 21.10 using Ansible", "tags": ["linux"], "status": "published", "templateKey": "til", "path": "pages/til/install-rust.md", "description": "Installing rust in your own ansible playbook will make sure that you can I try to install everything that I will want to use for more than just a This is how ru", "content": "Installing rust in your own ansible playbook will make sure that you can\nget consistent installs accross all the machines you may use, or\nreplicate your development machine if it ever goes down.\n\n## Personal philosophy\n\nI try to install everything that I will want to use for more than just a\ntrial inside of my ansible playbook.  This way I always get the same\nsetup across my work and home machines, and anytime I might setup a\nthrow away vm.\n\n## reccommended install\n\nThis is how rust reccomends that you install it on Ubuntu.  First update\nyour system, then run their installer, and finally check that the\ninstall was successful.\n\n``` bash\n# system update\nsudo apt update\nsudo apt upgrade\n\n# download and run the rust installer\ncurl https://sh.rustup.rs -sSf | sh\n\n# confirm your installation is successful\nrustc --version\n```\n\n## Ansible Install\n\nThe first thing I do in my playbooks is to check if the tool is already\ninstalled.  Here I chose to look for `cargo`, you could also look for\n`rustc`.\n\n``` yaml\n  - name: check if cargo is installed\n    shell: command -v cargo\n    register: cargo_exists\n    ignore_errors: yes\n```\n\n> I first check for an existing install so I can re-run my playbooks\n> quickly filling in only missing tools. More on this\n> [ansible install conditionally](https://waylonwalker.com/til/ansible_install_if_not_callable/)\n\nNext we need to download the installer script and make it executable.\n\n``` yaml\n  - name: Download Installer\n    when: cargo_exists is failed\n    get_url:\n      url: https://sh.rustup.rs\n      dest: /tmp/sh.rustup.rs\n      mode: '0755'\n      force: 'yes'\n    tags:\n      - rust\n```\n\n> I chose to download the installer, because I was unable to pass in the\n> `-y` flag otherwise, which is required to do unattended installs.\n\nLast we just run the installer given to us by rust with the `-y` flag so\nthat it will run unattended.\n\n``` yaml\n\n  - name: install rust/cargo\n    when: cargo_exists is failed\n    shell: /tmp/sh.rustup.rs -y\n    tags:\n      - rust\n```\n\n## One more thing\n\nMake sure that you source your cargo env, otherwise your shell will not\nfind `rustc` or `cargo`.  I chose to do this by adding the following\nline to my `~/.zshrc`.  You can but it in `~/.bashrc` if that is your\nthing, or just run it in your shell to just get it to work.\n\n``` bash\n[ -f ~/.cargo/env ] && source $HOME/.cargo/env\n```\n\n## Full Install Playbook\n\nHere is a fully working install playbook to get you started or to port\ninto your own playbook.\n\n``` yaml\n- hosts: localhost\n  gather_facts: true\n  become: true\n  become_user: \"{{ lookup('env', 'USER') }}\"\n\n  pre_tasks:\n    - name: update repositories\n      apt: update_cache=yes\n      become_user: root\n      changed_when: False\n  vars:\n    user: \"{{ ansible_user_id }}\"\n  tasks:\n  - name: check if cargo is installed\n    shell: command -v cargo\n    register: cargo_exists\n    ignore_errors: yes\n\n  - name: Download Installer\n    when: cargo_exists is failed\n    get_url:\n      url: https://sh.rustup.rs\n      dest: /tmp/sh.rustup.rs\n      mode: '0755'\n      force: 'yes'\n    tags:\n      - rust\n\n  - name: install rust/cargo\n    when: cargo_exists is failed\n    shell: /tmp/sh.rustup.rs -y\n    tags:\n      - rust\n\n```\n\nYou can save this as a  `local.yml` and run the following in your shell\nto run the playbook on your local machine.\n\n``` bash\nansible-playbook local.yml --ask-become-pass\n```\n\n> note: `--ask-become-pass` is required for the system update step.\n> This will ask for your password as soon as ansible starts.\n\n\nI also have a very similar article on hwo I [ansible install fonts](https://waylonwalker.com/til/ansible_install_fonts/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/install-yq'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Install yq | A light weight yaml parser cli</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/install-obs-flatpak'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Install obs flatpak</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-06", "edit_link": "https://github.com/edit/main/pages/til/install-rust.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574940", "datetime": "2022-02-06 00:00:00+00:00", "slug": "til/install-rust", "output_html": "markout/til/install-rust/index.html", "long_description": "Installing rust in your own ansible playbook will make sure that you can I try to install everything that I will want to use for more than just a This is how rust reccomends that you install it on Ubuntu.  First update The first thing I do in my play", "super_description": "Installing rust in your own ansible playbook will make sure that you can I try to install everything that I will want to use for more than just a This is how rust reccomends that you install it on Ubuntu.  First update The first thing I do in my playbooks is to check if the tool is already I first check for an existing install so I can re-run my playbooks Next we need to download the installer script and make it executable. I chose to download the installer, because I was unable to pass in the L", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609280>, next=<frontmatter.Post object at 0x7f3450621280>)"}, {"cover": "", "title": "How I read Files in Python", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/pathlib-read-text.md", "description": "When I need to read contents from a plain text file in python I find the", "content": "When I need to read contents from a plain text file in python I find the\neasiest way is to just use `Pathlib`.\n\n``` python\nfrom pathlib import Path\n\nPath('path_to_file').read_text()\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pip-require-virtualenv'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>pip require-virtualenv</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pastel-cli'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Mixing Colors at the Command Line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-20", "edit_link": "https://github.com/edit/main/pages/til/pathlib-read-text.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574946", "datetime": "2022-03-20 00:00:00+00:00", "slug": "til/pathlib-read-text", "jinja": false, "output_html": "markout/til/pathlib-read-text/index.html", "long_description": "When I need to read contents from a plain text file in python I find the", "super_description": "When I need to read contents from a plain text file in python I find the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616ee0>, next=<frontmatter.Post object at 0x7f3450609160>)"}, {"cover": "", "title": "List all the files containing a phrase", "tags": ["vim", "linux", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/list-all-files-containing-phrase.md", "description": "One of the most useful skills you can acquire to make you faster at I Passing the flag  Giving ", "content": "One of the most useful skills you can acquire to make you faster at\nalmost any job that uses a computer is getting good at finding text in\nyour current working diretory and identifying the files that its in.  I\noften use the silver searcher `ag` or ripgrep `rg` to find files in\nlarge directories quickly.  Both have a sane set of defaults that ignore\nhidden and gitignored files, but getting them to list only the filenames\nand not the matched was not trivial to me.\n\n> I've searched throught he help/man pages many times looking for these\n> flags and they always seem to evade me.\n\n## ag\n\nPassing the flag `-l` to ag will get it to list only the filepath, and\nnot the match. Here I gave it a `--md` as well to only return markdown\nfiletypes.  `ag` supports a number of filetypes in a very similar way.\n\n``` bash\nag nvim --md -l\n```\n\n## rg\n\nGiving `rg` the `--files-with-matches` flag will yield you a similar set\nof results, giving only the filepaths themselves and not the match\nstatement.  Also passing in the `-g \"*.md\"` will similarly yield only\nresults from markdown files.\n\n``` bash\nrg --files-with-matches you -g \"*.md\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/lookatme-slides'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I Present Markdown Slides from the Terminal</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/linux-unzip-directory'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Unzip minecraft mods to their directory from the command line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-31", "edit_link": "https://github.com/edit/main/pages/til/list-all-files-containing-phrase.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574952", "datetime": "2021-12-31 00:00:00+00:00", "slug": "til/list-all-files-containing-phrase", "jinja": false, "output_html": "markout/til/list-all-files-containing-phrase/index.html", "long_description": "One of the most useful skills you can acquire to make you faster at I Passing the flag  Giving ", "super_description": "One of the most useful skills you can acquire to make you faster at I Passing the flag  Giving ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609b80>, next=<frontmatter.Post object at 0x7f3450672700>)"}, {"cover": "", "title": "Python Walrus Inside List Comprehension", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/walrus-comprehension.md", "description": "Python 3.8 came out two and a half years ago and I have yet to really lean in Now that Python 3.6 is end of life, and most folks are using at least  The assignm", "content": "Python 3.8 came out two and a half years ago and I have yet to really lean in\non the walrus operator.  Partly because it always seemed like something kinda\nsilly (my use cases) to require a python version bump for, and partly because I\nreally didn't understand it the best.  Primarily I have wanted to use it in\ncomprehensions, but I did not really understand how.\n\nNow that Python 3.6 is end of life, and most folks are using at least `3.8` it\nseems time to learn and use it.\n\n## What's a Walrus\n_:=_\n\nThe assignment operator in python is more commonly referred to as the walrus\noperator due to how `:=` looks like a walrus.  It allows you to assign and use\na variable in a single expression.\n\nThis example from the docs avoids a second call to the `len` function.\n\n``` python\nif (n := len(a)) > 10:\n    print(f\"List is too long ({n} elements, expected <= 10)\")\n```\n\n## Let's get some data\n_without a walrus_\n\nIn this example we are going to do a dict comp to generate a map of content\nfrom urls, only if their status code is 200.  When doing this in a dictionary\ncomprehension we end up needing to hit the url twice for successful urls. Once\nfor the filter and once for the data going into the dictionary.\n\n``` python\n{\n    url: requests.get(url).content\n    for url in [\"https://waylonwalker.com/\", \"https://waylonwalker.com/broken\"]\n    if requests.get(url).status_code == 200\n}\n```\n\n## Gimme some walrus\n_using walrus in a dict comp_\n\nUsing the walrus operator `:=` list comp allows us to only put things into the\ndictionary that we want to keep, and not hit the url twice.\n\n``` python\n{\n    url: r.content\n    for url in [\"https://waylonwalker.com/\", \"https://waylonwalker.com/broken\"]\n    if (r := requests.get(url)).status_code == 200\n}\n```\n\n## FIN\n\nThe walrus is a nice to have option to save on extra function/network calls, and\nmicro optimize your code without adding much extra.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/tmux-attach'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>tmux attach</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/vim-plugged-snapshot'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>vim plugged snapshot</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-12", "edit_link": "https://github.com/edit/main/pages/til/walrus-comprehension.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574957", "datetime": "2022-03-12 00:00:00+00:00", "slug": "til/walrus-comprehension", "jinja": false, "output_html": "markout/til/walrus-comprehension/index.html", "long_description": "Python 3.8 came out two and a half years ago and I have yet to really lean in Now that Python 3.6 is end of life, and most folks are using at least  The assignment operator in python is more commonly referred to as the walrus This example from the do", "super_description": "Python 3.8 came out two and a half years ago and I have yet to really lean in Now that Python 3.6 is end of life, and most folks are using at least  The assignment operator in python is more commonly referred to as the walrus This example from the docs avoids a second call to the  In this example we are going to do a dict comp to generate a map of content Using the walrus operator  The walrus is a nice to have option to save on extra function/network calls, and", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345064c430>, next=<frontmatter.Post object at 0x7f34505fda90>)"}, {"cover": "", "title": "Running Kedro on Ubuntu 21.10 Impish Indri", "tags": ["kedro", "python", "datascience"], "status": "published", "templateKey": "til", "path": "pages/til/kedro-ubuntu-impish.md", "description": "I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a But what I got back was not what I expected This is weird, why cant I run kedro new with pi", "content": "I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a\nkedro project to play with so I did what any good kedroid would do, I\nwent to my command line and ran\n\n```\npipx run kedro new --starter spaceflights\n```\n\nBut what I got back was not what I expected!\n\n``` bash\nFatal error from pip prevented installation. Full pip output in file:\n    /home/walkers/.local/pipx/logs/cmd_2022-01-01_20.42.16_pip_errors.log\n\nSome possibly relevant errors from pip install:\n    ERROR: Could not find a version that satisfies the requirement kedro (from versions: none)\n    ERROR: No matching distribution found for kedro\nError installing kedro.\n```\n\nThis is weird, why cant I run kedro new with pipx?  Lets try pip.\n\n``` bash\npip install kedro\n```\n\nSame issue.\n\n``` bash\nERROR: Could not find a version that satisfies the requirement kedro (from versions: none)\nERROR: No matching distribution found for kedro\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/what-is-kedro/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/what-is-kedro-og_250x140.png\" alt=\"article cover for \n What is Kedro\n\"/>\n          <p><strong>\n What is Kedro\n</strong></p>\n      </a>\n  </div>\n\n\n> Curious what kedro is?  Check out this article.\n\n## What's up..\n_wrong python version_\n\nThe issue is that kedro only runs on up to `python 3.8`, and on Ubuntu\n21.10 when you `apt install python3` you get `python 3.9` and the\nstandard repos don't have an old enough version to run kedro.\n\n## How to fix this?\n\nTheres a couple of ways you can fix this?  They all involve installing a\ndistribution that does not come from the standard repo.\n\n## Where Can I get the right version\n\n* Anaconda\n* Python.org\n* deadsnakes\n* pyenv\n* miniconda\n\n## I have two articles that can help you\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/install-miniconda/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/install-miniconda-og_250x140.png\" alt=\"article cover for \n How to Install miniconda on linux (from the command line only)\n\"/>\n          <p><strong>\n How to Install miniconda on linux (from the command line only)\n</strong></p>\n      </a>\n  </div>\n\n\n> Using miniconda\n\n``` bash\nconda create -n myenv python=3.8\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/pyenv-first-impressions/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/pyenv-first-impressions-og_250x140.png\" alt=\"article cover for \n My first impressions with pyenv\n\"/>\n          <p><strong>\n My first impressions with pyenv\n</strong></p>\n      </a>\n  </div>\n\n\n> Using pyenv\n\n``` bash\npyenv install 3.8.12\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/linux-bluetoothctl'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Bluetooth at the command line on Ubuntu</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/kedro-rich'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Make Kedro Runs Beautiful</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-02", "edit_link": "https://github.com/edit/main/pages/til/kedro-ubuntu-impish.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574963", "datetime": "2022-01-02 00:00:00+00:00", "slug": "til/kedro-ubuntu-impish", "jinja": false, "output_html": "markout/til/kedro-ubuntu-impish/index.html", "long_description": "I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a But what I got back was not what I expected This is weird, why cant I run kedro new with pipx?  Lets try pip. Same issue. https://waylonwalker.com/what-is-kedro/ Curious what kedro ", "super_description": "I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a But what I got back was not what I expected This is weird, why cant I run kedro new with pipx?  Lets try pip. Same issue. https://waylonwalker.com/what-is-kedro/ Curious what kedro is?  Check out this article. The issue is that kedro only runs on up to  Theres a couple of ways you can fix this?  They all involve installing a Anaconda Python.org deadsnakes pyenv miniconda https://waylonwalker.com/install-miniconda/ Using minicon", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616a60>, next=<frontmatter.Post object at 0x7f345060e940>)"}, {"cover": "", "title": "Gradual Typing in Python", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/gradual-typing-python.md", "description": "I https://youtu.be/Rk-Y71P Run Mypy as is, don Next we will add  The final stage to this series is to add  Make sure that you watch Anthony https://www.youtube.", "content": "I've referenced a video from Anthony Sotile in passing conversation several\ntimes.  Walking through his gradual typing process has really helped me\nunderstand typing better, and has helped me make some projects better over time\nrather than getting slammed with typing errors.\n\nhttps://youtu.be/Rk-Y71P_9KE\n\n# Step 1\n\nRun Mypy as is, don't get fancy yet.  This will not reach into any functions\nunless they are alreay explicitly typed.  It will not enforce you to type them\neither.\n\n``` bash\npip install mypy\nmypy .\n# or your specific project to avoid .venvs\nmypy src\n# or a single file\nmypy my-script.py\n```\n\n## Step 2\n\nNext we will add `check-untyped-defs`, this will start checking inside\nfunctions that are not typed.  To add this to your config create a\n`setup.cfg` with the following.\n\n``` toml\n[mypy]\ncheck_untyped_defs = True\n```\n\n## Step 3\n\nThe final stage to this series is to add `disallow_untyped_defs`.  This will\nstart requiring all of your functions to be type hinted.  This one is probably\nthe toughest, because as you type functions mypy can uncover more issues for\nyou to fix.  Often times the list of errors grows before it shrinks.\n\n``` toml\n[mypy]\ncheck_untyped_defs = True\ndisallow_untyped_defs = True\n```\n\n## Anthony's video\n\nMake sure that you watch Anthony's video, give him a sub, he deserves it\nfor all the great things he is doing for the python community.\n\nhttps://www.youtube.com/watch?v=Rk-Y71P_9KE\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/htmx-get'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Ease into htmx with htmx-get</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/gpg-sign-git-ssh'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>GPG signing commits over ssh</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-21", "edit_link": "https://github.com/edit/main/pages/til/gradual-typing-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574969", "datetime": "2022-01-21 00:00:00+00:00", "slug": "til/gradual-typing-python", "jinja": false, "output_html": "markout/til/gradual-typing-python/index.html", "long_description": "I https://youtu.be/Rk-Y71P Run Mypy as is, don Next we will add  The final stage to this series is to add  Make sure that you watch Anthony https://www.youtube.com/watch?v=Rk-Y71P", "super_description": "I https://youtu.be/Rk-Y71P Run Mypy as is, don Next we will add  The final stage to this series is to add  Make sure that you watch Anthony https://www.youtube.com/watch?v=Rk-Y71P", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e040>, next=<frontmatter.Post object at 0x7f34506283a0>)"}, {"cover": "", "title": "pytest-mock Basics", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/pytest-mock-basics.md", "description": "Last Thursday I learned about  Watching him use  pytest-mock is out on pypi and can be installed with pip. Sometimes I fall victim to making these posts nice an", "content": "Last Thursday I learned about `pytest-mock` at a local python meetup.  The\npresenter showed how he uses `pytest-mock` for his work, and it was kinda eye\nopening.  I knew what mocking was, but I had not seen it in this context.\n\n## Discovery\n\nWatching him use `pytest-mock` I realized that mocking was not as hard as I had\nmade it out to be.  You can install `pytest-mock`, use the mocker fixture, and\npatch objects methods with what you want them to be.\n\n## install\n\npytest-mock is out on pypi and can be installed with pip.\n\n```\npython -m pip install pytest-mock\n```\n\n## What I actually did\n\nSometimes I fall victim to making these posts nice and easy to follow.  It\ntakes more steps than just pip install, you need a place to practice in a nice\nsandbox.  Here is how I make my sandboxes.\n\n``` python\nmkdir ~/git/learn-pytest-mock\ncd ~/git/learn-pytest-mock\n# well actually open a new tmux session there\necho pytest-mock > requirements.txt\n\n# I copied in my .envrc, and ran direnv allow, which actually just made me a virtual env as follows\npython3 -m venv .venv --prompt $(basename $PWD)\nsource .venv/bin/activate\n\n# now install pytest-mock\npip install -r requirements.txt\n\n# make some tests to mock\nmkdir tests\nnvim tests/test_me.py\n```\n\n## create a tests/test_me.py\n\nI just wanted to do something that was worth mocking, the first thing that came\nto mind was to do something that made a network call.  Here I made a method\nthat uses requests to go get the content on my homepage, but changes it's\nreturn behavior based on the `status_code` of the request.\n\nI want to mock out `requests` to ensure that GoGetter can handle both `200`\n(http success) and `404` (http not found) status codes.\n\n``` python\n# tests/test_me.py\nimport requests\n\n\nclass GoGetter:\n    \"\"\"\n    The thing I am testing, this is usually imported into the test file, but\n    defined here for simplicity.\n    \"\"\"\n    def get(self):\n        \"\"\"\n        Get the content of `https://waylonwalker.com` and return it as a string\n        if successfull, or False if it's not found.\n        \"\"\"\n        r = requests.get(\"https://waylonwalker.com\")\n        if r.status_code == 200:\n            return r.content\n        if r.status_code == 404:\n            return False\n\n\nclass DummyRequester:\n    def __init__(self, content, status_code):\n        \"\"\"\n        mock out content and status_code\n        \"\"\"\n\n        self.content = content\n        self.status_code = status_code\n\n    def __call__(self, url):\n        \"\"\"\n        The way I set this up GoGetter is going to call an instance of this\n        class, so the easiest way to make it work was to implement __call__.\n        \"\"\"\n        self.url = url\n        return self\n\n\ndef test_success_get(mocker):\n    \"\"\"\n    Show that the GoGetter can handle successful calls.\n    \"\"\"\n    go_getter = GoGetter()\n\n    # Use the mocker fixture to change how requests.get works while inside of test_success_get\n    mocker.patch.object(requests, \"get\", DummyRequester(\"waylonwalker\", 200))\n    assert \"waylon\" in go_getter.get()\n\n\ndef test_failed_get(mocker):\n    \"\"\"\n    Show that the GoGetter can handle failed calls.\n    \"\"\"\n    go_getter = GoGetter()\n\n    # Use the mocker fixture to change how requests.get works while inside of test_failed_get\n    mocker.patch.object(requests, \"get\", DummyRequester(\"waylonwalker\", 404))\n    assert go_getter.get() is False\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-auto-pdb'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Implement --pdb in a python cli</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pygame-image-load'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Display Sprites in Pygame | Load and Blit</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-14", "edit_link": "https://github.com/edit/main/pages/til/pytest-mock-basics.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574975", "datetime": "2022-03-14 00:00:00+00:00", "slug": "til/pytest-mock-basics", "jinja": false, "output_html": "markout/til/pytest-mock-basics/index.html", "long_description": "Last Thursday I learned about  Watching him use  pytest-mock is out on pypi and can be installed with pip. Sometimes I fall victim to making these posts nice and easy to follow.  It I just wanted to do something that was worth mocking, the first thin", "super_description": "Last Thursday I learned about  Watching him use  pytest-mock is out on pypi and can be installed with pip. Sometimes I fall victim to making these posts nice and easy to follow.  It I just wanted to do something that was worth mocking, the first thing that came I want to mock out ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e670>, next=<frontmatter.Post object at 0x7f34505fd4f0>)"}, {"cover": "", "title": "Dedupe your shell paths", "tags": ["linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/dedupe-your-shell-paths.md", "description": "If you have ever ran ", "content": "If you have ever ran `which <command>` and see duplicate entries it's likely\nthat you have duplicate entries in your $PATH.  You can clean this up with a\none liner at the end of your bashrc or zshrc.\n\n``` bash\neval \"typeset -U path\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/docker-minecraft-server'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Running a Minecraft Server in Docker</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/copier_endops'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Changing copier template strings (_endops)</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-04", "edit_link": "https://github.com/edit/main/pages/til/dedupe-your-shell-paths.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574982", "datetime": "2022-03-04 00:00:00+00:00", "slug": "til/dedupe-your-shell-paths", "jinja": false, "output_html": "markout/til/dedupe-your-shell-paths/index.html", "long_description": "If you have ever ran ", "super_description": "If you have ever ran ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506044c0>, next=<frontmatter.Post object at 0x7f345061b4f0>)"}, {"cover": "", "title": "Mermaid Highlight", "tags": ["webdev"], "status": "published", "templateKey": "til", "path": "pages/til/mermaid-highlight.md", "description": "Mermaid gives us a way to style nodes through the use of css, but rather than produces the following graph style one fill:#BADA55", "content": "Mermaid gives us a way to style nodes through the use of css, but rather than\nusing normal css selectors we need to use `style <nodeid>`.  This also applies\nto subgraphs, and we can use the name of the subgraph in place of the nodeid.\n\n``` ruby\ngraph TD;\n    a --> A\n    A --> B\n    B --> C\n\n    style A fill:#f9f,stroke:#333,stroke-width:4px\n    style B fill:#f9f,stroke:#333,stroke-width:4px\n\n    subgraph one\n        a\n    end\n\n    style one fill:#BADA55\n```\n\nproduces the following graph\n\n<script src='https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js'></script>\n<div class='mermaid'>\ngraph TD;\na --> A\nA --> B\nB --> C\nstyle A fill:#f9f,stroke:#333,stroke-width:4px\nstyle B fill:#f9f,stroke:#333,stroke-width:4px\nsubgraph one\n  a\nend\n\nstyle one fill:#BADA55\n</div>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/mermaid-html'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Simple Plain Text Diagrams in HTML</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/markata-telescope-picker'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Markata Filters as Telescope Pickers in Neovim</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-07", "edit_link": "https://github.com/edit/main/pages/til/mermaid-highlight.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574988", "datetime": "2022-03-07 00:00:00+00:00", "slug": "til/mermaid-highlight", "jinja": false, "output_html": "markout/til/mermaid-highlight/index.html", "long_description": "Mermaid gives us a way to style nodes through the use of css, but rather than produces the following graph style one fill:#BADA55", "super_description": "Mermaid gives us a way to style nodes through the use of css, but rather than produces the following graph style one fill:#BADA55", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f82b0>, next=<frontmatter.Post object at 0x7f34505fd4c0>)"}, {"cover": "", "title": "Python sys.excepthook", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-sys-excepthook.md", "description": "Sometimes you just want python to do something else when you hit an exception, I am working on a quick and dirty python script designed to take screenshots I co", "content": "Sometimes you just want python to do something else when you hit an exception,\nmaybe that's fire a text, slack message, email, or system notification like I\nwanted.\n\nI am working on a quick and dirty python script designed to take screenshots\nand land them on my website in a single hotkey.  With it being designed to run\nwith a hotkey, if it were to error I would not see it.\n\nI could have gone down a logging route, but honestly this is meant to be quick,\ndirty, and work on my system for me.  I just want to get it in my system\nnotification.\n\n## sys.excepthook\n\nPython exposes sys.excepthook for just this case.  Here is what I ended up\ndoing to fire a system notification as well as printing the message.  Yaya a\nlog would be mroe appropriate, but this is designed to just get done quick and\ndo the job I want it to do.\n\n```python\ndef notify_exception(type, value, tb):\n    traceback_details = \"\\n\".join(traceback.extract_tb(tb).format())\n\n    msg = f\"caller: {' '.join(sys.argv)}\\n{type}: {value}\\n{traceback_details}\"\n    print(msg)\n    Popen(\n        f'notify-send \"screenshot.py hit an exception\" \"{msg}\" -a screenshot.py',\n        shell=True,\n    )\n\n\nsys.excepthook = notify_exception\n0 / 0\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/remove-vim-tab-characters'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Remove Vim Tab Characters</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-string-is-string'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python string of letters is a string of letters, but not with special</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-10", "edit_link": "https://github.com/edit/main/pages/til/python-sys-excepthook.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.574994", "datetime": "2022-04-10 00:00:00+00:00", "slug": "til/python-sys-excepthook", "jinja": false, "output_html": "markout/til/python-sys-excepthook/index.html", "long_description": "Sometimes you just want python to do something else when you hit an exception, I am working on a quick and dirty python script designed to take screenshots I could have gone down a logging route, but honestly this is meant to be quick, Python exposes", "super_description": "Sometimes you just want python to do something else when you hit an exception, I am working on a quick and dirty python script designed to take screenshots I could have gone down a logging route, but honestly this is meant to be quick, Python exposes sys.excepthook for just this case.  Here is what I ended up", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8a60>, next=<frontmatter.Post object at 0x7f345061bdc0>)"}, {"cover": "", "title": "Copier Tasks | Python templating post run task", "tags": ["python", "cli", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/copier-tasks.md", "description": "Copier allows you to run post render tasks, just like cookiecutter. These are The example I have below runs an  I have put the script in ", "content": "Copier allows you to run post render tasks, just like cookiecutter. These are\ndefined as a list of `tasks` in your `copier.yml`.  They are simply shell\ncommands to run.\n\nThe example I have below runs an `update-gratitude` bash script after the\ncopier template has been rendered.\n\n``` yaml\n# copier.yml\nnum: 128\n_answers_file: .gratitude-copier-answers.yml\n_tasks:\n  - \"update-gratitude\"\n```\n\nI have put the script in `~/.local/bin` so that I know it's always on my\n`$PATH`.  It will reach back into the `copier.yml` and update the default\nnumber.\n\n\n``` bash\n#!/bin/bash\n# ~/.local/bin/update-gratitude\ncurrent=`awk '{print $2}' ~/.copier-templates/gratitude/copier.yml | head -n 1`\nnew=`expr $current + 1`\necho $current\necho $new\nsed -i \"s/$current/$new/g\" ~/.copier-templates/gratitude/copier.yml\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/copier-template-variables'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>copier template variables</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/copier-answers'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Using Copier Answers to rerun templates quickly</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-22", "edit_link": "https://github.com/edit/main/pages/til/copier-tasks.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575000", "datetime": "2022-01-22 00:00:00+00:00", "slug": "til/copier-tasks", "jinja": false, "output_html": "markout/til/copier-tasks/index.html", "long_description": "Copier allows you to run post render tasks, just like cookiecutter. These are The example I have below runs an  I have put the script in ", "super_description": "Copier allows you to run post render tasks, just like cookiecutter. These are The example I have below runs an  I have put the script in ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621ca0>, next=<frontmatter.Post object at 0x7f34506093a0>)"}, {"cover": "", "title": "Display Sprites in Pygame | Load and Blit", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/pygame-image-load.md", "description": "One of the most essential concepts of pygame to start making a game you will I started by making a spotlight in Gimp, by opening a 64x64 pixel image and This is", "content": "One of the most essential concepts of pygame to start making a game you will\nneed to understand is loading images and blitting them to the screen.\n\n> **blit** stands for block image transfer, to me it feels a lot like layering\n> up layers/images in photoshop or Gimp.\n\n## Loading an image\n\nI started by making a spotlight in Gimp, by opening a 64x64 pixel image and\npainting the center with a very soft brush.\n\n![the spotlight I created in gimp](./spotlight.png)\n\n> This is what it looks like\n\nNow we can load this into pygame.\n\n```python\nimport pygame\nimg = pygame.image.load(\"assets/spotlight.png\")\n```\n\n## Converting to the pygame colorspace\n\nTo make pygame a bit more efficient we can convert the image to pygames\ncolorspace once when we load it rather than every time we blit it onto another\nsurface.\n\n```python\nimport pygame\n\n# convert full opaque images\nimg = pygame.image.load(\"assets/spotlight.png\").convert()\n\n# convert pngs with transparancy\nimg = pygame.image.load(\"assets/spotlight.png\").convert_alpha()\n```\n\n## blitting\n\nTo display the image onto the screen we need to use the blit method which needs\nat least two arguments, something to blit and a position to blit it at.\n\n```python\nscreen = pygame.display.set_mode(self.screen_size)\nscreen.blit( img, (0, 0),)\n```\n\n> **note** blitting to the position (0, 0) will align the top left corners of\n> the object we are blitting onto (screen) and the object we are blitting\n> (img).\n\n## Starter\n\nNow we need an actual game running to be able to put on the screen.  I am using\nmy own starter/boilerplate, if you want to follow along you can install it from\ngithub into your own virtual environment.\n\n```python\npip install git+https://github.com/WaylonWalker/pygame-starter\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/pygame-boilerplate-apr-2022/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/pygame-boilerplate-apr-2022-og_250x140.png\" alt=\"article cover for \n Pygame Boilerplate Apr 2022\n\"/>\n          <p><strong>\n Pygame Boilerplate Apr 2022\n</strong></p>\n      </a>\n  </div>\n\n\n> You can read more about my starter in this post\n\n## Let's place this image right in the middle\n\nNow we can use the starter to create a new game, and with just a bit of offset\nwe can put the spotlight directly in the middle.\n\n```python\nimport pygame\nfrom pygame_starter import Game\n\n\nclass MyGame(Game):\n    def __init__(self):\n        super().__init__()\n        # load in the image one time and store it inside the object instance\n        self.img = pygame.image.load(\"assets/spotlight.png\").convert_alpha()\n    def game(self):\n        # fill the screen with aqua\n        self.screen.fill((128, 255, 255))\n        # transfer the image to the middle of the screen\n        self.screen.blit(\n            self.img,\n            (\n                self.screen_size[0] / 2 - self.img.get_size()[0],\n                self.screen_size[1] / 2 - self.img.get_size()[1],\n            ),\n        )\n\n\nif __name__ == \"__main__\":\n    game = MyGame()\n    game.run()\n```\n\nIf we save this as `load_and_blit.py` we can run it at the command like as so.\n\n```python\npython load_and_blit.py\n```\n\nAnd we should get the following results.\n\n[the results of putting the image in the middle](https://images.waylonwalker.com/pygame-load-blit-center-alpha.png)\n\n## convert a transparent png\n\nWhat happens when we accidently use `.convert()` rather than `.convert_alpha()`?\n\n![using convert on a transparant png gets rid of all transparancy and fills with black](https://images.waylonwalker.com/pygame-load-blit-center-no-alpha.png)\n\n## Making snow\n\nA common concept in pygame, that is built into my starter, is that you\ntypically want to reset the screen each and every frame.  Building on this with\nour new concept of blitting spotlights onto the screen we can make a random\nnoise of snow by blitting a bunch of images to the screen.\n\n```python\nimport random\n\nimport pygame\nfrom pygame_starter import Game\n\n\nclass MyGame(Game):\n\n    def __init__(self):\n        super().__init__()\n        self.img = pygame.image.load(\"assets/spotlight.png\").convert_alpha()\n\n    def game(self):\n        self.screen.fill((128, 255, 255))\n        for  in range(100):\n            self.screen.blit(\n                self.img,\n                (\n                    random.randint(0, self.screen_size[0]) - self.img.get_size()[0],\n                    random.randint(0, self.screen_size[1]) - self.img.get_size()[1],\n                ),\n            )\n\n\nif __name__ == \"__main__\":\n    game = MyGame()\n    game.run()\n```\n\n## the results\n\n<video autoplay=\"\" controls=\"\" loop=\"true\" muted=\"\" playsinline=\"\" width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/pygame-snow.mp4\" type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pytest-mock-basics'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>pytest-mock Basics</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pygame-event-queue'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pygame events are queued | Don't make this mistake</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-06", "edit_link": "https://github.com/edit/main/pages/til/pygame-image-load.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575005", "datetime": "2022-04-06 00:00:00+00:00", "slug": "til/pygame-image-load", "jinja": false, "output_html": "markout/til/pygame-image-load/index.html", "long_description": "One of the most essential concepts of pygame to start making a game you will I started by making a spotlight in Gimp, by opening a 64x64 pixel image and This is what it looks like Now we can load this into pygame. To make pygame a bit more efficient ", "super_description": "One of the most essential concepts of pygame to start making a game you will I started by making a spotlight in Gimp, by opening a 64x64 pixel image and This is what it looks like Now we can load this into pygame. To make pygame a bit more efficient we can convert the image to pygames To display the image onto the screen we need to use the blit method which needs Now we need an actual game running to be able to put on the screen.  I am using https://waylonwalker.com/til/pygame-boilerplate-apr-20", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8190>, next=<frontmatter.Post object at 0x7f345061ba60>)"}, {"cover": "", "title": "Python Enum", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/python-enum.md", "description": "Python comes with an enum module for creating enums.  You can make your Enum values can be auto incremented by importing auto, and calling Enum", "content": "Python comes with an enum module for creating enums.  You can make your\nown enum by inheriting importing and inheriting from Enum.\n\n```\nfrom enum import Enum\n\n\nclass LifeCycle(Enum):\n    configure = 1\n    glob = 2\n    pre_render = 3\n    render = 4\n    post_render = 5\n    save = 6\n```\n\n## auto incrementing\n\nEnum values can be auto incremented by importing auto, and calling\n`auto()` as their value.\n\n``` python\nfrom enum import Enum, auto\n\n\nclass LifeCycle(Enum):\n    configure = auto()\n    glob = auto()\n    pre_render = auto()\n    render = auto()\n    post_render = auto()\n    save = auto()\n```\n\n## using the enum\n\nEnum's are accessed directy under the class itself, and have primarily\ntwo methods underneath each thing you make, `.name` and `.value`.\n\n``` python\nLifecycle.glob\nLifecycle.glob.value\nLifecycle.glob.name\n```\n\n![using the Lifecycle Enum](https://images.waylonwalker.com/using-lifecycle-enum.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-frontmatter'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I load Markdown in Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-docstring-ast'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Get Python docstring with ast</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-11", "edit_link": "https://github.com/edit/main/pages/til/python-enum.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575011", "datetime": "2022-01-11 00:00:00+00:00", "slug": "til/python-enum", "jinja": false, "output_html": "markout/til/python-enum/index.html", "long_description": "Python comes with an enum module for creating enums.  You can make your Enum values can be auto incremented by importing auto, and calling Enum", "super_description": "Python comes with an enum module for creating enums.  You can make your Enum values can be auto incremented by importing auto, and calling Enum", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616190>, next=<frontmatter.Post object at 0x7f345059af40>)"}, {"cover": "", "title": "vim plugged snapshot", "tags": ["vim"], "status": "published", "templateKey": "til", "path": "pages/til/vim-plugged-snapshot.md", "description": "A few of my friends and I all just borked our neovim configs during a plug https://twitter.com/pypeaday/status/1524882893914398732 Lucky for me I did it on a ho", "content": "A few of my friends and I all just borked our neovim configs during a plug\nupdate, and because none of us were using `:PlugSnapshot` it was painful to\nrecover from.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Upgraded all <a href=\"https://twitter.com/hashtag/neovim?src=hash&amp;ref_src=twsrc%5Etfw\">#neovim</a> plugins at once like an idiot and now everything&#39;s all borked.... nice excuse to clean up my config I guess?</p>&mdash; PypeADay\ud83d\udc0d (@pypeaday) <a href=\"https://twitter.com/pypeaday/status/1524882893914398732?ref_src=twsrc%5Etfw\">May 12, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n> Lucky for me I did it on a home machine that I only occasionally edit from,\n> so I could still take the snapshot from a working machine before taking the\n> plunge into fixing everying.\n\n## Why snapshot\n\nSnapshotting ensures that you install the same git sha on every single plugin.\nThis way when you have multiple machines running your same vim config, they are\nall on the same sha of each plugin, and you dont end up with weird things\nhappening on one machine.  And then you get to decide when you are ready to\nupdate, rather than when it breaks.\n\n* same config everywhere\n* you control the update\n* in case of a borked update you have a good working place to rever to\n\n## Let's snapshot\n\nRunning `:PlugSnapshot` will generate the following content in a buffer that\nyou can save.  I chose to save mine in `~/.config/nvim/snapshot.vim`.\n\n``` vim\n\" Generated by vim-plug\n\" Fri 13 May 2022 08:01:39 PM CDT\n\" :source this file in vim to restore the snapshot\n\" or execute: vim -S snapshot.vim\n\nsilent! let g:plugs['Telegraph.nvim'].commit = '92e472f4e83acd60eb3766168e66d02718bfefe0'\nsilent! let g:plugs['black'].commit = '8ed3e3d07ea3e6d62e3e533e69f96a0ff148cd5d'\nsilent! let g:plugs['bufutils.vim'].commit = '4634feb1312fd73fab66cfaa860e7af3abde935b'\nsilent! let g:plugs['cmp-buffer'].commit = 'd66c4c2d376e5be99db68d2362cd94d250987525'\nsilent! let g:plugs['cmp-calc'].commit = '970fd5f97b4bd363260365b217f694dd6a1182cb'\nsilent! let g:plugs['cmp-nvim-lsp'].commit = 'ebdfc204afb87f15ce3d3d3f5df0b8181443b5ba'\nsilent! let g:plugs['cmp-path'].commit = '466b6b8270f7ba89abd59f402c73f63c7331ff6e'\nsilent! let g:plugs['cmp-rg'].commit = 'fd92d70ff36b30924401b0cf7d4ce7344c8235f7'\nsilent! let g:plugs['cmp-vsnip'].commit = '0abfa1860f5e095a07c477da940cfcb0d273b700'\nsilent! let g:plugs['colorbuddy.nvim'].commit = 'cdb5b0654d3cafe61d2a845e15b2b4b0e78e752a'\nsilent! let g:plugs['compe-tmux'].commit = '3c16f7e73abee43b3ea3e919e8b34c24427d9530'\nsilent! let g:plugs['coverage-highlight.vim'].commit = '864e03679ea4168661501246147893cc82020917'\nsilent! let g:plugs['diffurcate.vim'].commit = 'b804675072220ff7c7ebcd24a028aa4aa35f09cc'\nsilent! let g:plugs['friendly-snippets'].commit = '5fd8b920a3497dec9a3ef939595186b362d041b4'\nsilent! let g:plugs['fzf'].commit = 'a91a67668e0830a8cf9a792c4949e03b4189f097'\nsilent! let g:plugs['fzf.vim'].commit = 'd5f1f8641b24c0fd5b10a299824362a2a1b20ae0'\nsilent! let g:plugs['gitsigns.nvim'].commit = 'ead0d48df801431b990d6b91fa210f7efa30ac38'\nsilent! let g:plugs['gruvbox-flat.nvim'].commit = '756dbdd3dfd3ed84acb2f9649724df19ae41f904'\nsilent! let g:plugs['harpoon'].commit = '28762aa04d6395538e26e1efff5213b26720e68f'\nsilent! let g:plugs['impatient.nvim'].commit = '2337df7d778e17a58d8709f651653b9039946d8d'\nsilent! let g:plugs['instant.nvim'].commit = 'c02d72267b12130609b7ad39b76cf7f4a3bc9554'\nsilent! let g:plugs['lsp_extensions.nvim'].commit = '4011f4aec61ba59c734f5dbf52e91f258b99d985'\nsilent! let g:plugs['lsp_signature.nvim'].commit = 'a351509512687293fd659ba4ee7e34412c3a8f70'\nsilent! let g:plugs['lspsaga.nvim'].commit = 'cb0e35d2e594ff7a9c408d2e382945d56336c040'\nsilent! let g:plugs['lualine.nvim'].commit = '18a07f790ed7ed1f11d1b130c02782e9dfd8dd7d'\nsilent! let g:plugs['nvim-cmp'].commit = '433af3dffce64cbd3f99bdac9734768a6cc41951'\nsilent! let g:plugs['nvim-compe'].commit = 'd186d739c54823e0b010feb205c6f97792322c08'\nsilent! let g:plugs['nvim-dap'].commit = 'd6d8317ce9e096029150bc5844916347a9af6f45'\nsilent! let g:plugs['nvim-dap-python'].commit = '4c7ea25f8ff6de6fa00bf5625d2e76753cced70f'\nsilent! let g:plugs['nvim-lspconfig'].commit = 'ad9903c66bac88f344890acb6532f63f1cd4dac3'\nsilent! let g:plugs['nvim-lspinstall'].commit = '79ec2425d6b39cdcb69d379f3e56847f49be73eb'\nsilent! let g:plugs['nvim-lsputils'].commit = 'ae1a4a62449863ad82c70713d5b6108f3a07917c'\nsilent! let g:plugs['nvim-spectre'].commit = '345e5dd57773e2b4b425a2515c831108b9808a0f'\nsilent! let g:plugs['nvim-tree.lua'].commit = 'ce463a53ae269544697c3dedd3d5beae05937405'\nsilent! let g:plugs['nvim-treesitter'].commit = '3c50297eca950b4b1a7c07b28e586b0576c0a796'\nsilent! let g:plugs['nvim-web-devicons'].commit = '4febe73506268a02ff15a240abcd7bf3eb9234da'\nsilent! let g:plugs['onebuddy'].commit = '7e16006e7dde15e3cb72889f736c49409db6ff42'\nsilent! let g:plugs['onedark.nvim'].commit = 'e520a0c81a5a1997ecffd846ccd9c6e63b7859c6'\nsilent! let g:plugs['playground'].commit = '13e2d2d63ce7bc5d875e8bdf89cb070bc8cc7a00'\nsilent! let g:plugs['plenary.nvim'].commit = '9069d14a120cadb4f6825f76821533f2babcab92'\nsilent! let g:plugs['popfix'].commit = 'ea262861ce3905b90c2c203b74a7be2539f1aba4'\nsilent! let g:plugs['popup.nvim'].commit = 'b7404d35d5d3548a82149238289fa71f7f6de4ac'\nsilent! let g:plugs['refactoring.nvim'].commit = '94eaa199ad892f26d2c8594dbbc5656314cf5bdb'\nsilent! let g:plugs['stylua-nvim'].commit = '8bd7fa127367178dddb9ee06fdce1d7c622d2feb'\nsilent! let g:plugs['targets.vim'].commit = '8d6ff2984cdfaebe5b7a6eee8f226a6dd1226f2d'\nsilent! let g:plugs['telescope-dap.nvim'].commit = 'b4134fff5cbaf3b876e6011212ed60646e56f060'\nsilent! let g:plugs['telescope.nvim'].commit = '8b02088743c07c2f82aec2772fbd2b3774195448'\nsilent! let g:plugs['termopen.vim'].commit = '3194a991a18a9be2fd9fcf8c4c55fe990c04b2bd'\nsilent! let g:plugs['undotree'].commit = '08e259be24d4476c1ee745dc735eefd44f90efdc'\nsilent! let g:plugs['vim-be-good'].commit = 'bc499a06c14c729b22a6cc7e730a9fbc44d4e737'\nsilent! let g:plugs['vim-commentary'].commit = '3654775824337f466109f00eaf6759760f65be34'\nsilent! let g:plugs['vim-dispatch'].commit = '00e77d90452e3c710014b26dc61ea919bc895e92'\nsilent! let g:plugs['vim-doge'].commit = '88d8dfacc3a5f3dfce82ef5221e5e6943e627d85'\nsilent! let g:plugs['vim-floaterm'].commit = '6244d1739aad6682c6c1d5db18c846c342af6e3e'\nsilent! let g:plugs['vim-fugitive'].commit = 'b5bbd0d181ebc3cea5c42bdaed13141850432ba1'\nsilent! let g:plugs['vim-indent-object'].commit = '5c5b24c959478929b54a9e831a8e2e651a465965'\nsilent! let g:plugs['vim-ipython-cell'].commit = 'f0548d9a8d5e31d5c7f73e8729b55e8eb402852f'\nsilent! let g:plugs['vim-log-highlighting'].commit = '1037e26f3120e6a6a2c0c33b14a84336dee2a78f'\nsilent! let g:plugs['vim-quicklink'].commit = '021167741588555501594e1fc31f130b16acefa0'\nsilent! let g:plugs['vim-repeat'].commit = '24afe922e6a05891756ecf331f39a1f6743d3d5a'\nsilent! let g:plugs['vim-signify'].commit = '69498f6d49f3eeac06870012416dd9bf867b84f3'\nsilent! let g:plugs['vim-slime'].commit = '0ea9b35882155996171fd15a5227e673ce2d2c60'\nsilent! let g:plugs['vim-sneak'].commit = '94c2de47ab301d476a2baec9ffda07367046bec9'\nsilent! let g:plugs['vim-surround'].commit = '81fc0ec460dd8b25a76346e09aecdbca2677f1a7'\nsilent! let g:plugs['vim-test'].commit = '2240d7a4b868cb594b7d83544e1b6db4df806e5e'\nsilent! let g:plugs['vim-tmux-runner'].commit = '54767911fd5e6e2d8e493847149e315ac2e6531a'\nsilent! let g:plugs['vim-ultest'].commit = 'a99eb0bdf7d901d538b5dd724e2ab3a958c1799c'\nsilent! let g:plugs['vim-visualstar'].commit = 'a18cd0e7a03311ac709595c1d261ed44b45c9098'\nsilent! let g:plugs['vim-vsnip'].commit = '8f199ef690ed26dcbb8973d9a6760d1332449ac9'\n\nPlugUpdate!\n```\n\n> NOTE! the `PlugUpdate!` at the end.  I did not catch this at first, if you\n> are like me and automatically source `*.vim` files on save, this will\n> immediately run the update when you save it.  If you just took the snapshot\n> though I don't think it will actually do anything.\n\n## Let's Update\n\nNow without the snapshot sourced, I will not have any of my plugins pinned.\nWhen I run `:PlugUpdate` it will update all of my plugins to the latest\nversions.  Then I can `:PlugSnapshot` again, and this will kick out an updated\nlist of sha's.  I will yank this file `yyG` and paste it into my snapshot.vim\nfile `vGp`.\n\n## Look at these updates\n\nWe can see these updates with a little `:G diff %` on the file.\n\n```diff\ndiff --git a/nvim/.config/nvim/snapshot.vim b/nvim/.config/nvim/snapshot.vim\nindex 88db2b0..837c8e4 100644\n--- a/nvim/.config/nvim/snapshot.vim\n+++ b/nvim/.config/nvim/snapshot.vim\n@@ -1,14 +1,14 @@\n \" Generated by vim-plug\n-\" Fri 13 May 2022 08:01:39 PM CDT\n+\" Fri 13 May 2022 08:22:17 PM CDT\n \" :source this file in vim to restore the snapshot\n \" or execute: vim -S snapshot.vim\n\n silent! let g:plugs['Telegraph.nvim'].commit = '92e472f4e83acd60eb3766168e66d02718bfefe0'\n-silent! let g:plugs['black'].commit = '8ed3e3d07ea3e6d62e3e533e69f96a0ff148cd5d'\n+silent! let g:plugs['black'].commit = '7f033136ac5e0e5bf6cf322dd60b4a92050eedc4'\n silent! let g:plugs['bufutils.vim'].commit = '4634feb1312fd73fab66cfaa860e7af3abde935b'\n-silent! let g:plugs['cmp-buffer'].commit = 'd66c4c2d376e5be99db68d2362cd94d250987525'\n-silent! let g:plugs['cmp-calc'].commit = '970fd5f97b4bd363260365b217f694dd6a1182cb'\n-silent! let g:plugs['cmp-nvim-lsp'].commit = 'ebdfc204afb87f15ce3d3d3f5df0b8181443b5ba'\n+silent! let g:plugs['cmp-buffer'].commit = '12463cfcd9b14052f9effccbf1d84caa7a2d57f0'\n+silent! let g:plugs['cmp-calc'].commit = 'f7efc20768603bd9f9ae0ed073b1c129f63eb312'\n+silent! let g:plugs['cmp-nvim-lsp'].commit = 'e6b5feb2e6560b61f31c756fb9231a0d7b10c73d'\n silent! let g:plugs['cmp-path'].commit = '466b6b8270f7ba89abd59f402c73f63c7331ff6e'\n silent! let g:plugs['cmp-rg'].commit = 'fd92d70ff36b30924401b0cf7d4ce7344c8235f7'\n silent! let g:plugs['cmp-vsnip'].commit = '0abfa1860f5e095a07c477da940cfcb0d273b700'\n@@ -16,60 +16,60 @@ silent! let g:plugs['colorbuddy.nvim'].commit = 'cdb5b0654d3cafe61d2a845e15b2b4b\n silent! let g:plugs['compe-tmux'].commit = '3c16f7e73abee43b3ea3e919e8b34c24427d9530'\n silent! let g:plugs['coverage-highlight.vim'].commit = '864e03679ea4168661501246147893cc82020917'\n silent! let g:plugs['diffurcate.vim'].commit = 'b804675072220ff7c7ebcd24a028aa4aa35f09cc'\n-silent! let g:plugs['friendly-snippets'].commit = '5fd8b920a3497dec9a3ef939595186b362d041b4'\n-silent! let g:plugs['fzf'].commit = 'a91a67668e0830a8cf9a792c4949e03b4189f097'\n+silent! let g:plugs['friendly-snippets'].commit = '627dea2ff1ee8d8a7e6ad365acb3e335c8b25574'\n+silent! let g:plugs['fzf'].commit = '6dcf5c3d7d6c321b17e6a5673f1533d6e8350462'\n silent! let g:plugs['fzf.vim'].commit = 'd5f1f8641b24c0fd5b10a299824362a2a1b20ae0'\n-silent! let g:plugs['gitsigns.nvim'].commit = 'ead0d48df801431b990d6b91fa210f7efa30ac38'\n+silent! let g:plugs['gitsigns.nvim'].commit = 'ffd06e36f6067935d8cb9793905dd2e84e291310'\n silent! let g:plugs['gruvbox-flat.nvim'].commit = '756dbdd3dfd3ed84acb2f9649724df19ae41f904'\n-silent! let g:plugs['harpoon'].commit = '28762aa04d6395538e26e1efff5213b26720e68f'\n+silent! let g:plugs['harpoon'].commit = 'd3d3d22b6207f46f8ca64946f4d781e975aec0fc'\n silent! let g:plugs['impatient.nvim'].commit = '2337df7d778e17a58d8709f651653b9039946d8d'\n silent! let g:plugs['instant.nvim'].commit = 'c02d72267b12130609b7ad39b76cf7f4a3bc9554'\n silent! let g:plugs['lsp_extensions.nvim'].commit = '4011f4aec61ba59c734f5dbf52e91f258b99d985'\n-silent! let g:plugs['lsp_signature.nvim'].commit = 'a351509512687293fd659ba4ee7e34412c3a8f70'\n+silent! let g:plugs['lsp_signature.nvim'].commit = 'db324e2ada5bb795d0016ec0ef2b4ae7f11d8904'\n silent! let g:plugs['lspsaga.nvim'].commit = 'cb0e35d2e594ff7a9c408d2e382945d56336c040'\n-silent! let g:plugs['lualine.nvim'].commit = '18a07f790ed7ed1f11d1b130c02782e9dfd8dd7d'\n-silent! let g:plugs['nvim-cmp'].commit = '433af3dffce64cbd3f99bdac9734768a6cc41951'\n+silent! let g:plugs['lualine.nvim'].commit = 'a4e4517ac32441dd92ba869944741f0b5f468531'\n+silent! let g:plugs['nvim-cmp'].commit = '9a0c639ac2324e6e9ecc54dc22b1d32bb6c42ab9'\n silent! let g:plugs['nvim-compe'].commit = 'd186d739c54823e0b010feb205c6f97792322c08'\n-silent! let g:plugs['nvim-dap'].commit = 'd6d8317ce9e096029150bc5844916347a9af6f45'\n-silent! let g:plugs['nvim-dap-python'].commit = '4c7ea25f8ff6de6fa00bf5625d2e76753cced70f'\n-silent! let g:plugs['nvim-lspconfig'].commit = 'ad9903c66bac88f344890acb6532f63f1cd4dac3'\n+silent! let g:plugs['nvim-dap'].commit = '2249fcfd09cdc27c08e9d2f3be5268ba81db3378'\n+silent! let g:plugs['nvim-dap-python'].commit = 'd96bcbf3803283456c900cf25ab0995e8d2f00c0'\n+silent! let g:plugs['nvim-lspconfig'].commit = '9ff2a06cebd4c8c3af5259d713959ab310125bec'\n silent! let g:plugs['nvim-lspinstall'].commit = '79ec2425d6b39cdcb69d379f3e56847f49be73eb'\n silent! let g:plugs['nvim-lsputils'].commit = 'ae1a4a62449863ad82c70713d5b6108f3a07917c'\n silent! let g:plugs['nvim-spectre'].commit = '345e5dd57773e2b4b425a2515c831108b9808a0f'\n-silent! let g:plugs['nvim-tree.lua'].commit = 'ce463a53ae269544697c3dedd3d5beae05937405'\n-silent! let g:plugs['nvim-treesitter'].commit = '3c50297eca950b4b1a7c07b28e586b0576c0a796'\n-silent! let g:plugs['nvim-web-devicons'].commit = '4febe73506268a02ff15a240abcd7bf3eb9234da'\n+silent! let g:plugs['nvim-tree.lua'].commit = '82ec79aac5557c05728d88195fb0d008cacbf565'\n+silent! let g:plugs['nvim-treesitter'].commit = 'f1373051e554cc4642cda719c8023e4e8508eb2d'\n+silent! let g:plugs['nvim-web-devicons'].commit = 'bdd43421437f2ef037e0dafeaaaa62b31d35ef2f'\n silent! let g:plugs['onebuddy'].commit = '7e16006e7dde15e3cb72889f736c49409db6ff42'\n-silent! let g:plugs['onedark.nvim'].commit = 'e520a0c81a5a1997ecffd846ccd9c6e63b7859c6'\n-silent! let g:plugs['playground'].commit = '13e2d2d63ce7bc5d875e8bdf89cb070bc8cc7a00'\n-silent! let g:plugs['plenary.nvim'].commit = '9069d14a120cadb4f6825f76821533f2babcab92'\n+silent! let g:plugs['onedark.nvim'].commit = '08cde8acf181b3278dafb9c8284726104a11cc0f'\n+silent! let g:plugs['playground'].commit = '71b00a3c665298e5155ad64a9020135808d4e3e8'\n+silent! let g:plugs['plenary.nvim'].commit = '0a907364b5cd6e3438e230df7add8b9bb5ef6fd3'\n silent! let g:plugs['popfix'].commit = 'ea262861ce3905b90c2c203b74a7be2539f1aba4'\n silent! let g:plugs['popup.nvim'].commit = 'b7404d35d5d3548a82149238289fa71f7f6de4ac'\n-silent! let g:plugs['refactoring.nvim'].commit = '94eaa199ad892f26d2c8594dbbc5656314cf5bdb'\n-silent! let g:plugs['stylua-nvim'].commit = '8bd7fa127367178dddb9ee06fdce1d7c622d2feb'\n+silent! let g:plugs['refactoring.nvim'].commit = '33ac6f3bcfe97447037ded20291d40de34d8912c'\n+silent! let g:plugs['stylua-nvim'].commit = 'ce59a353f02938cba3e0285e662fcd3901cd270f'\n silent! let g:plugs['targets.vim'].commit = '8d6ff2984cdfaebe5b7a6eee8f226a6dd1226f2d'\n silent! let g:plugs['telescope-dap.nvim'].commit = 'b4134fff5cbaf3b876e6011212ed60646e56f060'\n-silent! let g:plugs['telescope.nvim'].commit = '8b02088743c07c2f82aec2772fbd2b3774195448'\n+silent! let g:plugs['telescope.nvim'].commit = '39b12d84e86f5054e2ed98829b367598ae53ab41'\n silent! let g:plugs['termopen.vim'].commit = '3194a991a18a9be2fd9fcf8c4c55fe990c04b2bd'\n silent! let g:plugs['undotree'].commit = '08e259be24d4476c1ee745dc735eefd44f90efdc'\n silent! let g:plugs['vim-be-good'].commit = 'bc499a06c14c729b22a6cc7e730a9fbc44d4e737'\n silent! let g:plugs['vim-commentary'].commit = '3654775824337f466109f00eaf6759760f65be34'\n silent! let g:plugs['vim-dispatch'].commit = '00e77d90452e3c710014b26dc61ea919bc895e92'\n-silent! let g:plugs['vim-doge'].commit = '88d8dfacc3a5f3dfce82ef5221e5e6943e627d85'\n-silent! let g:plugs['vim-floaterm'].commit = '6244d1739aad6682c6c1d5db18c846c342af6e3e'\n-silent! let g:plugs['vim-fugitive'].commit = 'b5bbd0d181ebc3cea5c42bdaed13141850432ba1'\n+silent! let g:plugs['vim-doge'].commit = 'd5b08d01f64396557d9912b3830717d45671764b'\n+silent! let g:plugs['vim-floaterm'].commit = 'ab7876f86c05c1935eb23a193f4f276132902ac1'\n+silent! let g:plugs['vim-fugitive'].commit = 'a8139d37b242c5bc5ceeddc4fcd7dddf2b2c2650'\n silent! let g:plugs['vim-indent-object'].commit = '5c5b24c959478929b54a9e831a8e2e651a465965'\n silent! let g:plugs['vim-ipython-cell'].commit = 'f0548d9a8d5e31d5c7f73e8729b55e8eb402852f'\n silent! let g:plugs['vim-log-highlighting'].commit = '1037e26f3120e6a6a2c0c33b14a84336dee2a78f'\n silent! let g:plugs['vim-quicklink'].commit = '021167741588555501594e1fc31f130b16acefa0'\n silent! let g:plugs['vim-repeat'].commit = '24afe922e6a05891756ecf331f39a1f6743d3d5a'\n silent! let g:plugs['vim-signify'].commit = '69498f6d49f3eeac06870012416dd9bf867b84f3'\n-silent! let g:plugs['vim-slime'].commit = '0ea9b35882155996171fd15a5227e673ce2d2c60'\n+silent! let g:plugs['vim-slime'].commit = '6e4b81303968f37346925d6907b96ef07788cc82'\n silent! let g:plugs['vim-sneak'].commit = '94c2de47ab301d476a2baec9ffda07367046bec9'\n-silent! let g:plugs['vim-surround'].commit = '81fc0ec460dd8b25a76346e09aecdbca2677f1a7'\n+silent! let g:plugs['vim-surround'].commit = 'bf3480dc9ae7bea34c78fbba4c65b4548b5b1fea'\n silent! let g:plugs['vim-test'].commit = '2240d7a4b868cb594b7d83544e1b6db4df806e5e'\n silent! let g:plugs['vim-tmux-runner'].commit = '54767911fd5e6e2d8e493847149e315ac2e6531a'\n-silent! let g:plugs['vim-ultest'].commit = 'a99eb0bdf7d901d538b5dd724e2ab3a958c1799c'\n+silent! let g:plugs['vim-ultest'].commit = '6978fd32e3ca2c1c5591884eea0d57a7ee43d212'\n silent! let g:plugs['vim-visualstar'].commit = 'a18cd0e7a03311ac709595c1d261ed44b45c9098'\n silent! let g:plugs['vim-vsnip'].commit = '8f199ef690ed26dcbb8973d9a6760d1332449ac9'\n```\n\n## Commits\n\nNow I can look through all the versions of my `snapshot.vim` by opening it,\nrunning `:0Gclog` and navigating the quickfix list with `:cnext` and `:cprev`.\nIf I want to install one of the old versions while its open in a buffer, all I\nneed to do is run `:source %`.\n\n## Log\n\nNow the log of my `snapshots.vim` looks like this.  I saved the working\nversion, and successfully updated to the latest versions of all plugins, with a\nsave point I can revert back to.\n\n``` log\ncommit 20e901196b0d9633a42176f1fe1757e45f709fd3\nAuthor: Waylon S. Walker <waylon@waylonwalker.com>\nDate:   Fri May 13 20:37:03 2022 -0500\n\n    plugupdate\n\ncommit f9d76368697b4c4427c0fa8ccd5e2449b6e5a9ff\nAuthor: Waylon S. Walker <waylon@waylonwalker.com>\nDate:   Fri May 13 20:16:11 2022 -0500\n\n    commit my plugin snapshot\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/walrus-comprehension'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python Walrus Inside List Comprehension</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/vim-markdown-links'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Automatically Generate a list of Markown Links in Vim</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-13", "edit_link": "https://github.com/edit/main/pages/til/vim-plugged-snapshot.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575017", "datetime": "2022-05-13 00:00:00+00:00", "slug": "til/vim-plugged-snapshot", "jinja": false, "output_html": "markout/til/vim-plugged-snapshot/index.html", "long_description": "A few of my friends and I all just borked our neovim configs during a plug https://twitter.com/pypeaday/status/1524882893914398732 Lucky for me I did it on a home machine that I only occasionally edit from, Snapshotting ensures that you install the s", "super_description": "A few of my friends and I all just borked our neovim configs during a plug https://twitter.com/pypeaday/status/1524882893914398732 Lucky for me I did it on a home machine that I only occasionally edit from, Snapshotting ensures that you install the same git sha on every single plugin. same config everywhere you control the update in case of a borked update you have a good working place to rever to Running  NOTE Now without the snapshot sourced, I will not have any of my plugins pinned. We can se", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd280>, next=<frontmatter.Post object at 0x7f34505f8dc0>)"}, {"cover": "", "title": "Set Your Git Pager Config", "tags": ["git", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/git-pager.md", "description": "Setting up your git pager to your liking can help you navigate diffs and logs You can set the pager right from your command line with the following command. You", "content": "Setting up your git pager to your liking can help you navigate diffs and logs\nmuch more efficiently.  You can set it to whatever pager you like so that your\nkeys feel nice and smooth and your fingers know exactly what to do.  You might\neven gain a few extra features.\n\n## Setting the pager\n\nYou can set the pager right from your command line with the following command.\n\n``` bash\ngit config --global core.pager 'more'\n```\n\nYou can also set your pager by editing your global `.gitconfig` file which by\ndefault is set to `~/.gitconfig`.\n\n``` bash\n[core]\n    pager = more\n```\n\n## Color\n\nIn my experience you need to turn colors off with nvim.  bat handles them and\nlooks good either way, but nvim will be plain white and display the color\ncodes as plain text if color is on.\n\n``` bash\ngit config --global color.pager no\n```\n\n## Pagers I have tried\n\nHere are some various configs that I tried.  For some reason line numbers in\nbat really bothered me, but when in nvim they felt ok.  I am going to try\nrunning both of them for a few days and see which I like better.  I think\nhaving some of my nvim config could be really handy for things like yanking a\ncommit hash to the system clipboard without touching the mouse.\n\n``` bash\n# bat\ngit config --global core.pager 'bat'\n\n# nvim in read only mode\ngit config --global core.pager 'nvim -R'\n\n# turn colors off\ngit config --global color.pager no\n\n# bat with no line numbers\ngit config --global core.pager 'bat --style=plain'\n\n# nvim with no line numbers and a specific rc file\ngit config --global core.pager \"nvim -R +'set nonumber norelativenumber' -u ~/.config/nvim/init-git.vim\"\n```\n\n## reset back to the default\n\nIf you are afraid to try one of these settings, don't be you can always change\nit back.  If you tried one and dont like it just `--unset` the config that you\njust tried.\n\n``` bash\ngit config --global --unset core.pager\ngit config --global --unset color.pager\n```\n\nThe other option you have is to open your `.gitconfig` file and delete the\nlines of config that set your pager.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-push-default-current'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Configure Git to Always Push to the Current Branch</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-merge-ours'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>git merge ours</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-16", "edit_link": "https://github.com/edit/main/pages/til/git-pager.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575026", "datetime": "2022-03-16 00:00:00+00:00", "slug": "til/git-pager", "jinja": false, "output_html": "markout/til/git-pager/index.html", "long_description": "Setting up your git pager to your liking can help you navigate diffs and logs You can set the pager right from your command line with the following command. You can also set your pager by editing your global  In my experience you need to turn colors ", "super_description": "Setting up your git pager to your liking can help you navigate diffs and logs You can set the pager right from your command line with the following command. You can also set your pager by editing your global  In my experience you need to turn colors off with nvim.  bat handles them and Here are some various configs that I tried.  For some reason line numbers in If you are afraid to try one of these settings, don The other option you have is to open your ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672a90>, next=<frontmatter.Post object at 0x7f3450604700>)"}, {"cover": "", "title": "Lambda Function as a Kedro Node", "tags": ["python", "kedro"], "status": "published", "templateKey": "til", "path": "pages/til/kedro-lambda-node.md", "description": "I keep my nodes short and sweet.  They do one thing and do it well. I Here are two examples, the first one  Many times I just want to get the data in as fast as", "content": "I keep my nodes short and sweet.  They do one thing and do it well. I\nturn almost every DataFrame transformation into its own node.  It makes\nit must easier to pull catalog entries, than firing up the pipeline,\nrunning it, and starting a debugger.  For this reason many of my nodes\ncan be built from inline lambdas.\n\n## Examples\n\nHere are two examples, the first one `lambda x: x` is sometimes referred\nto as an identity function.  This is super common to use in the early\nphases of a project.  It lets you follow standard layering conventions,\nwithout skipping a layer, overthinking if you should have the layer or\nnot, and leaves a good placholder to fill in later when you need it.\n\n> Many times I just want to get the data in as fast as possible, learn\n> about it, then go back and tidy it up.\n\n``` python\nfrom kedro.pipeline import node\n\nmy_first_node = node(\n   func=lambda x: x,\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['int',]\n   )\n\nmy_first_node = node(\n   func=lambda cars: cars[['mpg', 'cyl', 'disp',]].query('disp>200'),\n   inputs='raw_cars',\n   output='int_cars',\n   tags=['pri',]\n   )\n```\n\n> Note: try not to take the idea of a one liner too far.  If your\n> one line function wraps several lines down it probably deserves to be\n> a real function for readability and a good docstring.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/kedro-new-dependencies'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Add New Dependencies to Your Kedro Project</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/installing-pipx-on-ubuntu'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Installing Pipx on Ubuntu</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-31", "edit_link": "https://github.com/edit/main/pages/til/kedro-lambda-node.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575032", "datetime": "2022-01-31 00:00:00+00:00", "slug": "til/kedro-lambda-node", "jinja": false, "output_html": "markout/til/kedro-lambda-node/index.html", "long_description": "I keep my nodes short and sweet.  They do one thing and do it well. I Here are two examples, the first one  Many times I just want to get the data in as fast as possible, learn Note: try not to take the idea of a one liner too far.  If your", "super_description": "I keep my nodes short and sweet.  They do one thing and do it well. I Here are two examples, the first one  Many times I just want to get the data in as fast as possible, learn Note: try not to take the idea of a one liner too far.  If your", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061bca0>, next=<frontmatter.Post object at 0x7f34505f8700>)"}, {"cover": "", "title": "python dict get", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-dict-get.md", "description": "For an embarassingly long time, til today, I have been wrapping my dict Lets consider this example for prices of supplies.  Here we set a variable of What I wou", "content": "For an embarassingly long time, til today, I have been wrapping my dict\ngets with key errors in python.  I'm sure I've read it in code a bunch\nof times, but just brushed over why you would use get.  That is until I\nread a bunch of PR's from my buddy Nic and notice that he never gets\nthings with brackets and always with `.get`.  This turns out so much\ncleaner to create a default case than try except.\n\n\n## Example\n\nLets consider this example for prices of supplies.  Here we set a variable of\nprices as a dictionary of items and thier price.\n\n```python\nprices = {'pen': 1.2, 'pencil', 0.3, 'eraser', 2.3}\n```\n\n## Except KeyError\n\nWhat I would always do is try to get the key, and if it failed on KeyError, I\nwould set the value (`paper_price` in this case) to a default value.\n\n```python\ntry:\n    paper_price = prices['paper']\nexcept KeyError:\n    paper_price = None\n```\n\n## .get\n\nWhat I noticed Nic does is to use get.  This feels just so much cleaner that\nit's a one liner and feels much easier to read and understand that if there is\nno price for paper we set it to `None`.\n\n```python\npaper_price = prices.get('paper', None)\n```\n\nWe can just as easily set the default to other values.  Let's consider sales\nfor instance.  If there is not a record for the sale of paper, it might be that\nwe sold 0 paper in the given dataset.\n\n```python\npaper_sales = sales.get('paper', 0)\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-diskcache'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I setup a sqlite cache in python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-cache-key'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I make cache-keys from python objects</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-03", "edit_link": "https://github.com/edit/main/pages/til/python-dict-get.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575038", "datetime": "2022-02-03 00:00:00+00:00", "slug": "til/python-dict-get", "jinja": false, "output_html": "markout/til/python-dict-get/index.html", "long_description": "For an embarassingly long time, til today, I have been wrapping my dict Lets consider this example for prices of supplies.  Here we set a variable of What I would always do is try to get the key, and if it failed on KeyError, I What I noticed Nic doe", "super_description": "For an embarassingly long time, til today, I have been wrapping my dict Lets consider this example for prices of supplies.  Here we set a variable of What I would always do is try to get the key, and if it failed on KeyError, I What I noticed Nic does is to use get.  This feels just so much cleaner that We can just as easily set the default to other values.  Let", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672ca0>, next=<frontmatter.Post object at 0x7f345060eb80>)"}, {"cover": "", "title": "nix rescues modded minecraft night", "tags": ["cli", "cli", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/nix-install-java8.md", "description": "With the latest version of minecraft it requires a very new, possibly I was getting this error trying to get a 1.12.2 forge server running. Caused by: java.lang", "content": "With the latest version of minecraft it requires a very new, possibly\nthe latest, version of java.  Lately we have been getting into modded\nminecraft and I maintain the server for us.  It's been tricky to say the\nleast.  One hurdle I recently hit involves having the wrong version of\njava.\n\nI was getting this error trying to get a 1.12.2 forge server running.\n\n> Caused by: java.lang.ClassCastException: class jdk.internal.loader.ClassLoaders$AppClassLoader cannot be cast to class java.net.URLClassLoader (jdk.internal.loader.ClassLoaders$AppClassLoader and java.net.URLClassLoader are in module java.base of loader 'bootstrap')\n\nIn researching our errors, I found this on a forum.\n\n> Pre-1.13 Forge only works with Java 8.\n\nI don't write java, or really know how to manage different versions of\njava, but I have nixpkgs installed and it has a ton of odd stuff like\nthis readily available, so\n[searching nixpkgs](https://search.nixos.org/packages?channel=21.05&show=jdk8&from=0&size=50&sort=relevance&type=packages&query=java+8)\nlanded me with this.\n\n``` bash\nnix-env -iA nixpkgs.jdk8\n```\n\nonce I had this installed I then just changed out java for the full path\nto my new nixpkgs.jdk8 java and it worked.\n\n``` bash\n/home/walkers/.nix-profile/bin/java -server -Xms${MIN_RAM} -Xmx${MAX_RAM} ${JAVA_PARAMETERS} -jar ${SERVER_JAR} nogui\n```\n\nI don't write java or do anything other than host minecraft servers wtih\nit.  There is probably a better way of maintaining java versions than\nthis, but this worked for me.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/nixery-versions-by-commit-count'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Nix Versions By Commit Count</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/neovim-config-for-git'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Neovim Config for Git</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-25", "edit_link": "https://github.com/edit/main/pages/til/nix-install-java8.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575043", "datetime": "2022-01-25 00:00:00+00:00", "slug": "til/nix-install-java8", "jinja": false, "output_html": "markout/til/nix-install-java8/index.html", "long_description": "With the latest version of minecraft it requires a very new, possibly I was getting this error trying to get a 1.12.2 forge server running. Caused by: java.lang.ClassCastException: class jdk.internal.loader.ClassLoaders$AppClassLoader cannot be cast ", "super_description": "With the latest version of minecraft it requires a very new, possibly I was getting this error trying to get a 1.12.2 forge server running. Caused by: java.lang.ClassCastException: class jdk.internal.loader.ClassLoaders$AppClassLoader cannot be cast to class java.net.URLClassLoader (jdk.internal.loader.ClassLoaders$AppClassLoader and java.net.URLClassLoader are in module java.base of loader  In researching our errors, I found this on a forum. Pre-1.13 Forge only works with Java 8. I don once I h", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8160>, next=<frontmatter.Post object at 0x7f3450621b80>)"}, {"cover": "", "title": "Markata Filters as Telescope Pickers in Neovim", "tags": ["python", "cli", "vim"], "status": "published", "templateKey": "til", "path": "pages/til/markata-telescope-picker.md", "description": "I often pop into my blog from neovim with the intent to look at just a To tie these into a Telescope picker you add the command as the NOTE telescope treates ea", "content": "I often pop into my blog from neovim with the intent to look at just a\nsingle series of posts, `til`, `gratitude`, or just see todays posts.\n[Markata](https://markata.dev/) has a great way of mapping over posts\nand returning their path that is designe exactly for this use case.\n\n[Markata listing out posts from the command line](https://images.waylonwalker.com/markta-list-todays-posts.png)\n\nTo tie these into a Telescope picker you add the command as the\nfind_command, and comma separate the words of the command, with no\nspaces.  I did also `--sort,date,--reverse` in there so that the newest\nposts are closest to the cursor.\n\n``` python\nnnoremap geit <cmd>Telescope find_files find_command=markata,list,--map,path,--filter,date==today<cr>\nnnoremap geil <cmd>Telescope find_files find_command=markata,list,--map,path,--filter,templateKey=='til',--sort,date,--reverse<cr>\nnnoremap geig <cmd>Telescope find_files find_command=markata,list,--map,path,--filter,templateKey=='gratitude',--sort,date,--reverse<cr>\n```\n\n> NOTE telescope treates each word as a string, do not wrap an extra\n> layer of quotes around your words, it gets messy.\n\n![using this picker in neovim](https://images.waylonwalker.com/markata-list-telescope-picker.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/mermaid-highlight'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Mermaid Highlight</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/lookatme-styles'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Style Lookatme Slides a bit more Personal</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-23", "edit_link": "https://github.com/edit/main/pages/til/markata-telescope-picker.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575049", "datetime": "2022-01-23 00:00:00+00:00", "slug": "til/markata-telescope-picker", "jinja": false, "output_html": "markout/til/markata-telescope-picker/index.html", "long_description": "I often pop into my blog from neovim with the intent to look at just a To tie these into a Telescope picker you add the command as the NOTE telescope treates each word as a string, do not wrap an extra", "super_description": "I often pop into my blog from neovim with the intent to look at just a To tie these into a Telescope picker you add the command as the NOTE telescope treates each word as a string, do not wrap an extra", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd790>, next=<frontmatter.Post object at 0x7f345061b5e0>)"}, {"cover": "", "title": "Python Respect the .gitignore", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/gitignore-python.md", "description": "Many tools such as ripgrep respect the  Editors like vscode often do not include files that are .gitignored in pathspec pathspec", "content": "Many tools such as ripgrep respect the `.gitignore` file in the directory\nit's searching in.  This helps make it incredibly faster and generally\nmore intuitive for the user as it just searches files that are part of\nthier project and not things like their virtual environments, node\nmodules, or compiled builds.\n\n> Editors like vscode often do not include files that are .gitignored in\n> their search either.\n\n`pathspec` is a pattern matching library that implements git's wildmatch\npattern so that you can ignore files included in your `.gitignore`\npatterns.  You might want this to help make your libraries more\nperformant, or more intuitive for you users.\n\n```python\nimport pathspec\nfrom pathlib import Path\n\nmarkdown_files = Path().glob('**/*.md')\nif (Path(\".gitignore\").exists():\n    lines = Path(\".gitignore\").read_text().splitlines()\n\n    spec = pathspec.PathSpec.from_lines(\"gitwildmatch\", lines)\n\n    markdown_files = [\n        file for file in markdown_files if not spec.match_file(str(file))\n    ]\n```\n\n`pathspec` [home page](https://github.com/cpburnz/python-path-specification)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/glances-docker'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Glances can watch docker processes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/github-supports-mermaid'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>GitHub Markdown now Supports Mermaid Diagrams</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-17", "edit_link": "https://github.com/edit/main/pages/til/gitignore-python.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575055", "datetime": "2022-01-17 00:00:00+00:00", "slug": "til/gitignore-python", "jinja": false, "output_html": "markout/til/gitignore-python/index.html", "long_description": "Many tools such as ripgrep respect the  Editors like vscode often do not include files that are .gitignored in pathspec pathspec", "super_description": "Many tools such as ripgrep respect the  Editors like vscode often do not include files that are .gitignored in pathspec pathspec", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061ba90>, next=<frontmatter.Post object at 0x7f3450609940>)"}, {"cover": "", "title": "Running a Minecraft Server in Docker", "tags": ["docker", "homelab"], "status": "published", "templateKey": "til", "path": "pages/til/docker-minecraft-server.md", "description": "I In all these years, I My buddy Nic has been sharing me some of his homelab setup, and it I ended up running the first thing in the Readme that included a volu", "content": "I've ran a Minecraft server at home since December 2017 for me and my\nson to play on.  We start a brand new one somewhere between every day\nand every week.  The older he gets the longer the server lasts.\n\nIn all these years, I've been popping open the command line and running\nthe server manually, and even inside of Digital Ocean occasionally to\nplay a more public server with a friend.\n\nMy buddy Nic has been sharing me some of his homelab setup, and it's\nreally got me to thinking about what I can run at home, and Dockerizing\nall the things.  Today I found a really sweet github repo that had a\nminecraft server running in docker with a pretty incredible setup.\n\nI ended up running the first thing in the Readme that included a volume\nmount.  If you are going to run this container, I HIGHLY reccomend that\nyou make sure that you have your world volume mounted, otherwise it will\ndie with your docker container.\n\n\n## Docker Compose\n\nWith the following stored as my `docker-compose.yml` in a brand new and\notherwise empty directory I was ready to start the server for the night.\n\n``` yaml\nversion: \"3\"\n\nservices:\n  mc:\n    container_name: walkercraft\n    image: itzg/minecraft-server\n    ports:\n      - 25565:25565\n    environment:\n      EULA: \"TRUE\"\n    tty: true\n    stdin_open: true\n    restart: unless-stopped\n    volumes:\n      # attach a directory relative to the directory containing this compose file\n      - ./minecraft-data:/data\n```\n\nTo start the server we open up the terminal in this directory and run\nthe follwing command.\n\n``` bash\ndocker compose up -d\n```\n\nOnce its up and running we can run commands on the server simply by\nattaching to it.\n\n``` bash\ndocker attach walkercraft\n```\n\n## A few common commands we run in the server\n\nWe play very casually most of the time so we will set keepInventory to\ntrue so that we do not loose our inventory when we die.  Sometimes we\nalso op ourselve so that we can toggle gamemode into creative.\n\n```bash\n# set the game to keep your inventory when you die.\n/gamrule keepInventory true\n\n# give everyone operater priveledges to they can run commands\n/op @a\n\n# give playername op\n/op playername\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/dunder_rich'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Adding __rich__ methods to python classes</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/dedupe-your-shell-paths'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Dedupe your shell paths</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-07", "edit_link": "https://github.com/edit/main/pages/til/docker-minecraft-server.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575060", "datetime": "2022-02-07 00:00:00+00:00", "slug": "til/docker-minecraft-server", "jinja": false, "output_html": "markout/til/docker-minecraft-server/index.html", "long_description": "I In all these years, I My buddy Nic has been sharing me some of his homelab setup, and it I ended up running the first thing in the Readme that included a volume With the following stored as my  To start the server we open up the terminal in this di", "super_description": "I In all these years, I My buddy Nic has been sharing me some of his homelab setup, and it I ended up running the first thing in the Readme that included a volume With the following stored as my  To start the server we open up the terminal in this directory and run Once its up and running we can run commands on the server simply by We play very casually most of the time so we will set keepInventory to", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609df0>, next=<frontmatter.Post object at 0x7f34505fd700>)"}, {"cover": "", "title": "Simple Samba Share Setup", "tags": ["linux", "linux", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/simple-samba.md", "description": "Samba is an implementation of the smb protocol that allows me to setup network I think the homelab is starting to intrigue me enought to dive into the path of T", "content": "Samba is an implementation of the smb protocol that allows me to setup network\nshares on my linux machine that I can open on a variety of devices.\n\nI think the homelab is starting to intrigue me enought to dive into the path of\nexperimenting with different things that I might want setup in my own home.\nOne key piece of this is network storage.  As I looked into nas, I realized\nthat it takes a dedicated machine, or one virtualized at a lower level than I\nhave capability for right now.\n\n\n## Humble Beginnings\n\nTo get goind I am going to make a directory `/srv/samba/public` open to anyone\non my network.  I am not going to worry too much about it, I just want\nsomething up and running so that I can learn.\n\nInstall samba, open the firewall, and edit the `smb.conf`\n```\nsudo apt install samba samba-common-bin\nsudo ufw allow samba\nsudo nvim /etc/samba/smb.conf\n```\n\nI added this to the end of my `smb.conf`\n\n```\n[public]\n\ncomment = public share, no need to enter username and password\npath = /srv/samba/public/\nbrowseable = yes\nwritable = yes\nguest ok = yes\n```\n\nThen I made the `/srv/samba/public` directory and made it writable by anyone.\n\n```\nsudo mkdir -p /srv/samba/public\nsudo setfacl -R -m \"u:nobody:rwx\" /srv/samba/public/\n```\n\n## Windows, yes windows\n\nI have a windows desktop in my office, primarily for my wife to run premiere\npro, and my son to play Minecraft.  I walked over to it, opened the file\nexplorer, and ernt to `\\\\<my-local-ip>`.  It asked for the username and\npassword, I typed in the username and password of the linux device I have the\nshare running on, and I was in.  Right there I could see the Public folder.  I\nopened it and made a files successfully.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/simple-textual-widget'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Making a Textual Widget from a Rich Renderable</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/serve-html-command-line'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Serve html from your command line</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-09", "edit_link": "https://github.com/edit/main/pages/til/simple-samba.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575068", "datetime": "2022-02-09 00:00:00+00:00", "slug": "til/simple-samba", "jinja": false, "output_html": "markout/til/simple-samba/index.html", "long_description": "Samba is an implementation of the smb protocol that allows me to setup network I think the homelab is starting to intrigue me enought to dive into the path of To get goind I am going to make a directory  Install samba, open the firewall, and edit the", "super_description": "Samba is an implementation of the smb protocol that allows me to setup network I think the homelab is starting to intrigue me enought to dive into the path of To get goind I am going to make a directory  Install samba, open the firewall, and edit the  I added this to the end of my  Then I made the  I have a windows desktop in my office, primarily for my wife to run premiere", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604a60>, next=<frontmatter.Post object at 0x7f3450621ee0>)"}, {"cover": "", "title": "git merge ours", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/git-merge-ours.md", "description": "Sometimes you have a pretty old branch you are trying to merge into and you are The first step is to make sure your local copy of the branch you are moving It M", "content": "Sometimes you have a pretty old branch you are trying to merge into and you are\nabsolutely sure what you have is what you want, and therefore you don't want to\ndeal with any sort of merge conflicts, you would rather just tell git to use my\nversion and move on.\n\n## update main\n\nThe first step is to make sure your local copy of the branch you are moving\ninto is up to date.\n\n``` bash\ngit checkout main\ngit pull\n```\n\n## update your feature branch\n\nIt's also worth updating your feature branch before doing the merge. Maybe you\nhave teammates that have updated the repo, or you popped in a quick change from\nthe web ui. It's simple and worth checking.\n\n``` bash\ngit checkout my-feature\ngit pull\n```\n\n## start the merge\n\nMerge the changes from main into `my-feature` branch.\n\n```\ngit merge main\n```\n\nNow is where the merge conflict may have started. If you are completely sure\nthat your copy is correct you can `--ours`, if you are completely sure that\n`main` is correct, you can `--theirs`.\n\n```\ngit checkout --ours .\ngit merge --continue\n```\n\nThis will pop open your configured `git.core.editor` or `$EDTIOR`. If you have\nnot configured your editor, it will default to vim.  Close vim with `<escape>:x`, accepting the\nmerge message.\n\nNow push your changes that do not clash with main and finish your pr.\n\n```\ngit push\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-pager'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Set Your Git Pager Config</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-find-deleted-files'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>git find deleted files</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-24", "edit_link": "https://github.com/edit/main/pages/til/git-merge-ours.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575074", "datetime": "2022-05-24 00:00:00+00:00", "slug": "til/git-merge-ours", "jinja": false, "output_html": "markout/til/git-merge-ours/index.html", "long_description": "Sometimes you have a pretty old branch you are trying to merge into and you are The first step is to make sure your local copy of the branch you are moving It Merge the changes from main into  Now is where the merge conflict may have started. If you ", "super_description": "Sometimes you have a pretty old branch you are trying to merge into and you are The first step is to make sure your local copy of the branch you are moving It Merge the changes from main into  Now is where the merge conflict may have started. If you are completely sure This will pop open your configured  Now push your changes that do not clash with main and finish your pr.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604040>, next=<frontmatter.Post object at 0x7f3450616280>)"}, {"cover": "", "title": "Making a Textual Widget from a Rich Renderable", "tags": ["python", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/simple-textual-widget.md", "description": "Once you have made your sick looking cli apps with rich, eventually you are Install them from the command line. Import make a .py file and import them in it. If", "content": "Once you have made your sick looking cli apps with rich, eventually you are\ngoing to want to add some keybindings to them.  Currently Textual, also written\nby [@willmcgugan](https://twitter.com/willmcgugan), does this extremely well.\nFair Warning it is in super beta mode and expected to change a bunch.  So take\nit easy with hopping on the train so fast.\n\n## Get the things\n\n\nInstall them from the command line.\n\n``` bash\npip install textual\npip install rich\n```\n\nImport make a .py file and import them in it.\n\n``` python\nfrom textual.app import App\nfrom textual.widget import Widget\nfrom rich.panel import Panel\n```\n\n## Make what you have a widget\n\nIf you return your rich renderable out of class that inherits from\n`textual.widget.Widget`, you can then dock this inside of an app class\ninheriting from `textual.app.App`.\n\n``` python\nclass MyWidget(Widget):\n    def render(self):\n        my_renderable = Panel(\"press q to quit\")\n        return my_renderable\n\nclass MyApp(App):\n    async def on_mount(self) -> None:\n        await self.view.dock(MyWidget(), edge=\"top\")\n        await self.bind(\"q\", \"quit\")\n```\n\n## run it\n\nYou've made a TUI (text user interface).  Run the classmethod `run` to display\nthe it in its full screen glory.\n\n``` python\nMyApp.run(log=\"textual.log\")\n```\n\n## Final result\n\nAt this point It probably does not look much different, but it can be\ninteractive by binding keys to any method on your app that starts with the word\n`action_`, this includes the built-in actions such as `action_quit`.\n\n``` python\nfrom textual.app import App\nfrom textual.widget import Widget\nfrom rich.panel import Panel\n\n\nclass MyWidget(Widget):\n    def render(self):\n        my_renderable = Panel(\"press q to quit\")\n        return my_renderable\n\n\nclass MyApp(App):\n    async def on_mount(self) -> None:\n        await self.view.dock(MyWidget(), edge=\"top\")\n        await self.bind(\"q\", \"quit\")\n\n\nif __name__ == \"__main__\":\n    MyApp.run(log=\"textual.log\")\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/site-down'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Did my site build just go down?</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/simple-samba'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Simple Samba Share Setup</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-07", "edit_link": "https://github.com/edit/main/pages/til/simple-textual-widget.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575080", "datetime": "2022-01-07 00:00:00+00:00", "slug": "til/simple-textual-widget", "jinja": false, "output_html": "markout/til/simple-textual-widget/index.html", "long_description": "Once you have made your sick looking cli apps with rich, eventually you are Install them from the command line. Import make a .py file and import them in it. If you return your rich renderable out of class that inherits from You At this point It prob", "super_description": "Once you have made your sick looking cli apps with rich, eventually you are Install them from the command line. Import make a .py file and import them in it. If you return your rich renderable out of class that inherits from You At this point It probably does not look much different, but it can be", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621700>, next=<frontmatter.Post object at 0x7f3450604820>)"}, {"cover": "", "title": "Bash function to edit scripts faster", "tags": ["bash"], "status": "published", "templateKey": "til", "path": "pages/til/ewhich.md", "description": "I am often editing my own scripts as I develop them. I want to make a better Currently I am combining  for now lets use my todo command as an example On first p", "content": "I am often editing my own scripts as I develop them. I want to make a better\nworkflow for working with scripts like this.\n\n## Currently\n\nCurrently I am combining `nvim` with a `which` subshell to etit these files\nlike this.\n\n> for now lets use my todo command as an example\n\n``` bash\nnvim `which todo`\n```\n\n## First pass\n\nOn first pass I made a bash function to do exactly what I have been doing.\n\n```bash\newhich () {$EDITOR `which \"$1\"`}\n```\n\nThe `$1` will pass the first input to the which subshell.  Now we can edit our todo script like this.\n\n```bash\newich todo\n```\n\n>  Note, I use bash functions instead of aliases for things that require input.\n\n## Final State\n\nThis works fine for commands that are files, but not aliases or shell\nfunctions.  Next I jumped to looking at the output of `command -V $1`.\n\n* if the command is not found, search for a file\n* if its a builtin, exit\n* if its an alias, open my `~/.alias file to that line`\n* if its a function, open my `~/.alias file to that line`\n\n``` bash\newhich () {\ncase `command -V $1` in\n    \"$1 not found\")\n        FILE=`fzf --prompt \"$1 not found searching ...\" --query $1`\n        [ -z \"$FILE\" ] && echo \"closing\" || $EDITOR $FILE;;\n    *\"is a shell builtin\"*)\n        echo \"$1 is a builtin\";;\n    *\"is an alias\"*)\n        $EDITOR ~/.alias +/alias\\ $1;;\n    *\"is a shell function\"*)\n        $EDITOR ~/.alias +/^$1;;\n    *)\n        $EDITOR `which \"$1\"`;;\nesac\n```\n\n## a bit more ergo, and less readable\n\nTo make it easier to type, at the sacrifice of readability for anyone watching\nI added a single character `e` alias to ewhich.  So when I want to edit\nanything I just use `e`.\n\n```bash\nalias e=ewhich\n```\n\n## Results\n\nHere is a quick screencast of how it works.\n\n<video autoplay=\"\" controls=\"\" loop=\"true\" muted=\"\" playsinline=\"\" width=\"100%\">\n     <source src=\"https://images.waylonwalker.com/ewhich.webm\" type=\"video/webm\">\n     Sorry, your browser doesn't support embedded videos.\n</video>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/fugitive-commit-verbose'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>fugitive verbose commit</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/dunk-is-my-new-diff-pager'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Dunk is my new diff pager</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-10", "edit_link": "https://github.com/edit/main/pages/til/ewhich.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575085", "datetime": "2022-05-10 00:00:00+00:00", "slug": "til/ewhich", "jinja": false, "output_html": "markout/til/ewhich/index.html", "long_description": "I am often editing my own scripts as I develop them. I want to make a better Currently I am combining  for now lets use my todo command as an example On first pass I made a bash function to do exactly what I have been doing. The  Note, I use bash fun", "super_description": "I am often editing my own scripts as I develop them. I want to make a better Currently I am combining  for now lets use my todo command as an example On first pass I made a bash function to do exactly what I have been doing. The  Note, I use bash functions instead of aliases for things that require input. This works fine for commands that are files, but not aliases or shell if the command is not found, search for a file if its a builtin, exit if its an alias, open my  if its a function, open my ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e070>, next=<frontmatter.Post object at 0x7f3450621940>)"}, {"cover": "", "title": "Using a Python Markdown ast to Find All Paragraphs", "tags": ["python", "webdev"], "status": "published", "templateKey": "til", "path": "pages/til/python-markdown-ast-paragraph.md", "description": "In looking for a way to automatically generate descriptions for pages I It When I originally wrote this post, I did not realize at the time that", "content": "In looking for a way to automatically generate descriptions for pages I\nstumbled into a markdown ast in python.  It allows me to go over the\nmarkdown page and get only paragraph text.  This will ignore headings,\nblockquotes, and code fences.\n\n\n``` python\nimport commonmark\nimport frontmatter\n\npost = frontmatter.load(\"post.md\")\nparser = commonmark.Parser()\nast = parser.parse(post.content)\n\nparagraphs = ''\nfor node in ast.walker():\n    if node[0].t == \"paragraph\":\n        paragraphs += \" \"\n        paragraphs += node[0].first_child.literal\n```\n\nIt's also super fast, previously I was rendering to html and using\nbeautifulsoup to get only the paragraphs.  Using the commonmark ast was\nabout 5x faster on my site.\n\n### Duplicate Paragraphs\n\nWhen I originally wrote this post, I did not realize at the time that\ncommonmark duplicates nodes.  I still do not understand why, but I have had\nsuccess duplicating them based on the source position of the node with the\nsnippet below.\n\n``` python\nfrom itertools import compress\n\nimport commonmark\nimport frontmatter\n\npost = frontmatter.load(\"post.md\")\nparser = commonmark.Parser()\nast = parser.parse(post.content)\n\n# find all paragraph nodes\nparagraph_nodes = [\n    n[0]\n    for n in ast.walker()\n    if n[0].t == \"paragraph\" and n[0].first_child.literal is not None\n]\n# for reasons unknown to me commonmark duplicates nodes, dedupe based on sourcepos\nsourcepos = [p.sourcepos for p in paragraph_nodes]\n# find first occurence of node based on source position\nunique_mask = [sourcepos.index(s) == i for i, s in enumerate(sourcepos)]\n# deduplicate paragraph_nodes based on unique source position\nunique_paragraph_nodes = list(compress(paragraph_nodes, unique_mask))\nparagraphs = \" \".join([p.first_child.literal for p in unique_paragraph_nodes])\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-nested-requires'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Nested requirements.txt in python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-lru-cache'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Cache a python function with lru_cache</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-05", "edit_link": "https://github.com/edit/main/pages/til/python-markdown-ast-paragraph.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575091", "datetime": "2022-02-05 00:00:00+00:00", "slug": "til/python-markdown-ast-paragraph", "jinja": false, "output_html": "markout/til/python-markdown-ast-paragraph/index.html", "long_description": "In looking for a way to automatically generate descriptions for pages I It When I originally wrote this post, I did not realize at the time that", "super_description": "In looking for a way to automatically generate descriptions for pages I It When I originally wrote this post, I did not realize at the time that", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604850>, next=<frontmatter.Post object at 0x7f345060e820>)"}, {"cover": "", "title": "Converting markdown to pdf with pandoc on linux", "tags": ["linux", "blog", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/convert-markdown-pdf-linux.md", "description": "Converting markdown posts to pdf on ubuntu takes a few packages from the Here is an image of what converting this article over to a pdf looks", "content": "Converting markdown posts to pdf on ubuntu takes a few packages from the\nstandard repos.  I had to go through a few stack overflow posts, and\nnothing seemed to have all the fonts and packages that I needed to\nconvert markdown, but this is what ended up working for me.\n\n## Installing all the packages\n\n``` bash\nsudo apt install \\\n  pandoc \\\n  texlive-latex-base \\\n  texlive-fonts-recommended \\\n  texlive-extra-utils \\\n  texlive-latex-extra \\\n  texlive-xetex\n```\n\n## Using pandoc to convert markdown to a pdf.\n\n``` python\n# older versions of pandoc, I needed this one on ubuntu 18.04\npandoc pages/til/convert-markdown-pdf-linux.md -o convert-markdown-pdf.pdf --latex-engine=xelatex\n# newer versions of pandoc, I needed this one on ubuntu 21.04\npandoc pages/til/convert-markdown-pdf-linux.md -o convert-markdown-pdf.pdf --pdf-engine=xelatex\n```\n\n\n\n![results of converting this post to a pdf](https://images.waylonwalker.com/convert-markdown-pdf-linux-result.png)\n\n> Here is an image of what converting this article over to a pdf looks\n> like.  The raw markdown is\n> [here](https://waylonwalker.com/convert-markdown-pdf-linux.md).\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/copier-answers'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Using Copier Answers to rerun templates quickly</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/clean-qutebrowser'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>qutebrowser clean up all status bars</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-12", "author": "Waylon S. Walker", "edit_link": "https://github.com/edit/main/pages/til/convert-markdown-pdf-linux.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575097", "datetime": "2022-01-12 00:00:00+00:00", "slug": "til/convert-markdown-pdf-linux", "jinja": false, "output_html": "markout/til/convert-markdown-pdf-linux/index.html", "long_description": "Converting markdown posts to pdf on ubuntu takes a few packages from the Here is an image of what converting this article over to a pdf looks", "super_description": "Converting markdown posts to pdf on ubuntu takes a few packages from the Here is an image of what converting this article over to a pdf looks", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506093a0>, next=<frontmatter.Post object at 0x7f345061b190>)"}, {"cover": "", "title": "Nested requirements.txt in python", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-nested-requires.md", "description": "python requirements text files can in fact depend on each other due to Lets create two requirements files in a new directory to play with. Then add the followin", "content": "python requirements text files can in fact depend on each other due to\nthe fact that you can pass pip install arguments right into your\n`requirements.txt` file.  The trick is to just prefix the file with a\n`-r` flag, just like you would if you were installing it with `pip\ninstall`\n\n## try it out\nLets create two requirements files in a new directory to play with.\n\n``` bash\nmkdir requirements-nest\ncd requirements-nest\ntouch requirements.txt requirements_dev.txt\n```\n\nThen add the following to each requirements file.\n\n``` txt\n# requirements.txt\nkedro[pandas.ParquetDataSet]\n```\n\n```txt\n# requirements_dev.txt\n-r requirements.txt\nipython\n```\n\n## Installing\n\nInstalling requirements_dev.txt will install both ipython and pandas\nsince it includes the base requirements file.\n\n``` bash\n# this will install only pandas\npip install -r requirements.txt\n\n# this will install both ipython and pandas\npip install -r requirements_dev.txt\n```\n\n## Links\n\nThis is covered in the\n[pip user guide](https://pip.pypa.io/en/stable/user_guide/),\nbut it is not obvious that this can be done in a requirements.txt\nfile.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-pathlib-glob'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I glob for Files in Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-markdown-ast-paragraph'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Using a Python Markdown ast to Find All Paragraphs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-17", "edit_link": "https://github.com/edit/main/pages/til/python-nested-requires.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575103", "datetime": "2022-02-17 00:00:00+00:00", "slug": "til/python-nested-requires", "jinja": false, "output_html": "markout/til/python-nested-requires/index.html", "long_description": "python requirements text files can in fact depend on each other due to Lets create two requirements files in a new directory to play with. Then add the following to each requirements file. Installing requirements This is covered in the", "super_description": "python requirements text files can in fact depend on each other due to Lets create two requirements files in a new directory to play with. Then add the following to each requirements file. Installing requirements This is covered in the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604bb0>, next=<frontmatter.Post object at 0x7f3450604610>)"}, {"cover": "", "title": "List all git commits with GitPython", "tags": ["python", "git"], "status": "published", "templateKey": "til", "path": "pages/til/git-python-all-commits.md", "description": "I am getting ready to do some timeseries analysis on a git repo with python, my This returns a generator, if you are iterating over them this is likely what The", "content": "I am getting ready to do some timeseries analysis on a git repo with python, my\nfirst step is to figure out a way to list all of the git commits so that I can\nanalyze each one however I want.  The GitPython library made this almost\ntrivial once I realized how.\n\n``` python\nfrom git import Repo\n\nrepo = Repo('.')\ncommits = repo.iter_commits()\n```\n\nThis returns a generator, if you are iterating over them this is likely what\nyou want.\n\n``` python\ncommits\n# <generator object Commit._iter_from_process_or_stream at 0x7f3307584510>\n```\n\nThe generator will return `git.Commit` objects with lots of information about\neach commit such as `hexsha`, `author`, `commited_datetime`, `gpgsig`, and\n`message`.\n\n``` python\nnext(commits)\n# <git.Commit \"d125317892d0fab10a36638a2d23356ba25c5621\">\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-rebase-root'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Git rebase to the beginning of time</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-push-default-current'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Configure Git to Always Push to the Current Branch</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-09", "edit_link": "https://github.com/edit/main/pages/til/git-python-all-commits.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575108", "datetime": "2022-05-09 00:00:00+00:00", "slug": "til/git-python-all-commits", "jinja": false, "output_html": "markout/til/git-python-all-commits/index.html", "long_description": "I am getting ready to do some timeseries analysis on a git repo with python, my This returns a generator, if you are iterating over them this is likely what The generator will return ", "super_description": "I am getting ready to do some timeseries analysis on a git repo with python, my This returns a generator, if you are iterating over them this is likely what The generator will return ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621df0>, next=<frontmatter.Post object at 0x7f3450672a90>)"}, {"cover": "", "title": "Grouping Mermaid nodes in Subgraphs", "tags": ["webdev"], "status": "published", "templateKey": "til", "path": "pages/til/mermaid-subgraphs.md", "description": "Mermaid provides some really great ways to group or fence in parts of your Here we can model some sort of data ingest with some raw iot device and our If we wan", "content": "Mermaid provides some really great ways to group or fence in parts of your\ngraphs through the use of subgraphs.\n\nHere we can model some sort of data ingest with some raw iot device and our\nwarehouse in different groups.\n\n```\ngraph TD;\n\n    subgraph raw_iot\n        a\n    end\n\n    subgraph warehouse\n        A --> B\n        B --> C\n    end\n```\n<script src='https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js'></script>\n<div class='mermaid'>\ngraph TD;\n\n    subgraph raw_iot\n        a\n    end\n\n    subgraph warehouse\n        A --> B\n        B --> C\n    end\n</div>\n\n## connecting subgroups\n\nIf we want to connect them, we can make a connection between a and A outside of\nthe subgraphs.\n\n```\ngraph TD;\n\n    subgraph raw_iot\n        a\n    end\n\n    a --> A\n\n    subgraph warehouse\n        A --> B\n        B --> C\n    end\n```\n<script src='https://unpkg.com/mermaid@8.1.0/dist/mermaid.min.js'></script>\n<div class='mermaid'>\ngraph TD;\n\n    subgraph raw_iot\n        a\n    end\n\n    a --> A\n\n    subgraph warehouse\n        A --> B\n        B --> C\n    end\n</div>\n\n## separation of concerns\n\nIt's also possible to specify subgraphs separate from where you define your\nnodes. which allows for some different levels of grouping that would not be\npossible if you were to define all your nodes inside of a subgraph.\n\n```\ngraph TD;\n    a --> A\n    A --> B\n    B --> C\n\n    subgraph one\n        A\n        C\n    end\n```\n\n\n<div class='mermaid'>\ngraph TD;\n    a --> A\n    A --> B\n    B --> C\n\n    subgraph warehouse\n        A\n        C\n    end\n</div>\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/modded-minecraft-in-docker'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Modded Minecraft in Docker</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/mermaid-html'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Simple Plain Text Diagrams in HTML</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-05", "edit_link": "https://github.com/edit/main/pages/til/mermaid-subgraphs.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575116", "datetime": "2022-03-05 00:00:00+00:00", "slug": "til/mermaid-subgraphs", "jinja": false, "output_html": "markout/til/mermaid-subgraphs/index.html", "long_description": "Mermaid provides some really great ways to group or fence in parts of your Here we can model some sort of data ingest with some raw iot device and our If we want to connect them, we can make a connection between a and A outside of It", "super_description": "Mermaid provides some really great ways to group or fence in parts of your Here we can model some sort of data ingest with some raw iot device and our If we want to connect them, we can make a connection between a and A outside of It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061bb80>, next=<frontmatter.Post object at 0x7f34505f82b0>)"}, {"cover": "", "title": "Install yq | A light weight yaml parser cli", "tags": ["linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/install-yq.md", "description": "yq I love that all of these modern tools built in go and rust, just give you a I use a bunch of these tools, and for what its worth I trust the devs behind Sinc", "content": "`yq` is a command line utility for parsing and querying yaml, like `jq` does for json.\n\n## This is for me\n\nI love that all of these modern tools built in go and rust, just give you a\nzipped up executable right from GitHub releases, but it's not necessarily\nstraight forward how to install them.  `yq` does one of the best jobs I have\nseen, giving you instructions on how to get a specific version and install it.\n\n\nI use a bunch of these tools, and for what its worth I trust the devs behind\nthem to make sure they don't break.  This so far has worked out well for me,\nbut if it ever doesn't I can always pick an older version.\n\n## Just give me the latest\n\nSince I am all trusting of them I just want the latest version.  I do not want\nto update a shell script with new versions, or even care about what then next\nversion is, I just want it. Luckily you can script the release page for the\nlatest version on all that I have came accross.\n\n## What is the latest\n\nI wrote or stole, I think I wrote it, this line of bash quite awhile ago, and\nit has served me well for finding the latest release for any GitHub project\nusing releases.  Just update it with the name of the tool, org, and repo and it\nworks.\n\n``` bash\nYQ_VERSION=$(curl --silent https://github.com/mikefarah/yq/releases/latest | tr -d '\"' | sed 's/^.*tag\\///g' | sed 's/>.*$//g' | sed 's/^v//')\n```\n\n## Install with your shell\n\nNow that we know how to consistently get the right version, I generally right\nclick the release in the releases page, replace the version with\n`${TOOL_VERSION}` and put it in this wget call, then move the binary over to `~/.local/bin`\n\n``` bash\nlocal tmp=`mktemp -dt install-XXXXXX`\npushd $tmp\nYQ_VERSION=$(curl --silent https://github.com/mikefarah/yq/releases/latest | tr -d '\"' | sed 's/^.*tag\\///g' | sed 's/>.*$//g' | sed 's/^v//')\nwget https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_amd64.tar.gz -O- -q | tar -zxf - -C /tmp\ncp yq_linux_amd64 ~/.local/bin/yq\npopd\n```\n\n## Install with ansible\n\nNow I don't want to worry about missing `yq` again, so I am added it to my\nansible install script.  This way it's installed everyt time I setup a new\nsystem with all of my favorite cli's.\n\n``` yaml\n- name: check is yq installed\n  shell: command -v yq\n  register: yq_exists\n  ignore_errors: yes\n  tags:\n    - yq\n\n- name: Install yq\n  when: yq_exists is failed\n  shell: |\n    local tmp=`mktemp -dt install-XXXXXX`\n    pushd $tmp\n    YQ_VERSION=$(curl --silent https://github.com/mikefarah/yq/releases/latest | tr -d '\"' | sed 's/^.*tag\\///g' | sed 's/>.*$//g' | sed 's/^v//')\n    wget https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_amd64.tar.gz -O- -q | tar -zxf - -C /tmp\n    cp yq_linux_amd64 {{ lookup('env', 'HOME') }}/.local/bin/yq\n    popd\n  tags:\n    - yq\n```\n\n## Links\n\nThis is how I installed it, of course you can always follow Mike's instructions\nfrom the repo.\n\n* [yq repo](https://github.com/mikefarah/yq)\n* [yq docs](https://mikefarah.gitbook.io/yq/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/installing-homebrew-linux'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Installing Homebrew on Linux</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/install-rust'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Installing Rust and Cargo on Ubuntu 21.10 using Ansible</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-14", "edit_link": "https://github.com/edit/main/pages/til/install-yq.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575122", "datetime": "2022-03-14 00:00:00+00:00", "slug": "til/install-yq", "output_html": "markout/til/install-yq/index.html", "long_description": "yq I love that all of these modern tools built in go and rust, just give you a I use a bunch of these tools, and for what its worth I trust the devs behind Since I am all trusting of them I just want the latest version.  I do not want I wrote or stol", "super_description": "yq I love that all of these modern tools built in go and rust, just give you a I use a bunch of these tools, and for what its worth I trust the devs behind Since I am all trusting of them I just want the latest version.  I do not want I wrote or stole, I think I wrote it, this line of bash quite awhile ago, and Now that we know how to consistently get the right version, I generally right Now I don This is how I installed it, of course you can always follow Mike", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b280>, next=<frontmatter.Post object at 0x7f34505fd040>)"}, {"cover": "", "title": "How I glob for Files in Python", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-pathlib-glob.md", "description": "A very common task for any script is to look for files on the system.  My go to I setup a directory to make some examples about globbing.  Here is what the 1 di", "content": "A very common task for any script is to look for files on the system.  My go to\nmethod when globbing for files in python is to use pathlib.\n\n## Setup\n\nI setup a directory to make some examples about globbing.  Here is what the\ndirectory looks like.\n\n``` bash\n\u276f tree .\n.\n\u251c\u2500\u2500 content\n\u2502   \u251c\u2500\u2500 hello.md\n\u2502   \u251c\u2500\u2500 hello.py\n\u2502   \u251c\u2500\u2500 me.md\n\u2502   \u2514\u2500\u2500 you.md\n\u251c\u2500\u2500 readme.md\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 READMES.md\n\u2514\u2500\u2500 setup.py\n```\n\n1 directory, 8 files\n## Pathlib\n\nPathlib is a standard library module available in all LTS versions of python at\nthis point.\n\n``` python\n\u276f from pathlib import Path\n```\n\nCreating a Path instance.\n\n``` python\n# current working directory\nPath()\nPath.cwd()\n\n# The users home directory\nPath.home()\n\n# Path to a directory by string\nPath('/path/to/directory')\n\n# The users ~/.config directory\nPath.home() / '.config'\n```\n\n## Globbing Examples\n\nThe path object has a glob method that allows you to glob for files with a unix\nstyle glob pattern to search for files.  Note that it gives you a generator.\nThis is great for many use cases, but for examples its easier to turn them to a\nlist to print them out.\n\nIf you need some more detail on what globbing is there is a\n[wikipedia](https://en.wikipedia.org/wiki/Glob_(programming)) article\ndiscussing it.  I am just showing how to glob with pathlib.\n\n``` python\n\n\u276f Path().glob(\"**/*.md\")\n<generator object Path.glob at 0x7fa35adc4f90>\n\n\u276f list(Path().glob(\"**/*.md\"))\n\n[\n    PosixPath('readme.md'),\n    PosixPath('READMES.md'),\n    PosixPath('README.md'),\n    PosixPath('content/you.md'),\n    PosixPath('content/me.md'),\n    PosixPath('content/hello.md')\n]\n\n\u276f list(Path().glob(\"**/*.py\"))\n[PosixPath('setup.py'), PosixPath('content/hello.py')]\n\n\u276f list(Path().glob(\"*.md\"))\n[PosixPath('readme.md'), PosixPath('READMES.md'), PosixPath('README.md')]\n\n\u276f list(Path().glob(\"*.py\"))\n[PosixPath('setup.py')]\n\n\u276f list(Path().glob(\"**/*hello*\"))\n[PosixPath('content/hello.py'), PosixPath('content/hello.md')]\n\n\u276f list(Path().glob(\"**/REA?ME.md\"))\n[PosixPath('README.md')]\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-pep-584'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python's Dict Union Operator | Pep 584</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-nested-requires'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Nested requirements.txt in python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-17", "edit_link": "https://github.com/edit/main/pages/til/python-pathlib-glob.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575127", "datetime": "2022-03-17 00:00:00+00:00", "slug": "til/python-pathlib-glob", "jinja": false, "output_html": "markout/til/python-pathlib-glob/index.html", "long_description": "A very common task for any script is to look for files on the system.  My go to I setup a directory to make some examples about globbing.  Here is what the 1 directory, 8 files Pathlib is a standard library module available in all LTS versions of pyt", "super_description": "A very common task for any script is to look for files on the system.  My go to I setup a directory to make some examples about globbing.  Here is what the 1 directory, 8 files Pathlib is a standard library module available in all LTS versions of python at Creating a Path instance. The path object has a glob method that allows you to glob for files with a unix If you need some more detail on what globbing is there is a", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621820>, next=<frontmatter.Post object at 0x7f3450604850>)"}, {"cover": "", "title": "Finding hidden (dotfiles) using Telescope in neovim", "tags": ["vim"], "status": "published", "templateKey": "til", "path": "pages/til/nvim-telescope-hidden-files.md", "description": "Finding hidden files using Telescope as you fuzzy file finder is not too I have this keymap set to help me list out all files including hidden see the", "content": "Finding hidden files using Telescope as you fuzzy file finder is not too\nhard, its a single flag passed in.  Then it will use whichever file\nfinder it can find ['fd', 'fdfind', 'rg --files', 'find', or 'where'] in\nthat order.  These tools each have their own way of handling hidden\nfiles, but telescope takes care of that so all you need to do is pass in\n`hidden=true`.\n\nI have this keymap set to help me list out all files including hidden\nfiles using the pnumonic go edit hidden.  I use ge for quite a few\ndifferent things to take me directly to a specific file or picker.\n\n``` python\nnnoremap geh <cmd>Telescope find_files hidden=true<cr>\n```\n\n\nsee the\n[implementation](https://github.com/nvim-telescope/telescope.nvim/blob/82e3cc322ad87b262aef092cb7475e769740e83a/lua/telescope/builtin/files.lua#L167-L184)\ntelescope finds your files.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/nvr-open-files'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Open Files with Nvim Remote</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/nvim-telescope-custom-command'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Opening files in vim from output of command</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-26", "edit_link": "https://github.com/edit/main/pages/til/nvim-telescope-hidden-files.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575133", "datetime": "2021-12-26 00:00:00+00:00", "slug": "til/nvim-telescope-hidden-files", "jinja": false, "output_html": "markout/til/nvim-telescope-hidden-files/index.html", "long_description": "Finding hidden files using Telescope as you fuzzy file finder is not too I have this keymap set to help me list out all files including hidden see the", "super_description": "Finding hidden files using Telescope as you fuzzy file finder is not too I have this keymap set to help me list out all files including hidden see the", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b940>, next=<frontmatter.Post object at 0x7f34505f8610>)"}, {"cover": "", "title": "A TTY Can Save Your Bacon", "tags": ["linux", "linux", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/linux-tty.md", "description": "I recently was unable to boot into my home Linux Desktop, it got stuck at https://twitter.com/ There Normally you have 6 TTY ctrl+alt+F1: login screen ctrl+alt+", "content": "I recently was unable to boot into my home Linux Desktop, it got stuck at\ndiskcheck `fsck`.  I found that I was able to get in to a tty through a hotkey.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Did a sudo apt update &amp;&amp; upgrade last night, power got tripped off couldnt reboot, had to reinstall my display manager from a tty.</p>&mdash; Waylon Walker \ud83d\udc0d (@_WaylonWalker) <a href=\"https://twitter.com/_WaylonWalker/status/1512281106120384519?ref_src=twsrc%5Etfw\">April 8, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n## What's a TTY?\n\nThere's probably more to it, but to me its a full screen terminal with zero\ngui, not even your gui fonts.  It does log into your default shell so if you\nhave a comfy command line setup it will be here for you even though it looks\nmuch different without fonts and full colorspace.\n\n## Normal setup\n\nNormally you have 6 TTY's running, the first is dedicated to your desktop\nmanager, which is your login screen it might be something like gdm or lightdm.\n\n* ctrl+alt+F1: login screen\n* ctrl+alt+F2: Desktop\n* ctrl+alt+F3: TTY 3\n* ctrl+alt+F4: TTY 4\n* ctrl+alt+F5: TTY 5\n* ctrl+alt+F6: TTY 6\n\nIn my case the desktop manager neverstarted, so ctrl+alt+F1 brought me into a tty.\n\n## What happened??\n\nWell after getting back in and having some time to reflect, I think my Desktop\nmanager was installed or just broken, possibly during a update I ran a few days\nprior.\n\nI tried a bunch of things like switching to lightdm, and manually running startx.\n\n## Getting back in\n\nThe final commands that ended up getting me back in were installing and starting gdm3.\n\n``` bash\nsudo apt install gdm3\nsudo systemctl start gdm3\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/linux-unzip-directory'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Unzip minecraft mods to their directory from the command line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/linux-swap'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Create a Swapfile on Your Linux Machine</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-08", "edit_link": "https://github.com/edit/main/pages/til/linux-tty.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575139", "datetime": "2022-04-08 00:00:00+00:00", "slug": "til/linux-tty", "jinja": false, "output_html": "markout/til/linux-tty/index.html", "long_description": "I recently was unable to boot into my home Linux Desktop, it got stuck at https://twitter.com/ There Normally you have 6 TTY ctrl+alt+F1: login screen ctrl+alt+F2: Desktop ctrl+alt+F3: TTY 3 ctrl+alt+F4: TTY 4 ctrl+alt+F5: TTY 5 ctrl+alt+F6: TTY 6 In", "super_description": "I recently was unable to boot into my home Linux Desktop, it got stuck at https://twitter.com/ There Normally you have 6 TTY ctrl+alt+F1: login screen ctrl+alt+F2: Desktop ctrl+alt+F3: TTY 3 ctrl+alt+F4: TTY 4 ctrl+alt+F5: TTY 5 ctrl+alt+F6: TTY 6 In my case the desktop manager neverstarted, so ctrl+alt+F1 brought me into a tty. Well after getting back in and having some time to reflect, I think my Desktop I tried a bunch of things like switching to lightdm, and manually running startx. The fina", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672700>, next=<frontmatter.Post object at 0x7f3450604970>)"}, {"cover": "", "title": "Using Copier Answers to rerun templates quickly", "tags": ["python", "linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/copier-answers.md", "description": "The copier answers file is a key component to making your templates Inside of my  Inside my copier.yml I have setup my  Once I change the  I After rendering the", "content": "The copier answers file is a key component to making your templates\nre-runnable.  Let's look at the example for my setup.py.\n\n``` bash\n\u276f tree ~/.copier-templates/setup.py\n/home/walkers/.copier-templates/setup.py\n\u251c\u2500\u2500 [[ _copier_conf.answers_file ]].tmpl\n\u251c\u2500\u2500 copier.yml\n\u251c\u2500\u2500 setup.cfg\n\u2514\u2500\u2500 setup.py.tmpl\n\n0 directories, 4 files\n```\n\nInside of my `[[ _copier_conf.answers_file ]].tmpl` file is this, a\nmessage not to muck around with it, and the ansers in yaml form.  The\nfirst line is just a helper for the blog post.\n\n``` yaml\n# ~/.copier-templates/setup.py/\\[\\[\\ _copier_conf.answers_file\\ \\]\\].tmpl\n# Changes here will be overwritten by Copier; NEVER EDIT MANUALLY\n[[_copier_answers|to_nice_yaml]]\n```\n\nInside my copier.yml I have setup my _answers_file to point to a special\nfile.  This is because this is not a whole projet template, but one just\nfor a single file.\n\n``` yaml\n# copier.yml\n# ...\n_answers_file: .setup-py-copier-answers.yml\n```\n\n> Once I change the _answers_file I was incredibly stuck\n\n## Run it\n\nI'm making a library of personal copier templates in my\n`~/.copier-templates` directory and I am going to run it from there.\n\n``` bash\ncopier copy ~/.copier-templates/setup.py\n```\n## Results\n\nAfter rendering the template we have the following content in our\n`.setup.setup-py-copier-answers.yml` file.  This will allow us to update\nquick if we ever change our template.\n\n``` yaml\n# .setup-py-copier-answers.yml\n# Changes here will be overwritten by Copier; NEVER EDIT MANUALLY\n_src_path: /home/walkers/.copier-templates/setup.py\nauthor_github: waylonwalker\nauthor_name: Waylon Walker\ndescription: awesomeness\nframework: null\nkeywords: null\npackage_name: my-package\n```\n\n## Update it\n\nThis is where I was most stuck, primarily becuase `-a <answers_file>`\nmust come exactly after the base command `copier`.  This felt a bit odd\nto and not where I expected it so it.\n\n``` bash\ncopier -a .setup-py-copier-answers.yml update\n```\n\n## Stop asking all these damn questions\n\nSo the defaults are now changed to our previous results, but it keeps\nasking for them.  To stop asking we can simply add a `-f` flag.\n\n``` bash\ncopier -fa .setup-py-copier-answers.yml update\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/copier-tasks'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Copier Tasks | Python templating post run task</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/convert-markdown-pdf-linux'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Converting markdown to pdf with pandoc on linux</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-08", "edit_link": "https://github.com/edit/main/pages/til/copier-answers.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575144", "datetime": "2022-01-08 00:00:00+00:00", "slug": "til/copier-answers", "jinja": false, "output_html": "markout/til/copier-answers/index.html", "long_description": "The copier answers file is a key component to making your templates Inside of my  Inside my copier.yml I have setup my  Once I change the  I After rendering the template we have the following content in our This is where I was most stuck, primarily b", "super_description": "The copier answers file is a key component to making your templates Inside of my  Inside my copier.yml I have setup my  Once I change the  I After rendering the template we have the following content in our This is where I was most stuck, primarily becuase  So the defaults are now changed to our previous results, but it keeps", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd940>, next=<frontmatter.Post object at 0x7f3450604dc0>)"}, {"cover": "", "title": "Setup SSH from chromebook to home desktop", "tags": ["linux"], "status": "published", "templateKey": "til", "path": "pages/til/open-ssh-setup.md", "description": "I write many of these posts from a 10 year old desktop that sits in my I Today I am giving it a second try, but this time with ssh. Before doing anything I chec", "content": "I write many of these posts from a 10 year old desktop that sits in my\noffice these days.  It does a very fine job running all of the things I\nneed it to for my side work, but sometimes I want a mobile setup.  I\ndon't really want to spend the $$ on a new laptop just for the few times\nI want to be somewhere else in the house.  What I do have though is a\nchromebook.\n\nI've tried to get the chromebook into my workflow in the past, but have\nfailed.  Much because by the time I got all of my tools up and running\nin the linux vm it was taking up quite a bit of space on the device and\nmade it harder for others to use as a chromebook.\n\nToday I am giving it a second try, but this time with ssh.\n\n## Checking for existing sshd\n\nBefore doing anything I checked to see if sshd is already running. Using\nthe following command.\n\n``` bash\nsudo service ssh status\n# or\npgrep -l sshd\n```\n\nBoth returned nothing so I know that its not running.\n\n## setting up sshd\n\n_just apt install it_\n\nNext install the openssh-client and openssh-server\n\n``` bash\nsudo apt install openssh-client -y\nsudo apt install openssh-server -y\n```\n\nAfter this I can see that its now running by checking its status once\nagain.\n\n\n``` bash\nsudo service ssh status\n```\n\nGives me the result.\n\n``` bash\n\u25cf ssh.service - OpenBSD Secure Shell server\n     Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)\n     Active: active (running) since Tue 2022-03-08 08:17:05 CST; 12min ago\n       Docs: man:sshd(8)\n             man:sshd_config(5)\n    Process: 181185 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)\n   Main PID: 181189 (sshd)\n      Tasks: 1 (limit: 19119)\n     Memory: 2.8M\n        CPU: 96ms\n     CGroup: /system.slice/ssh.service\n             \u2514\u2500181189 sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups\n```\n\n## Accessing the desktop\n\nI have already enabled the Linux terminal on my chromebook, so I just\nopened the terminal, and ran the following.\n\n``` bash\nssh <username>@<ip-address>\n```\n\nIt prompted for my password and I was in.  I had all of my vim, tmux,\nand zsh comforts that I enjoy without installing anything.  It worked so\nwell that this whole post was written from my chromebook.\n\n## Limitations\n\nThis does limit me to being on the same network as my desktop, which\nthese days is almost always true.\n\n## ssh keys\n\nOut of the box I am just using passwords to get in, but if this were\npublic I would lock down to requiring an ssh key to enter.  I'll likey\ndo this in a future post.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pandas-read-csv-user-agent'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Set User Agent on pandas read_csv</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/nvr-open-files'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Open Files with Nvim Remote</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-08", "edit_link": "https://github.com/edit/main/pages/til/open-ssh-setup.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575152", "datetime": "2022-03-08 00:00:00+00:00", "slug": "til/open-ssh-setup", "jinja": false, "output_html": "markout/til/open-ssh-setup/index.html", "long_description": "I write many of these posts from a 10 year old desktop that sits in my I Today I am giving it a second try, but this time with ssh. Before doing anything I checked to see if sshd is already running. Using Both returned nothing so I know that its not ", "super_description": "I write many of these posts from a 10 year old desktop that sits in my I Today I am giving it a second try, but this time with ssh. Before doing anything I checked to see if sshd is already running. Using Both returned nothing so I know that its not running. Next install the openssh-client and openssh-server After this I can see that its now running by checking its status once Gives me the result. I have already enabled the Linux terminal on my chromebook, so I just It prompted for my password a", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672730>, next=<frontmatter.Post object at 0x7f345061b940>)"}, {"cover": "", "title": "Don't inherit from python BaseException, Here's why.", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-base-exception.md", "description": "I ran into a PR this week where the author was inheriting what BaseException Try running these examples in a  Since things such as  If you except from exception", "content": "I ran into a PR this week where the author was inheriting what BaseException\nrather than exception.  I made this example to illustrate the unintended side\neffects that it can have.\n\nTry running these examples in a `.py` file for yourself and try to kill them\nwith control-c.\n\n## You cannot Keybard interrupt\n\nSince things such as `KeyboardInterrupt` are created as an exception that\ninherits from `BaseException`, if you except `BaseException` you can no longer\n`KeyboardInterrupt`.\n\n```python\nfrom time import sleep\n\nwhile True:\n    try:\n        sleep(30)\n    except BaseException: # \u274c\n        pass\n```\n\n## except from Exception or higher\n\nIf you except from exception or something than inherits from it you will be\nbetter off, and avoid unintended side effects.\n\n```python\nfrom time import sleep\n\nwhile True:\n    try:\n        sleep(30)\n    except Exception: # \u2705\n        pass\n```\n\n## This goes with Custom Exceptions as well\n\nWhen you make custom exceptions expect that users, or your team members will\nwant to catch them and try to handle them if they can.  If you inherit from\n`BaseException` you will put them in a similar situation when they use your\ncustom Exception.\n\n```python\nclass MyFancyException(BaseException): # \u274c\n    ...\n\nclass MyFancyException(Exception): # \u2705\n    ...\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-cache-key'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I make cache-keys from python objects</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-auto-pdb'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Implement --pdb in a python cli</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-31", "edit_link": "https://github.com/edit/main/pages/til/python-base-exception.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575158", "datetime": "2022-03-31 00:00:00+00:00", "slug": "til/python-base-exception", "jinja": false, "output_html": "markout/til/python-base-exception/index.html", "long_description": "I ran into a PR this week where the author was inheriting what BaseException Try running these examples in a  Since things such as  If you except from exception or something than inherits from it you will be When you make custom exceptions expect tha", "super_description": "I ran into a PR this week where the author was inheriting what BaseException Try running these examples in a  Since things such as  If you except from exception or something than inherits from it you will be When you make custom exceptions expect that users, or your team members will", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060eb80>, next=<frontmatter.Post object at 0x7f345060e670>)"}, {"cover": "", "title": "Mixing Colors at the Command Line", "tags": ["cli"], "status": "published", "templateKey": "til", "path": "pages/til/pastel-cli.md", "description": "From the same Author that brought us command line essentials like  You can install from one of the Something I often do to blend colors together is add a little", "content": "From the same Author that brought us command line essentials like `fd` and\n`bat` written in rust comes [pastel](https://github.com/sharkdp/pastel) an\nincredible command-line tool to generate, analyze, convert and manipulate\ncolors.\n\n## Install\n\nYou can install from one of the\n[releases](https://github.com/sharkdp/pastel/releases), follow the\n[instructions](https://github.com/sharkdp/pastel#installation) for your system\nfrom the repo.  I chose to go the nix route.  I have enjoyed the simplicity of\nthe nix package manager being cross platform and have very up  to date packages\nin it.\n\n```bash\nnix-env --install pastel\n```\n\n## Mixing colors\n\nSomething I often do to blend colors together is add a little alpha to\nsomething over top of a background.  I can simulate this by mixing colors.\n\n```bash\npastel color cornflowerblue | pastel mix goldenrod -f .1\n```\n\nHere is one from the docs that show how you can generate a color palette from\nrandom colors, mix in some red, lighten and format all in one pipe.\n\n```bash\npastel random | pastel mix red | pastel lighten 0.2 | pastel format hex\n```\n\n## color picker\n\nI am on Ubuntu 20.10 as I write this and it works flawlessly.  When I call the\ncommand, a color picker gui pops up along with an rgb panel.  I can pick from\nthe panel or from anywhere on my screen.\n\n```bash\npastel color-picker\n```\n\n<video autoplay=\"\" controls=\"\" loop=\"true\" muted=\"\" playsinline=\"\" width=\"100%\">\n    <source src=\"https://images.waylonwalker.com/pastel-pick.mp4\" type=\"video/mp4\">\n    Sorry, your browser doesn't support embedded videos.\n</video>\n\n## Conversions\n\nI often will want to convert a color from rgb to hex or hsl vice versa.  I open\ngoogle and search.  This is one part that I could really use adding to my\nworkflow.\n\n## Check it\n\nHere I can mix up a dark grey with rgb, mix in 20% cornflowerblue, and grab the\nhex value.\n\n```bash\npastel color 50,50,50 | pastel mix cornflowerblue -f .2\n```\n\n![my terminal output from mixing grey](https://images.waylonwalker.com/pastel-mix-grey.png)\n\nI really want to get this into my workflow.  I saw it quite awhile ago but have\nnot done much color work.  Lately I have been doing a bit more front end, and\nhave been getting into game development.  This is the time to stop googling\nrandom color mixers and use this one.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pathlib-read-text'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I read Files in Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pandas-read-csv-user-agent'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Set User Agent on pandas read_csv</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-05", "edit_link": "https://github.com/edit/main/pages/til/pastel-cli.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575164", "datetime": "2022-04-05 00:00:00+00:00", "slug": "til/pastel-cli", "jinja": false, "output_html": "markout/til/pastel-cli/index.html", "long_description": "From the same Author that brought us command line essentials like  You can install from one of the Something I often do to blend colors together is add a little alpha to Here is one from the docs that show how you can generate a color palette from I ", "super_description": "From the same Author that brought us command line essentials like  You can install from one of the Something I often do to blend colors together is add a little alpha to Here is one from the docs that show how you can generate a color palette from I am on Ubuntu 20.10 as I write this and it works flawlessly.  When I call the I often will want to convert a color from rgb to hex or hsl vice versa.  I open Here I can mix up a dark grey with rgb, mix in 20% cornflowerblue, and grab the I really want", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8df0>, next=<frontmatter.Post object at 0x7f3450672730>)"}, {"cover": "", "title": "A Minimal Pluggy Example", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/pluggy-minimal-example.md", "description": "Pluggy makes it so easy to allow users to modify the behavior of a framework I As long as the framework document the hooks that are available and what it Instal", "content": "Pluggy makes it so easy to allow users to modify the behavior of a framework\nwithout thier specific feature needing to be implemented in the framework\nitself.\n\nI've really been loving the workflow of frameworks built with pluggy.  The first\none that many python devs have experience with is pytest.  I've never created a\npytest plugin, and honestly at the time I looked into how they were made was a\nlong time ago and it went over my head.  I use a data pipelining framework\ncalled kedro, and have build many plugins for it.\n\n## Making a plugin\n_super easy to do_\n\nAs long as the framework document the hooks that are available and what it\npasses to them it's so easy to make a plugin.  Its just importing the\n`hook_impl`, making a class with a function that represents one of the hooks,\nand decorating it.\n\n``` python\nfrom framework import hook_impl\n\nclass LowerHook:\n    @hook_impl\n    def start(pluggy_example):\n        pluggy_example.message = pluggy_example.message.lower()\n```\n\n## installing pluggy\n\nInstalling pluggy is just like most python applications, install python, make\nyour virtual environment, and pip install it.\n\n``` bash\npip install pluggy\n```\n\n## Making a plugin driven framework\n_much less easy_\n\nAt the time I started playing with pluggy, their docs were less\ncomplete, or I was just plain blind, but this was a huge part of the\ndocs that were missing for me that now actually appear to be there.  But\nto get some more examples out there, here is my version.\n\n``` python\nimport pluggy\n\n# These don't need to match\nHOOK_NAMESPACE = \"pluggy_example\"\nPROJECT_NAME = \"pluggy_example\"\n\nhook_spec = pluggy.HookspecMarker(HOOK_NAMESPACE)\nhook_impl = pluggy.HookimplMarker(HOOK_NAMESPACE)\n\n\nclass PluggyExampleSpecs:\n    \"\"\"\n    This is where we spec out our frameworks hooks, I like to refer to them as\n    the lifecycle.  Each of these functions is a hook that we are exposing to\n    our users, with the kwargs that we expect to pass them.\n    \"\"\"\n    @hook_spec\n    def start(self, pluggy_example: PluggyExample) -> None:\n        \"\"\"\n        The first hook that runs.\n        \"\"\"\n        pass\n\n    @hook_spec\n    def stop(self, pluggy_example: PluggyExample) -> None:\n        \"\"\"\n        The last hook that runs.\n        \"\"\"\n        pass\n\n\nclass PluggyExample:\n    \"\"\"\n    This may not need to be a class, but I wanted a container where all the\n    hooks had access to the message.  This made sense to me to do as a class.\n    \"\"\"\n\n    def __init__(self, message=\"\", hooks=None) -> None:\n        \"\"\"\n        Setup the plugin manager and register all the hooks.\n        \"\"\"\n        self._pm = pluggy.PluginManager(PROJECT_NAME)\n        self._pm.add_hookspecs(PluggyExampleSpecs)\n        self.message = message\n        self.hooks = hooks\n        if hooks:\n            self._register_hooks()\n\n    def _register_hooks(self) -> None:\n        for hook in self.hooks:\n            self._pm.register(hook)\n\n    def run(self):\n        \"\"\"\n        Run the hooks in the documented order, and pass in any kwargs the hook\n        needs access to.  Here I am storing the message within this same class.\n        \"\"\"\n        self._pm.hook.start(pluggy_example=self)\n        self._pm.hook.stop(pluggy_example=self)\n        return self.message\n\n\nclass DefaultHook:\n    \"\"\"\n    These are some hooks that run by default, maybe these are created by the\n    framework author.\n    \"\"\"\n    @hook_impl\n    def start(pluggy_example):\n        pluggy_example.message = pluggy_example.message.upper()\n\n    @hook_impl\n    def stop(pluggy_example):\n        print(pluggy_example.message)\n\n\nif __name__ == \"__main__\":\n    \"\"\"\n    The user of this framework can apply the hook in their own code without\n    changing the behavior of the framework, but the library has\n    implemented it's own default hooks.\n    \"\"\"\n    pe = PluggyExample(\n        message=\"hello world\",\n        hooks=[\n            DefaultHook,\n        ],\n    )\n    pe.run()\n```\n\n## Modifying behavior\n_as a user of PluggyExample_\n\nNow Lets pretent the user of this library likes everything about it,\nexcept, they don't like all the shouting.  They can either search for a\nplugin on Google, github, or pypi and find one, or make it themself. the\nmagic here is that they do not need to have the package maintainer patch\nthe core library itself.\n\n```\n\nclass LowerHook:\n    \"\"\"\n    This is a new hook that a plugin author has created to modify the behavior\n    of the framework to lowercase the message.\n    \"\"\"\n    @hook_impl\n    def start(pluggy_example):\n        pluggy_example.message = pluggy_example.message.lower()\n\nfrom pluggy_example import PluggyExample\npe = PluggyExample(\n    message=\"hello world\",\n    hooks=[\n        DefaultHook,\n        LowerHook\n    ],\n)\npe.run()\n```\n\n## Running Pluggy Example\n\nHere is a short clip of me running the pluggy example in it's default\nstate, then adding the LowerHook, and running a second time.\n\n![example video](https://images.waylonwalker.com/til-pluggy-example.gif)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/popen-stderr'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Read stderr from python subprocess.Popen</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pipx-w'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Glances webui with pipx</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-01", "edit_link": "https://github.com/edit/main/pages/til/pluggy-minimal-example.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575170", "datetime": "2022-01-01 00:00:00+00:00", "slug": "til/pluggy-minimal-example", "jinja": false, "output_html": "markout/til/pluggy-minimal-example/index.html", "long_description": "Pluggy makes it so easy to allow users to modify the behavior of a framework I As long as the framework document the hooks that are available and what it Installing pluggy is just like most python applications, install python, make At the time I star", "super_description": "Pluggy makes it so easy to allow users to modify the behavior of a framework I As long as the framework document the hooks that are available and what it Installing pluggy is just like most python applications, install python, make At the time I started playing with pluggy, their docs were less Now Lets pretent the user of this library likes everything about it, Here is a short clip of me running the pluggy example in it", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628280>, next=<frontmatter.Post object at 0x7f3450672ee0>)"}, {"cover": "", "title": "Get Webpage with python requests", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-requests-get.md", "description": "Python Requests is on pypi and can be installed into your virtual environtment with pip. Requests makes getting content from a web url as easy as possible. Requ", "content": "Python's requests library is one of the gold standard apis, designed by Kenneth\nReitz.  It was designed with the user perspective in mind first and\nimplementation second. I have heard this called readme driven development,\nwhere the interface the user will use is laid out first, then implemented.\nThis makes the library much mor intuitive than if it were designed around how\nit was easiest to implement.\n\n## Install Requests\n\nRequests is on pypi and can be installed into your virtual environtment with pip.\n\n```bash\npython -m pip install requests\n```\n\n## Getting the content of a request\n\nRequests makes getting content from a web url as easy as possible.\n\n```python\nimport requests\n\nr = requests.get('https://waylonwalker.com/til/htmx-get/')\narticle = r.content\n```\n\n## requests is not limited to html\n\nRequests can handle any web request and is not limited to only html.  Here are\nsome examples to get a markdown file, a csv, and a png image.\n\n```python\nhtmx_get_md = requests.get('https://waylonwalker.com/til/htmx-get.md').content\ncars = requests.get('https://waylonwalker.com/cars.csv').content\nprofile = requests.get('https://images.waylonwalker.com/8bitc.png').content\n```\n\n## RTFM\n\nThere is way more to requests, this just scratches the surface while covering\nwhat you are going to need to get going. The\n[requests docs](https://docs.python-requests.org/en/latest/) have way more details.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-reverse-sluggify'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python Reverse Sluggify</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-pep-584'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python's Dict Union Operator | Pep 584</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-26", "edit_link": "https://github.com/edit/main/pages/til/python-requests-get.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575175", "datetime": "2022-03-26 00:00:00+00:00", "slug": "til/python-requests-get", "jinja": false, "output_html": "markout/til/python-requests-get/index.html", "long_description": "Python Requests is on pypi and can be installed into your virtual environtment with pip. Requests makes getting content from a web url as easy as possible. Requests can handle any web request and is not limited to only html.  Here are There is way mo", "super_description": "Python Requests is on pypi and can be installed into your virtual environtment with pip. Requests makes getting content from a web url as easy as possible. Requests can handle any web request and is not limited to only html.  Here are There is way more to requests, this just scratches the surface while covering", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506214c0>, next=<frontmatter.Post object at 0x7f3450621820>)"}, {"cover": "", "title": "GitHub Markdown now Supports Mermaid Diagrams", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/github-supports-mermaid.md", "description": "Mermaid diagrams provide a way to display graphs defined as plain text. You can define nodes like this in mermaid, and GitHub will now render", "content": "Mermaid diagrams provide a way to display graphs defined as plain text.\nSome markdown renderers support this as a plugin.  GitHub now supports\nit.\n\n## example\n\nYou can define nodes like this in mermaid, and GitHub will now render\nthem as a pretty graph diagram.  Its rendered in svg, so its searchable\nwith `control f` and everything.\n\n```mermaid\n  graph TD;\n      A-->B;\n      A-->C;\n      B-->D;\n      C-->D-->OUT;\n      E-->F-->G-->OUT\n```\n\n![Here is what the example looks like on\nGitHub](https://images.waylonwalker.com/example-gh-mermaid.png)\n\n## Links\n\n* [GitHub support announcement](https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/)\n* [mermaid docs](https://mermaid-js.github.io/mermaid/#/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/gitignore-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python Respect the .gitignore</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-revive-dead-files'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Revive files from the dead with git</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-24", "edit_link": "https://github.com/edit/main/pages/til/github-supports-mermaid.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575181", "datetime": "2022-02-24 00:00:00+00:00", "slug": "til/github-supports-mermaid", "jinja": false, "output_html": "markout/til/github-supports-mermaid/index.html", "long_description": "Mermaid diagrams provide a way to display graphs defined as plain text. You can define nodes like this in mermaid, and GitHub will now render", "super_description": "Mermaid diagrams provide a way to display graphs defined as plain text. You can define nodes like this in mermaid, and GitHub will now render", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506045e0>, next=<frontmatter.Post object at 0x7f3450609610>)"}, {"cover": "", "title": "How I Present Markdown Slides from the Terminal", "tags": ["python", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/lookatme-slides.md", "description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use", "content": "I love the freedom of writing in markdown.  It allows me to write content from\nthe comfort of my editor with very little focus on page style.  It turns out\nthat markdown is also a fantastic tool for creating slides.\n\n## Present from the terminal\n\nI will most often just present right from the terminal using\n[lookatme](https://lookatme.readthedocs.io/en/latest/index.html).  Presenting\nfrom the terminal lets me see the results quick right from where I am editing.\nIt also allows me to pop into other terminal applications quickly.\n\n## reveal.js\n\nI sometimes also use reveal.js, but that's for another post.  It is handy that\nit lives in the browser and is easier to share.\n\n## New Slides\n\nI leverage auto slides when I write my slides in markdown.  The largest\nheading, usually an h2 for me, becomes the new slide marker.  Otherwise my\nprocess is not much different, It just becomes a shorter writing style.\n\n## Installation\n\nlookatme is a python library that is available on pypi, you can install it with\nthe pip command.\n\n```\npython -m pip install lookatme\n```\n\nSince it's a command line application it works great with pipx.  This prevents\nthe need to manage virtual environments yourself or ending up with packages\nclashing in your system python environment.\n\n```\npipx install lookatme\n```\n\n## From my terminal\n\n``` bash\nlookatme {filepath}\n```\n\nI just run it with pipx.\n\n``` bash\npipx run \\\n --spec git+https://github.com/waylonwalker/lookatme \\\n lookatme {filepath} \\\n --live-reload \\\n --style gruvbox-dark\n```\n\n> Note, I use a custom fork of lookatme.  It's schema validation did not like\n> the date format of my blog posts, so I have a one line fix built into my\n> fork that is pretty specific to me.\n\n## From Neovim\n_most often what I do_\n\nFrom Neovim I use a plugin I created for sending out commands to tmux called\n[telegraph](https://github.com/WaylonWalker/Telegraph.nvim).  This sends the\nabove command to a new session that I can bounce between quickly.\n\n``` vim\nnnoremap <leader><leader>s <cmd>lua require'telegraph'.telegraph({cmd='pipx run --spec git+https://github.com/waylonwalker/lookatme lookatme {filepath} --live-reload --style gruvbox-dark', how='tmux'})<CR>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/lookatme-styles'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Style Lookatme Slides a bit more Personal</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/list-all-files-containing-phrase'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>List all the files containing a phrase</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-21", "edit_link": "https://github.com/edit/main/pages/til/lookatme-slides.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575187", "datetime": "2022-03-21 00:00:00+00:00", "slug": "til/lookatme-slides", "jinja": false, "output_html": "markout/til/lookatme-slides/index.html", "long_description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use reveal.js, but that I leverage auto slides when I write my slides in markdown.  The large", "super_description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use reveal.js, but that I leverage auto slides when I write my slides in markdown.  The largest lookatme is a python library that is available on pypi, you can install it with Since it I just run it with pipx. Note, I use a custom fork of lookatme.  It From Neovim I use a plugin I created for sending out commands to tmux called", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b5e0>, next=<frontmatter.Post object at 0x7f34505f8f70>)"}, {"cover": "", "title": "Using Git from Python", "tags": ["python", "cli", "git"], "status": "published", "templateKey": "til", "path": "pages/til/python-git.md", "description": "GitPython I recently made myself a handy tool for making screenshots in python and it https://waylonwalker.com/screenshot-to-blog/ GitPython Import Repo from th", "content": "`GitPython` is a python api for your git repos, it can be quite handy when you\nneed to work with git from python.\n\n## Use Case\n\nI recently made myself a handy tool for making screenshots in python and it\nneed to do a git commit and push from within the script.  For this I reached\nfor `GitPython`.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/screenshot-to-blog/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/screenshot-to-blog-og_250x140.png\" alt=\"article cover for \n How I Quickly Capture Screenshots directly into My Blog\n\"/>\n          <p><strong>\n How I Quickly Capture Screenshots directly into My Blog\n</strong></p>\n      </a>\n  </div>\n\n\n## Installation\n\n`GitPython` is a python library hosted on pypi that we will want to install\ninto our virtual environments using pip.\n\n``` python\npip install GitPython\n```\n\n## Create a Repo Object\n\nImport Repo from the git library and create an instance of the `Repo` object by\ngiving it a path to the directory containing your `.git` directory.\n\n``` python\nfrom git import Repo\nrepo = Repo('~/git/waylonwalker.com/')\n```\n\n## Two interfaces\n\nfrom the docs\n\n> It provides abstractions of git objects for easy access of repository data,\n> and additionally allows you to access the git repository more directly using\n> either a pure python implementation, or the faster, but more resource\n> intensive git command implementation.\n\nI only needed to use the more intensive but familar to me git command\nimplementation to get me project off the ground.  There is a good\n[tutorial](https://gitpython.readthedocs.io/en/stable/tutorial.html#tutorial-label)\nto get you started with their pure python implementation in their docs.\n\n## Status\n\nRequesting the git status can be done as follows.\n\n> note I have prefixed my commands with >>> to distinguish between the command\n> I entered and the output.\n\n```\n>>> print(repo.git.status())\n\nOn branch main\nYour branch is ahead of 'origin/main' by 1 commit.\n  (use \"git push\" to publish your local commits)\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n        blog/\n```\n\nYou can even pass in flags that you would pass into the cli.\n\n```\n>>> print(repo.git.status(\"-s\"))\n?? blog/\n```\n\n## log\n\nExample of using the log.\n\n``` python\nprint(repo.git.log('--oneline', '--graph'))\n\n* 0d28bd8 fix broken image link\n* 3573928 wip screenshot-to-blog\n* fed9abc wip screenshot-to-blog\n* d383780 update for wsl2\n* ad72b14 wip screenshot-to-blog\n* 144c2f3 gratitude-180\n```\n\n## Find Deleted Files\n\nWe can even do things like find all files that have been deleted and the hash\nthey were deleted.\n\n``` python\nprint(repo.git.log('--diff-filter', 'D', '--name-only', '--pretty=format:\"%h\"'))\n```\n\nhttps://waylonwalker.com/git-find-deleted-files/\n\n> full post on finding deleted files\n\n## My Experience\n\nThis library seemed pretty straightforward and predicatable once I realized\nthere were two main implementations and that I would already be familar with\nthe more intensive git command implementation.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-lru-cache'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Cache a python function with lru_cache</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-frontmatter'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I load Markdown in Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-30", "edit_link": "https://github.com/edit/main/pages/til/python-git.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575194", "datetime": "2022-04-30 00:00:00+00:00", "slug": "til/python-git", "jinja": false, "output_html": "markout/til/python-git/index.html", "long_description": "GitPython I recently made myself a handy tool for making screenshots in python and it https://waylonwalker.com/screenshot-to-blog/ GitPython Import Repo from the git library and create an instance of the  from the docs It provides abstractions of git", "super_description": "GitPython I recently made myself a handy tool for making screenshots in python and it https://waylonwalker.com/screenshot-to-blog/ GitPython Import Repo from the git library and create an instance of the  from the docs It provides abstractions of git objects for easy access of repository data, I only needed to use the more intensive but familar to me git command Requesting the git status can be done as follows. note I have prefixed my commands with >>> to distinguish between the command You can ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e820>, next=<frontmatter.Post object at 0x7f3450616190>)"}, {"cover": "", "title": "Recover a lost git branch with checkout", "tags": ["git", "linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/git-recover-checkout.md", "description": "Once you give a branch the big D ( Checkout is your savior, all you need is the commit hash. We have all done this, you give  branch the big D only to realize i", "content": "Once you give a branch the big D (`git branch -D mybranch`) its gone,\nits lost from your history.  It's completely removed from your log.\nThere will be no reference to these commits, or will there?\n\n## TLDR\n\nCheckout is your savior, all you need is the commit hash.\n\n## Immediate Regret\n_your terminal is still open_\n\nWe have all done this, you give  branch the big D only to realize it was\nthe wrong one.  Don't worry, not all is lost, this is the easiest to\nrecover from.  When you run the delete command you will see something\nlike this.\n\n\n``` bash\n\u276f git branch -D new\nDeleted branch new (was bc02a64).\n```\n\nNotice the hash is right there is the hash of your commit.  You can use\nthat to get your content back.\n\n``` bash\ngit checkout -b bc02a64\ngit branch new\n\n# or in one swoop checkout your new branch at the `start-point` you want\ngit checkout -b new bc02a64\n```\n\n## Delayed reaction\n_you have closed your terminal_\n\nIf you have closed your terminal, or have deleted with a gui or\nsomething that does not tell you the hash as you run it, don't fret, all\nyour work is still there (as long as you have commited).  You just have\nto dig it out.  The reflog contains a list of all git operations that\nhave occurred on your git repo, and can be incredibly helpful with this.\n\n### Kinda Recent\n\nIf your botched delete operation was recent just diving right into the\nreflog will show it.\n\n``` bash\n\u276f git reflog\n03a3338 (main) HEAD@{0}: checkout: moving from new to main\nbc02a64 (HEAD -> another, new) HEAD@{4}: commit: newfile\n03a3338 (main) HEAD@{2}: checkout: moving from main to new\n```\n\n> In this example, I checked out a branch called new, commited a new\n> file, then switched back to main and deleted new.\n\nNow That I have the commit hash I can use the same solution to get my\nbranch back.\n\n``` bash\ngit checkout -b bc02a64\ngit branch new\n\n# or in one swoop checkout your new branch at the `start-point` you want\ngit checkout -b new bc02a64\n```\n\n### A lot has happened since then\n\nIf a lot has happened since then, you are going to need to pull out some\nmore tool to sift through that `reflog`, especially if its a big one.\nThe first suggestion that I have is to pipe into grep and look for\ncommit messages, or the name of the branch.\n\n\n``` bash\n\u276f git reflog | grep \"moving from\"\n03a3338 HEAD@{1}: checkout: moving from main to branch/oops\n03a3338 HEAD@{2}: checkout: moving from oops to main\n03a3338 HEAD@{4}: checkout: moving from main to oops\n03a3338 HEAD@{5}: checkout: moving from another to main\nbc02a64 HEAD@{6}: checkout: moving from main to another\n03a3338 HEAD@{7}: checkout: moving from another to main\nbc02a64 HEAD@{8}: checkout: moving from new to another\nbc02a64 HEAD@{9}: checkout: moving from bc02a64bbe5683d905e333e8dfcbbb91a5e77549 to new\nbc02a64 HEAD@{10}: checkout: moving from main to bc02a64bbe56\n03a3338 HEAD@{11}: checkout: moving from new to main\n03a3338 HEAD@{13}: checkout: moving from main to new\n03a3338 HEAD@{14}: checkout: moving from other to main\n03a3338 HEAD@{18}: checkout: moving from main to other\n```\n\ngit has a built in `--grep` flag, but I don't think there is a way to\nfilter by branch name, regardless it still is helpful.\n\n``` bash\n\u276f git reflog --grep new\nbc02a64 (HEAD -> another, new) HEAD@{4}: commit: newfile\n```\n\nMaybe if you can remember a filename you can pass in `-- <filename>`.\n\n``` bash\ngit reflog -- readme.md\n```\n\n## RTFM\n\nThere are many other ways to slice up a git log, and reflog alike. check\nout `man git log` for some more flags.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-reflog-is-an-alias'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Git reflog is an alias for git log -g</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-rebase-root'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Git rebase to the beginning of time</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-01", "edit_link": "https://github.com/edit/main/pages/til/git-recover-checkout.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575200", "datetime": "2022-03-01 00:00:00+00:00", "slug": "til/git-recover-checkout", "jinja": false, "output_html": "markout/til/git-recover-checkout/index.html", "long_description": "Once you give a branch the big D ( Checkout is your savior, all you need is the commit hash. We have all done this, you give  branch the big D only to realize it was Notice the hash is right there is the hash of your commit.  You can use If you have ", "super_description": "Once you give a branch the big D ( Checkout is your savior, all you need is the commit hash. We have all done this, you give  branch the big D only to realize it was Notice the hash is right there is the hash of your commit.  You can use If you have closed your terminal, or have deleted with a gui or If your botched delete operation was recent just diving right into the In this example, I checked out a branch called new, commited a new Now That I have the commit hash I can use the same solution ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616730>, next=<frontmatter.Post object at 0x7f3450621df0>)"}, {"cover": "", "title": "Adding __rich__ methods to python classes", "tags": ["python", "rich"], "status": "published", "templateKey": "til", "path": "pages/til/dunder_rich.md", "description": "Adding a ", "content": "Adding a `__render__` method that returns a rich renderable to any python class\nmakes it display this output if printed with rich.  This also includes being\nnested inside a rich Layout.\n\n\n``` python\nimport rich\nfrom rich.panel import Panel\n\n\nclass ShowMe:\n    def __rich__(self):\n        return Panel(\"hello\", border_style=\"gold1\")\n\n\nif __name__ == \"__main__\":\n    rich.print(ShowMe())\n```\n\n![results of printing ShowMe with rich](https://images.waylonwalker.com/dunder_rich_showme.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/dunk-is-my-new-diff-pager'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Dunk is my new diff pager</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/docker-minecraft-server'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Running a Minecraft Server in Docker</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-23", "edit_link": "https://github.com/edit/main/pages/til/dunder_rich.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575206", "datetime": "2021-12-23 00:00:00+00:00", "slug": "til/dunder_rich", "jinja": false, "output_html": "markout/til/dunder_rich/index.html", "long_description": "Adding a ", "super_description": "Adding a ", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621940>, next=<frontmatter.Post object at 0x7f34506044c0>)"}, {"cover": "", "title": "Ease into htmx with htmx-get", "tags": ["webdev", "webdev", "webdev"], "status": "published", "templateKey": "til", "path": "pages/til/htmx-get.md", "description": "I recently attended Start with some html boilerplate, pop in a script tag to add the Save this as  If you don Now the page has a button that is ready to replace", "content": "I recently attended\n[python web conf 2022](https://2022.pythonwebconf.com/)\nand after seeing some incredible presentations on it I am excited to\ngive [htmx](https://htmx.org/) a try.\n\n## The base page\n\nStart with some html boilerplate, pop in a script tag to add the\nhtmx.org script, and a button that says click me.  I added just a tish\nof style so that it does not sear your delicate developer your eyes.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title></title>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style>\n      html  { background: #1f2022; color: #eefbfe; font-size: 64px; }\n      button {font-size: 64px;}\n      body { height: 100vh; width: 100vw; display: flex; justify-content: center; align-items:center; }\n    </style>\n    <!-- Load from unpkg -->\n    <script src=\"https://unpkg.com/htmx.org@1.7.0\"></script>\n  </head>\n  <body>\n  <!-- have a button POST a click via AJAX -->\n  <button hx-get=\"/partial\" hx-swap=\"outerHTML\">\n    Click Me\n  </button>\n\n  </body>\n</html>\n```\n\nSave this as `index.html` and fire up a webserver and you will be\npresented with this big beefcake of a button.\n\n![big beefcake of a button](https://images.waylonwalker.com/htmx-get-til-click-me.png)\n\nIf you don't have a development server preference I reccomend opening\nthe terminal and running `python -m http.server 8000` then opening your\nbrowser to `localhost:8000`\n\n## The Partial\n\nNow the page has a button that is ready to replace itself, notice the\n`hx-swap=\"outerHTML\">`, with the contents of /partial. To create a\nstatic api of sorts we can simply host a partial page in a file at\n`/partial/index.html` with the following contents.\n\n```html\n<p>\nhello\n</p>\n```\n\n![the final results](https://images.waylonwalker.com/htmx-get-til-hello.png)\n\n<script src=\"https://unpkg.com/htmx.org@1.7.0\"></script>\n\n## Tree\n\nTo make it a bit clearer here is what the file tree looks like after\nsetting this up.\n\n```txt\n~/git/htmx \ue235 v3.9.7 (git)\n\u276f tree\n.\n\u251c\u2500\u2500 clicked\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.html\n\u2514\u2500\u2500 index.html\n```\n\n## Demo\n\nI added htmx to this page and setup a partial below, check out this\neaster egg.\n\n<button hx-get=\"./partial\" hx-swap=\"outerHTML\">\n    Click Me\n</button>\n\n\n## Links\n\n* [python web conf 2022](https://2022.pythonwebconf.com/)\n* [htmx](https://htmx.org/)\n* [big beefcake of a button](https://images.waylonwalker.com/htmx-get-til-click-me.png)\n* [the final results](https://images.waylonwalker.com/htmx-get-til-hello.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/install-obs-flatpak'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Install obs flatpak</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/gradual-typing-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Gradual Typing in Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-25", "edit_link": "https://github.com/edit/main/pages/til/htmx-get.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575211", "datetime": "2022-03-25 00:00:00+00:00", "slug": "til/htmx-get", "jinja": false, "output_html": "markout/til/htmx-get/index.html", "long_description": "I recently attended Start with some html boilerplate, pop in a script tag to add the Save this as  If you don Now the page has a button that is ready to replace itself, notice the To make it a bit clearer here is what the file tree looks like after I", "super_description": "I recently attended Start with some html boilerplate, pop in a script tag to add the Save this as  If you don Now the page has a button that is ready to replace itself, notice the To make it a bit clearer here is what the file tree looks like after I added htmx to this page and setup a partial below, check out this", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621280>, next=<frontmatter.Post object at 0x7f34506326a0>)"}, {"cover": "", "title": "fugitive verbose commit", "tags": ["git", "vim"], "status": "published", "templateKey": "til", "path": "pages/til/fugitive-commit-verbose.md", "description": "Fugitive comes with a pretty sick way to commit files and see the diff at the example of a verbose commit in fugitive", "content": "Fugitive comes with a pretty sick way to commit files and see the diff at the\nsame time with verbose commit.  Opening the fugitive menu with `:G` brings up\nyour git status, you can stage files with `s`, unstage them with `u`, toggle\nthem with `-`, and toggle their diff with `>`.  Once you have staged your files\nfor commit, you can commit with `cc`, but today I found that you can commit\nverbose with `cvc`.  This brings up not only a commit widow with your git\nstatus shown, but the diff that you are about to commit.\n\n![fugitive verbose commit example](https://images.waylonwalker.com/fugitive-verbose-commit.png)\n\n> example of a verbose commit in fugitive\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/fzf-wallpaper'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>fuzzy wallpaper with fzf</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/ewhich'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Bash function to edit scripts faster</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-22", "edit_link": "https://github.com/edit/main/pages/til/fugitive-commit-verbose.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575217", "datetime": "2021-12-22 00:00:00+00:00", "slug": "til/fugitive-commit-verbose", "jinja": false, "output_html": "markout/til/fugitive-commit-verbose/index.html", "long_description": "Fugitive comes with a pretty sick way to commit files and see the diff at the example of a verbose commit in fugitive", "super_description": "Fugitive comes with a pretty sick way to commit files and see the diff at the example of a verbose commit in fugitive", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e5e0>, next=<frontmatter.Post object at 0x7f3450604940>)"}, {"cover": "", "title": "A Good Use for global .gitignore", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/global-gitignore-considered-useful.md", "description": "I Within the past year I have added some tools to my personal setup that are not Like any  Once I had this file, I stowed it into  Always stow your dotfiles, do", "content": "I've never found a great use for a global `.gitignore` file.  Mostly I fear\nthat by adding a lot of the common things like `.pyc` files it will be missing\nfrom the project and inevitably be committed to the project by someone else.\n\n## Personal Tools\n\nWithin the past year I have added some tools to my personal setup that are not\nrequired to run the project, but works really well with my setup.  They are\n`direnv` and `pyflyby`.  Since these both support project level configuration,\nare less common, and not in most  `.gitignore` templates they make for great\ncandidates to add to a global `.gitignore` file.\n\n## create the config\n\nLike any `.gitignore` it supports gits wildignore syntax.  I made a\n`~/dotfiles/git/.global_gitignore` file, and added the following to it.\n\n```bash\n.envrc\n.pyflyby\n```\n\nOnce I had this file, I stowed it into `~/.global_gitignore`.\n\n``` bash\ncd ~/dotfiles/\nstow git\n```\n\n> Always stow your dotfiles, don't set yourself up for wondering why your next\n> machine is not working right.\n\n## stow note\n\nNote, the reason that it is a `~/.global_gitignore` and not a `~/.gitignore` is\nthat I was unable to stow a `.gitignore file`.  They must be ignored by\ndefault, and I was unable to figure out how to turn it back on.\n\n## set the config\n\nNext run this command to add the `~/.global_gitignore` to your gitignore as a\nglobal excludesfile.\n\n```bash\ngit config --global core.excludesfile ~/.global_gitignore\n```\n\n## commit it\n\nOnce you have done this you should have both your `~/dotfiles/git/.gitconfig`\nand `~/dotfiles/.global_gitignore` ready to commit.\n\n```bash\ncd ~/dotfiles\n\ngit add git/.global_gitignore\ngit add git/.gitconfig\n\ngit commit -m \"add global_gitignore\"\n```\n\n## You didn't stow your .gitconfig\n\n_the shame!_\n\nNo worries, lets get it into your dotfiles repo and stow it.\n\n```bash\ncd ~/dotfiles\n\n# if you dont have a git directory make it.\nmkdir git\nmv ~/.gitconfig ~/devtainer/git\n# now use stow to symlink it back to where it was\n# so git works as expected.\nstow git\n```\n\n## You dont have a dotfiles directory\n\n_double shame \ud83d\ude32_\n\nIf you dont already have a dotfiles directry you should.  It is important for\nit to be in your home directory for stow to work properly, if you really don't\nwant it there, look up how to configure stow to account for this.\n\n```bash\n# make a dotfiles directory and go there\nmkdir ~/dotfiles\ncd ~/dotfiles\n\n# make it a git repo\ngit init\n\n# if you dont have a git directory make it.\n\nmkdir git\nmv ~/.gitconfig ~/devtainer/git\n# now use stow to symlink it back to where it was\n# so git works as expected.\nstow git\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/gpg-sign-git-ssh'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>GPG signing commits over ssh</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/glances-docker'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Glances can watch docker processes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-30", "edit_link": "https://github.com/edit/main/pages/til/global-gitignore-considered-useful.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575223", "datetime": "2022-01-30 00:00:00+00:00", "slug": "til/global-gitignore-considered-useful", "jinja": false, "output_html": "markout/til/global-gitignore-considered-useful/index.html", "long_description": "I Within the past year I have added some tools to my personal setup that are not Like any  Once I had this file, I stowed it into  Always stow your dotfiles, don Note, the reason that it is a  Next run this command to add the  Once you have done this", "super_description": "I Within the past year I have added some tools to my personal setup that are not Like any  Once I had this file, I stowed it into  Always stow your dotfiles, don Note, the reason that it is a  Next run this command to add the  Once you have done this you should have both your  No worries, lets get it into your dotfiles repo and stow it. If you dont already have a dotfiles directry you should.  It is important for", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506283a0>, next=<frontmatter.Post object at 0x7f345061ba90>)"}, {"cover": "", "title": "Squoosh cli", "tags": ["cli", "cli", "webdev"], "status": "published", "templateKey": "til", "path": "pages/til/squoosh-cli.md", "description": "Today I discovered a sweet new cli for compressing images. First the main feature of squoosh is a  What is even cooler is that once you have settings you are ha", "content": "Today I discovered a sweet new cli for compressing images.\n[squoosh cli](https://github.com/GoogleChromeLabs/squoosh/tree/dev/cli)\nis a wasm powered cli that supports a bunch of formats that I would want to\nconvert my website images to.\n\n## Web App\n\nFirst the main feature of squoosh is a [web app](https://squoosh.app) that\nmakes your images smaller right in the browser, using the same wasm.  It's\nsweet!  There is a really cool swiper to compare the output image with the\noriginal, and graphical dials to change your settings.\n\n## CLI\n\nWhat is even cooler is that once you have settings you are happy with and are\nreally cutting down those kb's on your images, there is a copy cli command\nbutton!  If you have npx (which you should if you have nodejs and npm) already\ninstalled it just works without installing anything more.\n\n![The button on squoosh.app](https://images.waylonwalker.com/squoosh-cli-button.png)\n\n\n## Converting all of my png's to webp\n\nI copied the command that it gave me for converting to webp, and set it up to\nrun on all of my pngs.\n\n```\nnpx @squoosh/cli --webp \\\n  '{\"quality\":75 \\\n    \"target_size\":0 \\\n    \"target_PSNR\":0 \\\n    \"method\":4 \\\n    \"sns_strength\":50 \\\n    \"filter_strength\":60 \\\n    \"filter_sharpness\":0 \\\n    \"filter_type\":1 \\\n    \"partitions\":0 \\\n    \"segments\":4 \\\n    \"pass\":1 \\\n    \"show_compressed\":0 \\\n    \"preprocessing\":0 \\\n    \"autofilter\":0 \\\n    \"partition_limit\":0 \\\n    \"alpha_compression\":1 \\\n    \"alpha_filtering\":1 \\\n    \"alpha_quality\":100 \\\n    \"lossless\":0 \\\n    \"exact\":0 \\\n    \"image_hint\":0 \\\n    \"emulate_jpeg_size\":0 \\\n    \"thread_level\":0 \\\n    \"low_memory\":0 \\\n    \"near_lossless\":100 \\\n    \"use_delta_palette\":0 \\\n    \"use_sharp_yuv\":0 \\\n    }' \\\n    static/*.png -d squoosh-webp\n```\n\nI opened my images repo and converted all pngs to webp using the command above.\nI got 94% compression on my existing pngs without resizing anything.  This is\ndang impressive, and not too hard to do.  I do want to refactor my images site\nat some point and include this as part of the ci system.\n\n![resulting file sizes for converting png to wepb.](https://images.waylonwalker.com/squoosh-webp-results.png)\n\nI also converted to avif, but it sent all my cpus to 100 for quite awhile, for\nonly another 2MB total.  Not sure if its worth it or not.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/stow-simulate'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How to Properly Simulate Stow</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/site-down'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Did my site build just go down?</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-29", "edit_link": "https://github.com/edit/main/pages/til/squoosh-cli.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575228", "datetime": "2022-01-29 00:00:00+00:00", "slug": "til/squoosh-cli", "jinja": false, "output_html": "markout/til/squoosh-cli/index.html", "long_description": "Today I discovered a sweet new cli for compressing images. First the main feature of squoosh is a  What is even cooler is that once you have settings you are happy with and are I copied the command that it gave me for converting to webp, and set it u", "super_description": "Today I discovered a sweet new cli for compressing images. First the main feature of squoosh is a  What is even cooler is that once you have settings you are happy with and are I copied the command that it gave me for converting to webp, and set it up to I opened my images repo and converted all pngs to webp using the command above. I also converted to avif, but it sent all my cpus to 100 for quite awhile, for", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616160>, next=<frontmatter.Post object at 0x7f3450621700>)"}, {"cover": "", "title": "Implement --pdb in a python cli", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/python-auto-pdb.md", "description": "Adding a ", "content": "Adding a `--pdb` flag to your applications can make them much easier for\nthose using it to debug your application, especially if your applicatoin\nis a cli application where the user has much fewer options to start this\nfor themselves.  To add a pdb flag `--pdb` to your applications you will\nneed to wrap your function call in a try/except, and start a post_mortem\ndebugger. I give credit to\n[this stack overflow post](https://stackoverflow.com/questions/242485/starting-python-debugger-automatically-on-error)\nfor helping me figure this out.\n\n``` python\nimport pdb, traceback, sys\n\n\ndef bombs():\n    a = []\n    print(a[0])\n\n\nif __name__ == \"__main__\":\n    if \"--pdb\" in sys.argv:\n        try:\n            bombs()\n        except:\n            extype, value, tb = sys.exc_info()\n            traceback.print_exc()\n            pdb.post_mortem(tb)\n    else:\n        bombs()\n```\n\n## Using --pdb\n\n``` python\npython yourfile.py --pdb\n```\n\n![running this example with and without --pdb flag](https://images.waylonwalker.com/using-pdb-flag-from-cli.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-base-exception'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Don't inherit from python BaseException, Here's why.</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pytest-mock-basics'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pytest-mock Basics</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-13", "edit_link": "https://github.com/edit/main/pages/til/python-auto-pdb.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575236", "datetime": "2022-01-13 00:00:00+00:00", "slug": "til/python-auto-pdb", "jinja": false, "output_html": "markout/til/python-auto-pdb/index.html", "long_description": "Adding a ", "super_description": "Adding a ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609850>, next=<frontmatter.Post object at 0x7f34505f8190>)"}, {"cover": "", "title": "Installing system nerd-fonts with ansible", "tags": ["dotfiles", "ansible"], "status": "published", "templateKey": "til", "path": "pages/til/ansible_install_fonts.md", "description": "Lately I This is one of those things that can be a total pain to get right on make sure your user fonts directory exists chech if the font you want exists on yo", "content": "Lately I've been on a journey to really clean up my dotfiles, and I was\ncompletely missing fonts.  I noticed jumping into a new vm I had a bunch\nof broken devicons when using Telescope with the devicons plugins.\n\nThis is one of those things that can be a total pain to get right on\nsome systems, and it's so nice when it's just there for you pretty much\nout of the box.\n\n1. make sure your user fonts directory exists\n2. chech if the font you want exists on your machine\n3. download and unzip fonts into the fonts directory\n4. repeat 2-3 for all the fonts you use on your system\n\n``` yaml\n- name: ensure fonts directory\n  file:\n    path: \"{{ lookup('env', 'HOME') }}/.fonts\"\n    state: directory\n\n- name: Hack exists\n  shell: \"ls {{ lookup('env', 'HOME') }}/.fonts/Hack*Nerd*Font*Complete*\"\n  register: hack_exists\n  ignore_errors: yes\n\n- name: Download Hack\n  when: hack_exists is failed\n  ansible.builtin.unarchive:\n    src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip\n    dest: \"{{ lookup('env', 'HOME') }}/.fonts/\"\n    remote_src: yes\n\n```\n\nhttps://www.youtube.com/watch?v=2MEmsinxRK4\n\n> I made a YT based on this post\n\n## Links\n\n* ansible docs for [builtin.unarchive](https://docs.ansible.com/ansible/latest/collections/ansible/builtin/unarchive_module.html)\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/setup-yamlls/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/setup-yamlls-og_250x140.png\" alt=\"article cover for \n Setup a yaml schema | yamlls for a silky smooth setup\n\"/>\n          <p><strong>\n Setup a yaml schema | yamlls for a silky smooth setup\n</strong></p>\n      </a>\n  </div>\n\n\n> check out how I install yamlls using ansible\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/ansible_install_if_not_callable'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Installing packages with ansible only if they do not exist</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/ag-ahead'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>ag silver searcher look ahead and look behind</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-25", "edit_link": "https://github.com/edit/main/pages/til/ansible_install_fonts.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575242", "datetime": "2021-12-25 00:00:00+00:00", "slug": "til/ansible_install_fonts", "output_html": "markout/til/ansible_install_fonts/index.html", "long_description": "Lately I This is one of those things that can be a total pain to get right on make sure your user fonts directory exists chech if the font you want exists on your machine download and unzip fonts into the fonts directory repeat 2-3 for all the fonts ", "super_description": "Lately I This is one of those things that can be a total pain to get right on make sure your user fonts directory exists chech if the font you want exists on your machine download and unzip fonts into the fonts directory repeat 2-3 for all the fonts you use on your system https://www.youtube.com/watch?v=2MEmsinxRK4 I made a YT based on this post ansible docs for  https://waylonwalker.com/setup-yamlls/ check out how I install yamlls using ansible", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616b80>, next=<frontmatter.Post object at 0x7f345060ef10>)"}, {"cover": "", "title": "fuzzy wallpaper with fzf", "tags": ["linux", "cli", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/fzf-wallpaper.md", "description": "I really appreciate that in linux anything can be scripted, including I set my default wallpaper with  Leaning in on feh, we can use fzf to pick a wallpaper fro", "content": "I really appreciate that in linux anything can be scripted, including\nsetting the wallpaper.  So everytime I disconnect a monitor I can just\nrerun my script and fix my wallpaper without digging deep into the ui\nand fussing through a bunch of settings.\n\n``` bash\nfeh --bg-scale ~/.config/awesome/wallpaper/my_wallpaper.png\n```\n\n> I set my default wallpaper with `feh` using the command above.\n\nLeaning in on feh, we can use fzf to pick a wallpaper from a directory\nfull of wallpapers with very few keystrokes.\n\n```\nalias wallpaper='ls ~/.config/awesome/wallpaper | fzf --preview=\"feh --bg-scale ~/.config/awesome/wallpaper/{}\" | xargs -I {} feh --bg-scale ~/.config/awesome/wallpaper/{}'\n```\n\n> I have mine alias'd to `wallpaper` so that I can quickly run it from\n> my terminal.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-checkout-worktree'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Git Worktrees are not so Scary</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/fugitive-commit-verbose'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>fugitive verbose commit</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-19", "edit_link": "https://github.com/edit/main/pages/til/fzf-wallpaper.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575247", "datetime": "2022-01-19 00:00:00+00:00", "slug": "til/fzf-wallpaper", "jinja": false, "output_html": "markout/til/fzf-wallpaper/index.html", "long_description": "I really appreciate that in linux anything can be scripted, including I set my default wallpaper with  Leaning in on feh, we can use fzf to pick a wallpaper from a directory I have mine alias", "super_description": "I really appreciate that in linux anything can be scripted, including I set my default wallpaper with  Leaning in on feh, we can use fzf to pick a wallpaper from a directory I have mine alias", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060ea90>, next=<frontmatter.Post object at 0x7f345060e070>)"}, {"cover": "", "title": "Cache a python function with lru_cache", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-lru-cache.md", "description": "The easiest way to speed up any code is to run less code.  A common technique The easiest and most common to setup in python is a builtin functools.lru Any time", "content": "The easiest way to speed up any code is to run less code.  A common technique\nto reduce the amount of repative work is to implement a cache such that the\nnext time you need the same work done, you don't need to recompute anything you\ncan simply retrieve it from a cache.\n\n## lru_cache\n\nThe easiest and most common to setup in python is a builtin functools.lru_cache.\n\n```python\nfrom functools import lru_cache\n\n@lru_cache\ndef get_cars():\n    print('pulling cars data')\n    return pd.read_csv(\"https://waylonwalker.com/cars.csv\", storage_options = {'User-Agent': 'Mozilla/5.0'})\n```\n\n## when to use lru_cache\n\nAny time you have a function where you expect the same results each time a\nfunction is called with the same inputs, you _can_ use lru_cache.\n\n> when same *args, **kwargs always return the same value\n\nlru_cache only works for one python process.  If you are running multiple\nsubprocesses, or running the same script over and over, lru_cache will not\nwork.\n\n> lru_cache only caches in a single python process\n\n## max_size\n\nlru_cache can take an optional parameter `maxsize` to set the size of your\ncache.  By default its set to `128`, if you want to store more or less items in\nyour cache you can adjust this value.\n\nThe `get_cars` example is a bit of a unique one.  As\n[anthonywritescode](https://www.youtube.com/watch?v=K0Q5twtYxWY) points out\nthis implementation is behaving like a singleton, and we can optimize the size\nof the cache by allocating exactly how many items we will ever have in it by\nsetting its value to 1.\n\n```python\nfrom functools import lru_cache\n\n@lru_cache(maxsize=1)\ndef get_cars():\n    print('pulling cars data')\n    return pd.read_csv(\"https://waylonwalker.com/cars.csv\", storage_options = {'User-Agent': 'Mozilla/5.0'})\n```\n\n## My example stretches the rule a little bit\n\nThe example above does a web request.  As a Data Engineer I often write scripts\nthat run for a short time then stop.  I do not expect the output of this\nfunction to change during the runtime of this job, and if it did I may actually\nwant them to match anyways.\n\n> web request do change their output\n\nIf I were building webapps, or some sort of process that was running for a long\ntime.  Something that starts and waits for work, this may not be a good\napplication of lru_cache.  If this process is running for days or months my\nassumption that the request does not change is no longer valid.\n\n## There's also a typed kwarg for lru_cache\n\nThis one is new to me but you can cache not only on the value, but the type of\nthe value being passed into your function.\n\n> (from the docstring)\n> If *typed* is True, arguments of different types will be cached separately.\n> For example, f(3.0) and f(3) will be treated as distinct calls with distinct\n> results.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-markdown-ast-paragraph'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Using a Python Markdown ast to Find All Paragraphs</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-git'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Using Git from Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-28", "edit_link": "https://github.com/edit/main/pages/til/python-lru-cache.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575253", "datetime": "2022-03-28 00:00:00+00:00", "slug": "til/python-lru-cache", "jinja": false, "output_html": "markout/til/python-lru-cache/index.html", "long_description": "The easiest way to speed up any code is to run less code.  A common technique The easiest and most common to setup in python is a builtin functools.lru Any time you have a function where you expect the same results each time a when same  lru lru lru ", "super_description": "The easiest way to speed up any code is to run less code.  A common technique The easiest and most common to setup in python is a builtin functools.lru Any time you have a function where you expect the same results each time a when same  lru lru lru The  The example above does a web request.  As a Data Engineer I often write scripts web request do change their output If I were building webapps, or some sort of process that was running for a long This one is new to me but you can cache not only o", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604610>, next=<frontmatter.Post object at 0x7f34506095e0>)"}, {"cover": "", "title": "python web conf complete", "tags": ["python"], "status": "draft", "templateKey": "til", "path": "pages/til/python-web-conf-complete.md", "description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use", "content": "I love the freedom of writing in markdown.  It allows me to write content from\nthe comfort of my editor with very little focus on page style.  It turns out\nthat markdown is also a fantastic tool for creating slides.\n\n## Present from the terminal\n\nI will most often just present right from the terminal using\n[lookatme](https://lookatme.readthedocs.io/en/latest/index.html).  Presenting\nfrom the terminal lets me see the results quick right from where I am editing.\nIt also allows me to pop into other terminal applications quickly.\n\n## reveal.js\n\nI sometimes also use reveal.js, but that's for another post.  It is handy that\nit lives in the browser and is easier to share.\n\n## New Slides\n\nI leverage auto slides when I write my slides in markdown.  The largest\nheading, usually an h2 for me, becomes the new slide marker.  Otherwise my\nprocess is not much different, It just becomes a shorter writing style.\n\n## Installation\n\nlookatme is a python library that is available on pypi, you can install it with\nthe pip command.\n\n```\npython -m pip install lookatme\n```\n\nSince it's a command line application it works great with pipx.  This prevents\nthe need to manage virtual environments yourself or ending up with packages\nclashing in your system python environment.\n\n```\npipx install lookatme\n```\n\n## From my terminal\n\n``` bash\nlookatme {filepath}\n```\n\nI just run it with pipx.\n\n``` bash\npipx run \\\n --spec git+https://github.com/waylonwalker/lookatme \\\n lookatme {filepath} \\\n --live-reload \\\n --style gruvbox-dark\n```\n\n> Note, I use a custom fork of lookatme.  It's schema validation did not like\n> the date format of my blog posts, so I have a one line fix built into my\n> fork that is pretty specific to me.\n\n## From Neovim\n_most often what I do_\n\nFrom Neovim I use a plugin I created for sending out commands to tmux called\n[telegraph](https://github.com/WaylonWalker/Telegraph.nvim).  This sends the\nabove command to a new session that I can bounce between quickly.\n\n``` vim\nnnoremap <leader><leader>s <cmd>lua require'telegraph'.telegraph({cmd='pipx run --spec git+https://github.com/waylonwalker/lookatme lookatme {filepath} --live-reload --style gruvbox-dark', how='tmux'})<CR>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-cache-key'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>How I make cache-keys from python objects</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-lru-cache'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Cache a python function with lru_cache</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2100-03-20", "edit_link": "https://github.com/edit/main/pages/til/python-web-conf-complete.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575259", "datetime": "2100-03-20 00:00:00+00:00", "slug": "til/python-web-conf-complete", "jinja": false, "output_html": "markout/til/python-web-conf-complete/index.html", "long_description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use reveal.js, but that I leverage auto slides when I write my slides in markdown.  The large", "super_description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use reveal.js, but that I leverage auto slides when I write my slides in markdown.  The largest lookatme is a python library that is available on pypi, you can install it with Since it I just run it with pipx. Note, I use a custom fork of lookatme.  It From Neovim I use a plugin I created for sending out commands to tmux called", "year": 2100, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060eb80>, next=<frontmatter.Post object at 0x7f345060e820>)"}, {"cover": "", "title": "How I make cache-keys from python objects", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-cache-key.md", "description": "When I need a consistent key for a pythohn object I often reach for Yesterday we talked about setting up a persistant cache with python diskcache. https://waylo", "content": "When I need a consistent key for a pythohn object I often reach for\n`hashlib.md5`  It works for me and the use cases I have.\n\n## diskcache\n\nYesterday we talked about setting up a persistant cache with python diskcache.\nIn order to make this really work we need a good way to make consistent cache\nkeys from some sort of python object.\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/python-diskcache/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/python-diskcache-og_250x140.png\" alt=\"article cover for \n How I setup a sqlite cache in python\n\"/>\n          <p><strong>\n How I setup a sqlite cache in python\n</strong></p>\n      </a>\n  </div>\n\n\n## hash\n\n_does not work_\n\nMy first thought was to just hash the files, this will give me a unique key for\neach.  This will work, and give you a consistant key for one and only one given\npython process.  If you start a new interpreter you will get different keys.\n\n\n```python\nwaylonwalker.com on \ue0a0 main [$\u2718!?] via \ue38e v5.1.5 \ue235 v3.8.0 (waylonwalker.com)\n\u276f ipython\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hash(\"waylonwalker\")\n-3862245013515310359\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hash(\"waylonwalker\")\n-3862245013515310359\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f exit\n\nwaylonwalker.com on \ue0a0 main [$\u2718!?] via \ue38e v5.1.5 \ue235 v3.8.0 (waylonwalker.com)\n\u276f ipython\n\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hash(\"waylonwalker\")\n-83673051278873734\n\n```\n\n> here is a snapshot of my terminal proving that you can get the same hash in one session, but it changes when you restart ipython.\n\n## hashlib.md5\n\nHere is a quick couple ipython sessions showing that md5 cache is consistent accross multiple sessions.\n\n```python\nwaylonwalker.com on \ue0a0 main [$\u2718!?] via \ue38e v5.1.5 \ue235 v3.8.0 (waylonwalker.com) on \ue33d (us-east-1)\n\u276f ipython\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hashlib.md5(\"waylonwalker\")\n[PYFLYBY] import hashlib\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 <ipython-input-1-1537c4473c74>:1 in <module>                                                     \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\nTypeError: Unicode-objects must be encoded before hashing\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hashlib.md5(\"waylonwalker\".encode(\"utf-8\"))\n<md5 HASH object @ 0x7fe4ba6832d0>\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hashlib.md5(\"waylonwalker\".encode(\"utf-8\")).hexdigest()\n'1c7c1073ca096ffdb324471770911fe2'\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hashlib.md5(\"waylonwalker\".encode(\"utf-8\")).hexdigest()\n'1c7c1073ca096ffdb324471770911fe2'\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hashlib.md5(\"waylonwalker\".encode(\"utf-8\")).hexdigest()\n'1c7c1073ca096ffdb324471770911fe2'\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f exit\n\n\nwaylonwalker.com on \ue0a0 main [$\u2718!?] via \ue38e v5.1.5 \ue235 v3.8.0 (waylonwalker.com) on \ue33d (us-east-1) took 47s\n\u276f ipython\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f hashlib.md5(\"waylonwalker\".encode(\"utf-8\")).hexdigest()\n[PYFLYBY] import hashlib\n'1c7c1073ca096ffdb324471770911fe2'\n\n\n```\n\n## key for diskcache\n\nSince it is consistent we can use it as a cache key for diskcache operations.\nI setup a little funciton that allows me to pass a bunch of differnt things in\nto cache.  As long as the __str__ method exists and is gives the data that you\nwant to cache key on, this will work.\n\n```python\ndef make_hash(self, *keys: str) -> str:\n    str_keys = [str(key) for key in keys]\n    return hashlib.md5(\"\".join(str_keys).encode(\"utf-8\")).hexdigest()\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/python-args-kwargs/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/python-args-kwargs-og_250x140.png\" alt=\"article cover for \n understanding python \\*args and \\*\\*kwargs\n\"/>\n          <p><strong>\n understanding python \\*args and \\*\\*kwargs\n</strong></p>\n      </a>\n  </div>\n\n\n> If the *args is confusing, I have a full article on `*args` and `**kwargs`.\n\n## See it in action\n\nHere you can see it in action.  Anything passed into the function gets to be\npart of the key.\n\n```\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f def make_hash(self, *keys: str) -> str:\n...:     str_keys = [str(key) for key in keys]\n...:     return hashlib.md5(\"\".join(str_keys).encode(\"utf-8\")).hexdigest()\n...:\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f make_hash(1, \"one\", \"1\", 1.0)\n'73901d019df012a1cdab826ce301217d'\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f exit\n\n\nwaylonwalker.com on \ue0a0 main [$\u2718!?] via \ue38e v5.1.5 \ue235 v3.8.0 (waylonwalker.com) on \ue33d (us-east-1) took 19m19s\n\u276f\n\nwaylonwalker.com on \ue0a0 main [$\u2718!?] via \ue38e v5.1.5 \ue235 v3.8.0 (waylonwalker.com) on \ue33d (us-east-1)\n\u276f ipython\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f def make_hash(self, *keys: str) -> str:\n...:     str_keys = [str(key) for key in keys]\n...:     return hashlib.md5(\"\".join(str_keys).encode(\"utf-8\")).hexdigest()\n[PYFLYBY] import hashlib\n\nwaylonwalker \u21aamain v3.8.0 ipython\n\u276f make_hash(1, \"one\", \"1\", 1.0)\n'73901d019df012a1cdab826ce301217d'\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-dict-get'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>python dict get</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-base-exception'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Don't inherit from python BaseException, Here's why.</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-30", "edit_link": "https://github.com/edit/main/pages/til/python-cache-key.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575264", "datetime": "2022-03-30 00:00:00+00:00", "slug": "til/python-cache-key", "jinja": false, "output_html": "markout/til/python-cache-key/index.html", "long_description": "When I need a consistent key for a pythohn object I often reach for Yesterday we talked about setting up a persistant cache with python diskcache. https://waylonwalker.com/til/python-diskcache/ My first thought was to just hash the files, this will g", "super_description": "When I need a consistent key for a pythohn object I often reach for Yesterday we talked about setting up a persistant cache with python diskcache. https://waylonwalker.com/til/python-diskcache/ My first thought was to just hash the files, this will give me a unique key for here is a snapshot of my terminal proving that you can get the same hash in one session, but it changes when you restart ipython. Here is a quick couple ipython sessions showing that md5 cache is consistent accross multiple se", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fdb80>, next=<frontmatter.Post object at 0x7f3450609850>)"}, {"cover": "", "title": "Make Kedro Runs Beautiful", "tags": ["python", "kedro", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/kedro-rich.md", "description": "Kedro rich is a very new and unstable (it There is no pypi package yet, but it You can run your pipeline just as you normally would, except you get progress Lis", "content": "Kedro rich is a very new and unstable (it's good, just not ready) plugin for\nkedro to make the command line prettier.\n\n## Install kedro rich\n\nThere is no pypi package yet, but it's on github.  You can pip install it with\nthe git url.\n\n``` bash\npip install git+https://github.com/datajoely/kedro-rich\n```\n\n## Kedro run\n\nYou can run your pipeline just as you normally would, except you get progress\nbars and pretty prints.\n\n```\nkedro run\n```\n\n![kedro rich pretty run](https://images.waylonwalker.com/kedro-rich-run.png)\n\n\n## Kedro catalog\n\nListing out catalog entries from the command line now print out a nice pretty\ntable.\n\n``` bash\nkedro catalog list\n```\n\n![kedro rich catalog list table output](https://images.waylonwalker.com/kedro-rich-catalog-list.png)\n\n## Give it a star\n\nGo to the [GitHub repo](https://github.com/datajoely/kedro-rich) and give it a\nstar, Joel deserves it.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/kedro-ubuntu-impish'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Running Kedro on Ubuntu 21.10 Impish Indri</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/kedro-new-dependencies'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Add New Dependencies to Your Kedro Project</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-11", "edit_link": "https://github.com/edit/main/pages/til/kedro-rich.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575270", "datetime": "2022-03-11 00:00:00+00:00", "slug": "til/kedro-rich", "jinja": false, "output_html": "markout/til/kedro-rich/index.html", "long_description": "Kedro rich is a very new and unstable (it There is no pypi package yet, but it You can run your pipeline just as you normally would, except you get progress Listing out catalog entries from the command line now print out a nice pretty Go to the ", "super_description": "Kedro rich is a very new and unstable (it There is no pypi package yet, but it You can run your pipeline just as you normally would, except you get progress Listing out catalog entries from the command line now print out a nice pretty Go to the ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd160>, next=<frontmatter.Post object at 0x7f345061bca0>)"}, {"cover": "", "title": "Git Worktrees are not so Scary", "tags": ["git", "cli", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/git-checkout-worktree.md", "description": "So worktrees, I always thought they were a big scary things.  Turns out they I thought you had to be all in or worktrees or normal git, but not both.  When Maki", "content": "So worktrees, I always thought they were a big scary things.  Turns out they\nare much simpler than I thought.\n\n## Myth #1\n_no special setup_\n\nI thought you had to be all in or worktrees or normal git, but not both.  When\nI see folks go all in on worktrees they start with a bare repo, while its true\nthis is the way you go all in, its not true that this is required.\n\n## Lets make a worktree\n\nMaking a worktree is as easy as making a branch.  It's actually just a branch\nthat lives in another place in your filesystem.\n\n``` bash\n# checkout a new worktree called compare based on main in /tmp/project\ngit worktree add -b compare /tmp/project main\n\n# checkout a new worktree called compare based on HEAD in /tmp/project\ngit worktree add -b compare /tmp/project\n\n# checkout a worktree from an existing feature branch in /tmp/project\ngit worktree add /tmp/project my-existing-feature-branch\n```\n\n> The worktree that you create is considered a _linked worktree_, while the\n> original worktree is called the _main worktree_\n\nNote that I put this in my tmp directory because I don't expect it to live very\nlong, my recent use case was to compare two files after a big formatting\nchange.  You put these where you want, but dont come at me when your /tmp gets\nwiped and you loose work.\n\n ## Myth #2\n _they are hidden mysterious creatures_\n\nJust like branches git has some nice commands to help us understand what\nworktrees we have on our system.  Firstly we have something very specific to\nworktrees to list them out.\n\n``` bash\ngit worktree list\n```\n\ngives the output\n\n``` bash\n/home/u_walkews/git/git-work-play  b202442 [main]\n/tmp/another                       d9b2cf1 [another]\n```\n\nEven the branch command gives a bit different output for a worktree.\n\n``` bash\ngit branch\n```\n\ngives this output, notice the + denotes an actively linked worktree, and the *\ngives the active branch.  If you cd over to the worktree directory, these will\nswitch roles.\n\n``` bash\n+ another\n  just-a-branch\n* main\n```\n\n## You can only checkout a branch in one place\n\nIf you try to checkout a branch that is checked out in a linked worktree, you\nwill be presented with an error, and it will not let you check out a second\ncopy of that branch.\n\n```\n\u276f git checkout another\nfatal: 'another' is already checked out at '/tmp/another'\n```\n\n## Myth #3\n_once you go worktree, you worktree_\n\nOnce you have worktrees on your system, you have a few ways to get rid of them.\nUsing git's way feels much superior, but if your a doof like me and didn't read\nthe manual before you `rm /tmp/another -rf` you will notice that the worktree\nis still active.  If you run `git worktree prune` it will clean that right up.\n\n``` bash\ngit worktree remove another\n\nrm /tmp/another\ngit worktree prune\n```\n\n## It won't let you remove if you have changes\n\nThis makes me think that `remove` is a much safer option.  If you have\nuncommitted changes, `git worktree remove` will throw an error, and make you\ncommit or use `--force` to remove the worktree.\n\n``` bash\n\u276f git worktree remove another\nfatal: 'another' contains modified or untracked files, use --force to delete it\n```\n\n## RTFM\n_read the friendly manual_\n\nThere is a ton more information in the man page for worktrees, these are just\nthe parts that seemed really useful to me out of the gate.\n\n``` bash\nman git worktree\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-config-help-autocorrect'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Configure Git to Autocorrect Your Fat Fingers</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/fzf-wallpaper'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>fuzzy wallpaper with fzf</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-10", "edit_link": "https://github.com/edit/main/pages/til/git-checkout-worktree.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575278", "datetime": "2022-03-10 00:00:00+00:00", "slug": "til/git-checkout-worktree", "jinja": false, "output_html": "markout/til/git-checkout-worktree/index.html", "long_description": "So worktrees, I always thought they were a big scary things.  Turns out they I thought you had to be all in or worktrees or normal git, but not both.  When Making a worktree is as easy as making a branch.  It The worktree that you create is considere", "super_description": "So worktrees, I always thought they were a big scary things.  Turns out they I thought you had to be all in or worktrees or normal git, but not both.  When Making a worktree is as easy as making a branch.  It The worktree that you create is considered a  Note that I put this in my tmp directory because I don Just like branches git has some nice commands to help us understand what gives the output Even the branch command gives a bit different output for a worktree. gives this output, notice the +", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f85e0>, next=<frontmatter.Post object at 0x7f345060e5e0>)"}, {"cover": "", "title": "python web conf complete", "tags": ["python"], "status": "draft", "templateKey": "til", "path": "pages/til/title.md", "description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use", "content": "I love the freedom of writing in markdown.  It allows me to write content from\nthe comfort of my editor with very little focus on page style.  It turns out\nthat markdown is also a fantastic tool for creating slides.\n\n## Present from the terminal\n\nI will most often just present right from the terminal using\n[lookatme](https://lookatme.readthedocs.io/en/latest/index.html).  Presenting\nfrom the terminal lets me see the results quick right from where I am editing.\nIt also allows me to pop into other terminal applications quickly.\n\n## reveal.js\n\nI sometimes also use reveal.js, but that's for another post.  It is handy that\nit lives in the browser and is easier to share.\n\n## New Slides\n\nI leverage auto slides when I write my slides in markdown.  The largest\nheading, usually an h2 for me, becomes the new slide marker.  Otherwise my\nprocess is not much different, It just becomes a shorter writing style.\n\n## Installation\n\nlookatme is a python library that is available on pypi, you can install it with\nthe pip command.\n\n```\npython -m pip install lookatme\n```\n\nSince it's a command line application it works great with pipx.  This prevents\nthe need to manage virtual environments yourself or ending up with packages\nclashing in your system python environment.\n\n```\npipx install lookatme\n```\n\n## From my terminal\n\n``` bash\nlookatme {filepath}\n```\n\nI just run it with pipx.\n\n``` bash\npipx run \\\n --spec git+https://github.com/waylonwalker/lookatme \\\n lookatme {filepath} \\\n --live-reload \\\n --style gruvbox-dark\n```\n\n> Note, I use a custom fork of lookatme.  It's schema validation did not like\n> the date format of my blog posts, so I have a one line fix built into my\n> fork that is pretty specific to me.\n\n## From Neovim\n_most often what I do_\n\nFrom Neovim I use a plugin I created for sending out commands to tmux called\n[telegraph](https://github.com/WaylonWalker/Telegraph.nvim).  This sends the\nabove command to a new session that I can bounce between quickly.\n\n``` vim\nnnoremap <leader><leader>s <cmd>lua require'telegraph'.telegraph({cmd='pipx run --spec git+https://github.com/waylonwalker/lookatme lookatme {filepath} --live-reload --style gruvbox-dark', how='tmux'})<CR>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/vim-cmd'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Vim remaps use cmd in place of :</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-checkout-worktree'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Git Worktrees are not so Scary</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2100-03-20", "edit_link": "https://github.com/edit/main/pages/til/title.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575284", "datetime": "2100-03-20 00:00:00+00:00", "slug": "til/title", "jinja": false, "output_html": "markout/til/title/index.html", "long_description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use reveal.js, but that I leverage auto slides when I write my slides in markdown.  The large", "super_description": "I love the freedom of writing in markdown.  It allows me to write content from I will most often just present right from the terminal using I sometimes also use reveal.js, but that I leverage auto slides when I write my slides in markdown.  The largest lookatme is a python library that is available on pypi, you can install it with Since it I just run it with pipx. Note, I use a custom fork of lookatme.  It From Neovim I use a plugin I created for sending out commands to tmux called", "year": 2100, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060edc0>, next=<frontmatter.Post object at 0x7f345060ea90>)"}, {"cover": "", "title": "Vim remaps use cmd in place of :", "tags": ["vim", "linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/vim-cmd.md", "description": "Anyone just starting out their vim customization journey is bound to run into this error. I If you run  You still need to map your remaps with a : if you do not", "content": "Anyone just starting out their vim customization journey is bound to run into this error.\n\n``` vim\nE5520: <Cmd> mapping must end with <CR>\n```\n\n## I did not get it\n\nI'll admit, in hindsight it's very clear what this is trying to tell me, but\nfor whatever reason I still did not understand it and I just used a :\neverywhere.\n\n## From the docs\n\n\nIf you run `:h <cmd>` you will see a lot of reasons why you should do it, from\nperformance, to hygene, to ergonomics.  You will also see another clear\nstatement about how to use `<cmd>`.\n\n``` vim\n                                                          E5520\n  <Cmd> commands must terminate, that is, they must be followed by <CR> in the\n  {rhs} of the mapping definition.  Command-line mode is never entered.\n```\n\n## When to map with a :\n\nYou still need to map your remaps with a : if you do not close it with a\n`<cr>`.  This might be something like prefilling a command with a search term.\n\n``` vim\nnnoremap <leader><leader>f :s/search/\n```\n\n## Otherwise use <cmd>\n\nIf you can close the `<cmd>` with a `<cr>` the command do so.  Your map will\nautomatically be silent, more ergonomic, performant, and all that good stuff.\n\n``` vim\nnnoremap <leader><leader>f <cmd>s/search/Search/g<cr>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/vim-markdown-links'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Automatically Generate a list of Markown Links in Vim</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/ubuntu-terminal-clipboard'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Tmux and Vim Clipboard for Ubuntu</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-14", "edit_link": "https://github.com/edit/main/pages/til/vim-cmd.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575289", "datetime": "2022-02-14 00:00:00+00:00", "slug": "til/vim-cmd", "jinja": false, "output_html": "markout/til/vim-cmd/index.html", "long_description": "Anyone just starting out their vim customization journey is bound to run into this error. I If you run  You still need to map your remaps with a : if you do not close it with a If you can close the ", "super_description": "Anyone just starting out their vim customization journey is bound to run into this error. I If you run  You still need to map your remaps with a : if you do not close it with a If you can close the ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8dc0>, next=<frontmatter.Post object at 0x7f34506213a0>)"}, {"cover": "", "title": "Bash mktemp", "tags": ["bash", "cli", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/bash-mktemp.md", "description": "There is GNU coreutils command called  Here are some examples of making temp directories in different places, my Here is a sample script that shows how to captu", "content": "There is GNU coreutils command called `mktemp` that is super handy in shell\nscripts to make temporary landing spots for files so that they never clash with\nanother instance, and will automatically get cleaned up when you restart, or\nwhenever `/tmp` gets wiped.  I'm not sure when that is, but I don't expect it\nto be long.\n\n## Making temp directories\n\nHere are some examples of making temp directories in different places, my\nfavorite is `mktemp -dt mytemp-XXXXXX`.\n\n``` bash\n# makes a temporary directory in /tmp/ with the defaul template tmp.XXXXXXXXXX\nmktemp\n\n# makes a temporary directory in your current directory\nmktemp --directory mytemp-XXXXXX\n# shorter version\nmktemp -d mytemp-XXXXXX\n\n# same thing, but makes a file\nmktemp mytemp-XXXXXX\n\n# makes a temporary directory in your /tmp/ directory (or what ever you have configured as your TMPDIR)\nmktemp --directory --tmpdir mytemp-XXXXXX\n# shorter version\nmktemp -dt mytemp-XXXXXX\n\n# same thing, but makes a file\nmktemp --tmpdir mytemp-XXXXXX\n# shorter version\nmktemp -t mytemp-XXXXXX\n```\n\n## Use Case\n\nHere is a sample script that shows how to capture the tempdir as a variable and\nreuse it.  Here is an example of curling my bootstrap file into a temp\ndirectory and running it from that directory.\n\n``` bash\nlocal tmp=`mktemp -dt bootstrap-XXXXXX`\npushd $tmp\ncurl https://raw.githubusercontent.com/WaylonWalker/devtainer/main/bootstrap > bootstrap\nbash bootstrap\npopd\n```\n\n## Templates\n\nYou must have at least 3 trailing X's that mktemp will replace with random\ncharacters.  I played with it for a bit, it kinda allows for some trailing\ncharacters, and will not fill groups of X's earlier in your template, only the\nlast consecutive string.\n\nMy randomm samples I played with.\n\n``` bash\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com) took 2m24s\n\u276f mktemp myXtemp-XaXbXXXX -dt\n/tmp/myXtemp-XaXbx9hn\n\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com)\n\u276f mktemp myXtemp-XaXbXXXXs -dt\n/tmp/myXtemp-XaXb2tpGs\n\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com)\n\u276f mktemp myXtemp-XaXbXXcXXs -dt\nmktemp: too few X's in template \u2018myXtemp-XaXbXXcXXs\u2019\n\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com)\n\u276f mktemp myXtemp-XaXbXXcXXs -dt\n\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com)\n\u276f mktemp myXtemp-XaXbXXXXt -dt\n/tmp/myXtemp-XaXbe8PWt\n\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com)\n\u276f mktemp myXtemp-XXX-you-XXX -dt\n/tmp/myXtemp-XXX-you-48l\n\nwaylonwalker.com on \ue0a0 main [!?] \ue235 v3.9.7 (waylonwalker.com)\n\u276f mktemp myXtemp-XXX-you-XX -dt\nmktemp: too few X's in template \u2018myXtemp-XXX-you-XX\u2019\n```\n\n## RTFM\n\nThe man page has good stuff on all the flags that you might need.\n``` bash\nman mktemp\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/bs4-findall-headings'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Find all Headings with BeautifulSoup</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/aws-eventbridge-visidata'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>View AWS event bridge rules with visidata</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-02", "edit_link": "https://github.com/edit/main/pages/til/bash-mktemp.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575295", "datetime": "2022-03-02 00:00:00+00:00", "slug": "til/bash-mktemp", "jinja": false, "output_html": "markout/til/bash-mktemp/index.html", "long_description": "There is GNU coreutils command called  Here are some examples of making temp directories in different places, my Here is a sample script that shows how to capture the tempdir as a variable and You must have at least 3 trailing X My randomm samples I ", "super_description": "There is GNU coreutils command called  Here are some examples of making temp directories in different places, my Here is a sample script that shows how to capture the tempdir as a variable and You must have at least 3 trailing X My randomm samples I played with. The man page has good stuff on all the flags that you might need.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506283d0>, next=<frontmatter.Post object at 0x7f345061bf10>)"}, {"cover": "", "title": "ag silver searcher look ahead and look behind", "tags": ["cli", "bash", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/ag-ahead.md", "description": "A super useful tool when doing PR It", "content": "A super useful tool when doing PR's or checking your own work during a big\nrefactor is the silver searcher.  Its a super fast command line based searching\ntool. You just run `ag \"<search term>\"` to search for your search term.  This\nwill list out every line of every file in any directory under your current\nworking directory that contains a match.\n\n## Ahead/Behind\n\nIt's often useful to need some extra context around the change.  I recently\nreviewed a bunch of PR's that moved schema from `save_args` to the root of the\ndataset in all yaml configs.  To ensure they all made it to the top level\nDataSet configuraion, and not underneath save_args.  I can do a search for all\nthe schemas, and ensure that none of them are under `save_args` anymore.\n\n``` bash\nag \"schema: \" -A 12 -B 12\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/ansible_install_fonts'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Installing system nerd-fonts with ansible</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/2-minutes-to-stow'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>2 minutes to stow</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-08", "edit_link": "https://github.com/edit/main/pages/til/ag-ahead.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575301", "datetime": "2022-02-08 00:00:00+00:00", "slug": "til/ag-ahead", "jinja": false, "output_html": "markout/til/ag-ahead/index.html", "long_description": "A super useful tool when doing PR It", "super_description": "A super useful tool when doing PR It", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e610>, next=<frontmatter.Post object at 0x7f345061b040>)"}, {"cover": "", "title": "How to Properly Simulate Stow", "tags": ["cli", "linux", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/stow-simulate.md", "description": "prev Textual has devtools next Squoosh cli", "content": "``` bash\nstow -R --simulate -vvv git\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/textual-has-devtools'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Textual has devtools</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/squoosh-cli'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Squoosh cli</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-30", "edit_link": "https://github.com/edit/main/pages/til/stow-simulate.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575306", "datetime": "2022-01-30 00:00:00+00:00", "slug": "til/stow-simulate", "jinja": false, "output_html": "markout/til/stow-simulate/index.html", "long_description": "", "super_description": "", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621dc0>, next=<frontmatter.Post object at 0x7f34505fde50>)"}, {"cover": "", "title": "git find deleted files", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/git-find-deleted-files.md", "description": "Listing all the deleted files in all of git history can be done by These various commands will show all files that were ever deleted on The reflog can be super ", "content": "Listing all the deleted files in all of git history can be done by\ncombining `git log` with `--diff-filter`.  The log gives you lots of\noptions to show different bits of information about the commit that\nhappened at that point.  It's even possible to get a completely clean\nlist of files that are in your git history but have been deleted.\n\n## git log --diff-filter\n\nThese various commands will show all files that were ever deleted on\nyour current branch.\n\n``` bash\n# This one includes the date, commit hash, and Author\ngit log --diff-filter D\n\n# this one could be a git alias, but includes empty lines\ngit log --diff-filter D --pretty=\"format:\" --name-only\n\n# this one has the empty lines cleaned up\ngit log --diff-filter D --pretty=\"format:\" --name-only | sed '/^$/d'\n```\n## git reflog --diff-filter\n\nThe reflog can be super powerful in finding lost files here, as it only\ncares about git operations, not just the current branch.  It will search\naccross all branches for deleted files and report them.\n\n``` bash\n# This one includes the commit hash, branch, tag, and commit message\ngit reflog --diff-filter D\n\n# You might want to at least add the filename\ngit reflog --diff-filter D --name-only\n\n# this one could be a git alias, but includes empty lines\ngit reflog --diff-filter D --pretty=\"format:\" --name-only\n\n# this one has the empty lines cleaned up\ngit reflog --diff-filter D --pretty=\"format:\" --name-only | sed '/^$/d'\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-merge-ours'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>git merge ours</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-diff-filter'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>git diff-filter</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-28", "edit_link": "https://github.com/edit/main/pages/til/git-find-deleted-files.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575312", "datetime": "2022-02-28 00:00:00+00:00", "slug": "til/git-find-deleted-files", "jinja": false, "output_html": "markout/til/git-find-deleted-files/index.html", "long_description": "Listing all the deleted files in all of git history can be done by These various commands will show all files that were ever deleted on The reflog can be super powerful in finding lost files here, as it only", "super_description": "Listing all the deleted files in all of git history can be done by These various commands will show all files that were ever deleted on The reflog can be super powerful in finding lost files here, as it only", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604700>, next=<frontmatter.Post object at 0x7f3450621040>)"}, {"cover": "", "title": "Create a Swapfile on Your Linux Machine", "tags": ["linux"], "status": "published", "templateKey": "til", "path": "pages/til/linux-swap.md", "description": "If you ever end up on a linux machine that just does not have enough ram to You can put this where you wish, for this example I am going to pop it into You can ", "content": "If you ever end up on a linux machine that just does not have enough ram to\nsuffice what you are doing and you just need to get the job done you can give\nit some more swap.  You can look up reccomendations for how much swap you\nshould have this is more about just trying to get your job done when you are\nalmost there, but running out of memory on the hardware you have.\n\n## make the /swap file\n\nYou can put this where you wish, for this example I am going to pop it into\n`/swap`\n\n```bash\nsudo fallocate -l 4G /swap\nsudo chmod 600 /swap\nsudo mkswap /swap\nsudo swapon /swap\n```\n\n## make sure that your swap is on\n\nYou can make sure that your swap is working by using the `free` command, I like\nusing the `-h` flag to get human readable numbers.\n\n```bash\n\u276f free -h\n               total        used        free      shared  buff/cache   available\nMem:            15Gi       5.5Gi       4.9Gi       458Mi       5.2Gi       9.3Gi\nSwap:          4.0Gi          0B       4.0Gi\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/reset-ipython/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/reset-ipython-og_250x140.png\" alt=\"article cover for \n Reclaim memory usage in Jupyter\n\"/>\n          <p><strong>\n Reclaim memory usage in Jupyter\n</strong></p>\n      </a>\n  </div>\n\n\n> I also used this trick in this article to give my python process a bit more oompf and get it on home.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/linux-tty'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>A TTY Can Save Your Bacon</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/linux-bluetoothctl'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Bluetooth at the command line on Ubuntu</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-18", "edit_link": "https://github.com/edit/main/pages/til/linux-swap.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575320", "datetime": "2022-03-18 00:00:00+00:00", "slug": "til/linux-swap", "jinja": false, "output_html": "markout/til/linux-swap/index.html", "long_description": "If you ever end up on a linux machine that just does not have enough ram to You can put this where you wish, for this example I am going to pop it into You can make sure that your swap is working by using the  https://waylonwalker.com/reset-ipython I", "super_description": "If you ever end up on a linux machine that just does not have enough ram to You can put this where you wish, for this example I am going to pop it into You can make sure that your swap is working by using the  https://waylonwalker.com/reset-ipython I also used this trick in this article to give my python process a bit more oompf and get it on home.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506090d0>, next=<frontmatter.Post object at 0x7f3450616a60>)"}, {"cover": "", "title": "How I load Markdown in Python", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-frontmatter.md", "description": "I use a package It Frontmatter is a handy way to add metadata to your plain text files.  It Here is the exact frontmatter for this post you are reading on my si", "content": "I use a package\n[eyeseast/python-frontmatter](https://github.com/eyeseast/python-frontmatter)\nto load files with frontmatter in them.  Its a handy package that allows you to\nload files with structured frontmatter (yaml, json, or toml).\n\n## Install\n\nIt's on pypi, so you can install it into your virtual environment with pip.\n\n```bash\npython -m pip install python-frontmatter\n```\n\n## \ud83d\ude4b What's Frontmatter\n\nFrontmatter is a handy way to add metadata to your plain text files.  It's\nquite common to have yaml frontmatter in markdown.  All of my blog posts have\nyaml frontmatter to give the post metadata such as post date, tags, title, and\ntemplate.  dev.to is a popular developer blogging platform that also builds all\nof its posts with markdown and yaml frontmatter.\n\n## Let's see an example\n\nHere is the exact frontmatter for this post you are reading on my site.\n\n```markdown\n---\ndate: 2022-03-24 03:18:48.631729\ntemplateKey: til\ntitle: How I load Markdown in Python\ntags:\n  - linux\n  - python\n\n---\n\nThis is where the markdown content for the post goes.\n```\n\n## So it's yaml\n\nyaml is the most commmon, but\n[python-frontmatter](https://pypi.org/project/python-frontmatter/)\nalso supports\n[Handlers](https://python-frontmatter.readthedocs.io/en/latest/handlers.html?highlight=toml#module-frontmatter.default_handlers)\nfor toml and json.\n\nIf you want a good set of examples of yaml\n[learnxinyminutes](https://learnxinyminutes.com/docs/yaml/) has a fantastic set\nof examples in one page.\n\n## How to load yaml frontmatter in python\n\nHere is how I would load this post into python using\n[python-frontmatter](https://pypi.org/project/python-frontmatter/).\n\n```python\nimport frontmatter\ninspect(frontmatter.load(\"pages/til/python-frontmatter.md\"))\n```\n\nWe can use [rich](https://github.com/Textualize/rich) to inspect the Post\nobject to see what all it contains.\n\n```python\n\u276f inspect(frontmatter.load(\"pages/til/python-frontmatter.md\"))\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 <class 'frontmatter.Post'> \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 A post contains content and metadata from Front Matter. This is what gets                                                                       \u2502\n\u2502 returned by :py:func:`load <frontmatter.load>` and :py:func:`loads <frontmatter.loads>`.                                                        \u2502\n\u2502 Passing this to :py:func:`dump <frontmatter.dump>` or :py:func:`dumps <frontmatter.dumps>`                                                      \u2502\n\u2502 will turn it back into text.                                                                                                                    \u2502\n\u2502                                                                                                                                                 \u2502\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\n\u2502 \u2502 <frontmatter.Post object at 0x7f03c4c23ca0>                                                                                                 \u2502 \u2502\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\n\u2502                                                                                                                                                 \u2502\n\u2502  content = \"I use a package\\n[eyeseast/python-frontmatter](https://github.com/eyeseast/python-frontmatter)\\nto load files with frontmatter in   \u2502\n\u2502            them.  Its a handy package that allows you to\\nload files with structured frontmatter (yaml, json, or toml).\\n\\n## Install\\n\\nIt's   \u2502\n\u2502            on pypi, so you can install it into your virtual environment with pip.\\n\\n```bash\\npython -m pip install                             \u2502\n\u2502            python-frontmatter\\n```\\n\\n## \ud83d\ude4b What's Frontmatter\\n\\nFrontmatter is a handy way to add metadata to your plain text files.          \u2502\n\u2502            It's\\nquite common to have yaml frontmatter in markdown.  All of my blog posts have\\nyaml frontmatter to give the post metadata such \u2502\n\u2502            as post date, tags, title, and\\ntemplate.  dev.to is a popular developer blogging platform that also builds all\\nof its posts with   \u2502\n\u2502            markdown and yaml frontmatter.\\n\\n## Let's see an example\\n\\nHere is the exact frontmatter for this post you are reading on my       \u2502\n\u2502            site.\\n\\n```markdown\\n---\\ndate: 2022-03-24 03:18:48.631729\\ntemplateKey: til\\ntitle: How I load Markdown in Python\\ntags:\\n  -      \u2502\n\u2502            linux\\n  - python\\n\\n---\\n\\nThis is where the markdown content for the post goes.\\n```\\n\\n## So it's yaml\\n\\nyaml is the most        \u2502\n\u2502            commmon, but\\n[eyeseast/python-frontmatter](https://github.com/eyeseast/python-frontmatter)\\nalso                                    \u2502\n\u2502            supports\\n[Handlers](https://python-frontmatter.readthedocs.io/en/latest/handlers.html?highlight=toml#module-frontmatter.default_ha\u2026 \u2502\n\u2502            toml and json.\\n\\nIf you want a good set of examples of yaml\\n[learnxinyminutes](https://learnxinyminutes.com/docs/yaml/) has a      \u2502\n\u2502            fantastic set\\nof examples in one page.\\n\\n## How to load yaml frontmatter in python\"                                                \u2502\n\u2502  handler = <frontmatter.default_handlers.YAMLHandler object at 0x7f03bffbd910>                                                                  \u2502\n\u2502 metadata = {                                                                                                                                    \u2502\n\u2502                'date': datetime.datetime(2022, 3, 24, 3, 18, 48, 631729),                                                                       \u2502\n\u2502                'templateKey': 'til',                                                                                                            \u2502\n\u2502                'title': 'How I load Markdown in Python',                                                                                        \u2502\n\u2502                'tags': ['linux', 'python', 'python']                                                                                            \u2502\n\u2502            }                                                                                                                                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n```\n\n## Getting Metadata\n\nYou can get items from the posts metadata just as you would from a dict.\n\n```python\npost = frontmatter.load(\"pages/til/python-frontmatter.md\")\npost['date']\n# datetime.datetime(2022, 3, 24, 3, 18, 48, 631729)\n\npost.get('date')\n# datetime.datetime(2022, 3, 24, 3, 18, 48, 631729)\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/python-dict-get/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/python-dict-get-og_250x140.png\" alt=\"article cover for \n python dict get\n\"/>\n          <p><strong>\n python dict get\n</strong></p>\n      </a>\n  </div>\n\n\n> I have recently become fond of the `.get` method to give it an easy default value.\n\n## Content is content\n\nThe content of the document is stored under `.content`\n\n```python\npost.content\n```\n\n## Links\n\n* [python dict get](https://waylonwalker.com/til/python-dict-get/)\n* [eyeseast/python-frontmatter](https://github.com/eyeseast/python-frontmatter)\n* [python-frontmatter](https://pypi.org/project/python-frontmatter/)\n* [python-frontmatter Handlers](https://python-frontmatter.readthedocs.io/en/latest/handlers.html?highlight=toml#module-frontmatter.default_handlers)\n* [learnxinyminutes](https://learnxinyminutes.com/docs/yaml/)\n* [python-frontmatter](https://pypi.org/project/python-frontmatter/)\n* [rich](https://github.com/Textualize/rich)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-git'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Using Git from Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-enum'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python Enum</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-23", "edit_link": "https://github.com/edit/main/pages/til/python-frontmatter.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575326", "datetime": "2022-03-23 00:00:00+00:00", "slug": "til/python-frontmatter", "jinja": false, "output_html": "markout/til/python-frontmatter/index.html", "long_description": "I use a package It Frontmatter is a handy way to add metadata to your plain text files.  It Here is the exact frontmatter for this post you are reading on my site. yaml is the most commmon, but If you want a good set of examples of yaml Here is how I", "super_description": "I use a package It Frontmatter is a handy way to add metadata to your plain text files.  It Here is the exact frontmatter for this post you are reading on my site. yaml is the most commmon, but If you want a good set of examples of yaml Here is how I would load this post into python using We can use  You can get items from the posts metadata just as you would from a dict. https://waylonwalker.com/til/python-dict-get/ I have recently become fond of the  The content of the document is stored under", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506095e0>, next=<frontmatter.Post object at 0x7f34505fddc0>)"}, {"cover": "", "title": "Bluetooth at the command line on Ubuntu", "tags": ["linux", "desktop"], "status": "published", "templateKey": "til", "path": "pages/til/linux-bluetoothctl.md", "description": "One thing about moving to a tiling window manager like awesome wm or i3 is that Running  Here is what I had to do to connect my headphones. Here is the output o", "content": "One thing about moving to a tiling window manager like awesome wm or i3 is that\nthey are so lightweight they are all missing things like bluetooth gui's out of\nthe box, and you generally bring your own.  Today I just needed to connet a new\nset of headphones, so I decided to just give the `bluetoothctl` cli a try.  It\nseems to come with Ubuntu, I don't think I did anything to get it.\n\n``` bash\nbluetoothctl\n```\n\nRunning `bluetoothctl` pops you into a repl/shell like bah, python, or ipython.\nFrom here you can execute `bluetoothctl` commands.\n\n\nHere is what I had to do to connect my headphones.\n\n``` bash\n# list out the commands available\nhelp\n\n# scan for new devices and stop when you see your device show up\nscan on\nscan off\n\n# list devices\ndevices\npaired-devices\n\n# pair the device\npair XX:XX:XX:XX:XX:XX\n\n# now your device should show up in the paired list\npaired-devices\n\n# connet the device\nconnect XX:XX:XX:XX:XX:XX\n```\n\n## help\n\nHere is the output of the help menu on my machine, it seems pretty straight\nforward to block, and remove devices from here.\n\nnote ctrl revers to the bluetooth controller on the machine you are on, and dev\nrefers to a device id.\n\n``` bash\nMenu main:\nAvailable commands:\n-------------------\nadvertise                                         Advertise Options Submenu\nscan                                              Scan Options Submenu\ngatt                                              Generic Attribute Submenu\nlist                                              List available controllers\nshow [ctrl]                                       Controller information\nselect <ctrl>                                     Select default controller\ndevices                                           List available devices\npaired-devices                                    List paired devices\nsystem-alias <name>                               Set controller alias\nreset-alias                                       Reset controller alias\npower <on/off>                                    Set controller power\npairable <on/off>                                 Set controller pairable mode\ndiscoverable <on/off>                             Set controller discoverable mode\nagent <on/off/capability>                         Enable/disable agent with given capability\ndefault-agent                                     Set agent as the default one\nadvertise <on/off/type>                           Enable/disable advertising with given type\nset-alias <alias>                                 Set device alias\nscan <on/off>                                     Scan for devices\ninfo [dev]                                        Device information\npair [dev]                                        Pair with device\ntrust [dev]                                       Trust device\nuntrust [dev]                                     Untrust device\nblock [dev]                                       Block device\nunblock [dev]                                     Unblock device\nremove <dev>                                      Remove device\nconnect <dev>                                     Connect device\ndisconnect [dev]                                  Disconnect device\nmenu <name>                                       Select submenu\nversion                                           Display version\nquit                                              Quit program\nexit                                              Quit program\nhelp                                              Display help about this program\n```\n\n## Final Impressions\n\nThis was something that I have never used, and thought it would be intimidating\nbut it worked great first try out of the box.  It could have been my device on\nthe other end, but this was one of the least frustrations I have had pairing a\nnew device.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/linux-swap'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Create a Swapfile on Your Linux Machine</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/kedro-ubuntu-impish'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Running Kedro on Ubuntu 21.10 Impish Indri</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-11", "edit_link": "https://github.com/edit/main/pages/til/linux-bluetoothctl.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575331", "datetime": "2022-02-11 00:00:00+00:00", "slug": "til/linux-bluetoothctl", "jinja": false, "output_html": "markout/til/linux-bluetoothctl/index.html", "long_description": "One thing about moving to a tiling window manager like awesome wm or i3 is that Running  Here is what I had to do to connect my headphones. Here is the output of the help menu on my machine, it seems pretty straight note ctrl revers to the bluetooth ", "super_description": "One thing about moving to a tiling window manager like awesome wm or i3 is that Running  Here is what I had to do to connect my headphones. Here is the output of the help menu on my machine, it seems pretty straight note ctrl revers to the bluetooth controller on the machine you are on, and dev This was something that I have never used, and thought it would be intimidating", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604970>, next=<frontmatter.Post object at 0x7f34505fd160>)"}, {"cover": "", "title": "Git reflog is an alias for git log -g", "tags": ["git", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/git-reflog-is-an-alias.md", "description": "Right inside the git  This epiphany deepens my understanding of git, and lets me understand that most Here are some git commands for you to try out on your own ", "content": "Right inside the git [docs](https://git-scm.com/docs/git-reflog#_description),\nis states that the `git reflog` command runs `git reflog show` by default which\nis an alias for `git log -g --abbrev-commit --pretty=oneline`\n\nThis epiphany deepens my understanding of git, and lets me understand that most\n`git log` flags might also work with `git log -g`.\n\n\n## full or short format\n\nHere are some git commands for you to try out on your own that are all pretty\nsimilar, but vary in how much information they show.\n\n``` stat\n# These show only first line of the commit message subject, the hash, and index\ngit reflog\ngit log -g --abbrev-commit --pretty=oneline\n\n# similar to git log, this is a fully featured log with author, date, and full\n# commit message\ngit log -g\n```\n\n## add files\n\nIf I am looking for a missing file, I might want to leverage `--name-only` or\n`--stat`, to see where I might have hard reset that file, or deleted it.\n\n```\ngit reflog --stat\ngit log -g --stat --abbrev-commit --pretty=oneline\n\ngit reflog --name-only\ngit log -g --name-only --abbrev-commit --pretty=oneline\n```\n\n## example\n\nHere is an example where I lost my `docker-compose.yml` file in a git reset,\nand got it back by finding the commit hash with `git reflog` and cherry picked\nit back.\n\n``` bash\n\u276f git reflog --name-only\n0404b6a (HEAD -> main) HEAD@{0}: cherry-pick: add docker-compose\ndocker-compose.yml\n3cfcab9 HEAD@{1}: reset: moving to 3cfc\nreadme.md\n9175695 HEAD@{2}: cherry-pick: add docker-compose\ndocker-compose.yml\n3cfcab9 HEAD@{3}: reset: moving to 3cfc\nreadme.md\nfd74df3 HEAD@{4}: commit: add docker-compose\ndocker-compose.yml\n3cfcab9 HEAD@{5}: reset: moving to HEAD\nreadme.md\n3cfcab9 HEAD@{6}: commit (initial): add readme\nreadme.md\n```\n\nThis just proves that its harder to remove something from git, than it is to\nget it back.  It can feel impossible to get something back, but once its in, it\nfeels even more impossible to get it out.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-revive-dead-files'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Revive files from the dead with git</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-recover-checkout'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Recover a lost git branch with checkout</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-19", "edit_link": "https://github.com/edit/main/pages/til/git-reflog-is-an-alias.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575337", "datetime": "2022-02-19 00:00:00+00:00", "slug": "til/git-reflog-is-an-alias", "jinja": false, "output_html": "markout/til/git-reflog-is-an-alias/index.html", "long_description": "Right inside the git  This epiphany deepens my understanding of git, and lets me understand that most Here are some git commands for you to try out on your own that are all pretty If I am looking for a missing file, I might want to leverage  Here is ", "super_description": "Right inside the git  This epiphany deepens my understanding of git, and lets me understand that most Here are some git commands for you to try out on your own that are all pretty If I am looking for a missing file, I might want to leverage  Here is an example where I lost my  This just proves that its harder to remove something from git, than it is to", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609610>, next=<frontmatter.Post object at 0x7f345060e160>)"}, {"cover": "", "title": "pip require-virtualenv", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/pip-require-virtualenv.md", "description": "Whenever you are installing python packages, you should always use a virtual Pip is the pacakage tool for python.  It installs third-party packages and is pytho", "content": "Whenever you are installing python packages, you should always use a virtual\nenvironment.  pip makes this easy to follow by adding some configuration to\npip.\n\n## require-virtualenv\n\nPip is the pacakage tool for python.  It installs third-party packages and is\nconfigurable.  One of the configuration settings that I highly reccommend\neveryone to add is `require-virtualenv`.  This will stop pip from installing\nany packages if you have not activated a virtualenv.\n\n## why\n\npython packages often require many different dependencies, sometimes packages\nare up to date and sometimes they require different versions of dependencies.\nIf you install everything in one environment its easy to end up with version\nconflict issues that are really hard to resolve, especially since your system\nenvironment cannot easily be restarted.\n\n## PIPX my one exception\n\nMy one exception that I put in my system level packages is `pipx`.  `pipx` is\nvery handy as it manages virtual environments for you and is intended for\ncommand line utilities that would end up in your system env or require you to\nmanually manage virtual environments without it.\n\n## pip config\n\nYour pip config might be found in either `~/.pip/pip.conf` or\n`~/.config/pip/pip.conf`.  You can either use the `pip config set` command or\nedit one of these files manually.\n\n```bash\npip config set global.require-virtualenv True\n```\n\nNow you sould see this in your `~/.config/pip/pip.conf`\n\n``` toml\n[global]\nrequire-virtualenv = True\n```\n\n## pip config debug\n\nIf you want to know where pip is looking for configuration on your system, and\nwhat files are setting a certain config you can use `pip config debug` to find\nit.\n\n``` bash\n\u276f pip config debug\n\nenv_var:\nenv:\nglobal:\n  /etc/xdg/xdg-awesome/pip/pip.conf, exists: False\n  /etc/xdg/pip/pip.conf, exists: False\n  /etc/pip.conf, exists: False\nsite:\n  /home/waylon/git/waylonwalker.com/.venv/pip.conf, exists: False\nuser:\n  /home/waylon/.pip/pip.conf, exists: False\n  /home/waylon/.config/pip/pip.conf, exists: True\n    global.require-virtualenv: True\n```\n\n## saved my bacon\n\nThis setting recently saved me when I modified my `.envrc` file my virtual\nenvironment deactivated, so when I went to pip install something it gave me an\nerror that it was not active.  Situations like this are an easy way to pollute\nyour system with packages that it does not need installed.\n\n![pip-require-virtualenv-direnv-error](https://screenshots.waylonwalker.com/pip-require-virtualenv-direnv-error.webp)\n\n## TLDR\n\nRun this at your command line to avoid polluting your system environment by\nmistake before running any pip command.\n\n```bash\npip config set global.require-virtualenv True\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pipx-on-windows'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>pipx on windows</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pathlib-read-text'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I read Files in Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-06-01", "edit_link": "https://github.com/edit/main/pages/til/pip-require-virtualenv.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575343", "datetime": "2022-06-01 00:00:00+00:00", "slug": "til/pip-require-virtualenv", "jinja": false, "output_html": "markout/til/pip-require-virtualenv/index.html", "long_description": "Whenever you are installing python packages, you should always use a virtual Pip is the pacakage tool for python.  It installs third-party packages and is python packages often require many different dependencies, sometimes packages My one exception ", "super_description": "Whenever you are installing python packages, you should always use a virtual Pip is the pacakage tool for python.  It installs third-party packages and is python packages often require many different dependencies, sometimes packages My one exception that I put in my system level packages is  Your pip config might be found in either  Now you sould see this in your  If you want to know where pip is looking for configuration on your system, and This setting recently saved me when I modified my  Run", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616ca0>, next=<frontmatter.Post object at 0x7f34505f8df0>)"}, {"cover": "", "title": "Revive files from the dead with git", "tags": ["git", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/git-revive-dead-files.md", "description": "Git reflog can perform some serious magic in reviving your hard work You must git commit I really like to practice these techniques before I need to use them so", "content": "Git reflog can perform some serious magic in reviving your hard work\nfrom the dead if you happen to loose it.\n\n## caveat\n\nYou must git commit!  If you never commit the file, git cannot help you.\nYou might look into your trashcan, filesystem versions, onedrive, box, dropbox.\nIf you have none of this, then you are probably hosed.\n\n## practice\n\nI really like to practice these techniques before I need to use them so\nthat I understand how they work in a low stakes fashion.  This helps me\nunderstand what I can and cannot do, and how to do it in a place that\ndoes not matter in any way at all.\n\nThis is what I did to revive a dropped `docker-compose.yml` file.  The\nidea is that if I can find the commit hash, I can `cherry-pick` it.\n\n``` bash\ngit init\ntouch readme.md\ngit add readme.md\ngit commit -m \"add readme\"\ntouch docker-compose.yml\ngit add docker-compose.yml\ngit commit -m \"add docker-compose\"\ngit reset 3cfc --hard\ngit reflog\n# copy the hash of the commit with my docker-compose commit\ngit cherry-pick fd74df3\n```\n\n## reflog\n\nHere was the final reflog that shows all of my git actions.  **note** I\ndid reset twice.\n\n``` bash\n\u276f git reflog --name-only\n0404b6a (HEAD -> main) HEAD@{0}: cherry-pick: add docker-compose\ndocker-compose.yml\n3cfcab9 HEAD@{1}: reset: moving to 3cfc\nreadme.md\n9175695 HEAD@{2}: cherry-pick: add docker-compose\ndocker-compose.yml\n3cfcab9 HEAD@{3}: reset: moving to 3cfc\nreadme.md\nfd74df3 HEAD@{4}: commit: add docker-compose\ndocker-compose.yml\n3cfcab9 HEAD@{5}: reset: moving to HEAD\nreadme.md\n3cfcab9 HEAD@{6}: commit (initial): add readme\nreadme.md\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/github-supports-mermaid'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>GitHub Markdown now Supports Mermaid Diagrams</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-reflog-is-an-alias'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Git reflog is an alias for git log -g</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-21", "edit_link": "https://github.com/edit/main/pages/til/git-revive-dead-files.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575349", "datetime": "2022-02-21 00:00:00+00:00", "slug": "til/git-revive-dead-files", "jinja": false, "output_html": "markout/til/git-revive-dead-files/index.html", "long_description": "Git reflog can perform some serious magic in reviving your hard work You must git commit I really like to practice these techniques before I need to use them so This is what I did to revive a dropped  Here was the final reflog that shows all of my gi", "super_description": "Git reflog can perform some serious magic in reviving your hard work You must git commit I really like to practice these techniques before I need to use them so This is what I did to revive a dropped  Here was the final reflog that shows all of my git actions.  ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609940>, next=<frontmatter.Post object at 0x7f3450616730>)"}, {"cover": "", "title": "Installing packages with ansible only if they do not exist", "tags": ["python", "ansible"], "status": "published", "templateKey": "til", "path": "pages/til/ansible_install_if_not_callable.md", "description": "Part of my neovim setup requires having the  re-installing a bunch of things that are already installed can be quite check if the command is installed with  reg", "content": "Part of my neovim setup requires having the `black` python formatter\ninstalled and callable.  I install it with `pipx` so that I don't have\nto manage a virtual environment and have it available everywhere.  So\nfar this works well for me, if there are ever breaking changes I may\nneed to rethink this.\n\nre-installing a bunch of things that are already installed can be quite\na waste and really add up to my ansible run time, so for most of my\nansible tasks that install a command like this I have been following\nthis pattern.\n\n1. check if the command is installed with `command -v <command>`\n2. register that step\n3. ignore if that step fails\n4. add a `when: <xxx>_exists is failed` condition to the step that\n   installs that command.\n\n``` yaml\n- name: check is black installed\n  shell: command -v black\n  register: black_exists\n  ignore_errors: yes\n\n- name: install black\n  when: black_exists is failed\n  shell: pipx install black\n```\n\nhttps://www.youtube.com/watch?v=MCFg6-W5SBI\n\n> I made a video based on this post, check it out if its your thing\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/aws-eventbridge-visidata'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>View AWS event bridge rules with visidata</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/ansible_install_fonts'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Installing system nerd-fonts with ansible</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-24", "edit_link": "https://github.com/edit/main/pages/til/ansible_install_if_not_callable.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575370", "datetime": "2021-12-24 00:00:00+00:00", "slug": "til/ansible_install_if_not_callable", "jinja": false, "output_html": "markout/til/ansible_install_if_not_callable/index.html", "long_description": "Part of my neovim setup requires having the  re-installing a bunch of things that are already installed can be quite check if the command is installed with  register that step ignore if that step fails add a  https://www.youtube.com/watch?v=MCFg6-W5S", "super_description": "Part of my neovim setup requires having the  re-installing a bunch of things that are already installed can be quite check if the command is installed with  register that step ignore if that step fails add a  https://www.youtube.com/watch?v=MCFg6-W5SBI I made a video based on this post, check it out if its your thing", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061bf10>, next=<frontmatter.Post object at 0x7f345060e610>)"}, {"cover": "", "title": "pipx on windows", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/pipx-on-windows.md", "description": "Python, click install Edit the System Environment Variables Environment Variables button Add the following path to your users Path Variable", "content": "Python, click install\n\nEdit the System Environment Variables\n\nEnvironment Variables button\n\nAdd the following path to your users Path Variable\n\n```\nC:\\Program Files (x86)\\Common Files\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\dotnet\\;C:\\Users\\quadm\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python310\\Scripts;\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pipx-run-glances'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Run glances without install with pipx</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pip-require-virtualenv'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pip require-virtualenv</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-18", "edit_link": "https://github.com/edit/main/pages/til/pipx-on-windows.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575378", "datetime": "2022-04-18 00:00:00+00:00", "slug": "til/pipx-on-windows", "jinja": false, "output_html": "markout/til/pipx-on-windows/index.html", "long_description": "Python, click install Edit the System Environment Variables Environment Variables button Add the following path to your users Path Variable", "super_description": "Python, click install Edit the System Environment Variables Environment Variables button Add the following path to your users Path Variable", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506214f0>, next=<frontmatter.Post object at 0x7f3450616ee0>)"}, {"cover": "", "title": "Review Pull Requests with git worktrees", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/review-pull-requests-with-git-worktrees.md", "description": "Sometimes you get a PR on a project, but cannot review it without wrecking your This will create a new directory ", "content": "Sometimes you get a PR on a project, but cannot review it without wrecking your\ncurrent working setup.  This might be because it needs to be compiled, or a new\nset of requirements.  Git worktrees is a great way to chekout the remote branch\nin a completely separate directory to avoid changing any files in your current\nproject.\n\n``` bash\n# pattern\n# git worktree add -b <branch-name> <PATH> <remote>/<branch-name>\ngit worktree add -b fix-aws-service-cnsn /tmp/project origin/fix-aws-service-cnsn\n```\n\nThis will create a new directory `/tmp/project` that you can review the branch\n`fix-aws-service-cnsn` from the remote `origin`.  If you have setup different remotes locally you can check for the name of it with `git remote -v`\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/serve-html-command-line'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Serve html from your command line</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/remove-vim-tab-characters'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Remove Vim Tab Characters</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-04", "edit_link": "https://github.com/edit/main/pages/til/review-pull-requests-with-git-worktrees.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575384", "datetime": "2022-05-04 00:00:00+00:00", "slug": "til/review-pull-requests-with-git-worktrees", "jinja": false, "output_html": "markout/til/review-pull-requests-with-git-worktrees/index.html", "long_description": "Sometimes you get a PR on a project, but cannot review it without wrecking your This will create a new directory ", "super_description": "Sometimes you get a PR on a project, but cannot review it without wrecking your This will create a new directory ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621ee0>, next=<frontmatter.Post object at 0x7f34505f8a60>)"}, {"cover": "", "title": "qutebrowser clean up all status bars", "tags": ["python", "linux", "python"], "status": "published", "templateKey": "til", "path": "pages/til/clean-qutebrowser.md", "description": "I really like the super clean look of no status menus, no url bar, no bookmarks", "content": "I really like the super clean look of no status menus, no url bar, no bookmarks\nbar, nothing.  Don't get me wrong these things are useful, but honestly they\ntake up screen real estate and I RARELY look at them.  What I really want is a\ntoggle hotkey.  I found this one from one of DT's youtube video's.  I can now\ntap `xx` and both the status bar at the botton and the address bar at the top\ndisappear.\n\n``` python\n# ~/.config/qutebrowser/config.py\n\nconfig.bind(\"xb\", \"config-cycle statusbar.show always never\")\nconfig.bind(\"xt\", \"config-cycle tabs.show always never\")\nconfig.bind(\n    \"xx\",\n    \"config-cycle statusbar.show always never;; config-cycle tabs.show always never\",\n)\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/convert-markdown-pdf-linux'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Converting markdown to pdf with pandoc on linux</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/bs4-findall-headings'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Find all Headings with BeautifulSoup</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-11", "edit_link": "https://github.com/edit/main/pages/til/clean-qutebrowser.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575390", "datetime": "2022-05-11 00:00:00+00:00", "slug": "til/clean-qutebrowser", "jinja": false, "output_html": "markout/til/clean-qutebrowser/index.html", "long_description": "I really like the super clean look of no status menus, no url bar, no bookmarks", "super_description": "I really like the super clean look of no status menus, no url bar, no bookmarks", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604dc0>, next=<frontmatter.Post object at 0x7f34506283d0>)"}, {"cover": "", "title": "Textual Popup Hack", "tags": ["python", "cli", "tmux"], "status": "published", "templateKey": "til", "path": "pages/til/textual-popup-hack.md", "description": "As I am toying around with textual, I am wanting some popup user input The main issue is that when you are in a textual app, it kinda owns the textual is still ", "content": "As I am toying around with textual, I am wanting some popup user input\nto take over.  Textual is still pretty new and likely to change quite\nsignificantly, so I don't want to overdo the work I put into it, So for\nnow on my personal tuis I am going to shell out to tmux.\n\n## The Problem\n\nThe main issue is that when you are in a textual app, it kinda owns the\ninput.  So if you try to run another python function that calls for\n`input` it just cant get there.  There is a\n[textual-inputs](https://github.com/sirfuzzalot/textual-inputs) library\nthat covers this, and it might work really well for some use cases, but\nmany of my use cases have been for things that are pre-built like\ncopier, and I am trying to throw something together quick.\n\n> textual is still very beta\n\nPart of this comes down to the fact that textual is still very beta and\nlikely to change a lot, so all of the work I have done with it is for\nquick and dirty, or fun side projects.\n\n## The Solution\n\nSo the solution that was easiest for me... shell out to a tmux popup.\nThe application I am working on wants to create new documents using\ncopier templates.  copier has a fantastic cli that walks throught he\ntemplate variables and asks the user to fill them in, so I just shell\nout to that with `Popen`.  Make sure that you wait for this process to\nfinish otherwise there will be bit of jank in your textual app.\n\n``` python\nasync def action_new_post(self) -> None:\n    proc = subprocess.Popen(\n        'tmux popup \"copier copy plugins/todo-template tasks\"', shell=True\n    )\n    proc.wait()\n```\n\n## example\n\nHere is what the running todo application looks like with the copier\npopup over it.\n\n![example of the popup running over textual](https://images.waylonwalker.com/textual-popup-hack.png)\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/tmux-popups/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/tmux-popups-og_250x140.png\" alt=\"article cover for \n tmux popups\n\"/>\n          <p><strong>\n tmux popups\n</strong></p>\n      </a>\n  </div>\n\n\n> a bit more on tmux-popus [here] https://waylonwalker.com/tmux-popups/)\n\n## Links\n\n* [textual repo](https://github.com/Textualize/textual/)\n* [textual-inputs repo](https://github.com/sirfuzzalot/textual-inputs)\n* [my article on tmux popups](https://waylonwalker.com/tmux-popups/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/tmux-copier-templates'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Tmux hotkey for copier templates</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/textual-has-devtools'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Textual has devtools</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-26", "edit_link": "https://github.com/edit/main/pages/til/textual-popup-hack.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575396", "datetime": "2022-02-26 00:00:00+00:00", "slug": "til/textual-popup-hack", "jinja": false, "output_html": "markout/til/textual-popup-hack/index.html", "long_description": "As I am toying around with textual, I am wanting some popup user input The main issue is that when you are in a textual app, it kinda owns the textual is still very beta Part of this comes down to the fact that textual is still very beta and So the s", "super_description": "As I am toying around with textual, I am wanting some popup user input The main issue is that when you are in a textual app, it kinda owns the textual is still very beta Part of this comes down to the fact that textual is still very beta and So the solution that was easiest for me... shell out to a tmux popup. Here is what the running todo application looks like with the copier https://waylonwalker.com/tmux-popups/ a bit more on tmux-popus ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8970>, next=<frontmatter.Post object at 0x7f3450621dc0>)"}, {"cover": "", "title": "Practice making pipelines with kedro", "tags": ["python", "kedro"], "status": "published", "templateKey": "til", "path": "pages/til/practice-kedro.md", "description": "I am a huge believer in practicing your craft.  Professional athletes Go to your playground directory, and if you don Install pipx in your system python.  This ", "content": "I am a huge believer in practicing your craft.  Professional athletes\nspend most of their time honing their skills and making themsleves\nbetter.  In Engineering many spend nearly 0 time practicing.  I am not\nsaying that you need to spend all your free time practicing, but a few\nminutes trying new things can go a long way in how you understand what\nyou are doing and make a hue impact on your long term productivity.\n\n**practice** building pipelines with _#kedro_ today\n\nGo to your playground directory, and if you don't have one, make one.\n\n``` bash\ncd ~/playground\n```\n\nInstall pipx in your system python.  This is one of the very few, and\npossibly the only python library that deserves to be installed in your\nsystem directory, primarily because its used to sanbox clis in their own\nvirtual environment automatically for you.\n\n``` bash\npip install pipx\n```\n\nFrom inside your `playground` directory, start your new kedro project.\nThis is quite simple and painless.  So much so that if you mess this one\nup doing something wild, it might be easier to make a new one that\nfixing the wild one.\n\n```\npipx run kedro new\n# answer the questions it asks\n```\n\n> I use this quite often to try out new things in a safe place.\n\n## Make a virtual environment.\n\n### Using Conda\n\nConda is a fine choice to manage your virtual environments.  It used to\nmake things so much easier on windows that it was almost required.\nNowadays getting python running on windows has become so much easier\nthat this is less so.\n\n``` python\nconda create -n my-project python=3.8 -y\nconda activate my-project\npython  -m pip install --upgrade pip\npip install -e src\n```\n\n> one great benefit of conda is that it lets you choose the interpreter\n> to go with your virtual environment.\n\nYour new environment will be listed in your list of conda env here.\n\n``` python\nconda info --envs\n```\n\n### Using venv\n\n`venv` is what I use now.  Nothing against conda, it works great.\n`venv` just feels a bit lighter and more common.  I've actually grown to\nappreciate that the `venv` is right where I put it, most often in the\nproject directory.\n\n```\npython -m venv .venv\nsource ./.venv/bin/activate\npython  -m pip install --upgrade pip\npip install -e src\n```\n\n### using pipenv\n\n`pipenv` is another fine choice.  I like how in one command it makes the\nenvironment and activates it for you.  `pipenv` also puts virtual\nenvironments in the global directory.\n\n```\npipx run pipenv shell\npython  -m pip install --upgrade pip\npip install -e src\n```\n\n## Make pipelines\n\nNow go make some pipelines with your new project, try something wild,\nbreak it, and make anther.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pyenv-first-impressions'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>My first impressions with pyenv</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/popen-stderr'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Read stderr from python subprocess.Popen</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-27", "edit_link": "https://github.com/edit/main/pages/til/practice-kedro.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575402", "datetime": "2022-01-27 00:00:00+00:00", "slug": "til/practice-kedro", "jinja": false, "output_html": "markout/til/practice-kedro/index.html", "long_description": "I am a huge believer in practicing your craft.  Professional athletes Go to your playground directory, and if you don Install pipx in your system python.  This is one of the very few, and From inside your  I use this quite often to try out new things", "super_description": "I am a huge believer in practicing your craft.  Professional athletes Go to your playground directory, and if you don Install pipx in your system python.  This is one of the very few, and From inside your  I use this quite often to try out new things in a safe place. Conda is a fine choice to manage your virtual environments.  It used to one great benefit of conda is that it lets you choose the interpreter Your new environment will be listed in your list of conda env here. venv pipenv Now go mak", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8940>, next=<frontmatter.Post object at 0x7f3450628280>)"}, {"cover": "", "title": "Installing Homebrew on Linux", "tags": ["linux", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/installing-homebrew-linux.md", "description": "Installing brew on linux proved quite easy and got pyenv running for me I had never used homebrew before, honestly I thought it was a mac only That was it, now ", "content": "Installing brew on linux proved quite easy and got pyenv running for me\nwithin 4 commands.\n\nI had never used homebrew before, honestly I thought it was a mac only\nthing for years.  Today I wanted to try out pyenv, and the reccommended\nway to install was using homebrew.  I am not yet sure if I want either\nin my normal workflow, so for now I am just going to pop open a new\nterminal and install homebrew and see how it goes.\n\n\n``` bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\necho 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' >> /home/walkers/.zprofile\neval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"\n```\n\nThat was it, now homebrew is working. Starting a new shell and running\nthe command to install pyenv worked.\n\n``` bash\nbrew install pyenv\n```\n\n## Links\n\n* [homebrew](https://brew.sh/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/installing-pipx-on-ubuntu'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Installing Pipx on Ubuntu</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/install-yq'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Install yq | A light weight yaml parser cli</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-29", "edit_link": "https://github.com/edit/main/pages/til/installing-homebrew-linux.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575408", "datetime": "2021-12-29 00:00:00+00:00", "slug": "til/installing-homebrew-linux", "jinja": false, "output_html": "markout/til/installing-homebrew-linux/index.html", "long_description": "Installing brew on linux proved quite easy and got pyenv running for me I had never used homebrew before, honestly I thought it was a mac only That was it, now homebrew is working. Starting a new shell and running", "super_description": "Installing brew on linux proved quite easy and got pyenv running for me I had never used homebrew before, honestly I thought it was a mac only That was it, now homebrew is working. Starting a new shell and running", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505f8700>, next=<frontmatter.Post object at 0x7f3450609280>)"}, {"cover": "", "title": "2 minutes to stow", "tags": ["linux", "cli", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/2-minutes-to-stow.md", "description": "Stow is an incredible way to manage your dotfiles.  It works by managing When using stow its easiest to keep your dotfiles directory (you may name it Then each ", "content": "Stow is an incredible way to manage your dotfiles.  It works by managing\nsymlinks between your dotfiles directory and the rest of the system.  You can\nthen make your dotfiles directory a git repo and have it version controlled.  In\nmy honest opinion, when I was trying to get started the docs straight into deep\ndetail of things I frankly don't really care about and jumped right over how to\nuse it.\n\nWhen using stow its easiest to keep your dotfiles directory (you may name it\nwhat you want) in your home directory, with application directories inside of\nit.\n\nThen each application directory should reflet the same diretory structure as you\nwant in your home directory.\n\n## zsh\n\nHere is a simple example with my zshrc.\n\n``` bash\nmkdir ~/dotfiles\ncd ~/dotfiles\nmkdir zsh\nmv ~/.zshrc zsh\nstow --simulate zsh\n```\n\nYou can pass in the --simulate if you wish, it will tell you if there are going\nto be any more errors or not, but it wont give much more than that.\n\n```\nWARNING: in simulation mode so not modifying filesystem.\n```\n\nOnce your ready you can stow your zsh application.\n\n```\nstow zsh\n```\n\n## nvim\n\nA slightly more complicated example is neovim since its diretory structure does\nnot put configuration files directly in your home directory, but rather at a\ndeeper level.\n\n``` bash\nmkdir ~/dotfiles/nvim/.config/nvim/ -p\ncd ~/dotfiles\nmv ~/.config/nvim/ ~/dotfiles/nvim/.config/nvim/\nstow zsh\n```\n\n> !notice how the nvim directory inside of dotfiles is structured like it would\n> be in your $HOME directory.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/ag-ahead'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>ag silver searcher look ahead and look behind</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/testproject-io-py-actions'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Integration testing with Python, TestProject.io, and GitHub Actions</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-09", "edit_link": "https://github.com/edit/main/pages/til/2-minutes-to-stow.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575413", "datetime": "2022-01-09 00:00:00+00:00", "slug": "til/2-minutes-to-stow", "jinja": false, "output_html": "markout/til/2-minutes-to-stow/index.html", "long_description": "Stow is an incredible way to manage your dotfiles.  It works by managing When using stow its easiest to keep your dotfiles directory (you may name it Then each application directory should reflet the same diretory structure as you Here is a simple ex", "super_description": "Stow is an incredible way to manage your dotfiles.  It works by managing When using stow its easiest to keep your dotfiles directory (you may name it Then each application directory should reflet the same diretory structure as you Here is a simple example with my zshrc. You can pass in the --simulate if you wish, it will tell you if there are going Once your ready you can stow your zsh application. A slightly more complicated example is neovim since its diretory structure does !", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060ef10>, next=<frontmatter.Post object at 0x7f345069c160>)"}, {"cover": "", "title": "Get Python docstring with ast", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-docstring-ast.md", "description": "Getting docstrings from python First you need to load in some python code as a string, and parse it with You can then use  To get all of the functions docstring", "content": "Getting docstrings from python's ast is far simpler and more reliable than any\nmethod of regex or brute force searching.  It's also much less intimidating\nthan I originally thought.\n\n## Parsing\n\nFirst you need to load in some python code as a string, and parse it with\n`ast.parse`.  This gives you a tree like object, like an html dom.\n\n``` python\npy_file = Path(\"plugins/auto_publish.py\")\nraw_tree = py_file.read_text()\ntree = ast.parse(raw_tree)\n```\n\n## Getting the Docstring\n\nYou can then use `ast.get_docstring` to get the docstring of the node you are\ncurrently looking at.  In the case of freshly loading in a file, this will be\nthe module level doctring that is at the very top of a file.\n\n``` python\nmodule_docstring = ast.get_docstring(tree)\n```\n\n## Walking for all functions\n\nTo get all of the functions docstrings we can use `ast.walk` to look for nodes\nthat are an instance of `ast.FunctionDef`, then run `get_docstring` on those\nnodes.\n\n```python\nfunctions = [f for f in ast.walk(tree) if isinstance(f, ast.FunctionDef)]\nfunction_docs = [ast.get_docstring(f) for f in functions]\n```\n\n> ast.walk docs: Recursively yield all descendant nodes in the tree starting at *node*\n(including *node* itself), in no specified order.  This is useful if you\nonly want to modify nodes in place and don't care about the context.\n\n## Example\n\nHere is an image of me running this example through `ipython`.\n\n![getting docstrings from the ast in python](https://images.waylonwalker.com/ast-get-docstring.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-enum'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python Enum</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-diskcache'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I setup a sqlite cache in python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-18", "edit_link": "https://github.com/edit/main/pages/til/python-docstring-ast.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575421", "datetime": "2022-01-18 00:00:00+00:00", "slug": "til/python-docstring-ast", "jinja": false, "output_html": "markout/til/python-docstring-ast/index.html", "long_description": "Getting docstrings from python First you need to load in some python code as a string, and parse it with You can then use  To get all of the functions docstrings we can use  ast.walk docs: Recursively yield all descendant nodes in the tree starting a", "super_description": "Getting docstrings from python First you need to load in some python code as a string, and parse it with You can then use  To get all of the functions docstrings we can use  ast.walk docs: Recursively yield all descendant nodes in the tree starting at  Here is an image of me running this example through ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fddc0>, next=<frontmatter.Post object at 0x7f3450672ca0>)"}, {"cover": "", "title": "Changing copier template strings (_endops)", "tags": ["python", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/copier_endops.md", "description": "I was completely stuck for awhile.  copier was not replacing my template !", "content": "I was completely stuck for awhile.  copier was not replacing my template\nvariables.  I found out that adding all these `_endops` fixed it.  Now\nIt will support all of these types of variable wrappers\n\n``` yaml\n# copier.yml\n_templates_suffix: .jinja\n_envops:\n  block_end_string: \"%}\"\n  block_start_string: \"{%\"\n  comment_end_string: \"#}\"\n  comment_start_string: \"{#\"\n  keep_trailing_newline: true\n  variable_end_string: \"}}\"\n  variable_start_string: \"{{\"\n```\n\n> !RTFM: Later I read the docs and realized that copier defaults to using `[[`\n> and `]]` for its templates unlike other tools like cookiecutter.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/dedupe-your-shell-paths'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Dedupe your shell paths</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/copier-template-variables'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>copier template variables</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-04", "jinja": false, "edit_link": "https://github.com/edit/main/pages/til/copier_endops.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575428", "datetime": "2022-01-04 00:00:00+00:00", "slug": "til/copier_endops", "output_html": "markout/til/copier_endops/index.html", "long_description": "I was completely stuck for awhile.  copier was not replacing my template !", "super_description": "I was completely stuck for awhile.  copier was not replacing my template !", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd700>, next=<frontmatter.Post object at 0x7f3450621ca0>)"}, {"cover": "", "title": "pygame events are queued | Don't make this mistake", "tags": ["python", "pygame"], "status": "published", "templateKey": "til", "path": "pages/til/pygame-event-queue.md", "description": "pygame events are stored in a queue, by default the most suggested way You don Let printing the events reveal this Let printing the events reveals that there ar", "content": "pygame events are stored in a queue, by default the most suggested way\nshown in all tutorials \"`pumps`\" the queue, which removes all the\nmessages.\n\n## start up pygame\n\nYou don't necessarily need a full\n[boilerplate](https://waylonwalker.com/til/pygame-boilerplate-apr-2022/)\nto start looking at events, you just just need to `pygame.init()` and\nto capture any keystrokes you need a window to capture them on, so you\nwill need a display running.\n\n```python\nimport pygame\npygame.init()\npygame.display.set_mode((854, 480))\n```\n\n## get some events\n\nLet's use pygames normal `event.get` method to get events.\n\n```python\nevents = pygame.event.get()\n```\n\nprinting the events reveal this\n\n```python\n[\n    <Event(1541-JoyDeviceAdded {'device_index': 0, 'guid': '030000005e0400008e02000010010000'})>,\n    <Event(4352-AudioDeviceAdded {'which': 0, 'iscapture': 0})>,\n    <Event(4352-AudioDeviceAdded {'which': 1, 'iscapture': 0})>,\n    <Event(4352-AudioDeviceAdded {'which': 2, 'iscapture': 0})>,\n    <Event(4352-AudioDeviceAdded {'which': 0, 'iscapture': 1})>,\n    <Event(4352-AudioDeviceAdded {'which': 1, 'iscapture': 1})>,\n    <Event(32774-WindowShown {'window': None})>,\n    <Event(32777-WindowMoved {'x': 535, 'y': 302, 'window': None})>,\n    <Event(32770-VideoExpose {})>,\n    <Event(32776-WindowExposed {'window': None})>,\n    <Event(32788-WindowTakeFocus {'window': None})>,\n    <Event(32768-ActiveEvent {'gain': 1, 'state': 1})>,\n    <Event(32785-WindowFocusGained {'window': None})>,\n    <Event(768-KeyDown {'unicode': 'a', 'key': 97, 'mod': 0, 'scancode': 4, 'window': None})>,\n    <Event(771-TextInput {'text': 'a', 'window': None})>,\n    <Event(768-KeyDown {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(771-TextInput {'text': 's', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'a', 'key': 97, 'mod': 0, 'scancode': 4, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(771-TextInput {'text': 'd', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(771-TextInput {'text': 'f', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(771-TextInput {'text': 's', 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(771-TextInput {'text': 'd', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(771-TextInput {'text': 'f', 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'a', 'key': 97, 'mod': 0, 'scancode': 4, 'window': None})>,\n    <Event(771-TextInput {'text': 'a', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(771-TextInput {'text': 's', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'a', 'key': 97, 'mod': 0, 'scancode': 4, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(771-TextInput {'text': 'd', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(771-TextInput {'text': 'f', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'a', 'key': 97, 'mod': 0, 'scancode': 4, 'window': None})>,\n    <Event(771-TextInput {'text': 'a', 'window': None})>,\n    <Event(768-KeyDown {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(771-TextInput {'text': 's', 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(771-TextInput {'text': 'd', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'a', 'key': 97, 'mod': 0, 'scancode': 4, 'window': None})>,\n    <Event(769-KeyUp {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(771-TextInput {'text': 'f', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(771-TextInput {'text': 's', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(771-TextInput {'text': 'd', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(771-TextInput {'text': 'f', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'f', 'key': 102, 'mod': 0, 'scancode': 9, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(771-TextInput {'text': 's', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 's', 'key': 115, 'mod': 0, 'scancode': 22, 'window': None})>,\n    <Event(768-KeyDown {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(771-TextInput {'text': 'd', 'window': None})>,\n    <Event(769-KeyUp {'unicode': 'd', 'key': 100, 'mod': 0, 'scancode': 7, 'window': None})>,\n    <Event(768-KeyDown {'unicode': '', 'key': 1073742051, 'mod': 1024, 'scancode': 227, 'window': None})>,\n    <Event(772-Unknown {})>,\n    <Event(769-KeyUp {'unicode': '', 'key': 1073742051, 'mod': 0, 'scancode': 227, 'window': None})>,\n    <Event(32768-ActiveEvent {'gain': 0, 'state': 1})>,\n    <Event(32786-WindowFocusLost {'window': None})>,\n    <Event(772-Unknown {})>\n]\n```\n\n## Lets get some more events.\n\nLet's say that we have multpile sprites all asking for the events from\ndifferent places in our game. If we assume that our game loop runs very\nfastand we get events one after another the second one will have no\nevents.\n\n```python\nevents_one = pygame.event.get()\nevents_two = pygame.event.get()\n```\n\nprinting the events reveals that there are no events, well i\n\n```python\n[]\n```\n\n## Making things more maddening\n\nEven simple games don't quite run infinitely fast there is some delay,\nwith this delay most events will go to event_one, while any that occur\nin the short time between event_one and two will be in event_two's\nqueue.\n\n\n```python\nimport time\nevents_one = pygame.event.get()\ntime.sleep(.05) # simulating some delay that would naturally occur\nevents_two = pygame.event.get()\n```\n\n## How to Resolve this\n\nStore events for each frame in memory.\n\n## Pump\n\nI thought `pump=False` would be the answer I was looking for, but I was\nproven wrong.  It does not behave intuitivly to me.\n\n```python\nevents_one = pygame.event.get(pump=False) # all events since last pump\nevents_two = pygame.event.get(pump=False) # no events\nevents_three = pygame.event.get() # all events since last pump\n```\n\n`events_one` and `events_three` will have a list of events, while\n`events_two` will be empty.  It seems that `pump=False` leaves the\nevents there for the next `event.get()`, but appears cleared to any\n`event.get(pump=False)`.\n\n## Keep a Game State\n\nIf you want objects to do their own event handling, outside of the main\ngame, you will need to give them some game state with the events in it.\nHowever you decide, you may only call `event.get()` once per game loop\notherwise weird things will happen.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pygame-image-load'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Display Sprites in Pygame | Load and Blit</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pygame-boilerplate-apr-2022'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Pygame Boilerplate Apr 2022</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-07", "edit_link": "https://github.com/edit/main/pages/til/pygame-event-queue.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575433", "datetime": "2022-04-07 00:00:00+00:00", "slug": "til/pygame-event-queue", "jinja": false, "output_html": "markout/til/pygame-event-queue/index.html", "long_description": "pygame events are stored in a queue, by default the most suggested way You don Let printing the events reveal this Let printing the events reveals that there are no events, well i Even simple games don Store events for each frame in memory. I thought", "super_description": "pygame events are stored in a queue, by default the most suggested way You don Let printing the events reveal this Let printing the events reveals that there are no events, well i Even simple games don Store events for each frame in memory. I thought  events_one If you want objects to do their own event handling, outside of the main", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd4f0>, next=<frontmatter.Post object at 0x7f34505f8730>)"}, {"cover": "", "title": "Open Files with Nvim Remote", "tags": ["python", "vim", "tmux"], "status": "published", "templateKey": "til", "path": "pages/til/nvr-open-files.md", "description": "I recently found a really great  I have this added to my  In my workflow I open a tmux session for each project, so this First open neovim, but with the  If you", "content": "I recently found a really great [plugin](https://github.com/mhinz/neovim-remote) by\n[mhinz](https://github.com/mhinz) to open files in neovim from a\ndifferent tmux split, without touching neovim at all.\n\n## Installation\n\n[neovim-remote](https://github.com/mhinz/neovim-remote) is not a neovim\nplugin at all, it's a python cli that you can install with pip.  Unlike\nthe repo suggests, I use pipx to install `nvr`.\n\n\n``` bash\npipx install neovim-remote\n```\n\n## How I use it\n\nI have this added to my `.envrc` that is in every one of my projects.\nThis will tie a neovim session to that directory, and all directories\nunder it.\n\n``` bash\nexport NVIM_LISTEN_ADDRESS=/tmp/nvim-$(basename $PWD)\n```\n\n> In my workflow I open a tmux session for each project, so this\n> essentially ties a neovim session to a tmux session.\n\n### Open neovim\n\nFirst open neovim, but with the `nvr` command.  This will open neovim,\nand look pretty much the same as always.\n\n``` bash\nnvr\n```\n\nIf you try to run `nvr` again in another shell nothing will happen as\nits already runnin under that address, but if you give it a filename it\nwill open the file in the first instance of neovim that you opened.\n\n``` bash\nnvr readme.md\n````\n\n## Links\n\n* [GitHub](https://github.com/mhinz/neovim-remote)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/open-ssh-setup'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Setup SSH from chromebook to home desktop</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/nvim-telescope-hidden-files'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Finding hidden (dotfiles) using Telescope in neovim</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-06", "edit_link": "https://github.com/edit/main/pages/til/nvr-open-files.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575440", "datetime": "2022-03-06 00:00:00+00:00", "slug": "til/nvr-open-files", "jinja": false, "output_html": "markout/til/nvr-open-files/index.html", "long_description": "I recently found a really great  I have this added to my  In my workflow I open a tmux session for each project, so this First open neovim, but with the  If you try to run ", "super_description": "I recently found a really great  I have this added to my  In my workflow I open a tmux session for each project, so this First open neovim, but with the  If you try to run ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609820>, next=<frontmatter.Post object at 0x7f34506094c0>)"}, {"cover": "", "title": "Style Lookatme Slides a bit more Personal", "tags": ["python", "cli", "python"], "status": "published", "templateKey": "til", "path": "pages/til/lookatme-styles.md", "description": "I recently gave a talk at python web conf 2022, and one of the things I did Lets use this section to show what it  \u261d This is how my  write markdown build site p", "content": "I recently gave a talk at python web conf 2022, and one of the things I did\nwhen I should have been working on my presentation was workig on how my\npresentation looked... classic procrastination technique.\n\n## Slide One\n\nLets use this section to show what it _looks_ like as I change **my** styles.\n\n\n``` python\nfrom markata import Markata\nMarkata()\nmarkata.run()\n```\n\n> \u261d This is how my **website** is built\n\n* write markdown\n* build site\n* publish\n\n## default\n\nThis is what the above slide looks like in lookatme.\n\n![default styles](https://images.waylonwalker.com/lookatme-styles-default.png)\n\n## Set focus to the most important element\n\nThe way I write my slides I want the most prominant element to be the slides\ntitle, not the presentation title.  The slides title is generally the point I\nam trying to make, I will leave some supporting information if I want, but\nsometimes, I _just_ have a title.\n\n``` yaml\nstyles:\n    title:\n        bg: default\n        fg: '#e1af66'\n    headings:\n        '1':\n            bg: default\n            fg: '#ff66c4,bold,italics'\n            prefix: ' \u21c1 '\n            suffix: ' \u21bd '\n```\n\n![set the focus on the slide title styles](https://images.waylonwalker.com/lookatme-styles-focus-to-slide-title.png)\n\n\n> by default he prefix/suffix was a full block that just went transparant into\n> the slide.  I thought the harpoons were fun and went with them on a whim\n\n## The box characters bother me\n\nThe box characters are fine really, but it really bothers me that they are not\nconneted.  The author is probably doing this because it looks ok on most\nsystems, and many terminals dont have their fonts right and wont align anyways.\nI am not sure if I ever had a windows terminal other than their new Terminal\nthat properly connected box characters.\n\n```yaml\n    quote:\n        side: '\u2502'\n        style:\n            bg: default\n            fg: '#aaa'\n        top_corner: '\u256d'\n        bottom_corner: '\u2570'\n````\n\n## Add Author\n\nAdding author to the root of the frontmatter of the document will add it to the bottom left of the slides.\n\n```yaml\nauthor: '@_waylonwalker'\n```\n\n![lookatme slides with author defined](https://images.waylonwalker.com/lookatme-styles-add-author.png)\n\n## Style the author\n\nWe can style the foreground and background of this text by adding something\nlike this to the styles section of the frontmatter.\n\n```yaml\nauthor:\n    bg: default\n    fg: '#368ce2'\n```\n\n## The rest of the footer\n\nWhile we are at it, lets style the rest of the footer to my own theme.  Let's pop this into the style and see what it looks like.\n\n```yaml\ndate:\n    bg: default\n    fg: '#368ce2'\nslides:\n    bg: default\n    fg: '#368ce2'\n```\n\n![lookatme slides with author styled](https://images.waylonwalker.com/lookatme-styles-add-author-styles.png)\n\n## reduce the padding\n\nWhen I am presenting I am punched in as big as I can go, and which makes\nthe padding massive.  I want as much as the screen real estate devoted to\nmaking big readable text as I can.\n\n```yaml\npadding:\n    bottom: 0\n    left: 0\n    right: 0\n    top: 0\n```\n\n![lookatme slides with no more padding](https://images.waylonwalker.com/lookatme-styles-no-padding.png)\n\n\n## final results\n\nHere is what the final frontmatter looks like to fully style my talk.\n\n```yaml\n---\ndate: 2022-03-24\ntemplateKey: til\ntitle: Style Lookatme Slides a bit more Personal\ntags:\n  - python\n  - cli\n  - python\nauthor: '@_waylonwalker'\nstyles:\n    padding:\n        bottom: 0\n        left: 0\n        right: 0\n        top: 0\n    title:\n        bg: default\n        fg: '#e1af66'\n    date:\n        bg: default\n        fg: '#368ce2'\n    slides:\n        bg: default\n        fg: '#368ce2'\n    headings:\n        '1':\n            bg: default\n            fg: '#ff66c4,bold,italics'\n            prefix: ' \u21c1 '\n            suffix: ' \u21bd '\n    quote:\n        side: '\u2502'\n        style:\n            bg: default\n            fg: '#aaa'\n        top_corner: '\u256d'\n        bottom_corner: '\u2570'\n    author:\n        bg: default\n        fg: '#368ce2'\n---\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/markata-telescope-picker'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Markata Filters as Telescope Pickers in Neovim</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/lookatme-slides'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I Present Markdown Slides from the Terminal</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-24", "author": "@_waylonwalker", "styles": {"padding": {"bottom": 0, "left": 0, "right": 0, "top": 0}, "title": {"bg": "default", "fg": "#e1af66"}, "date": {"bg": "default", "fg": "#368ce2"}, "slides": {"bg": "default", "fg": "#368ce2"}, "headings": {"1": {"bg": "default", "fg": "#ff66c4,bold,italics", "prefix": " \u21c1 ", "suffix": " \u21bd "}}, "quote": {"side": "\u2502", "style": {"bg": "default", "fg": "#aaa"}, "top_corner": "\u256d", "bottom_corner": "\u2570"}, "author": {"bg": "default", "fg": "#368ce2"}}, "edit_link": "https://github.com/edit/main/pages/til/lookatme-styles.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575446", "datetime": "2022-03-24 00:00:00+00:00", "slug": "til/lookatme-styles", "jinja": false, "output_html": "markout/til/lookatme-styles/index.html", "long_description": "I recently gave a talk at python web conf 2022, and one of the things I did Lets use this section to show what it  \u261d This is how my  write markdown build site publish This is what the above slide looks like in lookatme. The way I write my slides I wa", "super_description": "I recently gave a talk at python web conf 2022, and one of the things I did Lets use this section to show what it  \u261d This is how my  write markdown build site publish This is what the above slide looks like in lookatme. The way I write my slides I want the most prominant element to be the slides by default he prefix/suffix was a full block that just went transparant into The box characters are fine really, but it really bothers me that they are not Adding author to the root of the frontmatter of", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd4c0>, next=<frontmatter.Post object at 0x7f3450609b80>)"}, {"cover": "", "title": "git diff-filter", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/git-diff-filter.md", "description": "Git commands such as  You can find the full description by searching for  Open up a git repo and play around with this, here are some example that", "content": "Git commands such as `diff`, `log`, `whatchanged` all take a flag called\n`--diff-filter`.  This can filter for only certain types of diffs, such\nas added (A), modified (M), or deleted (D).\n\n## Man page\n\nYou can find the full description by searching for `--diff-filter` in\nthe `man git diff` page.\n\n``` bash\n--diff-filter=[(A|C|D|M|R|T|U|X|B)...[*]]\n    Select only files that are Added (A), Copied (C), Deleted (D), Modified (M), Renamed (R), have their type (i.e. regular file, symlink, submodule, ...)\n    changed (T), are Unmerged (U), are Unknown (X), or have had their pairing Broken (B). Any combination of the filter characters (including none) can be used.\n    When * (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no\n    file that matches other criteria, nothing is selected.\n\n    Also, these upper-case letters can be downcased to exclude. E.g.  --diff-filter=ad excludes added and deleted paths.\n\n    Note that not all diffs can feature all types. For instance, diffs from the index to the working tree can never have Added entries (because the set of paths\n    included in the diff is limited by what is in the index). Similarly, copied and renamed entries cannot appear if detection for those types is disabled.\n```\n\n## Try it out\n\nOpen up a git repo and play around with this, here are some example that\nI played with that seemed useful to me.\n\n``` bash\n# find when any files were deleted\ngit log --diff-filter D\n\n# find when all files were added\ngit log --diff-filter A\n\n# only one specific file\ngit log --diff-filter A -- readme.md\n\n# partial match to a single file\ngit log --diff-filter A -- read*\n\n# Find when all python files were added\ngit log --diff-filter A -- *.py\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-find-deleted-files'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>git find deleted files</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-config-help-autocorrect'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Configure Git to Autocorrect Your Fat Fingers</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-27", "edit_link": "https://github.com/edit/main/pages/til/git-diff-filter.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575452", "datetime": "2022-02-27 00:00:00+00:00", "slug": "til/git-diff-filter", "jinja": false, "output_html": "markout/til/git-diff-filter/index.html", "long_description": "Git commands such as  You can find the full description by searching for  Open up a git repo and play around with this, here are some example that", "super_description": "Git commands such as  You can find the full description by searching for  Open up a git repo and play around with this, here are some example that", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616280>, next=<frontmatter.Post object at 0x7f34505f85e0>)"}, {"cover": "", "title": "Glances can watch docker processes", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/glances-docker.md", "description": "Glances is a system monitor with a ton of features, including docker processes. I have started using portainer to look at running docker processes, its a great ", "content": "Glances is a system monitor with a ton of features, including docker processes.\n\nI have started using portainer to look at running docker processes, its a great\nheavy-weight docker process monitor.  glances works as a great lightweight\nmonitor to just give you the essentials, ( Name, Status, CPU%, MEM, /MAX,\nIOR/s, IOW/s, Rx/s, Tx/s, Command)\n\n## install\n\nYou will need to install glances to use the glances webui.  We can still use\n`pipx` to manage our virtual environment for us so that we do not need to do so\nmanually or run the risk of globally installed package dependency hell.\n\n``` bash\npipx install glances\npipx inject glances \"glances[docker]\"\n```\n\nYou will be presented with this success message.\n\n``` bash\n  injected package glances into venv glances\ndone! \u2728 \ud83c\udf1f \u2728\n```\n\n## results\n\nNow running glances will also show information about your running docker\ncontainers.\n\n![running glances with docker installed will show your docker processes](https://images.waylonwalker.com/glances-docker.png)\n\n\n## Links\n\n* [glances docker](https://glances.readthedocs.io/en/catest/docker.html)\n* [pipx](https://pypa.github.io/pipx/)\n* [website](https://nicolargo.github.io/glances/)\n* [docs](https://glances.readthedocs.io/en/latest/index.html)\n* [github](https://github.com/nicolargo/glances)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/global-gitignore-considered-useful'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>A Good Use for global .gitignore</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/gitignore-python'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python Respect the .gitignore</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-22", "edit_link": "https://github.com/edit/main/pages/til/glances-docker.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575458", "datetime": "2022-02-22 00:00:00+00:00", "slug": "til/glances-docker", "jinja": false, "output_html": "markout/til/glances-docker/index.html", "long_description": "Glances is a system monitor with a ton of features, including docker processes. I have started using portainer to look at running docker processes, its a great You will need to install glances to use the glances webui.  We can still use You will be p", "super_description": "Glances is a system monitor with a ton of features, including docker processes. I have started using portainer to look at running docker processes, its a great You will need to install glances to use the glances webui.  We can still use You will be presented with this success message. Now running glances will also show information about your running docker", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e280>, next=<frontmatter.Post object at 0x7f34506045e0>)"}, {"cover": "", "title": "Python string of letters is a string of letters, but not with special", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-string-is-string.md", "description": "In python, a string is a string until you add special characters. In browsing twitter this morning I came accross this tweet, that showed that https://twitter.c", "content": "In python, a string is a string until you add special characters.\n\nIn browsing twitter this morning I came accross this tweet, that showed that\nyou can use `is` accross two strings if they do not contain special characters.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">\ud83d\udc0d Python:<br>- Allocate all numbers from -5 to 256 on startup<br>- Intern all strings up to a length of 3 but only digits and letters<br><br>\u26a1\ufe0f Also Python:<br>- Explicit is better than implicit.<br>- Special cases aren&#39;t special enough to break the rules. <a href=\"https://t.co/SlZRFcQoQK\">pic.twitter.com/SlZRFcQoQK</a></p>&mdash; Bas codes (@bascodes) <a href=\"https://twitter.com/bascodes/status/1492147596688871424?ref_src=twsrc%5Etfw\">February 11, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\nI popped open ipython to play with this.  I could confirm on `3.9.7`, short\nstrings that I typed in worked as expected.\n\n``` python\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a = \"asdf\"\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f b = \"asdf\"\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a is b\nTrue\n```\n\nUsing the `upper()` method on these strings does break down.\n\n``` python\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a.upper() is b.upper()\nFalse\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a = \"ASDF\"\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f b = \"ASDF\"\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a is b\nTrue\n```\n\nIf You can also see this in the id of the objects as well, which is the memmory\naddress in CPython.\n\n``` python\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f id(a)\n140717359289568\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f id(b)\n140717359289568\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f id(a.upper())\n140717359581824\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f id(b.upper())\n140717360337824\n```\n\nFinally just as the post shows if you add a special character in there it also\nbreaks.\n\n``` python\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a = \"ASDF!\"\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f b = \"ASDF!\"\n\nwaylonwalker \u21aamain v3.9.7 ipython\n\u276f a is b\nFalse\n```\n\n## What should you do\n\nFirst and foremost, these are the exact pitfalls that `flake8` guards you\nagainst.  So the very first things you should take away here is that there is a\nlot of wisdom and value in `flake8`.\n\nSecond, the `is` comparison should be used for things that you want to compare\nto exact memmory addresses.  These include booleans and None.  Don't use `is`\naccross two assigned variables.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-sys-excepthook'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python sys.excepthook</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-reverse-sluggify'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Python Reverse Sluggify</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-12", "edit_link": "https://github.com/edit/main/pages/til/python-string-is-string.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575464", "datetime": "2022-02-12 00:00:00+00:00", "slug": "til/python-string-is-string", "jinja": false, "output_html": "markout/til/python-string-is-string/index.html", "long_description": "In python, a string is a string until you add special characters. In browsing twitter this morning I came accross this tweet, that showed that https://twitter.com/bascodes/status/1492147596688871424 I popped open ipython to play with this.  I could c", "super_description": "In python, a string is a string until you add special characters. In browsing twitter this morning I came accross this tweet, that showed that https://twitter.com/bascodes/status/1492147596688871424 I popped open ipython to play with this.  I could confirm on  Using the  If You can also see this in the id of the objects as well, which is the memmory Finally just as the post shows if you add a special character in there it also First and foremost, these are the exact pitfalls that  Second, the ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd730>, next=<frontmatter.Post object at 0x7f34506214c0>)"}, {"cover": "", "title": "Add New Dependencies to Your Kedro Project", "tags": ["kedro", "python"], "status": "published", "templateKey": "til", "path": "pages/til/kedro-new-dependencies.md", "description": "As you work on your kedro projects you are bound to need to add more Before you start mucking around with any changes to dependencies make sure that New require", "content": "As you work on your kedro projects you are bound to need to add more\ndependencies to the project eventually.  Kedro uses a fantastic command\n`pip-compile` under the hood to ensure that everyone is on the same version of\npackages at all times, and able to easily upgrade them.  It might be a bit\ndifferent workflow than what you have seen, let's take a look at it.\n\n## git status\n\nBefore you start mucking around with any changes to dependencies make sure that\nyour git status is clean.  I'd even reccomend starting a new branch for this,\nand if you are working on a team potentially submit this as its own PR for\nclarity.\n\n``` bash\ngit status\ngit checkout main\ngit checkout -b add-rich-dependency\n```\n\n## requirements.in\n\nNew requirements get added to a requirements.in file.  If you need to specify\nan exact version, or a minimum version you can do that, but if all versions\ngenerally work you can leave it open.\n\n``` bash\n# requirements.in\nrich\n```\n\nHere I added the popular `rich` package to my `requirements.in` file.  Since\nI am ok with the latest version I am not going to pin anything, I am going to\nlet the pip resolver pick the latest version that does not conflict with any of\nmy dependencies for me.\n\n## build-reqs\n\nThe command `kedro build-reqs` will tell kedro to recompile the\n`requirements.txt` file that has all of our dependencies pinned down to exact\nversions.  This ensures that all of our teammates and production workflows use\nthe same exact versions of packages even if new ones are released after we\ninstalled on our development machines.\n\n``` bash\nkedro build-reqs\n```\n\n## git add\n\nNow that we have our new dependencies ready to go commit those to git, and\nsubmit a PR for them if you are working on a team.  This is a good way to\ndocument the discussion of adding new dependencies to your teams project.\n\n``` bash\ngit add requirements.in\ngit add requirements.txt\ngit status\ngit commit -m \"FEAT updated dependencies with rich\"\ngit push\n# go make a pr\ngh pr create --title \"feat add rich to dependencies\" --body \"I added rich as a dependency, and ran pip-compile\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/kedro-rich'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Make Kedro Runs Beautiful</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/kedro-lambda-node'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Lambda Function as a Kedro Node</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-28", "edit_link": "https://github.com/edit/main/pages/til/kedro-new-dependencies.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575470", "datetime": "2022-01-28 00:00:00+00:00", "slug": "til/kedro-new-dependencies", "jinja": false, "output_html": "markout/til/kedro-new-dependencies/index.html", "long_description": "As you work on your kedro projects you are bound to need to add more Before you start mucking around with any changes to dependencies make sure that New requirements get added to a requirements.in file.  If you need to specify Here I added the popula", "super_description": "As you work on your kedro projects you are bound to need to add more Before you start mucking around with any changes to dependencies make sure that New requirements get added to a requirements.in file.  If you need to specify Here I added the popular  The command  Now that we have our new dependencies ready to go commit those to git, and", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e940>, next=<frontmatter.Post object at 0x7f34505fddf0>)"}, {"cover": "", "title": "Install obs flatpak", "tags": ["linux", "linux", "linux"], "status": "published", "templateKey": "til", "path": "pages/til/install-obs-flatpak.md", "description": "Big announcement recently that obs studio now builds out to a flatpak, I did not have flatpak installed so the first thing I had to do was get Once I had flatpa", "content": "Big announcement recently that obs studio now builds out to a flatpak,\nhopefully making it easier for all of us to install, especially us near\nnormies that don't regularly compile anything from source.\n\n## install flatpak\n\nI did not have flatpak installed so the first thing I had to do was get\nthe `flatpak` command installed, and add their default repo.\n\n``` bash\nsudo apt install flatpak\nflatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo\n```\n\nOnce I had flatpak, I was able to get obs installed with the following\ncommand.\n\n``` bash\nflatpak install flathub com.obsproject.Studio\n```\n\nOnce Installed it fired right up for me with the next command they\nsuggested.\n\n``` bash\nflatpak run com.obsproject.Studio\n```\n\n## It Works\n\nPretty straightforward, following the instructions given it all worked\nfor me, but it was missing a lot of the plugins that the current snap\npackage I am using gives me (namely virtual webcam).  So I am not ready\nto jump onto it until I figure out how to manage my own obs plugins.\nFor now I think the snap is working just well enough.\n\n## Links\n\n* [flatpak setup for ubuntu](https://flatpak.org/setup/Ubuntu)\n* [obs release notes](https://github.com/obsproject/obs-studio/releases/tag/27.2.0)\n* [obs flatpak](https://flathub.org/apps/details/com.obsproject.Studio)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/install-rust'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Installing Rust and Cargo on Ubuntu 21.10 using Ansible</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/htmx-get'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Ease into htmx with htmx-get</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-25", "edit_link": "https://github.com/edit/main/pages/til/install-obs-flatpak.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575478", "datetime": "2022-02-25 00:00:00+00:00", "slug": "til/install-obs-flatpak", "jinja": false, "output_html": "markout/til/install-obs-flatpak/index.html", "long_description": "Big announcement recently that obs studio now builds out to a flatpak, I did not have flatpak installed so the first thing I had to do was get Once I had flatpak, I was able to get obs installed with the following Once Installed it fired right up for", "super_description": "Big announcement recently that obs studio now builds out to a flatpak, I did not have flatpak installed so the first thing I had to do was get Once I had flatpak, I was able to get obs installed with the following Once Installed it fired right up for me with the next command they Pretty straightforward, following the instructions given it all worked", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fd040>, next=<frontmatter.Post object at 0x7f345060e040>)"}, {"cover": "", "title": "View AWS event bridge rules with visidata", "tags": ["python", "cli", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/aws-eventbridge-visidata.md", "description": "Reading eventbridge rules from the command line can be a total drag, pipe it I just love when I start thinking through how to parse a bunch of json at the", "content": "Reading eventbridge rules from the command line can be a total drag, pipe it\ninto visidata to make it a breeze.\n\nI just love when I start thinking through how to parse a bunch of json at the\ncommand line, maybe building out my own custom cli, then the solution is as\nsimple as piping it into visidata.  Which is a fantastic tui application that\nhad a ton of vim-like keybindings and data features.\n\n\n``` python\nalias awsevents = aws events list-rules | visidata -f json\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/bash-mktemp'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Bash mktemp</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/ansible_install_if_not_callable'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Installing packages with ansible only if they do not exist</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-15", "edit_link": "https://github.com/edit/main/pages/til/aws-eventbridge-visidata.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575483", "datetime": "2022-02-15 00:00:00+00:00", "slug": "til/aws-eventbridge-visidata", "jinja": false, "output_html": "markout/til/aws-eventbridge-visidata/index.html", "long_description": "Reading eventbridge rules from the command line can be a total drag, pipe it I just love when I start thinking through how to parse a bunch of json at the", "super_description": "Reading eventbridge rules from the command line can be a total drag, pipe it I just love when I start thinking through how to parse a bunch of json at the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506165e0>, next=<frontmatter.Post object at 0x7f3450616b80>)"}, {"cover": "", "title": "Modded Minecraft in Docker", "tags": ["homelab", "docker"], "status": "published", "templateKey": "til", "path": "pages/til/modded-minecraft-in-docker.md", "description": "In my adventure to put more homelab in docker, I moved our modded So far I have found all of our mods from  under the hood docker is using wget to get the mod. ", "content": "In my adventure to put more homelab in docker, I moved our modded\nminecraft setup to docker.\n\n## Getting Mods\n\nSo far I have found all of our mods from [curse\nforge](https://www.curseforge.com/minecraft/mc-mods).  modpacks make\ngetting multiple mods working together much easier, someone else has\nalready vetted a pack of often times 100+ mods that all play well\ntogether.  I have yet to get these working in docker, I will, but for\nnot I just have individual mods.\n\n## download file\n\nunder the hood docker is using wget to get the mod. The link you click\non from curseforge will block wget.  What I do is pop open the devtools\n(f12 in chrome), click on the network tab, click the download link on\nthe web page, and watch the real link show up.\n\n\n![minecraft mod in netwrok tab](https://images.waylonwalker.com/minecraft-mod-wget-file.png)\n\n## Docker-compose\n\nI am using docker compose, it makes the command much easier to start,\nand all the things needed stored in a file.  I am not using compose to\nrun multiple things, just for the simple start command.\n\nCreate a directory for your server and add the following to a\n`docker-compose.yml` file.\n\n``` yaml\nversion: \"3.8\"\n\nservices:\n  mc:\n    container_name: walkercraft\n    image: itzg/minecraft-server\n    ports:\n      - 25565:25565\n    environment:\n      EULA: \"TRUE\"\n      TYPE: \"FORGE\"\n      VERSION: 1.16.5\n      MODS_FILE: /extras/mods.txt\n      REMOVE_OLD_MODS: \"true\"\n    tty: true\n    stdin_open: true\n    restart: unless-stopped\n    ports:\n      - 25565:25565\n    volumes:\n      - ./minecraft-data:/data\n      - ./mods.txt:/extras/mods.txt:ro\n\nvolumes:\n  data:\n```\n\n## mods.txt\n\nOnce you have your mod file link from the network tab add them to a\nmods.txt file next to your docker-compose file.\n\n``` txt\nhttps://media.forgecdn.net/files/3620/189/engineersdecor-1.16.5-1.1.16.jar\n```\n\n## start your server\n\nOnce you have made it this far starting the server is pretty simple.\n\n``` bash\ndocker compose up -d\n```\n\n## kill your server\n\nIf your still in the same directory, taking down the server should be\npretty easy as well.\n\n``` bash\ndocker compose down\n\n# if that does not work you can kill it\ndocker ps\n# copy the id of your container\ndocker kill <id>\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/neovim-config-for-git'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Neovim Config for Git</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/mermaid-subgraphs'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Grouping Mermaid nodes in Subgraphs</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-16", "edit_link": "https://github.com/edit/main/pages/til/modded-minecraft-in-docker.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575489", "datetime": "2022-02-16 00:00:00+00:00", "slug": "til/modded-minecraft-in-docker", "jinja": false, "output_html": "markout/til/modded-minecraft-in-docker/index.html", "long_description": "In my adventure to put more homelab in docker, I moved our modded So far I have found all of our mods from  under the hood docker is using wget to get the mod. The link you click I am using docker compose, it makes the command much easier to start, C", "super_description": "In my adventure to put more homelab in docker, I moved our modded So far I have found all of our mods from  under the hood docker is using wget to get the mod. The link you click I am using docker compose, it makes the command much easier to start, Create a directory for your server and add the following to a Once you have your mod file link from the network tab add them to a Once you have made it this far starting the server is pretty simple. If your still in the same directory, taking down the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621b80>, next=<frontmatter.Post object at 0x7f3450604df0>)"}, {"cover": "", "title": "Python Reverse Sluggify", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/python-reverse-sluggify.md", "description": "In order to make an auto title plugin for markata I needed to come up ! Here I have  a  To turn this into a markata plugin I put it into a pre", "content": "In order to make an auto title plugin for markata I needed to come up\nwith a way to reverse the slug of a post to create a title for one that\ndoes not explicitly have a title.\n\n!!! Note \"slugs\"\n   a slug is generally all lowercase and free of spaces, and is a way to\n   make website routes (urls)\n\n\nHere I have  a `path` available that gives me the articles path, ex.\n`python-reverse-sluggify.md`.  An easy way to get rid of the file\nextension, is to pass it into pathlib.Path and ask for the stem, which\nreturns `python-reverse-sluggify`.  Then from There I chose to replace\n`-` and `_` with a space.\n\n``` python\narticle[\"title\"] = (\n    Path(article[\"path\"]).stem.replace(\"-\", \" \").replace(\"_\", \" \").title()\n)\n```\n\n\n\nTo turn this into a markata plugin I put it into a pre_render hook.\n\n``` python\nfrom pathlib import Path\n\nfrom markata.hookspec import hook_impl, register_attr\n\n\n@hook_impl\n@register_attr(\"articles\")\ndef pre_render(markata) -> None:\n    for article in markata.filter('title==\"\"'):\n        article[\"title\"] = (\n            Path(article[\"path\"]).stem.replace(\"-\", \" \").replace(\"_\", \" \").title()\n        )\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-string-is-string'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Python string of letters is a string of letters, but not with special</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-requests-get'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Get Webpage with python requests</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-20", "edit_link": "https://github.com/edit/main/pages/til/python-reverse-sluggify.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575495", "datetime": "2022-01-20 00:00:00+00:00", "slug": "til/python-reverse-sluggify", "jinja": false, "output_html": "markout/til/python-reverse-sluggify/index.html", "long_description": "In order to make an auto title plugin for markata I needed to come up ! Here I have  a  To turn this into a markata plugin I put it into a pre", "super_description": "In order to make an auto title plugin for markata I needed to come up ! Here I have  a  To turn this into a markata plugin I put it into a pre", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061bdc0>, next=<frontmatter.Post object at 0x7f3450609a90>)"}, {"cover": "", "title": "Tmux Pop size", "tags": ["tmux", "linux", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/tmux-pop-size.md", "description": "tmux popups can be sized how you like based on the % width of the", "content": "tmux popups can be sized how you like based on the % width of the\nterminal on creation by using the flags (h, w, x, y) for height, width,\nand position.\n\n``` bash\n# normal popup\ntmux popup figlet \"Hello\"\n# fullscreen popup\ntmux popup -h 100% -w 100% figlet \"Hello\"\n# 75% centered popup\ntmux popup -h 100% -w 75% figlet \"Hello\"\n# 75% popup on left side\ntmux popup -h 100% -w 75% -x 0% figlet \"Hello\"\n```\n\n![example video running these commands](https://images.waylonwalker.com/tmux-popup-position.gif)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/ubuntu-terminal-clipboard'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Tmux and Vim Clipboard for Ubuntu</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/tmux-copy-mode-binding'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>A better copy-mode bind for Tmux</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-05", "edit_link": "https://github.com/edit/main/pages/til/tmux-pop-size.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575502", "datetime": "2022-01-05 00:00:00+00:00", "slug": "til/tmux-pop-size", "jinja": false, "output_html": "markout/til/tmux-pop-size/index.html", "long_description": "tmux popups can be sized how you like based on the % width of the", "super_description": "tmux popups can be sized how you like based on the % width of the", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506213a0>, next=<frontmatter.Post object at 0x7f3450672b80>)"}, {"cover": "", "title": "Tmux and Vim Clipboard for Ubuntu", "tags": ["linux", "vim", "tmux"], "status": "published", "templateKey": "til", "path": "pages/til/ubuntu-terminal-clipboard.md", "description": "One of the first things I noticed broken in my terminal based workflow moving First off you need to get  I have tmux setup to automatically copy any selection I", "content": "One of the first things I noticed broken in my terminal based workflow moving\nfrom Windows wsl to ubuntu was that my clipboard was all messed up and not\nworking with my terminal apps.  Luckily setting tmux and neovim to work with\nthe system clipboard was much easier than it was on windows.\n\nFirst off you need to get `xclip` if you don't already have it provided by your\ndistro.  I found it in the apt repositories.  I have used it between Ubuntu\n18.04 and 21.10 and they all work flawlessly for me.\n\nI have tmux setup to automatically copy any selection I make to the clipboard\nby setting the following in my `~/.tmux.conf`. While I have neovim open I need\nto be in insert mode for this to pick up.\n\n``` bash\n# ~/tmux.conf\nbind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \"xclip -i -f -selection primary | xclip -i -selection clipboard\"\nbind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel \"xclip -selection clipboard -i\"\n```\n\nTo get my yanks to go to the system clipboard in neovim, I just added\nunnamedplus to my existing clipboard variable.\n\n``` vim\n# ~/.config/nvim/init.vim\nset clipboard+=unnamedplus\n```\n\nIf you need to copy something right from the terminal you can use xclip\ndirectly.  I do this semi-often to send someone a message in chat.\n\n``` bash\ncat file.txt | clip -sel copy\n```\n\nI set up some alias's for doing this a bit more efficiently, but don't find\nmyself using them very often.  This helps me grab commands from history and\ncopy them.\n\n``` bash\nalias hclip=\"history | tail -n1 | cut -c 8- | xclip -sel clip\"\nalias fclip=\"history -n 1000 | fzf | cut -c 8- | xclip -sel clip\"\nalias fclip=\"history -n 1000 | fzf | xclip -sel clip\"\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/vim-cmd'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Vim remaps use cmd in place of :</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/tmux-pop-size'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Tmux Pop size</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-26", "edit_link": "https://github.com/edit/main/pages/til/ubuntu-terminal-clipboard.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575508", "datetime": "2022-01-26 00:00:00+00:00", "slug": "til/ubuntu-terminal-clipboard", "jinja": false, "output_html": "markout/til/ubuntu-terminal-clipboard/index.html", "long_description": "One of the first things I noticed broken in my terminal based workflow moving First off you need to get  I have tmux setup to automatically copy any selection I make to the clipboard To get my yanks to go to the system clipboard in neovim, I just add", "super_description": "One of the first things I noticed broken in my terminal based workflow moving First off you need to get  I have tmux setup to automatically copy any selection I make to the clipboard To get my yanks to go to the system clipboard in neovim, I just added If you need to copy something right from the terminal you can use xclip I set up some alias", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060edc0>, next=<frontmatter.Post object at 0x7f34506215e0>)"}, {"cover": "", "title": "Run glances without install with pipx", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/pipx-run-glances.md", "description": "Glances is a fully featured system monitoring tool written in python.  Out of Once you run this you will be in a tui application similar to htop.  You can", "content": "Glances is a fully featured system monitoring tool written in python.  Out of\nthe box it's quite similar to htop, but has quite a few more features, and can\nbe ran without installing anything other than `pipx`, which you should already\nhave installed if you do anything with python.\n\n\n``` bash\npipx run glances\n```\n\nOnce you run this you will be in a tui application similar to htop.  You can\nkill processes with k, use left and right arrows to change the sorting column,\nand up and down to select different processes.\n\n![running pipx run glances on my ubuntu 21.10 machine inside the kitty terminal](https://images.waylonwalker.com/pipx-run-glances.png)\n\n## Links\n\n* [pipx](https://pypa.github.io/pipx/)\n* [website](https://nicolargo.github.io/glances/)\n* [docs](https://glances.readthedocs.io/en/latest/index.html)\n* [github](https://github.com/nicolargo/glances)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/pipx-w'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Glances webui with pipx</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pipx-on-windows'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>pipx on windows</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-18", "edit_link": "https://github.com/edit/main/pages/til/pipx-run-glances.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575514", "datetime": "2022-02-18 00:00:00+00:00", "slug": "til/pipx-run-glances", "jinja": false, "output_html": "markout/til/pipx-run-glances/index.html", "long_description": "Glances is a fully featured system monitoring tool written in python.  Out of Once you run this you will be in a tui application similar to htop.  You can", "super_description": "Glances is a fully featured system monitoring tool written in python.  Out of Once you run this you will be in a tui application similar to htop.  You can", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450672ee0>, next=<frontmatter.Post object at 0x7f3450616ca0>)"}, {"cover": "", "title": "Did my site build just go down?", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/site-down.md", "description": "My personal Site build went down last week, and I was unable to publish a new Classic IT fix, rerun it and see if you get the same error.  Everyone is busy Also", "content": "My personal Site build went down last week, and I was unable to publish a new\narticle.  This is the process I went through to get it back up and running\nquickly.\n\n## Is it a fluke?\n\nClassic IT fix, rerun it and see if you get the same error.  Everyone is busy\nand when you have your build go down you are probably busy doing something\nelse.  My first step is often to simply click rerun right from GitHub actions.\nSometimes this will fix it, and sometimes it doesn't.  It's an easy fix to run\nin the meantime you are not focused on fixing it.\n\n## Is GitHub having issues?\n\nAlso worth a check to see if GitHub is having a hiccup or not.  This error felt\npretty obviously not GitHub's fault, but it's a good one to check when you run\ninto a weird unexplainable error.\n\nCheck [github status](https://www.githubstatus.com/) for any downtime issues with actions.\n\n## Build Down\n\nAlright down to the error message I got.  The error is pretty obvious that\nsomewhere I am trying to import a non-existing module from click.\n\n``` python\nRun markata build --no-pretty\nTraceback (most recent call last):\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/bin/markata\", line 33, in <module>\n    sys.exit(load_entry_point('markata==0.1.0', 'console_scripts', 'markata')())\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/bin/markata\", line 25, in importlib_load_entry_point\n    return next(matches).load()\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/importlib/metadata.py\", line 77, in load\n    module = import_module(match.group('module'))\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/importlib/__init__.py\", line 127, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 961, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 843, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/markata/__init__.py\", line 25, in <module>\n    from markata.cli.plugins import Plugins\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/markata/cli/__init__.py\", line 1, in <module>\n    from .cli import app, cli, make_layout, run_until_keyboard_interrupt\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/markata/cli/cli.py\", line 3, in <module>\n    import typer\n  File \"/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/typer/__init__.py\", line 12, in <module>\n    from click.termui import get_terminal_size as get_terminal_size\nImportError: cannot import name 'get_terminal_size' from 'click.termui' (/opt/hostedtoolcache/Python/3.8.12/x64/lib/python3.8/site-packages/click/termui.py)\n```\n\n## Check pypi's release date of click\n\nSo the latest click was released just a few hours before this build.  This\nfeels like we are getting somewhere.  Either click did a poor job of issuing\ndeprecation warnings, or I was ignoring them in my build pipeline.\n\n![click 8.1.0 release date on pypi](https://images.waylonwalker.com/click-8-1-0-release-date.png)\n\n## pin it and push\n_let's fix this build now_\n\nTo get the build up and running today so that we don't stop the flow of new\nposts I am going to open my `requirements.txt` file, and pin under the version\nthat was just built.\n\n``` txt\nclick<8.1.0\n```\n\nSince I am still busy doing other things that fixing this, and am pretty\nconfident that things were working before, I am just going to commit this and\nship it.\n\n## watch ci\n\nComing back to actions a few minutes later shows the site is building\nsuccessfully without the same error as before.  New posts will now be flowing\nto the site with the slightly older version of click.\n\n## looking for an issue\n\nLet's make sure that the issue is going to be resolved. After not being busy\nand having time to investigate the issue, I can see that typer is the library\nmaking the import to `get_terminal_size`.  Lets checkout its\n[GitHub-repo](https://github.com/tiangolo/typer/) and make sure someone is\nworking on it.\n\nBy the time I go to the package that was having this issue there was already an\n[issue](https://github.com/tiangolo/typer/issues/377) up, and PR waiting\napproval.  I gave the Issue a reaction \ud83d\udc4d to signal that I also care, and\nappreciate the issue author taking time to submit.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/squoosh-cli'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Squoosh cli</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/simple-textual-widget'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Making a Textual Widget from a Rich Renderable</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-01", "edit_link": "https://github.com/edit/main/pages/til/site-down.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575521", "datetime": "2022-04-01 00:00:00+00:00", "slug": "til/site-down", "jinja": false, "output_html": "markout/til/site-down/index.html", "long_description": "My personal Site build went down last week, and I was unable to publish a new Classic IT fix, rerun it and see if you get the same error.  Everyone is busy Also worth a check to see if GitHub is having a hiccup or not.  This error felt Check  Alright", "super_description": "My personal Site build went down last week, and I was unable to publish a new Classic IT fix, rerun it and see if you get the same error.  Everyone is busy Also worth a check to see if GitHub is having a hiccup or not.  This error felt Check  Alright down to the error message I got.  The error is pretty obvious that So the latest click was released just a few hours before this build.  This To get the build up and running today so that we don Since I am still busy doing other things that fixing t", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34505fde50>, next=<frontmatter.Post object at 0x7f3450604a60>)"}, {"cover": "", "title": "Neovim Config for Git", "tags": ["vim", "linux", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/neovim-config-for-git.md", "description": "Creating a minimal config specifically for git commits has made running The other thing that is engrained into my muscle memory is  Here is the config that has ", "content": "Creating a minimal config specifically for git commits has made running\n`git commit` much more pleasant.  It starts up Much faster, and has all\nof the parts of my config that I use while making a git commit.  The one\nthing that I often use is autocomplete, for things coming from elsewhere\nin the tmux session.  For this `cmpe-tmux` specifically is super\nhelpful.\n\nThe other thing that is engrained into my muscle memory is `jj`\nfor escape.  For that I went agead and added my `settings` and `keymap`\nwith no noticable performance hit.\n\nHere is the config that has taken\n\n\n~/.config/nvim/init-git.vim\n\n``` vim\nsource ~/.config/nvim/settings.vim\nsource ~/.config/nvim/keymap.vim\nsource ~/.config/nvim/git-plugins.vim\nlua require'waylonwalker.cmp'\n```\n\n~/.config/nvim/git-plugins.vim\n\n``` vim\ncall plug#begin('~/.local/share/nvim/plugged')\n\n\" cmp\nPlug 'hrsh7th/nvim-cmp'\nPlug 'hrsh7th/cmp-nvim-lsp'\nPlug 'hrsh7th/cmp-buffer'\nPlug 'hrsh7th/cmp-path'\nPlug 'hrsh7th/cmp-calc'\nPlug 'andersevenrud/compe-tmux', { 'branch': 'cmp' }\n\n\ncall plug#end()\n```\n\n~/.gitconfig\n\n``` toml\n[core]\n    editor = nvim -u ~/.config/nvim/init-git.vim\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/nix-install-java8'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>nix rescues modded minecraft night</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/modded-minecraft-in-docker'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Modded Minecraft in Docker</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-04", "edit_link": "https://github.com/edit/main/pages/til/neovim-config-for-git.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575528", "datetime": "2022-02-04 00:00:00+00:00", "slug": "til/neovim-config-for-git", "jinja": false, "output_html": "markout/til/neovim-config-for-git/index.html", "long_description": "Creating a minimal config specifically for git commits has made running The other thing that is engrained into my muscle memory is  Here is the config that has taken ~/.config/nvim/init-git.vim ~/.config/nvim/git-plugins.vim ~/.gitconfig", "super_description": "Creating a minimal config specifically for git commits has made running The other thing that is engrained into my muscle memory is  Here is the config that has taken ~/.config/nvim/init-git.vim ~/.config/nvim/git-plugins.vim ~/.gitconfig", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506043a0>, next=<frontmatter.Post object at 0x7f345061bb80>)"}, {"cover": "", "title": "Python's Dict Union Operator | Pep 584", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/python-pep-584.md", "description": "Today I was watching the python web conf 2022 and saw I https://waylonwalker.com/python-args-kwargs/ More on unpacking in this post. With the release there is a", "content": "Today I was watching the python web conf 2022 and saw\n[@davidbujic](https://twitter.com/davidvujic) use the new Dict Union Operator\nLive on stage during his [Functional\nProgramming](https://2022.pythonwebconf.com/presentations/functional-python)\ntalk.  This operator was first introduced into python 3.9 with [pep584](https://peps.python.org/pep-0584/).\n\n## Merge Dicts\n\nI've long updated dicts through the use of unpacking.  Note that the last item\nalways wins.  It makes it pretty easy to make user overrides to default\nconfigurations.  With pep584 landing in python 3.9 we can now leverage the `|`\noperator to achieve the same result.\n\n``` python\ndefault_config = {'url': 'https://example.com', 'assets_dir': 'static' }\nuser_config = {'url': 'https://waylonwalker.com'}\n\n# **unpacking goes back much further than 3.9\n\nconfig = {**default_config, **user_config}\nprint(config)\n# {'url': 'https://waylonwalker.com', 'assets_dir': 'static'}\n\n\n# the same can be achieved through the new to python 3.9 | operator\n\nconfig = default_config | user_config\nprint(config)\n# {'url': 'https://waylonwalker.com', 'assets_dir': 'static'}\n```\n\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/python-args-kwargs/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/python-args-kwargs-og_250x140.png\" alt=\"article cover for \n understanding python \\*args and \\*\\*kwargs\n\"/>\n          <p><strong>\n understanding python \\*args and \\*\\*kwargs\n</strong></p>\n      </a>\n  </div>\n\n\n> More on unpacking in this post.\n\n## Update Dicts\n\nWith the release there is also a new update syntax `|=` that you can use to\nupdate.  I dont often mutate variables for some reason, so I cant think of a\nbetter example for this from my personal use cases. So I will give a similar\nexample to above, except creating a config, then updating it.\n\n``` python\n# old python <3.9 way\nconfig = {'url': 'https://example.com', 'assets_dir': 'static' }\nconfig.update({'url': 'https://waylonwalker.com'})\n\n# new python 3.9+ way\nconfig = {'url': 'https://example.com', 'assets_dir': 'static' }\nconfig |= {'url': 'https://waylonwalker.com'}\n\nprint(config)\n# {'url': 'https://waylonwalker.com', 'assets_dir': 'static'}\n```\n\n## Should you use it?\n\nAre you writing libraries/applications that are only going to be ran on 3.9?\nThen ya go for it there is nothing to loose.  If there is any chance someone is\ngoing to run your code on 3.8 or older then just use `**`, or `.update`.\n\n## RTFM\n\nThis is what comes first to my mind on how to use this new syntax, read\n[pep584](https://peps.python.org/pep-0584/) for all the gritty details on it.\n\n## Links\n\n* [@davidbujic](https://twitter.com/davidvujic)\n* [pep584](https://peps.python.org/pep-0584/)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/python-requests-get'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Get Webpage with python requests</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/python-pathlib-glob'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How I glob for Files in Python</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-03-22", "edit_link": "https://github.com/edit/main/pages/til/python-pep-584.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575533", "datetime": "2022-03-22 00:00:00+00:00", "slug": "til/python-pep-584", "jinja": false, "output_html": "markout/til/python-pep-584/index.html", "long_description": "Today I was watching the python web conf 2022 and saw I https://waylonwalker.com/python-args-kwargs/ More on unpacking in this post. With the release there is also a new update syntax  Are you writing libraries/applications that are only going to be ", "super_description": "Today I was watching the python web conf 2022 and saw I https://waylonwalker.com/python-args-kwargs/ More on unpacking in this post. With the release there is also a new update syntax  Are you writing libraries/applications that are only going to be ran on 3.9? This is what comes first to my mind on how to use this new syntax, read", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450609a90>, next=<frontmatter.Post object at 0x7f3450604bb0>)"}, {"cover": "", "title": "Textual has devtools", "tags": ["python", "python", "python"], "status": "published", "templateKey": "til", "path": "pages/til/textual-has-devtools.md", "description": "Textual has devtools in the upcoming css branch, and its pretty awesome Textual is still very early and not really ready for prime time, but it As  https://twit", "content": "Textual has devtools in the upcoming css branch, and its pretty awesome!\n\n## It's still early\n\nTextual is still very early and not really ready for prime time, but it's quite\namazing how easy some things such as creating keybindings is.  The docs are\ncoming, but missing right now so if you want to use textual be ready for\nreading source code and examples.\n\n## On to the devtools\n\nAs [@willmcgugan](https://twitter.com/willmcgugan) shows in this tweet it's\npretty easy to setup, it requires having two terminals open, or using tmux, and\ncurrently you have to use the css branch.\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">BTW.<br><br>Do this in one terminal:<br><br>textual console<br><br>Run scripts with:<br><br>textual run <a href=\"https://t.co/3CuaqTyxjl\">https://t.co/3CuaqTyxjl</a> --dev</p>&mdash; Will McGugan (@willmcgugan) <a href=\"https://twitter.com/willmcgugan/status/1531294412696956930?ref_src=twsrc%5Etfw\">May 30, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n## Why does textual need its own devtools\n\n## getting the css branch\n\nIn the future it will likely be in main and not need this, but for now you need\nto get the css branch to get devtools.\n\n``` bash\ngit clone https://github.com/Textualize/textual\ngit fetch --alll\ngit checkout css\n```\n\n## install in a virtual environment\n\nNow you can create a virtual environment, feel free to use whatever virtual\nenvironment tool you want, venv is built in to most python distributions\nthough, and should just be there.\n\n``` bash\npython3 -m venv .venv --prompt textual\nsource .venv/bin/activate\npip install .\n```\n\n## Now that we have textual installed\n\nOnce textual is installed you can open up the devtools by running textual console.\n\n```bash\ntextual console\n```\n\n![textual-console](https://screenshots.waylonwalker.com/textual-console.webp)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/textual-popup-hack'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Textual Popup Hack</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/stow-simulate'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>How to Properly Simulate Stow</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-06-09", "edit_link": "https://github.com/edit/main/pages/til/textual-has-devtools.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575539", "datetime": "2022-06-09 00:00:00+00:00", "slug": "til/textual-has-devtools", "jinja": false, "output_html": "markout/til/textual-has-devtools/index.html", "long_description": "Textual has devtools in the upcoming css branch, and its pretty awesome Textual is still very early and not really ready for prime time, but it As  https://twitter.com/willmcgugan/status/1531294412696956930 In the future it will likely be in main and", "super_description": "Textual has devtools in the upcoming css branch, and its pretty awesome Textual is still very early and not really ready for prime time, but it As  https://twitter.com/willmcgugan/status/1531294412696956930 In the future it will likely be in main and not need this, but for now you need Now you can create a virtual environment, feel free to use whatever virtual Once textual is installed you can open up the devtools by running textual console.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b1f0>, next=<frontmatter.Post object at 0x7f3450616160>)"}, {"cover": "", "title": "copier template variables", "tags": ["python", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/copier-template-variables.md", "description": "I By default copier uses double square brackets for its variables. note Before running copier we need to tell copier what variables to ask for, I prefer to inst", "content": "I've been looking for a templating tool for awhile that works well with\nsingle files.  My go to templating tool `cookiecutter` does not work for\nsingle files, it needs to put files into a directory underneath of it.\n\n## template variables\n\nBy default copier uses double square brackets for its variables.\nvariables in files, directory_names, or file_names will be substituted\nfor their value once you render them.\n\n``` python\n# hello-py/hello.py.tmpl\nprint('hello-[[name]]')\n```\n\n> note! by default copier will not inject variables into your\n> [[template-strings]] unless you use a .tmpl suffix.\n\nBefore running copier we need to tell copier what variables to ask for,\nwe do this with a copier.yml file.\n\n``` yaml\n# copier.yml\nname:\n  default: my_name\n  type: str\n  help: What is your name\n```\n\n## installing copier\n\nI prefer to install cli tools that I need globally with pipx, this\nalways gives me access to the tool without worrying about dependency\nconflicts, bloating my system site-packages, or managing a separate\nvirtual environment for it myself.\n\n``` bash\npipx install copier\n```\n## running copier\n\nWhen running `copier copy` we pass in the directory of the template, and\nthe directory that we want to render the template into.\n\n``` bash\ncopier copy hello-py .\n```\n\n> note! the directory '.' is often referred to in cli programs to\n> represent the current working directory that we are calling the\n> command from.\n\n## results\n\nThe resulting files will have your variables injected into them if you have\nsetup your template and copier.yml up correctly.\n\n``` python\nprint('hello-you')\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/copier_endops'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Changing copier template strings (_endops)</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/copier-tasks'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Copier Tasks | Python templating post run task</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-01-03", "edit_link": "https://github.com/edit/main/pages/til/copier-template-variables.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575545", "datetime": "2022-01-03 00:00:00+00:00", "slug": "til/copier-template-variables", "jinja": false, "output_html": "markout/til/copier-template-variables/index.html", "long_description": "I By default copier uses double square brackets for its variables. note Before running copier we need to tell copier what variables to ask for, I prefer to install cli tools that I need globally with pipx, this When running  note The resulting files ", "super_description": "I By default copier uses double square brackets for its variables. note Before running copier we need to tell copier what variables to ask for, I prefer to install cli tools that I need globally with pipx, this When running  note The resulting files will have your variables injected into them if you have", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b4f0>, next=<frontmatter.Post object at 0x7f34505fd940>)"}, {"cover": "", "title": "Dunk is my new diff pager", "tags": ["python", "linux", "python"], "status": "published", "templateKey": "til", "path": "pages/til/dunk-is-my-new-diff-pager.md", "description": "Browsing through twitter the other day I discovered it through this https://twitter.com/ Before I dive in deep, I do want to mention that Dunk is super new and ", "content": "[Dunk](https://github.com/darrenburns/dunk) is a beautiful git diff tool\nbuilt on top of [rich](https://github.com/Textualize/rich).\n\nBrowsing through twitter the other day I discovered it through this\ntweet by [_darrenburns](https://twitter.com/_darrenburns).\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Ok, here&#39;s what I&#39;ve been building today \ud83d\udc47<br><br>Pipe the output of &#39;git diff&#39; into dunk and you&#39;ll get a GitHub style side-by-side diff right in your terminal.<a href=\"https://t.co/al5y68YSda\">https://t.co/al5y68YSda</a> <a href=\"https://t.co/LLOcaNhpyP\">pic.twitter.com/LLOcaNhpyP</a></p>&mdash; Darren Burns \ud83c\udf31 (@_darrenburns) <a href=\"https://twitter.com/_darrenburns/status/1510350016623394817?ref_src=twsrc%5Etfw\">April 2, 2022</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n## Dunk is beta\n\nBefore I dive in deep, I do want to mention that Dunk is super new and beta at\nthis point.  I am making it my default pager, because I know what I am doing\nand can quickly shift back if I need to, no sweat.  If you are a little less\ncomfortable with the command line, terminal, or reading any issues that might\ncome up, it might be best if you just pipe into Dunk when you want to use it.\n\nThe author really cautions the use of it as your default pager this early, I'm\njust showing that it's possible, and I'm trying it.\n\n> He notes that it might have some issues especially with partially staged files.\n\n## try it\n\nYou can try it with pipx.\n\n```bash\ngit diff | pipx run dunk\n```\n\n## install it\n\nIf you like it, you can install it with pip or pipx, I prefer pipx for\ncli applications like this.\n\n\n```bash\npipx install dunk\n```\n\n## set it as your default pager\n\nYou can configure dunk as your default pager with the command line, or\nby editing your `.gitconfig` file.\n\n```bash\ngit config --global pager.diff \"dunk | less -R`\n```\n\n```toml\n[pager]\n    diff = dunk | less -R\n```\n\n> As [pointed out](https://twitter.com/_darrenburns/status/1511106440613797896) by\n> [_darrenburns](https://twitter.com/_darrenburns) dunk is not a pager and you\n> can gain back all of the benefits of using a pager by piping into less with the\n> `-R` flag.\n\n## reset it if you don't like it\n\nYou can `--unset` your pager configuration from the command line or edit\nyour `.gitconfig` file by hand to remove the lines shown above.\n\n```bash\ngit config --global --unset pager.diff\n```\n\n## Comparison\n\nI have some edits to a game my son and I are working on unstaged so I\nran `git diff` on that project with and without dunk to compare the\ndifferences.\n\n![default diff](https://images.waylonwalker.com/git-diff-creeper-adventure-default.png)\n\nDunk just looks so good.\n\n![dunk diff](https://images.waylonwalker.com/git-diff-creeper-adventure-dunk.png)\n\n## Always install\n\nIf you follow along here often you know that I am a big fan of\ninstalling all my tools in an ansible playbook so that I don't suffer\nconfiguring a new machine for months after getting it and wondering why\nits not exactly like the last.\n\n```yaml\n# Dunk - prettier git diffs\n# https://github.com/darrenburns/dunk\n- name: check is dunk installed\n  shell: command -v black\n  register: dunk_exists\n  ignore_errors: yes\n\n- name: install dunk\n  when: dunk_exists is failed\n  shell: pipx install dunk\n```\n\n\n  <div class=\"onelinelink-wrapper\">\n      <a class=\"onelinelink\" href=\"https://waylonwalker.com/til/ansible_install_if_not_callable/\">\n          <img style=\"float: right;\" align='right' src=\"https://images.waylonwalker.com/til/ansible_install_if_not_callable-og_250x140.png\" alt=\"article cover for \n Installing packages with ansible only if they do not exist\n\"/>\n          <p><strong>\n Installing packages with ansible only if they do not exist\n</strong></p>\n      </a>\n  </div>\n\n\n> More on conditionally installing tools with ansible in this post.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/ewhich'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Bash function to edit scripts faster</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/dunder_rich'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Adding __rich__ methods to python classes</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-04-04", "edit_link": "https://github.com/edit/main/pages/til/dunk-is-my-new-diff-pager.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575550", "datetime": "2022-04-04 00:00:00+00:00", "slug": "til/dunk-is-my-new-diff-pager", "jinja": false, "output_html": "markout/til/dunk-is-my-new-diff-pager/index.html", "long_description": "Browsing through twitter the other day I discovered it through this https://twitter.com/ Before I dive in deep, I do want to mention that Dunk is super new and beta at The author really cautions the use of it as your default pager this early, I He no", "super_description": "Browsing through twitter the other day I discovered it through this https://twitter.com/ Before I dive in deep, I do want to mention that Dunk is super new and beta at The author really cautions the use of it as your default pager this early, I He notes that it might have some issues especially with partially staged files. You can try it with pipx. If you like it, you can install it with pip or pipx, I prefer pipx for You can configure dunk as your default pager with the command line, or As  You", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604940>, next=<frontmatter.Post object at 0x7f3450609df0>)"}, {"cover": "", "title": "GPG signing commits over ssh", "tags": ["git"], "status": "published", "templateKey": "til", "path": "pages/til/gpg-sign-git-ssh.md", "description": "I was editing some blog posts over ssh, when I ran into This is the error message I was seeing. The fix ended up being pretty simple, but quite a ways down this", "content": "I was editing some blog posts over ssh, when I ran into\nthis error.  gpg was failing to sign my commits.  I\nrealized that this was because I could not answer to the\ndesktop keyring over ssh, but had no idea how to fix it.\n\n## Error\n\nThis is the error message I was seeing.\n\n```\ngpg failed to sign the data ssh\n```\n\n## The fix\n\nThe fix ended up being pretty simple, but quite a ways down this [stack overflow post](https://stackoverflow.com/questions/41052538/git-error-gpg-failed-to-sign-data/41054093).\nThis environment variable tells gpg that we are not logged\ninto a desktop and it does not try to use the desktop\nkeyring, and asks to unlog the gpgkey right in the\nterminal.\n\n``` bash\nexport GPG_TTY=$(tty)\n```\n\n## The log in menu\n\nThis is what it looks like when it asks for the passphrase.\n\n![enter your passphrase to unlock your gpg key](https://images.waylonwalker.com/gpg-passphrase-unlock.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/gradual-typing-python'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Gradual Typing in Python</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/global-gitignore-considered-useful'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>A Good Use for global .gitignore</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-05-08", "edit_link": "https://github.com/edit/main/pages/til/gpg-sign-git-ssh.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575556", "datetime": "2022-05-08 00:00:00+00:00", "slug": "til/gpg-sign-git-ssh", "jinja": false, "output_html": "markout/til/gpg-sign-git-ssh/index.html", "long_description": "I was editing some blog posts over ssh, when I ran into This is the error message I was seeing. The fix ended up being pretty simple, but quite a ways down this  This is what it looks like when it asks for the passphrase.", "super_description": "I was editing some blog posts over ssh, when I ran into This is the error message I was seeing. The fix ended up being pretty simple, but quite a ways down this  This is what it looks like when it asks for the passphrase.", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506326a0>, next=<frontmatter.Post object at 0x7f345060e280>)"}, {"cover": "", "title": "Git rebase to the beginning of time", "tags": ["git", "cli"], "status": "published", "templateKey": "til", "path": "pages/til/git-rebase-root.md", "description": "Git has a built in way to rebase all the way back to the beginning of", "content": "Git has a built in way to rebase all the way back to the beginning of\ntime.  There is no need to scroll through the log to find the first\nhash, or find the total number of commits. Just use `--root`.\n\n``` bash\ngit rebase --root\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/git-recover-checkout'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Recover a lost git branch with checkout</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/git-python-all-commits'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>List all git commits with GitPython</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-23", "edit_link": "https://github.com/edit/main/pages/til/git-rebase-root.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575564", "datetime": "2022-02-23 00:00:00+00:00", "slug": "til/git-rebase-root", "jinja": false, "output_html": "markout/til/git-rebase-root/index.html", "long_description": "Git has a built in way to rebase all the way back to the beginning of", "super_description": "Git has a built in way to rebase all the way back to the beginning of", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345060e160>, next=<frontmatter.Post object at 0x7f34505f84c0>)"}, {"cover": "", "title": "Find all Headings with BeautifulSoup", "tags": ["python", "webdev"], "status": "published", "templateKey": "til", "path": "pages/til/bs4-findall-headings.md", "description": "BeautifulSoup is a DOM like library for python.  It Lets make a sample.html file with the following contents.  It mainly has Lets import our packages, read in o", "content": "BeautifulSoup is a DOM like library for python.  It's quite useful to\nmanipulate html.  Here is an example to find_all html headings.  I stole\nthe regex from stack overflow, but who doesn't.\n\n## Make an example\n_sample.html_\n\nLets make a sample.html file with the following contents.  It mainly has\nsome headings, `<h1>` and `<h2>` tags that I want to be able to find.\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <body>\n    <h1>hello</h1>\n    <p>this is a paragraph</p>\n    <h2>second heading</h2>\n    <p>this is also a paragraph</p>\n    <h2>third heading</h2>\n    <p>this is the last paragraph</p>\n\n  </body>\n</html>\n```\n\n## Get the headings with BeautifulSoup\n\nLets import our packages, read in our `sample.html` using pathlib and find all\nheadings using BeautifulSoup.\n\n```python\nfrom bs4 import BeautifulSoup\nfrom pathlib import Path\n\nsoup = BeautifulSoup(Path('sample.html').read_text(), features=\"lxml\")\nheadings = soup.find_all(re.compile(\"^h[1-6]$\"))\n```\n\nAnd what we get is a list of `bs4.element.Tag`'s.\n\n```python\n>> print(headings)\n[<h1>hello</h1>, <h2>second heading</h2>, <h2>third heading</h2>]\n```\n\nI recently added a heading_link plugin to markata, you might notice the\n\ud83d\udd17's next to each heading on this page, that is powered by this exact\ntechnique.\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/clean-qutebrowser'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>qutebrowser clean up all status bars</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/bash-mktemp'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Bash mktemp</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-01", "edit_link": "https://github.com/edit/main/pages/til/bs4-findall-headings.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575570", "datetime": "2022-02-01 00:00:00+00:00", "slug": "til/bs4-findall-headings", "jinja": false, "output_html": "markout/til/bs4-findall-headings/index.html", "long_description": "BeautifulSoup is a DOM like library for python.  It Lets make a sample.html file with the following contents.  It mainly has Lets import our packages, read in our  And what we get is a list of  I recently added a heading", "super_description": "BeautifulSoup is a DOM like library for python.  It Lets make a sample.html file with the following contents.  It mainly has Lets import our packages, read in our  And what we get is a list of  I recently added a heading", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345061b190>, next=<frontmatter.Post object at 0x7f34506165e0>)"}, {"cover": "", "title": "Serve html from your command line", "tags": ["vim", "linux", "bash"], "status": "published", "templateKey": "til", "path": "pages/til/serve-html-command-line.md", "description": "When I first moved to vim from and ide like vscode or sublime text one of my You will need a way to run another process alongside vim, here are a couple use bac", "content": "When I first moved to vim from and ide like vscode or sublime text one of my\nvery first issues was trying to preview my website at `localhost:8000`.  There\nhad always just been a button there to do it in all of my other editors, not\nvim.  There are not many buttons for anything in vim.  While there is probably a\nplugin that can run a webserver for me in vim, it's not necessary, we just need\nthe command line we are already in.\n\n## running a separate process\n\nYou will need a way to run another process alongside vim, here are a couple\nideas to get you going that are not the focus here.style\n\n* use background jobs\n  * c-z to send a job to the background\n  * fg to bring it back\n* use a second terminal\n* use a second tab\n* use tmux and run it in a separate split/window\n* use an embeded nvim terminal\n\n## running a development webserver from the command line\n\nPython already exists on most linux systems by default, and most are now on\npython3.  If you are on windows typing python will take you directly to the\nwindows store to install it, or you can also use wsl.\n\n``` bash\n# python3\npython -m http.server\n\n# running on port 5000\npython -m http.server --directory markout 5000\n```\n\n```\n# for the low chance you are on python2\npython -m SimpleHTTPServer\n\n# running on port 5000\npython -m SimpleHTTPServer 5000\npython -m SimpleHTTPServer --directory markout 5000\n\n```\n\n![running a python static webserver from the command line](https://images.waylonwalker.com/python-m-http-server.png)\n\n## using nodejs\n\nIf you are a web developer it's likely that you need nodejs and npm on your\nsystem anyways and may want to use one of the servers from npm.  I'll admit with\nthese not being tied to the long term support of a language they are much more\nfeature rich with things like compression out of the box.  In my opinion they\nare nice things that you would want out of a production server, but may not\nbe necessary for development.\n\n### installing npx\n\n``` bash\n# if you don't alredy have npx\nnpm i -g npx\n```\n\n> npx is a handy tool that lets you run command line applications straight from\n> npm without installing them.  It pulls the latest version every time you want\n> to run, then executes it without it being installed.\n\n### running the http-server with npx\n\n``` bash\nnpx http-server\n\n# running on port 5000\nnpx http-server -p 5000\nnpx http-server markout -p 5000\n\n```\n\n![running a nodejs static webserver from the command line](https://images.waylonwalker.com/npx-http-server.png)\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/simple-samba'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Simple Samba Share Setup</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/review-pull-requests-with-git-worktrees'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Review Pull Requests with git worktrees</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-12-28", "edit_link": "https://github.com/edit/main/pages/til/serve-html-command-line.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575576", "datetime": "2021-12-28 00:00:00+00:00", "slug": "til/serve-html-command-line", "jinja": false, "output_html": "markout/til/serve-html-command-line/index.html", "long_description": "When I first moved to vim from and ide like vscode or sublime text one of my You will need a way to run another process alongside vim, here are a couple use background jobs c-z to send a job to the background fg to bring it back use a second terminal", "super_description": "When I first moved to vim from and ide like vscode or sublime text one of my You will need a way to run another process alongside vim, here are a couple use background jobs c-z to send a job to the background fg to bring it back use a second terminal use a second tab use tmux and run it in a separate split/window use an embeded nvim terminal Python already exists on most linux systems by default, and most are now on If you are a web developer it npx is a handy tool that lets you run command line", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450604820>, next=<frontmatter.Post object at 0x7f345061b160>)"}, {"cover": "", "title": "Read stderr from python subprocess.Popen", "tags": ["python"], "status": "published", "templateKey": "til", "path": "pages/til/popen-stderr.md", "description": "I often run shell commands from python with Popen, but not often enough To get the stderr we must get it from the proc, read it, and decode the Now that we can ", "content": "I often run shell commands from python with Popen, but not often enough\ndo I set up error handline for these subprocesses.  It's not too hard,\nbut it can be a bit awkward if you don't do it enough.\n\n## Using Popen\n\n\n``` python\nimport subprocess\nfrom subprocess import Popen\n\n# this will run the shell command `cat me` and capture stdout and stderr\nproc = Popen([\"cat\", \"me\"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\n# this will wait for the process to finish.\nproc.wait()\n```\n\n## reading from stderr\n\nTo get the stderr we must get it from the proc, read it, and decode the\nbystring.  Note that we can only get the stderr object once, so if you want to\ndo more than just read it you will need to store a copy of it.\n\n``` python\nproc.stderr.read().decode()\n```\n\n## Better Exception\n\nNow that we can read the `stderr` we can make better error tracking for the\nuser so they can see what to do to resolve the issue rather than blindly\nfailing.\n\n``` python\nerr_message = proc.stderr.read().decode()\nif proc.returncode != 0:\n    # the process was not successful\n\n    if \"No such file\" in err_message:\n        raise FileNotFoundError('No such file \"me\"')\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/til/practice-kedro'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Practice making pipelines with kedro</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/pluggy-minimal-example'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>A Minimal Pluggy Example</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2022-02-10", "edit_link": "https://github.com/edit/main/pages/til/popen-stderr.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575582", "datetime": "2022-02-10 00:00:00+00:00", "slug": "til/popen-stderr", "jinja": false, "output_html": "markout/til/popen-stderr/index.html", "long_description": "I often run shell commands from python with Popen, but not often enough To get the stderr we must get it from the proc, read it, and decode the Now that we can read the ", "super_description": "I often run shell commands from python with Popen, but not often enough To get the stderr we must get it from the proc, read it, and decode the Now that we can read the ", "year": 2022, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450616f70>, next=<frontmatter.Post object at 0x7f3450609a60>)"}, {"cover": "", "title": "Career Day Wapello 2021", "tags": [], "status": "draft", "templateKey": "", "path": "pages/slides/career-day-wapello-2021.md", "description": "Iowa State University Musco Sports Lighting Caterpillar Continuous Learning Respect Networking", "content": "## Waylon Walker\n\n_Senor Data Scientist_\n\n\n<style>\nh3 {\n    color: #ff66c4 !important;\n    font-size: 1.5rem !important;\n    margin-left: -12rem !important;\n}\n\nul {\ncolor: #ffffff94;\nfont-size: 32px;\n\n}\nli {\nlist-style-type: none;\n}\nem {\ncolor: goldenrod;\n}\n</style>\n\n\n---\n\n### Waylon Walker\n\n* Iowa State University\n* Musco Sports Lighting\n* Caterpillar\n\n---\n\n### Values\n\n* Continuous Learning\n* Respect\n* Networking\n\n## Continuous Learning\n\n_Learning doesn't stop here_\n\n\n## Respect\n\n_Don't be an ass_\n\n## Networking\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/020'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>020</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/til/popen-stderr'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Read stderr from python subprocess.Popen</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2021-03-25", "edit_link": "https://github.com/edit/main/pages/slides/career-day-wapello-2021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575588", "datetime": "2021-03-25 00:00:00+00:00", "slug": "slides/career-day-wapello-2021", "jinja": false, "output_html": "markout/slides/career-day-wapello-2021/index.html", "long_description": "Iowa State University Musco Sports Lighting Caterpillar Continuous Learning Respect Networking", "super_description": "Iowa State University Musco Sports Lighting Caterpillar Continuous Learning Respect Networking", "year": 2021, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506284c0>, next=<frontmatter.Post object at 0x7f3450628280>)"}, {"cover": "", "title": "020", "tags": ["bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/020.md", "description": "Show Remaining Space on Drives prev 003 next Career Day Wapello 2021", "content": "## File System Full \ud83e\udd14\n\n_Show Remaining Space on Drives_\n\n## with **Bash**\n\n```bash\ndf -h\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/003'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>003</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/slides/career-day-wapello-2021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>Career Day Wapello 2021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-21", "afterImage": "/bash.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/020.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575594", "datetime": "2020-06-21 00:00:00+00:00", "slug": "hot_tips/020", "jinja": false, "output_html": "markout/hot_tips/020/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628940>, next=<frontmatter.Post object at 0x7f3450628190>)"}, {"cover": "", "title": "003", "tags": ["kedro"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/003.md", "description": "\ud83d\udd25 #kedrotips hooks can be created using modules", "content": "\ud83d\udd25 #kedrotips hooks can be created using modules\n\n\n```\n# kedro-hooks/src/kedro-hooks/preflight.py\nfrom kedro.hooks import hook_impl\nfrom kedro.io.core import DataSetNotFoundError\nfrom colorama import Fore\nimport textwrap\n\n\n@hook_impl\ndef before_pipeline_run(run_params, pipeline, catalog):\n    missing_input = [i for i in pipeline.inputs() if not getattr(catalog.datasets, i)._exists()]\n    if len(missing_input) != 0:\n        raise DataSetNotFoundError(textwrap.dedent(f'''\n\n    {Fore.LIGHTBLACK_EX}\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015  {Fore.RED}PREFLIGHT ERROR {Fore.LIGHTBLACK_EX}\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\n    {Fore.RESET} preflight of pipeline failed due to {Fore.YELLOW}missing datasets\n    {Fore.BLUE} {missing_input}{Fore.RESET}\n    '''))\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/011'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>011</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/020'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>020</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-31", "afterImage": "/static/kedro-logo.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/003.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575600", "datetime": "2020-05-31 00:00:00+00:00", "slug": "hot_tips/003", "jinja": false, "output_html": "markout/hot_tips/003/index.html", "long_description": "\ud83d\udd25 #kedrotips hooks can be created using modules", "super_description": "\ud83d\udd25 #kedrotips hooks can be created using modules", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628700>, next=<frontmatter.Post object at 0x7f34506284c0>)"}, {"cover": "", "title": "011", "tags": ["data", "python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/011.md", "description": "Load ", "content": "Load _data_ from database into **pandas**\n\n``` python\nimport pandas as pd\nfrom sqlalchemy import create engine\n\nengine = create_engine('postgresql://scott:tiger@localhost:5432/mydatabase')\n\nsql = 'select * from inventory'\n\nwith engine.connect() as connection:\n    inventory = pd.read_sql(sql, con)\nengine.dispose()\n\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/008'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>008</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/003'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>003</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-07", "afterImage": "/static/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/011.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575606", "datetime": "2020-06-07 00:00:00+00:00", "slug": "hot_tips/011", "jinja": false, "output_html": "markout/hot_tips/011/index.html", "long_description": "Load ", "super_description": "Load ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628b80>, next=<frontmatter.Post object at 0x7f3450628940>)"}, {"cover": "", "title": "008", "tags": ["git"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/008.md", "description": "compare ", "content": "compare _feature_ branch to _main_ with **git** cli\n\n``` bash\ngit diff main..feature\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/015'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>015</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/011'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>011</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-07", "afterImage": "/static/git-icon-1788c.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/008.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575612", "datetime": "2020-06-07 00:00:00+00:00", "slug": "hot_tips/008", "jinja": false, "output_html": "markout/hot_tips/008/index.html", "long_description": "compare ", "super_description": "compare ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628a60>, next=<frontmatter.Post object at 0x7f3450628700>)"}, {"cover": "", "title": "015", "tags": ["python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/015.md", "description": "order matters prev 013 next 008", "content": "## Recieving `*args`\n\n``` python\ndef funnc(*args):\n    print(args) # args are a list!\n\n>>> func('a', 'b', 'c')\n['a', 'b', 'c']\n```\n\n**order matters**\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/013'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>013</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/008'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>008</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-14", "afterImage": "/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/015.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575619", "datetime": "2020-06-14 00:00:00+00:00", "slug": "hot_tips/015", "jinja": false, "output_html": "markout/hot_tips/015/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506285e0>, next=<frontmatter.Post object at 0x7f3450628b80>)"}, {"cover": "", "title": "013", "tags": ["blog"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/013.md", "description": "Even if you  There is one thing they are ", "content": "# Blog consistently\n\nEven if you _think_ a topic has been blogged to death\n\n> There is one thing they are _all_ missing....\n\n**Your unique perspective**\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/006'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>006</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/015'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>015</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-07", "afterImage": "/8bit.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/013.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575625", "datetime": "2020-06-07 00:00:00+00:00", "slug": "hot_tips/013", "jinja": false, "output_html": "markout/hot_tips/013/index.html", "long_description": "Even if you  There is one thing they are ", "super_description": "Even if you  There is one thing they are ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628ee0>, next=<frontmatter.Post object at 0x7f3450628a60>)"}, {"cover": "", "title": "006", "tags": ["git", "python", "cli"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/006.md", "description": "Setup ", "content": "Setup **pre-commit** for _isort_\n\n``` yaml\n  - repo: https://github.com/asottile/seed-isort-config\n    rev: v2.1.1\n    hooks:\n      - id: seed-isort-config\n  - repo: https://github.com/pre-commit/mirrors-isort\n    rev: v4.3.21\n    hooks:\n      - id: isort\n```\n\n_includes automatic_ .isort-config\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/024'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>024</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/013'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>013</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-06", "afterImage": "/static/git-icon-1788c.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/006.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575630", "datetime": "2020-06-06 00:00:00+00:00", "slug": "hot_tips/006", "jinja": false, "output_html": "markout/hot_tips/006/index.html", "long_description": "Setup ", "super_description": "Setup ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628970>, next=<frontmatter.Post object at 0x7f34506285e0>)"}, {"cover": "", "title": "024", "tags": ["bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/024.md", "description": "Conditionally run GitHub Actions Steps", "content": "Conditionally run GitHub Actions Steps\n\n``` yaml\n- uses: dorny/paths-filter@v2.2.0\n  id: filter\n  with:\n      # inline YAML or path to separate file (e.g.: .github/filters.yaml)\n      filters: |\n      backend:\n          - 'backend/**/*'\n      frontend:\n          - 'frontend/**/*'\n\n# run only if 'backend' files were changed\n- name: backend unit tests\n  if: steps.filter.outputs.backend == 'true'\n  run: ...\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/018'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>018</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/006'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>006</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-21", "afterImage": "/actions.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/024.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575636", "datetime": "2020-06-21 00:00:00+00:00", "slug": "hot_tips/024", "jinja": false, "output_html": "markout/hot_tips/024/index.html", "long_description": "Conditionally run GitHub Actions Steps", "super_description": "Conditionally run GitHub Actions Steps", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e3a0>, next=<frontmatter.Post object at 0x7f3450628ee0>)"}, {"cover": "", "title": "018", "tags": ["python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/018.md", "description": "prev 012 next 024", "content": "## Sending `**kwargs`\n\n``` python\ndef func(**kwargs):\n    print(kwargs) # kwargs are a dictionary!\n\n>>> func(**{'one':'a', 'two':'b')\n{'one': 'a', 'two': 'b'}\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/012'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>012</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/024'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>024</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-14", "afterImage": "/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/018.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575642", "datetime": "2020-06-14 00:00:00+00:00", "slug": "hot_tips/018", "jinja": false, "output_html": "markout/hot_tips/018/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628dc0>, next=<frontmatter.Post object at 0x7f3450628970>)"}, {"cover": "", "title": "012", "tags": ["python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/012.md", "description": "\ud83d\udc46 add this to your ", "content": "**autoreload** your imports in ipython for \u26a1 fast development\n\n``` python\nc.InteractiveShellApp.extensions = ['autoreload']\nc.InteractiveShellApp.exec_lines = ['%autoreload 2']\nc.InteractiveShellApp.exec_lines.append('print(\"Warning: disable autoreload in ipython_config.py to improve performance.\")')\n```\n\ud83d\udc46 add this to your `~/.ipython/profile_default/ipython_config.py.`\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/019'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>019</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/018'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>018</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-07", "afterImage": "/static/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/012.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575648", "datetime": "2020-06-07 00:00:00+00:00", "slug": "hot_tips/012", "jinja": false, "output_html": "markout/hot_tips/012/index.html", "long_description": "\ud83d\udc46 add this to your ", "super_description": "\ud83d\udc46 add this to your ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450628cd0>, next=<frontmatter.Post object at 0x7f345062e3a0>)"}, {"cover": "", "title": "019", "tags": ["bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/019.md", "description": "prev 007 next 012", "content": "## batch rename files\n## with **bash**\n\n``` bash\nfor f in *.jpeg; do\n    mv -- \"$f\" \"${f%.jpeg}.jpg\"\ndone\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/007'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>007</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/012'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>012</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-21", "afterImage": "/bash.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/019.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575654", "datetime": "2020-06-21 00:00:00+00:00", "slug": "hot_tips/019", "jinja": false, "output_html": "markout/hot_tips/019/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e3d0>, next=<frontmatter.Post object at 0x7f3450628dc0>)"}, {"cover": "", "title": "007", "tags": [], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/007.md", "description": "Get  store this in ", "content": "Get **isort** and **black** to _cooperate_\n\n``` bash\n[settings]\nmulti_line_output=3\ninclude_trailing_comma=True\nforce_grid_wrap=0\nuse_parentheses=True\nline_length=88\n```\n\nstore this in `.isort.cfg`\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/001'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>001</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/019'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>019</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-06", "afterImage": "/static/isort_logo.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/007.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575660", "datetime": "2020-06-06 00:00:00+00:00", "slug": "hot_tips/007", "jinja": false, "output_html": "markout/hot_tips/007/index.html", "long_description": "Get  store this in ", "super_description": "Get  store this in ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e5e0>, next=<frontmatter.Post object at 0x7f3450628cd0>)"}, {"cover": "", "title": "001", "tags": ["python", "kedro"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/001.md", "description": "practice building pipelines with #kedro today\n prev 025.md next 007", "content": "**practice** building pipelines with _#kedro_ today\n``` bash\nconda create -n learning-kedro-1 python=3.8 -y\nconda activate learning-kedro-1\npip install kedro kedro-viz\nkedro new\n# make sure to answer yes to adding example data your first time\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/025'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>025.md</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/007'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>007</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-26", "afterImage": "/kedro-logo.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/001.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575666", "datetime": "2020-05-26 00:00:00+00:00", "slug": "hot_tips/001", "jinja": false, "output_html": "markout/hot_tips/001/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e280>, next=<frontmatter.Post object at 0x7f345062e3d0>)"}, {"cover": "", "title": "025.md", "tags": ["cli", "bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/025.md", "description": "setup convert", "content": "# Convert **Markdown** to __reveal.js__ slides\n\nsetup\n``` bash\nwget https://github.com/hakimel/reveal.js/archive/master.tar.gz\ntar -xzvf master.tar.gz\nmv reveal.js-master reveal.js\n```\n\nconvert\n``` bash\npandoc -t revealjs -s -o myslides.html myslides.md -V revealjs-url=https://unpkg.com/reveal.js@3.9.2/\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/016'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>016</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/001'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>001</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-29", "afterImage": "/static/bash.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/025.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575672", "datetime": "2020-07-29 00:00:00+00:00", "slug": "hot_tips/025", "jinja": false, "output_html": "markout/hot_tips/025/index.html", "long_description": "setup convert", "super_description": "setup convert", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e610>, next=<frontmatter.Post object at 0x7f345062e5e0>)"}, {"cover": "", "title": "016", "tags": ["python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/016.md", "description": "prev 022 next 025.md", "content": "## Recieving `**kwargs`\n\n``` python\ndef funnc(**kwargs):\n    print(kwargs) # kwargs are a dictionary!\n\n>>> func(one='a', two='b')\n{'one': 'a', 'two': 'b'}\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/022'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>022</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/025'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>025.md</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-14", "afterImage": "/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/016.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575678", "datetime": "2020-06-14 00:00:00+00:00", "slug": "hot_tips/016", "jinja": false, "output_html": "markout/hot_tips/016/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e940>, next=<frontmatter.Post object at 0x7f345062e280>)"}, {"cover": "", "title": "022", "tags": ["bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/022.md", "description": "Move files then symlink them prev 010 next 016", "content": "## File System Full \ud83e\udd14\n\n_Move files then symlink them_\n\n## with **Bash**\n\n``` bash\nmkdir /mnt/mounted_drive\nmv ~/bigdir /mnt/mounted_drive\nln -s /mnt/mounted_drive/bigdir ~/bigdir\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/010'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>010</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/016'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>016</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-21", "afterImage": "/bash.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/022.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575684", "datetime": "2020-06-21 00:00:00+00:00", "slug": "hot_tips/022", "jinja": false, "output_html": "markout/hot_tips/022/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e820>, next=<frontmatter.Post object at 0x7f345062e610>)"}, {"cover": "", "title": "010", "tags": ["data", "python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/010.md", "description": "load remote ", "content": "load remote _data_ with **pandas**\n\n``` python\nimport pandas as pd\ncars_url = 'waylonwalker.com/cars.csv'\ncars = pd.read_csv(cars_url)\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/017'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>017</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/022'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>022</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-07", "afterImage": "/static/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/010.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575690", "datetime": "2020-06-07 00:00:00+00:00", "slug": "hot_tips/010", "jinja": false, "output_html": "markout/hot_tips/010/index.html", "long_description": "load remote ", "super_description": "load remote ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062ea60>, next=<frontmatter.Post object at 0x7f345062e940>)"}, {"cover": "", "title": "017", "tags": ["python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/017.md", "description": "order matters prev 014 next 010", "content": "## Sending `*args`\n\n``` python\ndef func(one, two):\n    print(f'two is {two}')\n\n\n>>> func(*['a', 'b'])\ntwo is b\n```\n\n**order matters**\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/014'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>014</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/010'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>010</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-14", "afterImage": "/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/017.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575696", "datetime": "2020-06-14 00:00:00+00:00", "slug": "hot_tips/017", "jinja": false, "output_html": "markout/hot_tips/017/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062e4c0>, next=<frontmatter.Post object at 0x7f345062e820>)"}, {"cover": "", "title": "014", "tags": ["git"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/014.md", "description": "prev 005 next 017", "content": "# Rename your Master Branch\n\n``` bash\ngit branch -m master main\ngit push -u origin main\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/005'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>005</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/017'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>017</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-12", "afterImage": "/static/git-icon-1788c.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/014.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575702", "datetime": "2020-06-12 00:00:00+00:00", "slug": "hot_tips/014", "jinja": false, "output_html": "markout/hot_tips/014/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450621c10>, next=<frontmatter.Post object at 0x7f345062ea60>)"}, {"cover": "", "title": "005", "tags": ["git", "python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/005.md", "description": "pre-commit setup is simple Try it yourself prev 021 next 014", "content": "**pre-commit** setup is _simple_\n\n``` bash\npip instal pre-commit\npre-commit sample-config > .pre-commit-config.yaml\npre-commit install\ngit add .\ngit commit -m \"added pre-commit\"\n```\n\n**Try** it yourself\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/021'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>021</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/014'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>014</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-06", "afterImage": "/static/git-icon-1788c.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/005.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575709", "datetime": "2020-06-06 00:00:00+00:00", "slug": "hot_tips/005", "jinja": false, "output_html": "markout/hot_tips/005/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062eb80>, next=<frontmatter.Post object at 0x7f345062e4c0>)"}, {"cover": "", "title": "021", "tags": ["bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/021.md", "description": "show largest files in current directory prev 026.md next 005", "content": "## File System Full \ud83e\udd14\n\n_show largest files in current directory_\n\n## with **Bash**\n\n```bash\ndu . -h --max-depth=1\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/026'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>026.md</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/005'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>005</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-21", "afterImage": "/bash.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/021.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575714", "datetime": "2020-06-21 00:00:00+00:00", "slug": "hot_tips/021", "jinja": false, "output_html": "markout/hot_tips/021/index.html", "long_description": "", "super_description": "", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450632040>, next=<frontmatter.Post object at 0x7f3450621c10>)"}, {"cover": "", "title": "026.md", "tags": ["cli", "bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/026.md", "description": "setup convert", "content": "# Convert **Markdown** to _reveal.js_ slides\n\nsetup\n``` bash\nwget https://github.com/hakimel/reveal.js/archive/master.tar.gz\ntar -xzvf master.tar.gz\nmv reveal.js-master reveal.js\n```\n\nconvert\n``` bash\npandoc -t revealjs -s\\\n   -o myslides.html myslides.md \\\n   -V revealjs-url=https://unpkg.com/reveal.js@3.9.2/\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/004'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>004</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/021'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>021</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-07-28", "afterImage": "/static/bash.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/026.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575720", "datetime": "2020-07-28 00:00:00+00:00", "slug": "hot_tips/026", "jinja": false, "output_html": "markout/hot_tips/026/index.html", "long_description": "setup convert", "super_description": "setup convert", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345062edc0>, next=<frontmatter.Post object at 0x7f345062eb80>)"}, {"cover": "", "title": "004", "tags": ["kedro"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/004.md", "description": "\ud83d\udd25 #kedrotips use find-kedro to assembly your pipelines", "content": "\ud83d\udd25 #kedrotips use find-kedro to assembly your pipelines\n\n\n``` python\nfrom kedro.context import KedroContext\nfrom find_kedro import find_kedro\n\nclass ProjectContext(KedroContext):\n    def _get_pipelines(self) -> Pipeline:\n        return find_kedro()\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/023'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>023</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/026'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>026.md</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-05-31", "afterImage": "/static/kedro-logo.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/004.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575726", "datetime": "2020-05-31 00:00:00+00:00", "slug": "hot_tips/004", "jinja": false, "output_html": "markout/hot_tips/004/index.html", "long_description": "\ud83d\udd25 #kedrotips use find-kedro to assembly your pipelines", "super_description": "\ud83d\udd25 #kedrotips use find-kedro to assembly your pipelines", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f3450632160>, next=<frontmatter.Post object at 0x7f3450632040>)"}, {"cover": "", "title": "023", "tags": ["bash"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/023.md", "description": "Find and replace Groups in VSCode", "content": "Find and replace Groups in VSCode\n$1 referrs to the second group\n\n```\n(filepath: top)(.*)\nfilepath: s3://bucket/top$1.parquet\n```\n\n``` diff\n- filepath: top/raw/scooters\n+ filepath: s3://bucket/top/raw/scooters.parquet\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/hot_tips/009'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>009</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/004'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>004</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-21", "afterImage": "/vscode.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/023.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575732", "datetime": "2020-06-21 00:00:00+00:00", "slug": "hot_tips/023", "jinja": false, "output_html": "markout/hot_tips/023/index.html", "long_description": "Find and replace Groups in VSCode", "super_description": "Find and replace Groups in VSCode", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f34506324c0>, next=<frontmatter.Post object at 0x7f345062edc0>)"}, {"cover": "", "title": "009", "tags": ["data", "python"], "status": "draft", "templateKey": "hot-tip", "path": "pages/hot_tips/009.md", "description": "Combine a directory of ", "content": "Combine a directory of _csv's_ with **pandas**\n\n``` python\nimport pandas as pd\nfrom pathlib import Path\n\ncsvs = Path.glob('raw/*.csv')\ncsvs_combined = pd.concat(csvs)\ncsvs_combined.to_csv('processed/combined.csv')\n```\n<div class='prevnext'>\n\n    <style type='text/css'>\n\n    :root {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"light\"] {\n      --prevnext-color-text: #1f2022;\n      --prevnext-color-angle: #ffeb00;\n      --prevnext-subtitle-brightness: 3;\n    }\n    [data-theme=\"dark\"] {\n      --prevnext-color-text: #eefbfe;\n      --prevnext-color-angle: #ff66c4;\n      --prevnext-subtitle-brightness: 3;\n    }\n    .prevnext {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-around;\n      align-items: flex-start;\n    }\n    .prevnext a {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      text-decoration: none;\n    }\n    a.next {\n      justify-content: flex-end;\n    }\n    .prevnext a:hover {\n      background: #00000006;\n    }\n    .prevnext-subtitle {\n      color: var(--prevnext-color-text);\n      filter: brightness(var(--prevnext-subtitle-brightness));\n      font-size: .8rem;\n    }\n    .prevnext-title {\n      color: var(--prevnext-color-text);\n      font-size: 1rem;\n    }\n    .prevnext-text {\n      max-width: 30vw;\n    }\n    </style>\n    \n    <a class='prev' href='/why-use-cms'>\n    \n\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.5 8.25L9.75 12L13.5 15.75\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"> </path>\n        </svg>\n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>prev</p>\n            <p class='prevnext-title'>Why use a cms</p>\n        </div>\n    </a>\n    \n    <a class='next' href='/hot_tips/023'>\n    \n        <div class='prevnext-text'>\n            <p class='prevnext-subtitle'>next</p>\n            <p class='prevnext-title'>023</p>\n        </div>\n        <svg width=\"50px\" height=\"50px\" viewbox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.5 15.75L14.25 12L10.5 8.25\" stroke=\"var(--prevnext-color-angle)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n    </a>\n  </div>", "date": "2020-06-07", "afterImage": "/static/python.png", "edit_link": "https://github.com/edit/main/pages/hot_tips/009.md", "today": "2022-06-10", "now": "2022-06-10 02:38:55.575738", "datetime": "2020-06-07 00:00:00+00:00", "slug": "hot_tips/009", "jinja": false, "output_html": "markout/hot_tips/009/index.html", "long_description": "Combine a directory of ", "super_description": "Combine a directory of ", "year": 2020, "prevnext": "PrevNext(prev=<frontmatter.Post object at 0x7f345068a8e0>, next=<frontmatter.Post object at 0x7f3450632160>)"}]}