<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Waylon Walkers Digital Garden - vim posts</title><link>https://waylonwalker.com/vim-rss.xml</link><description>Waylon Walkers posts - vim posts</description><atom:link href="https://waylonwalker.com/vim-rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>8bitcc.png</url><title>Waylon Walkers Digital Garden - vim posts</title><link>https://waylonwalker.com/vim-rss.xml</link></image><language>en</language><lastBuildDate>Fri, 10 Jun 2022 02:40:00 +0000</lastBuildDate><item><title>Keep Location List Closed</title><link>https://waylonwalker.com/keep-location-list-closed</link><description>Vim Location List eating up the screen while I am zoomed in and trying to live code Through some google search I found the culprit was syntastic.  It has an  I </description><content:encoded>&lt;p&gt;Vim's (neovim in my case) location list can provide some very useful information while developing.  Mine gives me information about linting and type checking errors with fairly little config.  Generally, it sits nicely at the bottom of the screen and barely affects me.  Other times, especially while zoomed way in during a presentation, it just gets in the way.&lt;/p&gt;&lt;p&gt;&lt;img alt="location list eats the screen" src="https://images.waylonwalker.com/location-list-eats-screen.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Location List eating up the screen while I am zoomed in and trying to live code&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="toggling-the-location-list"&gt;Toggling the location list&lt;/h2&gt;&lt;p&gt;Through some google search I found the culprit was syntastic.  It has an &lt;code&gt;auto_loc_list&lt;/code&gt; feature.  We can turn it off by setting&lt;code&gt;syntastic_auto_loc_list=0&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; syntastic_auto_loc_list&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="keybindings"&gt;Keybindings&lt;/h2&gt;&lt;p&gt;I want to keep the location list open automatically most of the time, but when I don't want it to keep opening it's generally detrimental.  Trying to live code while the location list keeps taking up the whole screen is not cool.&lt;/p&gt;&lt;p&gt;First, create a function that will toggle both the location list and syntactic together.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;let&lt;/span&gt; s:syntastic_auto_loc_list &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; s:ToggleLocationList&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; s:syntastic_auto_loc_list &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;        &lt;span class="k"&gt;let&lt;/span&gt; s:syntastic_auto_loc_list &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;        &lt;span class="k"&gt;let&lt;/span&gt; syntastic_auto_loc_list &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;        :&lt;span class="k"&gt;lclose&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;        &lt;span class="k"&gt;let&lt;/span&gt; s:syntastic_auto_loc_list &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;        &lt;span class="k"&gt;let&lt;/span&gt; syntastic_auto_loc_list &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;        :&lt;span class="k"&gt;lopen&lt;/span&gt;    &lt;span class="k"&gt;endif&lt;/span&gt;&lt;span class="k"&gt;endfunction&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This binding will allow me to use &lt;code&gt;gtl&lt;/code&gt; from normal mode to toggle the location list.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;command&lt;span class="p"&gt;!&lt;/span&gt; ToggleLocationList :&lt;span class="k"&gt;call&lt;/span&gt; s:ToggleLocationList&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="nb"&gt;gtl&lt;/span&gt; :ToggleLocationList&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I am starting a set of &lt;strong&gt;toggle&lt;/strong&gt; keymaps under the &lt;code&gt;gt&lt;/code&gt; keybinding, this one is the second one after a keybinding made to toggle paste mode.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/keyboard-driven-vscode'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Keyboard Driven VSCode&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro172_replit'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;kedro replit&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/keep-location-list-closed</guid><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate></item><item><title>Save Vim Macro</title><link>https://waylonwalker.com/save-vim-macro</link><description>If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it aw</description><content:encoded>&lt;p&gt;If you are like me, you have created a macro or two that is pure glory, and you forget how you made it after a day or so, or you immediately want to store it away as a custom keybinding. As with most things with vim, it's easy to do once you understand it.&lt;/p&gt;&lt;h2 id="creating-a-macro"&gt;Creating a Macro&lt;/h2&gt;&lt;p&gt;One of the earliest things we all learn to do in vim is to create macros, custom sets of functionality stored in a register that can be replayed later.&lt;/p&gt;&lt;p&gt;To create a macro, get into normal mode, then type &lt;code&gt;q&lt;/code&gt; followed by a letter that you want to store the macro under.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;qq&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note: a common throw-away macro register is q because it's easy to hit qq from normal mode to start recording.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="replaying-a-macro"&gt;Replaying a Macro&lt;/h2&gt;&lt;p&gt;Macros can be replayed using &lt;code&gt;@&lt;/code&gt; followed by the letter that you stored the macro under.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;@&lt;span class="k"&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="registers"&gt;Registers&lt;/h2&gt;&lt;p&gt;Registers are nothing more than a single character key mapping to a value of some text. As you &lt;code&gt;yank&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, or create macros in vim, it automatically stores text into these registers.&lt;/p&gt;&lt;p&gt;When you hit &lt;code&gt;p&lt;/code&gt; paste it's simply pasting in the default register. You can also paste in any other register by hitting &lt;code&gt;"qp&lt;/code&gt; where q is the register that you want to paste in.&lt;/p&gt;&lt;h2 id="listing-registers"&gt;Listing Registers&lt;/h2&gt;&lt;p&gt;To see what you have stored in each register, use the &lt;code&gt;:reg&lt;/code&gt; command. This is a powerful tool that I have underutilized for a long time. It is really great to see what you have in each register.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;reg&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="making-a-macro-into-a-shortcut"&gt;making a macro into a shortcut&lt;/h2&gt;&lt;p&gt;&lt;em&gt;a little \&amp;lt;c-r&gt; magic&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Thgve magical shortcut that makes it easy is that control + r &lt;code&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; followed by a register will paste that register wherever you currently are, including the command mode.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; {binding} &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;R&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="k"&gt;register&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="editing-a-macro"&gt;Editing a Macro&lt;/h2&gt;&lt;p&gt;&lt;em&gt;relieve some of that Macro Pressure&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Now that we understand that macros are simply strings of text placed into a register, it becomes a bit more intuitive to edit them after being created.&lt;/p&gt;&lt;p&gt;First, paste the contents of the register into your current working buffer.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;R&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then edit the macro and add it back to that buffer and delete it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot;qdd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your macro had multiple lines in it, you might need to.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot;qdj&lt;/span&gt;&lt;span class="c"&gt;&amp;quot;qd2j&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="make-it-recursive"&gt;Make it recursive&lt;/h2&gt;&lt;p&gt;One use case of editing a macro may be making it recursive after trying it out a few times. Macros can become recursive by simply calling themselves after running.&lt;/p&gt;&lt;p&gt;Paste in the macro.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;R&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Go to the end of the line and add &lt;code&gt;@q&lt;/code&gt; to get called again.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;A @&lt;span class="k"&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Replace the &lt;code&gt;q&lt;/code&gt; register with the updated macro.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot;qd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note: don't use this in a shortcut as the macro may change. If you want to call the keybinding again, you will have to use noremap instead of nnoremap, but be careful as recursive remaps can be dangerous.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="recap"&gt;Recap&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; record a macro&lt;/span&gt;&lt;span class="k"&gt;q&lt;/span&gt;{&lt;span class="k"&gt;register&lt;/span&gt;}&lt;span class="c"&gt;&amp;quot; play a macro&lt;/span&gt;@{&lt;span class="k"&gt;register&lt;/span&gt;}&lt;span class="c"&gt;&amp;quot; list registers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;reg&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; map a macro to a keyboard shortcut&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; {binding} &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;R&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="k"&gt;register&lt;/span&gt;}&lt;span class="c"&gt;&amp;quot; edit a macro&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;R&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="k"&gt;register&lt;/span&gt;}&lt;span class="c"&gt;&amp;quot;{register}dd&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; make a macro recursive&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;C&lt;span class="p"&gt;-&lt;/span&gt;R&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{&lt;span class="k"&gt;register&lt;/span&gt;}A@&lt;span class="k"&gt;q&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;esc&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&amp;quot;{&lt;span class="k"&gt;register&lt;/span&gt;}dd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/send-email-with-github-actions'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Send Emails with GitHub Actions&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/reusable-bash'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Creating Reusable Bash Scripts&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/save-vim-macro</guid><pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Live Substitution In Neovim</title><link>https://waylonwalker.com/neovim-live-substitution</link><description>Replacing text in vim can be quite frustrating especially since it doesn https://twitter.com/ I had to do a bit of searching and found a great post from  I beli</description><content:encoded>&lt;p&gt;Replacing text in vim can be quite frustrating especially since it doesn't havelive feedback to what is changing. Today I was watching Josh Branchaud'sVim-Unalphabet series on Youtuve and realized that his vim was doing this and Ihad to have it.&lt;/p&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;neovim can live highlight substitutions.&lt;br&gt;&lt;br&gt;:set inccommand=nosplit&lt;/p&gt;&amp;mdash; Waylon Walker 🐍 (@_WaylonWalker) &lt;a href="https://twitter.com/_WaylonWalker/status/1346081617199198210?ref_src=twsrc%5Etfw"&gt;January 4, 2021&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;h2 id="how-to-do-it"&gt;How to do it.&lt;/h2&gt;&lt;p&gt;I had to do a bit of searching and found a great post from &lt;a href="http://vimcasts.org/episodes/neovim-eyecandy/"&gt;vimcasts&lt;/a&gt; that shows exactly how to get the live search and replace highlighting using &lt;code&gt;inccomand&lt;/code&gt;&lt;/p&gt;&lt;h2 id="h-inccommand"&gt;:h inccommand&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s1"&gt;&amp;#39;inccommand&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;icm&amp;#39;&lt;/span&gt;  string  &lt;span class="p"&gt;(&lt;/span&gt;default &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            global&lt;span class="c"&gt;    &amp;quot;nosplit&amp;quot;: Shows the effects of a command incrementally, as you type.&lt;/span&gt;&lt;span class="c"&gt;    &amp;quot;split&amp;quot;  : Also shows partial off-screen results in a preview window.&lt;/span&gt;    Works &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;:substitute&lt;span class="p"&gt;|,&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;:smagic&lt;span class="p"&gt;|,&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;:&lt;span class="k"&gt;snomagic&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;. &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;hl&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;Substitute&lt;span class="p"&gt;|&lt;/span&gt;    If the preview &lt;span class="k"&gt;is&lt;/span&gt; too slow &lt;span class="p"&gt;(&lt;/span&gt;exceeds &lt;span class="s1"&gt;&amp;#39;redrawtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; then &lt;span class="s1"&gt;&amp;#39;inccommand&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;    automatically disabled until &lt;span class="p"&gt;|&lt;/span&gt;Command&lt;span class="p"&gt;-&lt;/span&gt;line&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="add-this-to-your-config"&gt;Add this to your config&lt;/h2&gt;&lt;p&gt;I believe that this is a neovim only feature, add it into your&lt;code&gt;~/.config/nvim/init.vim&lt;/code&gt; file. You can see it in my&lt;a href="https://github.com/WaylonWalker/devtainer/blob/main/nvim/.config/nvim/settings.vim#L155"&gt;dotfiles&lt;/a&gt;as well.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; inccommand&lt;span class="p"&gt;=&lt;/span&gt;nosplit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="see-it-in-action"&gt;See it in Action&lt;/h2&gt;&lt;p&gt;&lt;img alt="example livesubstitution" src="https://images.waylonwalker.com/nvim-live-substitute-inccommand.gif" /&gt;&lt;/p&gt;&lt;h2 id="the-video-that-inspired-this"&gt;The Video that inspired this&lt;/h2&gt;&lt;p&gt;Check out Josh Branchaud's great series on the Vim-Unalphabet.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5jMiYtXz2QA"&gt;https://www.youtube.com/watch?v=5jMiYtXz2QA&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/new-machine-tpio'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;New Machine for developing Tests with TestProject.io&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/named-tuples-data-science'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Clean up Your Data Science with Named Tuples&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/neovim-live-substitution</guid><pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Vim Replace Visual Star</title><link>https://waylonwalker.com/vim-replace-visual-star</link><description>Replacing text based on whats in the current search register is a quite handy https://www.youtube.com/watch?v=fP If there is one thing that I Like most about vi</description><content:encoded>&lt;p&gt;Replacing text based on whats in the current search register is a quite handytool that I use often.  I believe I picked this tip up from Nick Janetakis,check out his YouTube channel for some amazing vim tips.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=fP_ckZ30gbs"&gt;https://www.youtube.com/watch?v=fP_ckZ30gbs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;If there is one thing that I Like most about vim it's the ability to hack on itand make it work well for you.&lt;/p&gt;&lt;h2 id="replacing-text-in-vim"&gt;Replacing text in vim&lt;/h2&gt;&lt;p&gt;Vim can often be a bit verbose, but that's ok because we can hack on it, and make our own shortcuts and keybindings.  For instance, finding and replacing text requires using a command at the vim command-line &lt;code&gt;:&lt;/code&gt;.  Replacing foo withbar looks like this &lt;code&gt;:%s/foo/bar/g&lt;/code&gt;, the final g means all of the foos, not just the first one on the line.&lt;/p&gt;&lt;h2 id="making-it-better"&gt;making it better&lt;/h2&gt;&lt;p&gt;I have a keybinding in my &lt;code&gt;init.vim&lt;/code&gt; that will allow me to search for a patternwith the usual &lt;code&gt;/&lt;/code&gt; character, page through them as normal with &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt;, butwhen I press &lt;code&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; it will populate the replace command for me so that all Ineed to do is type out the new text.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;r&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; :%s&lt;span class="sr"&gt;/&amp;lt;C-R&amp;gt;///&lt;/span&gt;&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;Left&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;Left&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="note-on-the-c-r"&gt;Note on the &lt;code&gt;&amp;lt;C-R&amp;gt;/&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;In command mode &lt;code&gt;:&lt;/code&gt; vim allows you to paste any text from any register into thecurrent command.  The &lt;code&gt;&amp;lt;C-R&amp;gt;/&lt;/code&gt; will paste the text from the current searchregister into the command.&lt;/p&gt;&lt;p&gt;&lt;code&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt; in command mode can paste text from any register, you can see whatregisters are in use with the &lt;code&gt;:reg&lt;/code&gt; command.  There are a lot of them and manyget populated automatically as you yank text or create macros.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/save-vim-macro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/save-vim-macro-og_250x140.png" alt="article cover for  Save Vim Macro"/&gt;          &lt;p&gt;&lt;strong&gt; Save Vim Macro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Also see how to use &lt;C-R&gt; to save macros to key bindings easily&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/vim-wsl-clipboard'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim Wsl Clipboard&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/vim-augroup'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;You must use augroup with autocmd in vim | Here's how&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/vim-replace-visual-star</guid><pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Vim Wsl Clipboard</title><link>https://waylonwalker.com/vim-wsl-clipboard</link><description>I wsl can access clip.exe.  You can do some cool things with it, such as Let pipe streams of text into clip.exe I recently made mine feel a bit more natural by </description><content:encoded>&lt;p&gt;I've long used neovim from within windows wsl, and for far too long, I wentwithout a proper way to get text out of it and into windows.&lt;/p&gt;&lt;h2 id="wsl-has-access-to-cmd-applications"&gt;wsl has access to cmd applications&lt;/h2&gt;&lt;p&gt;wsl can access clip.exe.  You can do some cool things with it, such ascat a file into the clipboard, sending output from a command to the clipboard,or set an autocmd group in vim to send yank to the windows clipboard.&lt;/p&gt;&lt;h2 id="using-clipexe"&gt;using clip.exe&lt;/h2&gt;&lt;p&gt;Let's say you want to send a teammate the tail of a log file over chat. You cantail the file into clip.exe.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tail -n &lt;span class="m"&gt;1&lt;/span&gt; info.log &lt;span class="p"&gt;|&lt;/span&gt; clip.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;pipe streams of text into clip.exe&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="make-it-a-bit-more-natural"&gt;make it a bit more natural&lt;/h2&gt;&lt;p&gt;I recently made mine feel a bit more natural by aliasing it to clip.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;clip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;clip.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;pop this in your ~/.bashrc or ~/.zshrc&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="yanking-to-windows-clipboard-from-vim"&gt;yanking to windows clipboard from vim&lt;/h2&gt;&lt;p&gt;I use neovim as my daily text editor and its a pain to share code with ateammate over chat, stack overflow, into a gist, or whatever you need.  Thefollowing snippet has been quite useful and flawless for me.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uname -r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=~&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Microsoft&amp;quot;&lt;/span&gt;    augroup Yank        autocmd&lt;span class="p"&gt;!&lt;/span&gt;        autocmd TextYankPost * :&lt;span class="k"&gt;call&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/mnt/c/windows/system32/clip.exe &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;@&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;        augroup END&lt;span class="k"&gt;endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;add this to your ~/.vimrc or your ~/.config/nvim/init.vim&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="wsl2"&gt;Wsl2&lt;/h2&gt;&lt;p&gt;Based on some&lt;a href="https://github.com/WaylonWalker/waylonwalker.com/issues/4"&gt;feedback&lt;/a&gt;from &lt;a href="https://github.com/l-sannin"&gt;l-sannin&lt;/a&gt; the 'uname -r' command nowreturns &lt;code&gt;uname -r command returns '5.10.16.3-microsoft-standard-WSL2'&lt;/code&gt;So you will need an all lowercase microsoft.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uname -r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=~&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;microsoft&amp;quot;&lt;/span&gt;  augroup Yank  autocmd&lt;span class="p"&gt;!&lt;/span&gt;  autocmd TextYankPost * :&lt;span class="k"&gt;call&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/mnt/c/windows/system32/clip.exe &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;@&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;  augroup END&lt;span class="k"&gt;endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/what-are-github-actions'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What Are GitHub Actions&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/vim-replace-visual-star'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim Replace Visual Star&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/vim-wsl-clipboard</guid><pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate></item><item><title>I made a neovim plugin</title><link>https://waylonwalker.com/telegraph-release</link><description>I https://youtu.be/8m5ipBuopPU Check out the project  I want a simple way to make remaps into shell commands that can open new tmux For example I want to make r</description><content:encoded>&lt;p&gt;I've slowly adding more and more lua functions into my neovim configuration,and recently I noticed a pattern for a class of functions that reach out to runshell commands that can be abstracted away.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/8m5ipBuopPU"&gt;https://youtu.be/8m5ipBuopPU&lt;/a&gt;&lt;/p&gt;&lt;h2 id="telegraphnvim"&gt;Telegraph.nvim&lt;/h2&gt;&lt;p&gt;Check out the project &lt;a href="https://github.com/WaylonWalker/Telegraph.nvim"&gt;readme&lt;/a&gt;for the most up to date details on the plugin itself.&lt;/p&gt;&lt;h2 id="motivation"&gt;Motivation&lt;/h2&gt;&lt;p&gt;I want a simple way to make remaps into shell commands that can open new tmuxwindows, popups, or just run a command with context from the editor.&lt;/p&gt;&lt;p&gt;For example I want to make remaps to do things like open the current file in lookatme.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# &lt;span class="k"&gt;vim&lt;/span&gt; :terminal&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Telegraph pipx run lookatme {filepath} &lt;span class="p"&gt;--&lt;/span&gt;live&lt;span class="p"&gt;-&lt;/span&gt;reload &lt;span class="p"&gt;--&lt;/span&gt;style gruvbox&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;# tmux session&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;telegraph&amp;#39;&lt;/span&gt;.telegraph&lt;span class="p"&gt;(&lt;/span&gt;{cmd&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pipx run lookatme {filepath} --live-reload --style gruvbox-dark&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; how&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt;}&lt;span class="p"&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;# tmux &lt;span class="k"&gt;popup&lt;/span&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;S &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;telegraph&amp;#39;&lt;/span&gt;.telegraph&lt;span class="p"&gt;(&lt;/span&gt;{cmd&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pipx run lookatme {filepath} --live-reload --style gruvbox-dark&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; how&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tmux_popup&amp;#39;&lt;/span&gt;}&lt;span class="p"&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The main goal here is that remaps become one liners that can just be putdirectly in my &lt;code&gt;init.vim&lt;/code&gt; without creating a whole new lua module for eachshell command I want to bind.&lt;/p&gt;&lt;h2 id="how"&gt;how&lt;/h2&gt;&lt;p&gt;&lt;code&gt;telegraph&lt;/code&gt; takes in a &lt;code&gt;how&lt;/code&gt; argument to determine where to tun the command.j&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;term&lt;/code&gt;(default) runs command in the built in terminal&lt;/li&gt;&lt;li&gt;&lt;code&gt;tmux&lt;/code&gt; runs command in a new tmux session and joins it.&lt;/li&gt;&lt;li&gt;&lt;code&gt;tmux_popup&lt;/code&gt; runs command in a tmux popup window.&lt;/li&gt;&lt;li&gt;&lt;code&gt;tmux_popup_session&lt;/code&gt; runs command in a tmux session and displays it in a popup&lt;/li&gt;&lt;li&gt;&lt;code&gt;subprocess&lt;/code&gt; runs command in a subprocess&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="format-strings"&gt;Format strings&lt;/h2&gt;&lt;p&gt;The current set of format strings that can be used with telegraph.  Placingthese in braces &lt;code&gt;{}&lt;/code&gt; within your command will get rendered into something withcontext from the editor.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;cword&lt;/code&gt; - the current word under the cursor&lt;/li&gt;&lt;li&gt;&lt;code&gt;cWORD&lt;/code&gt; - the current BIG Word under the cursor&lt;/li&gt;&lt;li&gt;&lt;code&gt;cline&lt;/code&gt; - the current line under the cursor&lt;/li&gt;&lt;li&gt;&lt;code&gt;filepath&lt;/code&gt; - the filepath of the current file&lt;/li&gt;&lt;li&gt;&lt;code&gt;filename&lt;/code&gt; - the filename of the current file&lt;/li&gt;&lt;li&gt;&lt;code&gt;parent&lt;/code&gt; - the parent directory of the current file&lt;/li&gt;&lt;li&gt;&lt;code&gt;current_session_name&lt;/code&gt; - name of the current tmux session&lt;/li&gt;&lt;li&gt;&lt;code&gt;cwd&lt;/code&gt; - the current working directory&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="give-it-a"&gt;Give it a ⭐&lt;/h2&gt;&lt;p&gt;Check out the &lt;a href="https://github.com/WaylonWalker/Telegraph.nvim"&gt;repo&lt;/a&gt; and giveit a star if its something that interests you.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/testproject-io-py-actions'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Integration testing with Python, TestProject.io, and GitHub Actions&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/symlink-gallery'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create a Virtual File Gallery with Symlinks&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/telegraph-release</guid><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate></item><item><title>How linux users install a text editor</title><link>https://waylonwalker.com/install-nvim-skit</link><description>In honor of the neovim 0.6.0 release, I decided to do a funny skit installing https://youtu.be/64oKLphhBuo The thing that took me the longest to realize was....</description><content:encoded>&lt;p&gt;In honor of the neovim 0.6.0 release, I decided to do a funny skit installingneovim, and fix up my install script in the process as part of my challenge tofix up my dotfiles.  I ran into one snag where I was not updating the repo thatI cloned.  I moved it to the directory I now keep third-party git repos and setit to update with ansible.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/64oKLphhBuo"&gt;https://youtu.be/64oKLphhBuo&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The thing that took me the longest to realize was.... I had a path issuepointing me to an old install of the appimage over the fresh build,  fixed thatup and now we are on 0.7.0 nightly.&lt;/p&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;p&gt;&lt;a href="https://neovim.io/"&gt;https://neovim.io/&lt;/a&gt;&lt;a href="https://github.com/neovim/neovim"&gt;https://github.com/neovim/neovim&lt;/a&gt;&lt;a href="https://github.com/neovim/neovim/releases/tag/v0.6.0"&gt;https://github.com/neovim/neovim/releases/tag/v0.6.0&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/interrogate'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Interrogate is a pretty awesome, brand new, cli for Python packages&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/install-miniconda'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to Install miniconda on linux (from the command line only)&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/install-nvim-skit</guid><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate></item><item><title>Setup a yaml schema | yamlls for a silky smooth setup</title><link>https://waylonwalker.com/setup-yamlls</link><description>I https://youtu.be/xo4HrFoKF4c The video for this one is part of a I have my  You will need the following plugins.  I use plug, if you don Make sure that you ha</description><content:encoded>&lt;p&gt;I've gone far too long without a good setup for editing yamlfiles, I am missing out on autocomplete and proper diagnostics.This ends today as I setup yaml-language-server in neovim.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/xo4HrFoKF4c"&gt;https://youtu.be/xo4HrFoKF4c&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The video for this one is part of a&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj"&gt;challenge-playlist&lt;/a&gt;I put out for myself to constantly improve my dotfiles for all of December.&lt;/p&gt;&lt;h2 id="initvim"&gt;init.vim&lt;/h2&gt;&lt;p&gt;I have my &lt;code&gt;init.vim&lt;/code&gt; setup to only source other modules, if you want everythingin a single config, feel free to do as you wish.  I broke mine up earlier thisyear as I doubled into nvim and am not going back.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/plugins.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.cmp&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.lsp-config&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="plugin-setup"&gt;Plugin setup&lt;/h2&gt;&lt;p&gt;You will need the following plugins.  I use plug, if you don't you will have toconvert the syntax over to the plugin manager you use.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/neovim/nvim-lspconfig"&gt;neovim/nvim-lspconfig&lt;/a&gt; is forconfiguring the lsp.  It comes with a bunch of sane defaults for most servers,so you pretty much just have to call setup on that server unless you want tochange the defaults.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;hrsh7th/nvim-cmp&lt;/a&gt; is what I use forautocomplete. If you are using something else you might need to set that up ina different way in order to get the autocomplete to work.  You will still getthe diagnostics with just lsp-config.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/kabouzeid/nvim-lspinstall"&gt;kabouzeid/nvim-lspinstall&lt;/a&gt; willaide in installing lsp's if you want.  I have chosen not to because I want tohave my full setup scripted so when I setup any new machine I just run myansible-playbook.  This library is nice to just set things up quick and playwith them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; /home/u_walkews/.config/nvim/plugins.vim&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;neovim/nvim-lspconfig&amp;#39;&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; if you want to use nvim-cmp&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/nvim-cmp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-nvim-lsp&amp;#39;&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; if you want to use lsp-install&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;kabouzeid/nvim-lspinstall&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="cmp-config"&gt;cmp config&lt;/h2&gt;&lt;p&gt;Make sure that you have nvim_lsp as a source in your cmp config.  This is myconfig as of now, its likely to change in the future, set yours up how youlike.  hrsh7th has a really good readme if you want help configuring cmp.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Again if you don't use cmp you can skip this step, cmp is for autocomplete.You can use a different plugin for autocomplete, or not use a plugin at allif that's your thing.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua&lt;/span&gt;&lt;span class="c1"&gt;-- Setup nvim-cmp.&lt;/span&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmp&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;snippet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;expand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;-- For `vsnip` user.&lt;/span&gt;    &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vsnip#anonymous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;-- For `luasnip` user.&lt;/span&gt;    &lt;span class="c1"&gt;-- require(&amp;#39;luasnip&amp;#39;).lsp_expand(args.body)&lt;/span&gt;    &lt;span class="c1"&gt;-- For `ultisnips` user.&lt;/span&gt;    &lt;span class="c1"&gt;-- vim.fn[&amp;quot;UltiSnips#Anon&amp;quot;](args.body)&lt;/span&gt;    &lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-n&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_next_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_prev_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;Down&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_next_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;Up&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_prev_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-d&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scroll_docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-f&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scroll_docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-Space&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-e&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;CR&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;    &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfirmBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="nb"&gt;select&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;sources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nvim_lsp&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vsnip&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buffer&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;calc&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lsp-config"&gt;lsp config&lt;/h2&gt;&lt;p&gt;Next up is the heart of this post, the lsp-config.lua.  This one is prettystraight forward, require lspconfig (which you need the plugin for), then setit up with cmp and the extra schemas.  I'm sure there are yaml schemas for tonsof things, I'll probably add more in the future, but for now, this is what Ihave.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lspconfig&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yamlls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;on_attach&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;on_attach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;capabilities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmp_nvim_lsp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;update_capabilities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lsp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_client_capabilities&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;    &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;yaml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;            &lt;span class="n"&gt;schemas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://raw.githubusercontent.com/quantumblacklabs/kedro/develop/static/jsonschema/kedro-catalog-0.17.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;conf/**/*catalog*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://json.schemastore.org/github-workflow.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/.github/workflows/*&amp;quot;&lt;/span&gt;            &lt;span class="p"&gt;}&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/WaylonWalker/devtainer/tree/main/nvim/.config/nvim"&gt;my nvim config&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/neovim/nvim-lspconfig"&gt;nvim-lspconfig GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;nvim-cmp GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/kabouzeid/nvim-lspinstall/blob/main/lua/lspinstall/servers/yaml.lua"&gt;lspinstall yamlls&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.npmjs.com/package/yaml-language-server?activeTab=readme"&gt;yaml-language-server npm&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the&lt;a href="https://waylonwalker/rss/"&gt;rss-feed&lt;/a&gt; to stay up to date.&lt;/p&gt;&lt;h2 id="also-check-out-my-python-lsp-setup"&gt;Also Check out My python lsp setup&lt;/h2&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/setup-pylsp/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/setup-pylsp-og_250x140.png" alt="article cover for  python lsp setup"/&gt;          &lt;p&gt;&lt;strong&gt; python lsp setup&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/should-i-switch-to-zeit-now'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Should I switch to Zeit Now&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/serverless-things-to-investigate'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Serverless things to investigate&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/setup-yamlls</guid><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate></item><item><title>You must use augroup with autocmd in vim | Here's how</title><link>https://waylonwalker.com/vim-augroup</link><description>If you are running vim autocmd https://youtu.be/2ITTn4Dl0lc For  Lets create a new file called  I What you need to do is clear out all commands in the augroup w</description><content:encoded>&lt;p&gt;If you are running vim autocmd's without a group, you're killing yourperformance.  Granted your probably not sourcing your vimscript files withautocmd's too often, but every time you source that vimscript you are addinganother command that needs to run redundantly.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/2ITTn4Dl0lc"&gt;https://youtu.be/2ITTn4Dl0lc&lt;/a&gt;&lt;/p&gt;&lt;h2 id="this-is-what-i-had"&gt;This is what I had&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Not silky smooth&lt;/em&gt;&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;WAAY&lt;/strong&gt; too long I have had something like this in my  vimrc or init.vim.It formats my python for me on every save, works great except if I source mydotfiles more than once I start adding how many times black runs.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;Black&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="why-is-a-bare-autocmd-bad"&gt;Why is a bare autocmd bad&lt;/h2&gt;&lt;p&gt;&lt;em&gt;let me demonstrate&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Lets create a new file called &lt;code&gt;format.vim&lt;/code&gt; and give it the &lt;code&gt;:so %&lt;/code&gt;. Worksgreat, it starts telling me that its formatting.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; :echo&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;formatting with black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="too-many-formats" src="https://images.waylonwalker.com/vim-augroups-too-many-formats.GIF" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;BUT&lt;/strong&gt; as every time I give it the &lt;code&gt;:so %&lt;/code&gt; it formats an extra time on everysingle save.&lt;/p&gt;&lt;h2 id="setting-up-an-augroup"&gt;Setting up an augroup&lt;/h2&gt;&lt;p&gt;I've been told I need an &lt;code&gt;augroup&lt;/code&gt; to prevent duplicates. So I did it, andnothing changes, it still ran as many times as it was sources on every save.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;augroup black    autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; :echo&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;formatting with black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;augroup &lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="clearing-out-the-augroup"&gt;Clearing out the augroup&lt;/h2&gt;&lt;p&gt;What you need to do is clear out all commands in the augroup with &lt;code&gt;autocmd!&lt;/code&gt;right at the beginning of the group.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;augroup black    autocmd&lt;span class="p"&gt;!&lt;/span&gt;    autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; :echo&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;formatting with black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;augroup &lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="my-final-silky-smooth-setup"&gt;My Final silky smooth setup&lt;/h2&gt;&lt;p&gt;Now this is what I have in my dotfiles for a silky smooth setup that does notrun automds like crazy as I am making changes to my dotfiles.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;augroup waylonwalker    autocmd&lt;span class="p"&gt;!&lt;/span&gt;    autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;PyPreSave&amp;#39;&lt;/span&gt;    autocmd bufwritepost *.&lt;span class="k"&gt;py&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;PyPostSave&amp;#39;&lt;/span&gt;    autocmd bufwritepost .tmux.&lt;span class="k"&gt;conf&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;:!tmux source-file %&amp;#39;&lt;/span&gt; autocmd bufwritepost .tmux.local.&lt;span class="k"&gt;conf&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;:!tmux source-file %&amp;#39;&lt;/span&gt;    autocmd bufwritepost *.&lt;span class="k"&gt;vim&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;:source %&amp;#39;&lt;/span&gt;augroup &lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://vimhelp.org/autocmd.txt.html#%3Aaugroup"&gt;vim-help&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://youtu.be/2ITTn4Dl0lc"&gt;youtube video&lt;/a&gt; for this article&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/vim-replace-visual-star'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim Replace Visual Star&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/variable-names-don-t-need-their-type'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Variables names don't need their type&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/vim-augroup</guid><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate></item><item><title>fugitive verbose commit</title><link>https://waylonwalker.com/til/fugitive-commit-verbose</link><description>Fugitive comes with a pretty sick way to commit files and see the diff at the example of a verbose commit in fugitive</description><content:encoded>&lt;p&gt;Fugitive comes with a pretty sick way to commit files and see the diff at thesame time with verbose commit.  Opening the fugitive menu with &lt;code&gt;:G&lt;/code&gt; brings upyour git status, you can stage files with &lt;code&gt;s&lt;/code&gt;, unstage them with &lt;code&gt;u&lt;/code&gt;, togglethem with &lt;code&gt;-&lt;/code&gt;, and toggle their diff with &lt;code&gt;&amp;gt;&lt;/code&gt;.  Once you have staged your filesfor commit, you can commit with &lt;code&gt;cc&lt;/code&gt;, but today I found that you can commitverbose with &lt;code&gt;cvc&lt;/code&gt;.  This brings up not only a commit widow with your gitstatus shown, but the diff that you are about to commit.&lt;/p&gt;&lt;p&gt;&lt;img alt="fugitive verbose commit example" src="https://images.waylonwalker.com/fugitive-verbose-commit.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;example of a verbose commit in fugitive&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/fzf-wallpaper'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;fuzzy wallpaper with fzf&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/ewhich'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Bash function to edit scripts faster&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/fugitive-commit-verbose</guid><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Finding hidden (dotfiles) using Telescope in neovim</title><link>https://waylonwalker.com/til/nvim-telescope-hidden-files</link><description>Finding hidden files using Telescope as you fuzzy file finder is not too I have this keymap set to help me list out all files including hidden see the</description><content:encoded>&lt;p&gt;Finding hidden files using Telescope as you fuzzy file finder is not toohard, its a single flag passed in.  Then it will use whichever filefinder it can find ['fd', 'fdfind', 'rg --files', 'find', or 'where'] inthat order.  These tools each have their own way of handling hiddenfiles, but telescope takes care of that so all you need to do is pass in&lt;code&gt;hidden=true&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;I have this keymap set to help me list out all files including hiddenfiles using the pnumonic go edit hidden.  I use ge for quite a fewdifferent things to take me directly to a specific file or picker.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;nnoremap&lt;/span&gt; &lt;span class="n"&gt;geh&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Telescope&lt;/span&gt; &lt;span class="n"&gt;find_files&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;see the&lt;a href="https://github.com/nvim-telescope/telescope.nvim/blob/82e3cc322ad87b262aef092cb7475e769740e83a/lua/telescope/builtin/files.lua#L167-L184"&gt;implementation&lt;/a&gt;telescope finds your files.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/nvr-open-files'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Open Files with Nvim Remote&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/nvim-telescope-custom-command'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Opening files in vim from output of command&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/nvim-telescope-hidden-files</guid><pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Opening files in vim from output of command</title><link>https://waylonwalker.com/til/nvim-telescope-custom-command</link><description>Many command line tools can output a list of files, this is quite powerful. Telescope is the fuzzy file finder I use every day inside of neovim.  Its pretty Thi</description><content:encoded>&lt;p&gt;Many command line tools can output a list of files, this is quite powerful.I often want to search for something, then open it from a fuzzy picker.  Thiscan be done with fzf in the terminal, but often I am already in vim and I wantto open it inside my current session.&lt;/p&gt;&lt;h2 id="telescope"&gt;Telescope&lt;/h2&gt;&lt;p&gt;&lt;em&gt;how to pass a custom command to telescope&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Telescope is the fuzzy file finder I use every day inside of neovim.  Its prettyfantastic and easy to extent like this.  This first example I am only passing infiles from the current working directory by using &lt;code&gt;ls&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;Telescope find_files find_command&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="k"&gt;ls&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This brings up a normal Telescope picker with results from the &lt;code&gt;ls&lt;/code&gt; command.&lt;/p&gt;&lt;h2 id="more-arguments"&gt;More arguments&lt;/h2&gt;&lt;p&gt;&lt;em&gt;how to pass a muli-argument command to telescope&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Adding more arguments can be done by comma separating them as shown in theexample below.  This command will run the silver-searcher, search for alloccurences of nvim inside of a markdown file, and return only the filepaths soTelescope can pick from them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;Telescope find_files find_command&lt;span class="p"&gt;=&lt;/span&gt;ag&lt;span class="p"&gt;,&lt;/span&gt;nvim&lt;span class="p"&gt;,--&lt;/span&gt;md&lt;span class="p"&gt;,-&lt;/span&gt;&lt;span class="k"&gt;l&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/nvim-telescope-hidden-files'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Finding hidden (dotfiles) using Telescope in neovim&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/nvim-rename-python'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Rename Python Variables with nvim&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/nvim-telescope-custom-command</guid><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Serve html from your command line</title><link>https://waylonwalker.com/til/serve-html-command-line</link><description>When I first moved to vim from and ide like vscode or sublime text one of my You will need a way to run another process alongside vim, here are a couple use bac</description><content:encoded>&lt;p&gt;When I first moved to vim from and ide like vscode or sublime text one of myvery first issues was trying to preview my website at &lt;code&gt;localhost:8000&lt;/code&gt;.  Therehad always just been a button there to do it in all of my other editors, notvim.  There are not many buttons for anything in vim.  While there is probably aplugin that can run a webserver for me in vim, it's not necessary, we just needthe command line we are already in.&lt;/p&gt;&lt;h2 id="running-a-separate-process"&gt;running a separate process&lt;/h2&gt;&lt;p&gt;You will need a way to run another process alongside vim, here are a coupleideas to get you going that are not the focus here.style&lt;/p&gt;&lt;ul&gt;&lt;li&gt;use background jobs&lt;/li&gt;&lt;li&gt;c-z to send a job to the background&lt;/li&gt;&lt;li&gt;fg to bring it back&lt;/li&gt;&lt;li&gt;use a second terminal&lt;/li&gt;&lt;li&gt;use a second tab&lt;/li&gt;&lt;li&gt;use tmux and run it in a separate split/window&lt;/li&gt;&lt;li&gt;use an embeded nvim terminal&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="running-a-development-webserver-from-the-command-line"&gt;running a development webserver from the command line&lt;/h2&gt;&lt;p&gt;Python already exists on most linux systems by default, and most are now onpython3.  If you are on windows typing python will take you directly to thewindows store to install it, or you can also use wsl.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# python3&lt;/span&gt;python -m http.server&lt;span class="c1"&gt;# running on port 5000&lt;/span&gt;python -m http.server --directory markout &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# for the low chance you are on python2python -m SimpleHTTPServer# running on port 5000python -m SimpleHTTPServer 5000python -m SimpleHTTPServer --directory markout 5000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running a python static webserver from the command line" src="https://images.waylonwalker.com/python-m-http-server.png" /&gt;&lt;/p&gt;&lt;h2 id="using-nodejs"&gt;using nodejs&lt;/h2&gt;&lt;p&gt;If you are a web developer it's likely that you need nodejs and npm on yoursystem anyways and may want to use one of the servers from npm.  I'll admit withthese not being tied to the long term support of a language they are much morefeature rich with things like compression out of the box.  In my opinion theyare nice things that you would want out of a production server, but may notbe necessary for development.&lt;/p&gt;&lt;h3 id="installing-npx"&gt;installing npx&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# if you don&amp;#39;t alredy have npx&lt;/span&gt;npm i -g npx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;npx is a handy tool that lets you run command line applications straight fromnpm without installing them.  It pulls the latest version every time you wantto run, then executes it without it being installed.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="running-the-http-server-with-npx"&gt;running the http-server with npx&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npx http-server&lt;span class="c1"&gt;# running on port 5000&lt;/span&gt;npx http-server -p &lt;span class="m"&gt;5000&lt;/span&gt;npx http-server markout -p &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running a nodejs static webserver from the command line" src="https://images.waylonwalker.com/npx-http-server.png" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/simple-samba'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Simple Samba Share Setup&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/review-pull-requests-with-git-worktrees'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Review Pull Requests with git worktrees&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/serve-html-command-line</guid><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate></item><item><title>List all the files containing a phrase</title><link>https://waylonwalker.com/til/list-all-files-containing-phrase</link><description>One of the most useful skills you can acquire to make you faster at I Passing the flag  Giving </description><content:encoded>&lt;p&gt;One of the most useful skills you can acquire to make you faster atalmost any job that uses a computer is getting good at finding text inyour current working diretory and identifying the files that its in.  Ioften use the silver searcher &lt;code&gt;ag&lt;/code&gt; or ripgrep &lt;code&gt;rg&lt;/code&gt; to find files inlarge directories quickly.  Both have a sane set of defaults that ignorehidden and gitignored files, but getting them to list only the filenamesand not the matched was not trivial to me.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I've searched throught he help/man pages many times looking for theseflags and they always seem to evade me.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="ag"&gt;ag&lt;/h2&gt;&lt;p&gt;Passing the flag &lt;code&gt;-l&lt;/code&gt; to ag will get it to list only the filepath, andnot the match. Here I gave it a &lt;code&gt;--md&lt;/code&gt; as well to only return markdownfiletypes.  &lt;code&gt;ag&lt;/code&gt; supports a number of filetypes in a very similar way.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag nvim --md -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rg"&gt;rg&lt;/h2&gt;&lt;p&gt;Giving &lt;code&gt;rg&lt;/code&gt; the &lt;code&gt;--files-with-matches&lt;/code&gt; flag will yield you a similar setof results, giving only the filepaths themselves and not the matchstatement.  Also passing in the &lt;code&gt;-g "*.md"&lt;/code&gt; will similarly yield onlyresults from markdown files.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --files-with-matches you -g &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/lookatme-slides'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How I Present Markdown Slides from the Terminal&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-unzip-directory'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Unzip minecraft mods to their directory from the command line&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/list-all-files-containing-phrase</guid><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Remove Vim Tab Characters</title><link>https://waylonwalker.com/til/remove-vim-tab-characters</link><description>I It turns out they are tabs, and you can get rid of the little leading</description><content:encoded>&lt;p&gt;I've been stuck many times looking at a vim buffer with little questionmarks at the beginning of each line and trying to get rid of them.  forso long I didn't know what they were so trying to get rid of them wasimpossible.&lt;/p&gt;&lt;p&gt;&lt;img alt="example of what the tab character renders as in my editor" src="https://images.waylonwalker.com/vim-tab-characters.png" /&gt;&lt;/p&gt;&lt;p&gt;It turns out they are tabs, and you can get rid of the little leadingquestion marks with this substitution command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/\t/&lt;/span&gt;    /&lt;span class="k"&gt;g&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/review-pull-requests-with-git-worktrees'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Review Pull Requests with git worktrees&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/python-sys-excepthook'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Python sys.excepthook&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/remove-vim-tab-characters</guid><pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Rename Python Variables with nvim</title><link>https://waylonwalker.com/til/nvim-rename-python</link><description>I don I first tried the nvim lsp rename, and it failed, Then I pip installed Once you have rope installed you can call rename on the variable.</description><content:encoded>&lt;p&gt;I don't use refactoring tools as much as I probably should.  mostlybecause I work with small functions with unique names, but I recentlyhad a case where a variable name &lt;code&gt;m&lt;/code&gt; was everywhere and I wanted itnamed better.  This was not possible with find and replace, becausethere were other &lt;code&gt;m&lt;/code&gt;'s in this region.&lt;/p&gt;&lt;p&gt;I first tried the nvim lsp rename, and it failed, Then I pip installedrope, a refactoring tool for python, and it just worked!&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install rope&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have rope installed you can call rename on the variable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; &lt;span class="k"&gt;vim&lt;/span&gt;.&lt;span class="nb"&gt;lsp&lt;/span&gt;.&lt;span class="k"&gt;buf&lt;/span&gt;.rename&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/nvim-telescope-custom-command'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Opening files in vim from output of command&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/nixery-versions-by-commit-count'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Nix Versions By Commit Count&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/nvim-rename-python</guid><pubDate>Sun, 16 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Markata Filters as Telescope Pickers in Neovim</title><link>https://waylonwalker.com/til/markata-telescope-picker</link><description>I often pop into my blog from neovim with the intent to look at just a To tie these into a Telescope picker you add the command as the NOTE telescope treates ea</description><content:encoded>&lt;p&gt;I often pop into my blog from neovim with the intent to look at just asingle series of posts, &lt;code&gt;til&lt;/code&gt;, &lt;code&gt;gratitude&lt;/code&gt;, or just see todays posts.&lt;a href="https://markata.dev/"&gt;Markata&lt;/a&gt; has a great way of mapping over postsand returning their path that is designe exactly for this use case.&lt;/p&gt;&lt;p&gt;&lt;a href="https://images.waylonwalker.com/markta-list-todays-posts.png"&gt;Markata listing out posts from the command line&lt;/a&gt;&lt;/p&gt;&lt;p&gt;To tie these into a Telescope picker you add the command as thefind_command, and comma separate the words of the command, with nospaces.  I did also &lt;code&gt;--sort,date,--reverse&lt;/code&gt; in there so that the newestposts are closest to the cursor.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;nnoremap&lt;/span&gt; &lt;span class="n"&gt;geit&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Telescope&lt;/span&gt; &lt;span class="n"&gt;find_files&lt;/span&gt; &lt;span class="n"&gt;find_command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;markata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nnoremap&lt;/span&gt; &lt;span class="n"&gt;geil&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Telescope&lt;/span&gt; &lt;span class="n"&gt;find_files&lt;/span&gt; &lt;span class="n"&gt;find_command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;markata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;templateKey&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;til&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;nnoremap&lt;/span&gt; &lt;span class="n"&gt;geig&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Telescope&lt;/span&gt; &lt;span class="n"&gt;find_files&lt;/span&gt; &lt;span class="n"&gt;find_command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;markata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;templateKey&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gratitude&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;cr&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;NOTE telescope treates each word as a string, do not wrap an extralayer of quotes around your words, it gets messy.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img alt="using this picker in neovim" src="https://images.waylonwalker.com/markata-list-telescope-picker.png" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/mermaid-highlight'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Mermaid Highlight&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/lookatme-styles'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Style Lookatme Slides a bit more Personal&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/markata-telescope-picker</guid><pubDate>Sun, 23 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Tmux and Vim Clipboard for Ubuntu</title><link>https://waylonwalker.com/til/ubuntu-terminal-clipboard</link><description>One of the first things I noticed broken in my terminal based workflow moving First off you need to get  I have tmux setup to automatically copy any selection I</description><content:encoded>&lt;p&gt;One of the first things I noticed broken in my terminal based workflow movingfrom Windows wsl to ubuntu was that my clipboard was all messed up and notworking with my terminal apps.  Luckily setting tmux and neovim to work withthe system clipboard was much easier than it was on windows.&lt;/p&gt;&lt;p&gt;First off you need to get &lt;code&gt;xclip&lt;/code&gt; if you don't already have it provided by yourdistro.  I found it in the apt repositories.  I have used it between Ubuntu18.04 and 21.10 and they all work flawlessly for me.&lt;/p&gt;&lt;p&gt;I have tmux setup to automatically copy any selection I make to the clipboardby setting the following in my &lt;code&gt;~/.tmux.conf&lt;/code&gt;. While I have neovim open I needto be in insert mode for this to pick up.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/tmux.conf&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel &lt;span class="s2"&gt;&amp;quot;xclip -i -f -selection primary | xclip -i -selection clipboard&amp;quot;&lt;/span&gt;bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel &lt;span class="s2"&gt;&amp;quot;xclip -selection clipboard -i&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To get my yanks to go to the system clipboard in neovim, I just addedunnamedplus to my existing clipboard variable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/init.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;unnamedplus&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you need to copy something right from the terminal you can use xclipdirectly.  I do this semi-often to send someone a message in chat.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat file.txt &lt;span class="p"&gt;|&lt;/span&gt; clip -sel copy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I set up some alias's for doing this a bit more efficiently, but don't findmyself using them very often.  This helps me grab commands from history andcopy them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;hclip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;history | tail -n1 | cut -c 8- | xclip -sel clip&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;fclip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;history -n 1000 | fzf | cut -c 8- | xclip -sel clip&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;fclip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;history -n 1000 | fzf | xclip -sel clip&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/vim-cmd'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim remaps use cmd in place of :&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/tmux-pop-size'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Tmux Pop size&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/ubuntu-terminal-clipboard</guid><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Neovim Config for Git</title><link>https://waylonwalker.com/til/neovim-config-for-git</link><description>Creating a minimal config specifically for git commits has made running The other thing that is engrained into my muscle memory is  Here is the config that has </description><content:encoded>&lt;p&gt;Creating a minimal config specifically for git commits has made running&lt;code&gt;git commit&lt;/code&gt; much more pleasant.  It starts up Much faster, and has allof the parts of my config that I use while making a git commit.  The onething that I often use is autocomplete, for things coming from elsewherein the tmux session.  For this &lt;code&gt;cmpe-tmux&lt;/code&gt; specifically is superhelpful.&lt;/p&gt;&lt;p&gt;The other thing that is engrained into my muscle memory is &lt;code&gt;jj&lt;/code&gt;for escape.  For that I went agead and added my &lt;code&gt;settings&lt;/code&gt; and &lt;code&gt;keymap&lt;/code&gt;with no noticable performance hit.&lt;/p&gt;&lt;p&gt;Here is the config that has taken&lt;/p&gt;&lt;p&gt;~/.config/nvim/init-git.vim&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/settings.&lt;span class="k"&gt;vim&lt;/span&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/&lt;span class="nb"&gt;keymap&lt;/span&gt;.&lt;span class="k"&gt;vim&lt;/span&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/git&lt;span class="p"&gt;-&lt;/span&gt;plugins.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.cmp&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;~/.config/nvim/git-plugins.vim&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;call&lt;/span&gt; plug#begin&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;~/.local/share/nvim/plugged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; cmp&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/nvim-cmp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-nvim-lsp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-buffer&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-path&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-calc&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;andersevenrud/compe-tmux&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; { &lt;span class="s1"&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;cmp&amp;#39;&lt;/span&gt; }&lt;span class="k"&gt;call&lt;/span&gt; plug#&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;~/.gitconfig&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nvim&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nvim&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init-git&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/nix-install-java8'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;nix rescues modded minecraft night&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/modded-minecraft-in-docker'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Modded Minecraft in Docker&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/neovim-config-for-git</guid><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Vim remaps use cmd in place of :</title><link>https://waylonwalker.com/til/vim-cmd</link><description>Anyone just starting out their vim customization journey is bound to run into this error. I If you run  You still need to map your remaps with a : if you do not</description><content:encoded>&lt;p&gt;Anyone just starting out their vim customization journey is bound to run into this error.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;E5520: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Cmd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; mapping must &lt;span class="k"&gt;end&lt;/span&gt; with &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="i-did-not-get-it"&gt;I did not get it&lt;/h2&gt;&lt;p&gt;I'll admit, in hindsight it's very clear what this is trying to tell me, butfor whatever reason I still did not understand it and I just used a :everywhere.&lt;/p&gt;&lt;h2 id="from-the-docs"&gt;From the docs&lt;/h2&gt;&lt;p&gt;If you run &lt;code&gt;:h &amp;lt;cmd&amp;gt;&lt;/code&gt; you will see a lot of reasons why you should do it, fromperformance, to hygene, to ergonomics.  You will also see another clearstatement about how to use &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;                                                          E5520  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Cmd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; commands must terminate&lt;span class="p"&gt;,&lt;/span&gt; that &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; they must be followed by &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; the  {rhs} of the mapping definition.  Command&lt;span class="p"&gt;-&lt;/span&gt;line &lt;span class="k"&gt;mode&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; never entered.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="when-to-map-with-a"&gt;When to map with a :&lt;/h2&gt;&lt;p&gt;You still need to map your remaps with a : if you do not close it with a&lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt;.  This might be something like prefilling a command with a search term.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;f&lt;/span&gt; :s&lt;span class="sr"&gt;/search/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="otherwise-use"&gt;Otherwise use &lt;cmd&gt;&lt;/h2&gt;&lt;p&gt;If you can close the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; with a &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; the command do so.  Your map willautomatically be silent, more ergonomic, performant, and all that good stuff.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;f&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s&lt;span class="sr"&gt;/search/&lt;/span&gt;Search/&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/vim-markdown-links'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Automatically Generate a list of Markown Links in Vim&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/ubuntu-terminal-clipboard'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Tmux and Vim Clipboard for Ubuntu&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/vim-cmd</guid><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Open Files with Nvim Remote</title><link>https://waylonwalker.com/til/nvr-open-files</link><description>I recently found a really great  I have this added to my  In my workflow I open a tmux session for each project, so this First open neovim, but with the  If you</description><content:encoded>&lt;p&gt;I recently found a really great &lt;a href="https://github.com/mhinz/neovim-remote"&gt;plugin&lt;/a&gt; by&lt;a href="https://github.com/mhinz"&gt;mhinz&lt;/a&gt; to open files in neovim from adifferent tmux split, without touching neovim at all.&lt;/p&gt;&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/mhinz/neovim-remote"&gt;neovim-remote&lt;/a&gt; is not a neovimplugin at all, it's a python cli that you can install with pip.  Unlikethe repo suggests, I use pipx to install &lt;code&gt;nvr&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx install neovim-remote&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="how-i-use-it"&gt;How I use it&lt;/h2&gt;&lt;p&gt;I have this added to my &lt;code&gt;.envrc&lt;/code&gt; that is in every one of my projects.This will tie a neovim session to that directory, and all directoriesunder it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;NVIM_LISTEN_ADDRESS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/tmp/nvim-&lt;span class="k"&gt;$(&lt;/span&gt;basename &lt;span class="nv"&gt;$PWD&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;In my workflow I open a tmux session for each project, so thisessentially ties a neovim session to a tmux session.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="open-neovim"&gt;Open neovim&lt;/h3&gt;&lt;p&gt;First open neovim, but with the &lt;code&gt;nvr&lt;/code&gt; command.  This will open neovim,and look pretty much the same as always.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvr&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you try to run &lt;code&gt;nvr&lt;/code&gt; again in another shell nothing will happen asits already runnin under that address, but if you give it a filename itwill open the file in the first instance of neovim that you opened.&lt;/p&gt;&lt;p&gt;``` bashnvr readme.md````&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/mhinz/neovim-remote"&gt;GitHub&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/open-ssh-setup'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Setup SSH from chromebook to home desktop&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/nvim-telescope-hidden-files'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Finding hidden (dotfiles) using Telescope in neovim&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/nvr-open-files</guid><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Automatically Generate a list of Markown Links in Vim</title><link>https://waylonwalker.com/til/vim-markdown-links</link><description>Let Before you run someone Something that I have always appreciated form Searchng through the internet I was able to find an article from Here is my interpretat</description><content:encoded>&lt;p&gt;Let's make a vim command to automatically collect all the links in theseposts at the end of each article.  Regex confuses the heck out of me...I don't have my regex liscense, butregex can be so darn powerful especially in an editor.&lt;/p&gt;&lt;h2 id="step-one"&gt;Step one&lt;/h2&gt;&lt;p&gt;Before you run someone's regex from the internet that you don't fullyunderstand, check your &lt;code&gt;git status&lt;/code&gt; and make sure you are all clear withgit before you wreck something&lt;/p&gt;&lt;h2 id="inspiration"&gt;Inspiration&lt;/h2&gt;&lt;p&gt;Something that I have always appreciated form&lt;a href="https://nickjanetakis.com/"&gt;Nick Janetakis&lt;/a&gt; is his links section.  Ioften try to gather up the links at the end of my posts, but often endup not doing it or forgetting.&lt;/p&gt;&lt;h2 id="making-a-links-section"&gt;Making a Links section&lt;/h2&gt;&lt;p&gt;Searchng through the internet I was able to find an article fromVitaly Parnas called&lt;a href="https://vitalyparnas.com/guides/vim-ref-links/"&gt;vim ref links&lt;/a&gt; that didalmost exactly what I needed, except it was more complicated and madethem into ref liks.&lt;/p&gt;&lt;p&gt;Here is my interpretation of the code I took from Vitaly's post.  Itmakes a Links section like the one at the bottom of this post.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; MdLinks&lt;span class="p"&gt;()&lt;/span&gt;    $norm &lt;span class="k"&gt;o&lt;/span&gt;## Links    $norm &lt;span class="k"&gt;o&lt;/span&gt;    &lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="sr"&gt;/\[[^\]]\+\]([^)]\+)/&lt;/span&gt;&lt;span class="k"&gt;t&lt;/span&gt;$    &lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &amp;#39;^&lt;span class="p"&gt;,&lt;/span&gt;$s&lt;span class="sr"&gt;/\v[^\[]*(\[[^\]]+\])\(([^)]+)\)[^\[]*/&lt;/span&gt;* \&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;\&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;/&lt;span class="k"&gt;g&lt;/span&gt;    &lt;span class="k"&gt;nohl&lt;/span&gt;&lt;span class="k"&gt;endfunction&lt;/span&gt;command&lt;span class="p"&gt;!&lt;/span&gt; MdLinks &lt;span class="k"&gt;call&lt;/span&gt; MdLinks&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So far it is working for me and saving me a few seconds off each post Imake.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://nickjanetakis.com/"&gt;Nick Janetakis&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://vitalyparnas.com/guides/vim-ref-links/"&gt;vim ref links&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/vim-plugged-snapshot'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;vim plugged snapshot&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/vim-cmd'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim remaps use cmd in place of :&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/vim-markdown-links</guid><pubDate>Sat, 19 Mar 2022 00:00:00 +0000</pubDate></item><item><title>vim plugged snapshot</title><link>https://waylonwalker.com/til/vim-plugged-snapshot</link><description>A few of my friends and I all just borked our neovim configs during a plug https://twitter.com/pypeaday/status/1524882893914398732 Lucky for me I did it on a ho</description><content:encoded>&lt;p&gt;A few of my friends and I all just borked our neovim configs during a plugupdate, and because none of us were using &lt;code&gt;:PlugSnapshot&lt;/code&gt; it was painful torecover from.&lt;/p&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Upgraded all &lt;a href="https://twitter.com/hashtag/neovim?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#neovim&lt;/a&gt; plugins at once like an idiot and now everything&amp;#39;s all borked.... nice excuse to clean up my config I guess?&lt;/p&gt;&amp;mdash; PypeADay🐍 (@pypeaday) &lt;a href="https://twitter.com/pypeaday/status/1524882893914398732?ref_src=twsrc%5Etfw"&gt;May 12, 2022&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;blockquote&gt;&lt;p&gt;Lucky for me I did it on a home machine that I only occasionally edit from,so I could still take the snapshot from a working machine before taking theplunge into fixing everying.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="why-snapshot"&gt;Why snapshot&lt;/h2&gt;&lt;p&gt;Snapshotting ensures that you install the same git sha on every single plugin.This way when you have multiple machines running your same vim config, they areall on the same sha of each plugin, and you dont end up with weird thingshappening on one machine.  And then you get to decide when you are ready toupdate, rather than when it breaks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;same config everywhere&lt;/li&gt;&lt;li&gt;you control the update&lt;/li&gt;&lt;li&gt;in case of a borked update you have a good working place to rever to&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="lets-snapshot"&gt;Let's snapshot&lt;/h2&gt;&lt;p&gt;Running &lt;code&gt;:PlugSnapshot&lt;/code&gt; will generate the following content in a buffer thatyou can save.  I chose to save mine in &lt;code&gt;~/.config/nvim/snapshot.vim&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; Generated by vim-plug&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; Fri 13 May 2022 08:01:39 PM CDT&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; :source this file in vim to restore the snapshot&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; or execute: vim -S snapshot.vim&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;Telegraph.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;92e472f4e83acd60eb3766168e66d02718bfefe0&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8ed3e3d07ea3e6d62e3e533e69f96a0ff148cd5d&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;bufutils.vim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4634feb1312fd73fab66cfaa860e7af3abde935b&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;cmp-buffer&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d66c4c2d376e5be99db68d2362cd94d250987525&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;cmp-calc&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;970fd5f97b4bd363260365b217f694dd6a1182cb&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;cmp-nvim-lsp&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ebdfc204afb87f15ce3d3d3f5df0b8181443b5ba&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;cmp-path&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;466b6b8270f7ba89abd59f402c73f63c7331ff6e&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;cmp-rg&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;fd92d70ff36b30924401b0cf7d4ce7344c8235f7&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;cmp-vsnip&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0abfa1860f5e095a07c477da940cfcb0d273b700&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;colorbuddy.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cdb5b0654d3cafe61d2a845e15b2b4b0e78e752a&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;compe-tmux&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3c16f7e73abee43b3ea3e919e8b34c24427d9530&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;coverage-highlight.vim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;864e03679ea4168661501246147893cc82020917&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;diffurcate.vim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b804675072220ff7c7ebcd24a028aa4aa35f09cc&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;friendly-snippets&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5fd8b920a3497dec9a3ef939595186b362d041b4&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;fzf&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a91a67668e0830a8cf9a792c4949e03b4189f097&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;fzf.vim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d5f1f8641b24c0fd5b10a299824362a2a1b20ae0&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;gitsigns.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ead0d48df801431b990d6b91fa210f7efa30ac38&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;gruvbox-flat.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;756dbdd3dfd3ed84acb2f9649724df19ae41f904&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;harpoon&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;28762aa04d6395538e26e1efff5213b26720e68f&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;impatient.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2337df7d778e17a58d8709f651653b9039946d8d&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;instant.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c02d72267b12130609b7ad39b76cf7f4a3bc9554&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;lsp_extensions.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4011f4aec61ba59c734f5dbf52e91f258b99d985&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;lsp_signature.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a351509512687293fd659ba4ee7e34412c3a8f70&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;lspsaga.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cb0e35d2e594ff7a9c408d2e382945d56336c040&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;lualine.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;18a07f790ed7ed1f11d1b130c02782e9dfd8dd7d&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-cmp&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;433af3dffce64cbd3f99bdac9734768a6cc41951&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-compe&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d186d739c54823e0b010feb205c6f97792322c08&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-dap&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d6d8317ce9e096029150bc5844916347a9af6f45&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-dap-python&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4c7ea25f8ff6de6fa00bf5625d2e76753cced70f&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-lspconfig&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ad9903c66bac88f344890acb6532f63f1cd4dac3&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-lspinstall&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;79ec2425d6b39cdcb69d379f3e56847f49be73eb&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-lsputils&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ae1a4a62449863ad82c70713d5b6108f3a07917c&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-spectre&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;345e5dd57773e2b4b425a2515c831108b9808a0f&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-tree.lua&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ce463a53ae269544697c3dedd3d5beae05937405&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-treesitter&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3c50297eca950b4b1a7c07b28e586b0576c0a796&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;nvim-web-devicons&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4febe73506268a02ff15a240abcd7bf3eb9234da&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;onebuddy&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;7e16006e7dde15e3cb72889f736c49409db6ff42&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;onedark.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e520a0c81a5a1997ecffd846ccd9c6e63b7859c6&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;playground&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;13e2d2d63ce7bc5d875e8bdf89cb070bc8cc7a00&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;plenary.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;9069d14a120cadb4f6825f76821533f2babcab92&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;popfix&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ea262861ce3905b90c2c203b74a7be2539f1aba4&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;popup.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b7404d35d5d3548a82149238289fa71f7f6de4ac&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;refactoring.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;94eaa199ad892f26d2c8594dbbc5656314cf5bdb&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;stylua-nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8bd7fa127367178dddb9ee06fdce1d7c622d2feb&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;targets.vim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8d6ff2984cdfaebe5b7a6eee8f226a6dd1226f2d&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;telescope-dap.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b4134fff5cbaf3b876e6011212ed60646e56f060&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;telescope.nvim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8b02088743c07c2f82aec2772fbd2b3774195448&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;termopen.vim&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3194a991a18a9be2fd9fcf8c4c55fe990c04b2bd&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;undotree&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;08e259be24d4476c1ee745dc735eefd44f90efdc&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-be-good&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;bc499a06c14c729b22a6cc7e730a9fbc44d4e737&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-commentary&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3654775824337f466109f00eaf6759760f65be34&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-dispatch&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;00e77d90452e3c710014b26dc61ea919bc895e92&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-doge&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;88d8dfacc3a5f3dfce82ef5221e5e6943e627d85&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-floaterm&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6244d1739aad6682c6c1d5db18c846c342af6e3e&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-fugitive&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b5bbd0d181ebc3cea5c42bdaed13141850432ba1&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-indent-object&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5c5b24c959478929b54a9e831a8e2e651a465965&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-ipython-cell&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;f0548d9a8d5e31d5c7f73e8729b55e8eb402852f&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-log-highlighting&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1037e26f3120e6a6a2c0c33b14a84336dee2a78f&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-quicklink&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;021167741588555501594e1fc31f130b16acefa0&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-repeat&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;24afe922e6a05891756ecf331f39a1f6743d3d5a&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-signify&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;69498f6d49f3eeac06870012416dd9bf867b84f3&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-slime&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;0ea9b35882155996171fd15a5227e673ce2d2c60&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-sneak&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;94c2de47ab301d476a2baec9ffda07367046bec9&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-surround&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;81fc0ec460dd8b25a76346e09aecdbca2677f1a7&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-test&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2240d7a4b868cb594b7d83544e1b6db4df806e5e&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-tmux-runner&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;54767911fd5e6e2d8e493847149e315ac2e6531a&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-ultest&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a99eb0bdf7d901d538b5dd724e2ab3a958c1799c&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-visualstar&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a18cd0e7a03311ac709595c1d261ed44b45c9098&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;silent&lt;/span&gt;&lt;span class="p"&gt;!&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="k"&gt;g&lt;/span&gt;:plugs[&lt;span class="s1"&gt;&amp;#39;vim-vsnip&amp;#39;&lt;/span&gt;].commit &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8f199ef690ed26dcbb8973d9a6760d1332449ac9&amp;#39;&lt;/span&gt;PlugUpdate&lt;span class="p"&gt;!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;NOTE! the &lt;code&gt;PlugUpdate!&lt;/code&gt; at the end.  I did not catch this at first, if youare like me and automatically source &lt;code&gt;*.vim&lt;/code&gt; files on save, this willimmediately run the update when you save it.  If you just took the snapshotthough I don't think it will actually do anything.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="lets-update"&gt;Let's Update&lt;/h2&gt;&lt;p&gt;Now without the snapshot sourced, I will not have any of my plugins pinned.When I run &lt;code&gt;:PlugUpdate&lt;/code&gt; it will update all of my plugins to the latestversions.  Then I can &lt;code&gt;:PlugSnapshot&lt;/code&gt; again, and this will kick out an updatedlist of sha's.  I will yank this file &lt;code&gt;yyG&lt;/code&gt; and paste it into my snapshot.vimfile &lt;code&gt;vGp&lt;/code&gt;.&lt;/p&gt;&lt;h2 id="look-at-these-updates"&gt;Look at these updates&lt;/h2&gt;&lt;p&gt;We can see these updates with a little &lt;code&gt;:G diff %&lt;/code&gt; on the file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;diff --git a/nvim/.config/nvim/snapshot.vim b/nvim/.config/nvim/snapshot.vim&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gh"&gt;index 88db2b0..837c8e4 100644&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;--- a/nvim/.config/nvim/snapshot.vim&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+++ b/nvim/.config/nvim/snapshot.vim&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gu"&gt;@@ -1,14 +1,14 @@&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;quot; Generated by vim-plug&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-&amp;quot; Fri 13 May 2022 08:01:39 PM CDT&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+&amp;quot; Fri 13 May 2022 08:22:17 PM CDT&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;quot; :source this file in vim to restore the snapshot&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;quot; or execute: vim -S snapshot.vim&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;Telegraph.nvim&amp;#39;].commit = &amp;#39;92e472f4e83acd60eb3766168e66d02718bfefe0&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;black&amp;#39;].commit = &amp;#39;8ed3e3d07ea3e6d62e3e533e69f96a0ff148cd5d&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;black&amp;#39;].commit = &amp;#39;7f033136ac5e0e5bf6cf322dd60b4a92050eedc4&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;bufutils.vim&amp;#39;].commit = &amp;#39;4634feb1312fd73fab66cfaa860e7af3abde935b&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;cmp-buffer&amp;#39;].commit = &amp;#39;d66c4c2d376e5be99db68d2362cd94d250987525&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;cmp-calc&amp;#39;].commit = &amp;#39;970fd5f97b4bd363260365b217f694dd6a1182cb&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;cmp-nvim-lsp&amp;#39;].commit = &amp;#39;ebdfc204afb87f15ce3d3d3f5df0b8181443b5ba&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;cmp-buffer&amp;#39;].commit = &amp;#39;12463cfcd9b14052f9effccbf1d84caa7a2d57f0&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;cmp-calc&amp;#39;].commit = &amp;#39;f7efc20768603bd9f9ae0ed073b1c129f63eb312&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;cmp-nvim-lsp&amp;#39;].commit = &amp;#39;e6b5feb2e6560b61f31c756fb9231a0d7b10c73d&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;cmp-path&amp;#39;].commit = &amp;#39;466b6b8270f7ba89abd59f402c73f63c7331ff6e&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;cmp-rg&amp;#39;].commit = &amp;#39;fd92d70ff36b30924401b0cf7d4ce7344c8235f7&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;cmp-vsnip&amp;#39;].commit = &amp;#39;0abfa1860f5e095a07c477da940cfcb0d273b700&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gu"&gt;@@ -16,60 +16,60 @@ silent! let g:plugs[&amp;#39;colorbuddy.nvim&amp;#39;].commit = &amp;#39;cdb5b0654d3cafe61d2a845e15b2b4b&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;compe-tmux&amp;#39;].commit = &amp;#39;3c16f7e73abee43b3ea3e919e8b34c24427d9530&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;coverage-highlight.vim&amp;#39;].commit = &amp;#39;864e03679ea4168661501246147893cc82020917&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;diffurcate.vim&amp;#39;].commit = &amp;#39;b804675072220ff7c7ebcd24a028aa4aa35f09cc&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;friendly-snippets&amp;#39;].commit = &amp;#39;5fd8b920a3497dec9a3ef939595186b362d041b4&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;fzf&amp;#39;].commit = &amp;#39;a91a67668e0830a8cf9a792c4949e03b4189f097&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;friendly-snippets&amp;#39;].commit = &amp;#39;627dea2ff1ee8d8a7e6ad365acb3e335c8b25574&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;fzf&amp;#39;].commit = &amp;#39;6dcf5c3d7d6c321b17e6a5673f1533d6e8350462&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;fzf.vim&amp;#39;].commit = &amp;#39;d5f1f8641b24c0fd5b10a299824362a2a1b20ae0&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;gitsigns.nvim&amp;#39;].commit = &amp;#39;ead0d48df801431b990d6b91fa210f7efa30ac38&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;gitsigns.nvim&amp;#39;].commit = &amp;#39;ffd06e36f6067935d8cb9793905dd2e84e291310&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;gruvbox-flat.nvim&amp;#39;].commit = &amp;#39;756dbdd3dfd3ed84acb2f9649724df19ae41f904&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;harpoon&amp;#39;].commit = &amp;#39;28762aa04d6395538e26e1efff5213b26720e68f&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;harpoon&amp;#39;].commit = &amp;#39;d3d3d22b6207f46f8ca64946f4d781e975aec0fc&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;impatient.nvim&amp;#39;].commit = &amp;#39;2337df7d778e17a58d8709f651653b9039946d8d&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;instant.nvim&amp;#39;].commit = &amp;#39;c02d72267b12130609b7ad39b76cf7f4a3bc9554&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;lsp_extensions.nvim&amp;#39;].commit = &amp;#39;4011f4aec61ba59c734f5dbf52e91f258b99d985&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;lsp_signature.nvim&amp;#39;].commit = &amp;#39;a351509512687293fd659ba4ee7e34412c3a8f70&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;lsp_signature.nvim&amp;#39;].commit = &amp;#39;db324e2ada5bb795d0016ec0ef2b4ae7f11d8904&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;lspsaga.nvim&amp;#39;].commit = &amp;#39;cb0e35d2e594ff7a9c408d2e382945d56336c040&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;lualine.nvim&amp;#39;].commit = &amp;#39;18a07f790ed7ed1f11d1b130c02782e9dfd8dd7d&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-cmp&amp;#39;].commit = &amp;#39;433af3dffce64cbd3f99bdac9734768a6cc41951&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;lualine.nvim&amp;#39;].commit = &amp;#39;a4e4517ac32441dd92ba869944741f0b5f468531&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-cmp&amp;#39;].commit = &amp;#39;9a0c639ac2324e6e9ecc54dc22b1d32bb6c42ab9&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;nvim-compe&amp;#39;].commit = &amp;#39;d186d739c54823e0b010feb205c6f97792322c08&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-dap&amp;#39;].commit = &amp;#39;d6d8317ce9e096029150bc5844916347a9af6f45&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-dap-python&amp;#39;].commit = &amp;#39;4c7ea25f8ff6de6fa00bf5625d2e76753cced70f&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-lspconfig&amp;#39;].commit = &amp;#39;ad9903c66bac88f344890acb6532f63f1cd4dac3&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-dap&amp;#39;].commit = &amp;#39;2249fcfd09cdc27c08e9d2f3be5268ba81db3378&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-dap-python&amp;#39;].commit = &amp;#39;d96bcbf3803283456c900cf25ab0995e8d2f00c0&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-lspconfig&amp;#39;].commit = &amp;#39;9ff2a06cebd4c8c3af5259d713959ab310125bec&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;nvim-lspinstall&amp;#39;].commit = &amp;#39;79ec2425d6b39cdcb69d379f3e56847f49be73eb&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;nvim-lsputils&amp;#39;].commit = &amp;#39;ae1a4a62449863ad82c70713d5b6108f3a07917c&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;nvim-spectre&amp;#39;].commit = &amp;#39;345e5dd57773e2b4b425a2515c831108b9808a0f&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-tree.lua&amp;#39;].commit = &amp;#39;ce463a53ae269544697c3dedd3d5beae05937405&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-treesitter&amp;#39;].commit = &amp;#39;3c50297eca950b4b1a7c07b28e586b0576c0a796&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;nvim-web-devicons&amp;#39;].commit = &amp;#39;4febe73506268a02ff15a240abcd7bf3eb9234da&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-tree.lua&amp;#39;].commit = &amp;#39;82ec79aac5557c05728d88195fb0d008cacbf565&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-treesitter&amp;#39;].commit = &amp;#39;f1373051e554cc4642cda719c8023e4e8508eb2d&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;nvim-web-devicons&amp;#39;].commit = &amp;#39;bdd43421437f2ef037e0dafeaaaa62b31d35ef2f&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;onebuddy&amp;#39;].commit = &amp;#39;7e16006e7dde15e3cb72889f736c49409db6ff42&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;onedark.nvim&amp;#39;].commit = &amp;#39;e520a0c81a5a1997ecffd846ccd9c6e63b7859c6&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;playground&amp;#39;].commit = &amp;#39;13e2d2d63ce7bc5d875e8bdf89cb070bc8cc7a00&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;plenary.nvim&amp;#39;].commit = &amp;#39;9069d14a120cadb4f6825f76821533f2babcab92&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;onedark.nvim&amp;#39;].commit = &amp;#39;08cde8acf181b3278dafb9c8284726104a11cc0f&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;playground&amp;#39;].commit = &amp;#39;71b00a3c665298e5155ad64a9020135808d4e3e8&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;plenary.nvim&amp;#39;].commit = &amp;#39;0a907364b5cd6e3438e230df7add8b9bb5ef6fd3&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;popfix&amp;#39;].commit = &amp;#39;ea262861ce3905b90c2c203b74a7be2539f1aba4&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;popup.nvim&amp;#39;].commit = &amp;#39;b7404d35d5d3548a82149238289fa71f7f6de4ac&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;refactoring.nvim&amp;#39;].commit = &amp;#39;94eaa199ad892f26d2c8594dbbc5656314cf5bdb&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;stylua-nvim&amp;#39;].commit = &amp;#39;8bd7fa127367178dddb9ee06fdce1d7c622d2feb&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;refactoring.nvim&amp;#39;].commit = &amp;#39;33ac6f3bcfe97447037ded20291d40de34d8912c&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;stylua-nvim&amp;#39;].commit = &amp;#39;ce59a353f02938cba3e0285e662fcd3901cd270f&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;targets.vim&amp;#39;].commit = &amp;#39;8d6ff2984cdfaebe5b7a6eee8f226a6dd1226f2d&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;telescope-dap.nvim&amp;#39;].commit = &amp;#39;b4134fff5cbaf3b876e6011212ed60646e56f060&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;telescope.nvim&amp;#39;].commit = &amp;#39;8b02088743c07c2f82aec2772fbd2b3774195448&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;telescope.nvim&amp;#39;].commit = &amp;#39;39b12d84e86f5054e2ed98829b367598ae53ab41&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;termopen.vim&amp;#39;].commit = &amp;#39;3194a991a18a9be2fd9fcf8c4c55fe990c04b2bd&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;undotree&amp;#39;].commit = &amp;#39;08e259be24d4476c1ee745dc735eefd44f90efdc&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-be-good&amp;#39;].commit = &amp;#39;bc499a06c14c729b22a6cc7e730a9fbc44d4e737&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-commentary&amp;#39;].commit = &amp;#39;3654775824337f466109f00eaf6759760f65be34&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-dispatch&amp;#39;].commit = &amp;#39;00e77d90452e3c710014b26dc61ea919bc895e92&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;vim-doge&amp;#39;].commit = &amp;#39;88d8dfacc3a5f3dfce82ef5221e5e6943e627d85&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;vim-floaterm&amp;#39;].commit = &amp;#39;6244d1739aad6682c6c1d5db18c846c342af6e3e&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;vim-fugitive&amp;#39;].commit = &amp;#39;b5bbd0d181ebc3cea5c42bdaed13141850432ba1&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;vim-doge&amp;#39;].commit = &amp;#39;d5b08d01f64396557d9912b3830717d45671764b&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;vim-floaterm&amp;#39;].commit = &amp;#39;ab7876f86c05c1935eb23a193f4f276132902ac1&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;vim-fugitive&amp;#39;].commit = &amp;#39;a8139d37b242c5bc5ceeddc4fcd7dddf2b2c2650&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-indent-object&amp;#39;].commit = &amp;#39;5c5b24c959478929b54a9e831a8e2e651a465965&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-ipython-cell&amp;#39;].commit = &amp;#39;f0548d9a8d5e31d5c7f73e8729b55e8eb402852f&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-log-highlighting&amp;#39;].commit = &amp;#39;1037e26f3120e6a6a2c0c33b14a84336dee2a78f&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-quicklink&amp;#39;].commit = &amp;#39;021167741588555501594e1fc31f130b16acefa0&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-repeat&amp;#39;].commit = &amp;#39;24afe922e6a05891756ecf331f39a1f6743d3d5a&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-signify&amp;#39;].commit = &amp;#39;69498f6d49f3eeac06870012416dd9bf867b84f3&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;vim-slime&amp;#39;].commit = &amp;#39;0ea9b35882155996171fd15a5227e673ce2d2c60&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;vim-slime&amp;#39;].commit = &amp;#39;6e4b81303968f37346925d6907b96ef07788cc82&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-sneak&amp;#39;].commit = &amp;#39;94c2de47ab301d476a2baec9ffda07367046bec9&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;vim-surround&amp;#39;].commit = &amp;#39;81fc0ec460dd8b25a76346e09aecdbca2677f1a7&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;vim-surround&amp;#39;].commit = &amp;#39;bf3480dc9ae7bea34c78fbba4c65b4548b5b1fea&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-test&amp;#39;].commit = &amp;#39;2240d7a4b868cb594b7d83544e1b6db4df806e5e&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-tmux-runner&amp;#39;].commit = &amp;#39;54767911fd5e6e2d8e493847149e315ac2e6531a&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gd"&gt;-silent! let g:plugs[&amp;#39;vim-ultest&amp;#39;].commit = &amp;#39;a99eb0bdf7d901d538b5dd724e2ab3a958c1799c&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="gi"&gt;+silent! let g:plugs[&amp;#39;vim-ultest&amp;#39;].commit = &amp;#39;6978fd32e3ca2c1c5591884eea0d57a7ee43d212&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-visualstar&amp;#39;].commit = &amp;#39;a18cd0e7a03311ac709595c1d261ed44b45c9098&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;silent! let g:plugs[&amp;#39;vim-vsnip&amp;#39;].commit = &amp;#39;8f199ef690ed26dcbb8973d9a6760d1332449ac9&amp;#39;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="commits"&gt;Commits&lt;/h2&gt;&lt;p&gt;Now I can look through all the versions of my &lt;code&gt;snapshot.vim&lt;/code&gt; by opening it,running &lt;code&gt;:0Gclog&lt;/code&gt; and navigating the quickfix list with &lt;code&gt;:cnext&lt;/code&gt; and &lt;code&gt;:cprev&lt;/code&gt;.If I want to install one of the old versions while its open in a buffer, all Ineed to do is run &lt;code&gt;:source %&lt;/code&gt;.&lt;/p&gt;&lt;h2 id="log"&gt;Log&lt;/h2&gt;&lt;p&gt;Now the log of my &lt;code&gt;snapshots.vim&lt;/code&gt; looks like this.  I saved the workingversion, and successfully updated to the latest versions of all plugins, with asave point I can revert back to.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;commit 20e901196b0d9633a42176f1fe1757e45f709fd3Author: Waylon S. Walker &amp;lt;waylon@waylonwalker.com&amp;gt;Date:   Fri May 13 20:37:03 2022 -0500    plugupdatecommit f9d76368697b4c4427c0fa8ccd5e2449b6e5a9ffAuthor: Waylon S. Walker &amp;lt;waylon@waylonwalker.com&amp;gt;Date:   Fri May 13 20:16:11 2022 -0500    commit my plugin snapshot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/walrus-comprehension'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Python Walrus Inside List Comprehension&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/vim-markdown-links'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Automatically Generate a list of Markown Links in Vim&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/vim-plugged-snapshot</guid><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate></item></channel></rss>