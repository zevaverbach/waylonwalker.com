<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Waylon Walkers Digital Garden - linux posts</title><link>https://waylonwalker.com/linux-rss.xml</link><description>Waylon Walkers posts - linux posts</description><atom:link href="https://waylonwalker.com/linux-rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>8bitcc.png</url><title>Waylon Walkers Digital Garden - linux posts</title><link>https://waylonwalker.com/linux-rss.xml</link></image><language>en</language><lastBuildDate>Fri, 10 Jun 2022 02:40:00 +0000</lastBuildDate><item><title>üìù Bash Notes</title><link>https://waylonwalker.com/bash</link><description>Waylon Walker's Bash Notes</description><content:encoded>&lt;p&gt;Bash is super powerful.&lt;/p&gt;&lt;h2 id="file-system-full"&gt;File System Full&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Show Remaining Space on Drives&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;show largest files in current directory&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;du . -h --max-depth&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Move files then symlink them&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir /mnt/mounted_drivemv ~/bigdir /mnt/mounted_driveln -s /mnt/mounted_drive/bigdir ~/bigdir&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="fuzzy-one-liners"&gt;Fuzzy One Liners&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; activate &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;print $&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;edit in vim&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vf&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; xargs -r -I % &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; % &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;cat a file&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vf&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; xargs -r -I % &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; % &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;bash execute&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bf&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; bash &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;fzf&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;git add&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gadd&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; git status -s &lt;span class="p"&gt;|&lt;/span&gt; fzf -m &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs git add &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status -s&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;git reset&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;greset&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; git status -s &lt;span class="p"&gt;|&lt;/span&gt;  fzf -m &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;xargs git reset &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status -s&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kill a process&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fkill&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print($2)}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="finding-things"&gt;Finding things&lt;/h2&gt;&lt;h3 id="files"&gt;Files&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;fd-find&lt;/a&gt; is amazing for finding files, it even respects your &lt;code&gt;.gitignore&lt;/code&gt; file üò≤.  Install with &lt;code&gt;apt install fd-find&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fd md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag -g python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find . -n &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;h3 id="content"&gt;Content&lt;/h3&gt;&lt;p&gt;** show matching text **&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep -iR Python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;p&gt;** show file names only **&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag -l python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep -iRl python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;h3 id="recursively-replace-text"&gt;Recursively Replace text&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;agr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;ag -l &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Extending&lt;/strong&gt; &lt;code&gt;**agr**&lt;/code&gt; &lt;strong&gt;or&lt;/strong&gt; &lt;code&gt;**grepr**&lt;/code&gt;&lt;/p&gt;&lt;p&gt;There are so many options inside of &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;ag&lt;/code&gt;, and &lt;code&gt;sed&lt;/code&gt; that you could many an enormous amount of these if you really wanted to, but I like to keep it simple.  These cover 90% of my usage.  If I wanted to change something in the second half I would just paste in this command and edit it. More often though I want to limit the input, say only replace word1 to word2 inside of markdown files.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Limited Scope&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fd md &lt;span class="p"&gt;|&lt;/span&gt; xargs argr python python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find . -n &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs grepr python python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/refactor-in-cli/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/refactor-in-cli-og_250x140.png" alt="article cover for  Large Refactor At The Command Line"/&gt;          &lt;p&gt;&lt;strong&gt; Large Refactor At The Command Line&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I use these replace commands heavily when doing large refactorings.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="conditionally-configure"&gt;conditionally configure&lt;/h3&gt;&lt;p&gt;I like this one when there is not a good cli into config files and I need to replace something like a true to false if the value is in the config and append to the config if its not.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="c1"&gt;# replaces first string with second string inside file from third argument&lt;/span&gt;    &lt;span class="c1"&gt;# example:&lt;/span&gt;    &lt;span class="c1"&gt;#   grepr &amp;quot;allow_conda_downgrades:.*&amp;quot; &amp;quot;allow_conda_downgrades: true&amp;quot; ~/.condarc&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep -xq &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt;    &lt;span class="k"&gt;then&lt;/span&gt;        sed -i &lt;span class="s2"&gt;&amp;quot;s|&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;|g&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$3&lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="watch-the-time"&gt;Watch the time&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;watch -n &lt;span class="m"&gt;1&lt;/span&gt; date&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;with figlet&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;watch -n &lt;span class="m"&gt;1&lt;/span&gt; bash -c &lt;span class="s2"&gt;&amp;quot;date | figlet&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="watch-a-function"&gt;watch a function&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;run &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;dateaws s3 sync &lt;span class="nv"&gt;$BUCKET&lt;/span&gt; .&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; -f runwatch -n &lt;span class="m"&gt;10&lt;/span&gt; run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="if-conda-environment-does-not-exist-create-it"&gt;if conda environment does not exist create it&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; grep my_env &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_env environment is installed&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; conda create -n my_env &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8 -y&lt;span class="nb"&gt;source&lt;/span&gt; activate my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id="rename-multiple-files"&gt;Rename multiple files&lt;/h1&gt;&lt;p&gt;more info from &lt;a href="https://linuxize.com/post/how-to-rename-files-in-linux/"&gt;linuxize&lt;/a&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; f &lt;span class="k"&gt;in&lt;/span&gt; *.png&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;   mv &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; prefix-&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="using-the-rename-command"&gt;using the rename command&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install rename&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rename &lt;span class="s2"&gt;&amp;quot;s/.GIF/.gif/&amp;quot;&lt;/span&gt; *.GIF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="convert-all-files-in-a-directory-to-unix"&gt;convert all files in a directory to unix&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dos2unix **/*&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="recursively-remove-all-whitespace-from-py-files"&gt;recursively remove all whitespace from .py files&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find **/*.py -type f -exec sed -i &lt;span class="s1"&gt;&amp;#39;s/ *$//&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{}&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="recursively-autopep8"&gt;recursively autopep8&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;autopep8&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; \&lt;span class="p"&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="make-bash-script-a-runnable-command"&gt;make bash script a runnable command&lt;/h2&gt;&lt;p&gt;include a shebang&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#! /bin/bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;chmod&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod +x /usr/local/bin/my_script&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;accept positional input&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#! /bin/bash&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; input&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-pyp"&gt;Using pyp&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx install pyp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="replacement-for-cut"&gt;replacement for cut&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ python -m http.server &lt;span class="m"&gt;5000&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;8574&lt;/span&gt;‚ú¶ ‚ùØ Serving HTTP on &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 port &lt;span class="m"&gt;5000&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;http://0.0.0.0:5000/&lt;span class="o"&gt;)&lt;/span&gt; ...‚ú¶ ‚ùØ ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;python -m http.server&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep &lt;span class="p"&gt;|&lt;/span&gt; pyp &lt;span class="s1"&gt;&amp;#39;line.split()[1]&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs &lt;span class="nb"&gt;kill&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;  + terminated  python -m http.server &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="replacement-for-wc"&gt;replacement for wc&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; pyp &lt;span class="s1"&gt;&amp;#39;len(lines) - 3 # account for header and base&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="print-contents-of-shell-function"&gt;print contents of shell function&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;declare&lt;/span&gt; -f &amp;lt;&lt;span class="k"&gt;function&lt;/span&gt;-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="batch-rename-files"&gt;batch rename files&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; f &lt;span class="k"&gt;in&lt;/span&gt; *.jpeg&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;    mv -- &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;%.jpeg&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="convert-markdown-files-to-revealjs"&gt;convert markdown files to reveal.js&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides"&gt;https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides&lt;/a&gt;install pandoc&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt install pandoc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;setup&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://github.com/hakimel/reveal.js/archive/master.tar.gztar -xzvf master.tar.gzmv reveal.js-master reveal.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;convert&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc -t revealjs -s -o myslides.html myslides.md -V revealjs-url&lt;span class="o"&gt;=&lt;/span&gt;https://unpkg.com/reveal.js@3.9.2/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="render-markdown-at-the-command-line"&gt;Render Markdown at the command line&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/charmbracelet/glow"&gt;Glow&lt;/a&gt; is a terminal markdown renderer written in go.  There iis a prebuilt binary that can simply be unzipped and executed to render markdow.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://github.com/charmbracelet/glow/releases/download/v0.2.0/glow_0.2.0_linux_x86_64.tar.gztar -xzf glow_0.2.0_linux_x86_64.tar.gzchmod +x glowsudo mv glow /usr/binglow &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="autocomplete-for-click-applications"&gt;Autocomplete for click applications&lt;/h2&gt;&lt;p&gt;see the &lt;a href="https://click.palletsprojects.com/en/7.x/bashcomplete/"&gt;docs&lt;/a&gt; for more details&lt;/p&gt;&lt;h2 id="autocomplete-for-non-click-python-clis"&gt;Autocomplete for non click python cli's&lt;/h2&gt;&lt;p&gt;shtab &lt;a href="https://github.com/iterative/shtab" title="https://github.com/iterative/shtab"&gt;https://github.com/iterative/shtab&lt;/a&gt;&lt;/p&gt;&lt;h2 id="ensure-functions-reset-context"&gt;Ensure functions reset context&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;project_log&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="nv"&gt;_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;   _project_log&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;      &lt;span class="nb"&gt;cd&lt;/span&gt; ~/projects/project      git log   &lt;span class="o"&gt;}&lt;/span&gt;   _project_log &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="finding-files"&gt;Finding Files&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --files . &lt;span class="p"&gt;|&lt;/span&gt; grep bashrg --files . &lt;span class="p"&gt;|&lt;/span&gt; rg bashrg --files . &lt;span class="p"&gt;|&lt;/span&gt; ag bashrg --files . &lt;span class="p"&gt;|&lt;/span&gt; fzfrg -e &lt;span class="s1"&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; -g &lt;span class="s1"&gt;&amp;#39;*.md&amp;#39;&lt;/span&gt;rg -e &lt;span class="s1"&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; -g &lt;span class="s1"&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt;rg --files-with-matchesrg --files-without-match&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="mu-repo"&gt;mu-repo&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# installation&lt;/span&gt;pip install mu-repo&lt;span class="c1"&gt;## register repos&lt;/span&gt;mu register --recursivemu list&lt;span class="c1"&gt;# run git commands&lt;/span&gt;mu status --shortmu diff -U0 --color &lt;span class="p"&gt;|&lt;/span&gt; bat&lt;span class="c1"&gt;# run shell commands&lt;/span&gt;mu sh &lt;span class="k"&gt;$(&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;KEDRO_GID=0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/KEDRO_GID=0/KEDRO_GID=5/g&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/mu-repo/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/mu-repo-og_250x140.png" alt="article cover for  Maintianing multiple git repos with mu-repo"/&gt;          &lt;p&gt;&lt;strong&gt; Maintianing multiple git repos with mu-repo&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;See the full post for mu-repo for more&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="mu-unregister-all"&gt;mu unregister all&lt;/h2&gt;&lt;p&gt;I ran into some issues with mu unregister * before, but this seems to work everywhere.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mu list &lt;span class="p"&gt;|&lt;/span&gt; tail -n +3 &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt; mu unregister &lt;span class="o"&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="mu-register-all-repos-that-have-an-rg-match"&gt;mu register all repos that have an rg match&lt;/h2&gt;&lt;p&gt;Add all repos that have a versionspec of 3.7 in them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --hidden&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;versionSpec:.*.3.7&amp;#39;&lt;/span&gt; -l &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt; mu register &lt;span class="o"&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="xrandr"&gt;xrandr&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xrandr -s 1920x1080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/bind-dynamic-lambdas'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;TIL: Bind arguments to dynamically generated lambdas in python&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/autoreload-ipython'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Autoreload in Ipython&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/bash</guid><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate></item><item><title>Supercharge Zsh Startup</title><link>https://waylonwalker.com/supercharge-zsh-startup</link><description>I have been using oh-my-zsh successfully for about 2 years now. But lately my I believe the real issue is io speed on wsl.  I have some remote servers with Quic</description><content:encoded>&lt;p&gt;I have been using oh-my-zsh successfully for about 2 years now. But lately mystartup time has been really bothersome. It has grown to the point where it wastaking about &lt;strong&gt;5.5s&lt;/strong&gt; to startup a shell!  This is ok if I am going to spendsome time in here for awhile and do some work that benefits from all of theautocompletions, plugins, and shortcuts that oh-my-zsh brings.  But to onlyjump in to run a handful of commands is infuriating.&lt;/p&gt;&lt;h3 id="my-setup"&gt;üìë My Setup&lt;/h3&gt;&lt;p&gt;I believe the real issue is io speed on wsl.  I have some remote servers withsimilar configs that are 10x faster or more, loading in 100s of millisecondsrather than seconds.  Sourcing all of the individual plugin files are just toomuch for it.&lt;/p&gt;&lt;h2 id="how-fast-can-it-be"&gt;üí® How Fast can it be&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;Quick side note: your zsh config is controled by your ~/.zshrc file.  Thisfile can source other files, load plugins, or run literally anything.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Time the &lt;strong&gt;initial&lt;/strong&gt; time&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;time&lt;/span&gt; zsh -c &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Move your &lt;strong&gt;~/.zshrc&lt;/strong&gt; config file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv ~/.zshrc ~/.zshrc-back&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Time the fastest startup possible with nothing in your &lt;strong&gt;~/.zshrc&lt;/strong&gt; config file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;time&lt;/span&gt; zsh -c &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Move your &lt;strong&gt;~/.zshrc&lt;/strong&gt; back&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv ~/.zshrc-back ~/.zshrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="profile-your-startup-time"&gt;üïµÔ∏è‚Äç‚ôÇÔ∏èProfile your startup time&lt;/h2&gt;&lt;p&gt;It is possible to profile your zsh startup time by adding &lt;code&gt;zmodload zsh/zprof&lt;/code&gt;to the start of your &lt;code&gt;~/.zshrc&lt;/code&gt; file and &lt;code&gt;zprof&lt;/code&gt; at the end.  This wasunsuccessfull for me.  I ended up just backing up &lt;code&gt;~/.zshrc&lt;/code&gt; file, thendeleting half of it to see where the hot spots were.  I found that two placesthat were really hot for me.  One I was inadvertantly setting git and npmsettings everytime that didn't need to be set everytime.  That was an easy 2sgain.  Another easy 3s gain was removing oh-my-zsh.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.zshrc&lt;/span&gt;zmodload zsh/zprof......zprof&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="but-i-really-like-oh-my-zsh"&gt;üò≠But I really like oh-my-zsh&lt;/h2&gt;&lt;p&gt;without all the bells and whistle that oh-my-zsh provided zsh became lightning fast to load, but incredibly boring.  It was also very painful to manually type out everything that it autocompleted or aliased all the time.  Next I headed down a path to get all of that functionality back without sacrificing load time.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Without oh-my-zsh, zsh became incredibly boring.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="plugin-managers"&gt;üîå Plugin Managers&lt;/h2&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/steve-johnson-ZUabNmumOcA-unsplash.jpg" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@steve_j?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Steve Johnson&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/plug?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;oh-my-zsh&lt;/li&gt;&lt;li&gt;zplugin&lt;/li&gt;&lt;li&gt;zgen&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are a number of plugin managers for zsh, I tried each of the ones listed above, but found that as I approached a nice setup that I liked the load time would creep up &lt;strong&gt;above the 2s&lt;/strong&gt; &lt;strong&gt;mark&lt;/strong&gt; each time. I would turn certain plugins on and off, try different plugin managers, before realizing that I had spent enough time on this problem and it was going to be time to settle on fast startup or functionality.&lt;/p&gt;&lt;h2 id="finding-balance"&gt;‚öñ Finding Balance&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Semi-lazy loading&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/jeppe-hove-jensen-b3eaH1hguOA-unsplash.jpg" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Photo by Jeppe Hove Jensen on &lt;a href="https://unsplash.com/s/photos/balance?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;After struggling to get all of the features I wanted with a fast load time, I decided to only load what I needed upon startup.  Next I created a simple alias that loads in zgen and all of the plugins I want. By doing this I get two main benefits.  Obviously I get a faster starup time by loading less.  I got my startup time down to about 0.25s.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.zshrc&lt;/span&gt;p &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;zgen load zsh-users/zsh-autosuggestions.......&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="fast-loading"&gt;‚ö° Fast Loading&lt;/h3&gt;&lt;p&gt;I really like the fast startup time, because sometimes I am only loading up zsh to run a handful of commands that dont need much in the way of plugins&lt;/p&gt;&lt;p&gt;&lt;strong&gt;simple commands that need üí® blazing start speed&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;any single easy to type command, these are my common commands that I will open a terminal in my editor and just need to run quick.&lt;/em&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;vim&lt;/li&gt;&lt;li&gt;git add . &amp;amp;&amp;amp; git commit &amp;amp;&amp;amp; git push&lt;/li&gt;&lt;li&gt;sh my_script.sh&lt;/li&gt;&lt;li&gt;make build&lt;/li&gt;&lt;li&gt;bake build&lt;/li&gt;&lt;li&gt;pytest&lt;/li&gt;&lt;li&gt;gatsby develop&lt;/li&gt;&lt;li&gt;npm i&lt;/li&gt;&lt;li&gt;npm update&lt;/li&gt;&lt;li&gt;pip install&lt;/li&gt;&lt;li&gt;ipython&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The second benefit was that I can continue typing while plugins are loading.&lt;/p&gt;&lt;p&gt;&lt;img alt="" src="https://waylonwalker.com/type-while-loading-plugins.gif" /&gt;&lt;/p&gt;&lt;h2 id="prompt"&gt;&amp;gt;Prompt&lt;/h2&gt;&lt;p&gt;After removing oh-my-zsh the first thing that I missed was the themes that it provided.  I went through a number of them and the one that seemed to have the smallest effect on performance and everything I needed was &lt;a href="https://starship.rs/"&gt;starship&lt;/a&gt;.  It's a really fast prompt written in rust.  The biggest thing that I needed to have that other prompts were misssing was conda environments.  I live much of my work life running python from various conda environments and it is crutial that I can see what environment I am in at all times.&lt;/p&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/2020-01-04 12-36-31_Cortana.png" /&gt;&lt;/p&gt;&lt;h2 id="bonus"&gt;üí∞ Bonus&lt;/h2&gt;&lt;p&gt;I applied the same logic to neovim and achieved similar results.  Again it just had too many plugins loading on startup for simple tasks.  I ended up taking a shortcut and load any heavy plugins upon NerdTreeToggle.  I dont really use NERDTree that much, but when I do its for more than just a quick edit.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.config/nvim/init.vim&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;valloric/youcompleteme&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;do&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;./install.py&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;on&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;NERDTreeToggle&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/symlink-gallery'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create a Virtual File Gallery with Symlinks&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/strip-trailing-whitespace'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Strip Trailing Whitespace from Git projects&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/supercharge-zsh-startup</guid><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate></item><item><title>Creating Reusable Bash Scripts</title><link>https://waylonwalker.com/reusable-bash</link><description>Bash is a language that is quite useful for automation no matter what language I have three techniques that help me write more composable bash scripts. Function</description><content:encoded>&lt;p&gt;Bash is a language that is quite useful for automation no matter what languageyou write in. Bash can do so many powerful system-level tasks. Even if you areon windows these days you are likely to come across bash inside a cloud VM,Continuous Integration, or even inside of docker.&lt;/p&gt;&lt;p&gt;I have three techniques that help me write more composable bash scripts.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href="#functions"&gt;functions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#arguments"&gt;Arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#positional-arguments"&gt;positional arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#all-arguments"&gt;All Arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#main-script"&gt;main script&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;hr /&gt;&lt;h2 id="functions"&gt;Functions&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Break scripts down into reusable components&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Functions in bash are quite simple. They are something that I wish I would havestarted using long ago. They make your code much more reusable. I often usethem in my aliases as well since they can simplify the process and allow moreflexibility.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;span class="c1"&gt;# hello_world&lt;/span&gt;hello_world &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Source the file to load the function and run it from the terminal.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hello_worldhello_world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;h2 id="hello-world"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/h2&gt;&lt;h2 id="arguments"&gt;Arguments&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Make functions a little more flexible&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Arguments and options are quite a bit more complex in bash. For now, we willfocus on the basics which are not all that bad.&lt;/p&gt;&lt;h3 id="positional-arguments"&gt;positional arguments&lt;/h3&gt;&lt;p&gt;&lt;em&gt;easiest and most common to use&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Positional arguments can be pulled out quite easily using &lt;code&gt;$1&lt;/code&gt; for the firstone, &lt;code&gt;$2&lt;/code&gt; for the second, and so on.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; &lt;code&gt;$0&lt;/code&gt; is the command that was called. You will see this often used tofind the command called to open up your current shell.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;span class="c1"&gt;# hello&lt;/span&gt;hello &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hellohello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have a function that accepts positional arguments and we can call it bypassing things into it.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More than one argument would be ignored since we are only looking at &lt;code&gt;$1&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hellohello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just the same as before since we do not use the second argument.&lt;/p&gt;&lt;h3 id="all-arguments"&gt;All Arguments&lt;/h3&gt;&lt;p&gt;Bash has another special variable &lt;code&gt;$@&lt;/code&gt; that stores &lt;strong&gt;all arguments&lt;/strong&gt; in one.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;span class="c1"&gt;# hello&lt;/span&gt;hello &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just the same as before.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hellohello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the function will output all arguments that are passed into it since we are using the &lt;code&gt;$@&lt;/code&gt; variable.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr /&gt;&lt;h2 id="error-handling"&gt;Error Handling&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Super powers in a single line&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The easiest and most common way to handle an error in bash is through the useof the logical operators &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) and &lt;code&gt;||&lt;/code&gt; (or).&lt;/p&gt;&lt;p&gt;Here I have a concrete example from earlier today. I was creating a bash scriptto run a python script from cron. The bash script is there to make sure that wehave the python environment, activate it, and run. If it doesn't have it, itshould create it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# creates the conda environment&lt;/span&gt;create_env&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    conda create -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8    conda activate &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;    pip install -r requirements.txt&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;# checks if the conda environment exists&lt;/span&gt;env_exists&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tail -n +3 &lt;span class="p"&gt;|&lt;/span&gt; grep -w &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt; /dev/null&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;# creates the conda environment if it doesn&amp;#39;t exist&lt;/span&gt;create_if &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;env_exists &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;environment exists&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; create_env &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;create_if my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we look at the &lt;code&gt;create_if&lt;/code&gt; function, it will check if the environment existsif there is a passing status code &lt;code&gt;0&lt;/code&gt;, then it will run &lt;code&gt;echo "environmentexists"&lt;/code&gt; otherwise it will run &lt;code&gt;create_env $1&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; Inside of &lt;code&gt;env_exists&lt;/code&gt; grep will look for whole words if there is amatch it will give a status code 0 if it finds a match and not 0 if there is nomatch.&lt;/p&gt;&lt;hr /&gt;&lt;h2 id="main-script"&gt;main script&lt;/h2&gt;&lt;p&gt;_&lt;code&gt;if __name__ == " __main__"&lt;/code&gt;_&lt;/p&gt;&lt;p&gt;The last thing I want to discuss is making a bash script both runnable andsourceable. This makes it so that you can &lt;code&gt;source filename.sh&lt;/code&gt; and run eachfunction individually, or &lt;code&gt;bash filename.sh&lt;/code&gt; to run the script. This is asimilar concept to &lt;code&gt;if __name__ == " __main__"&lt;/code&gt; from python.&lt;/p&gt;&lt;p&gt;I did try this from bash and zsh with success. The following is an example thatwould pass all arguments into a main function.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[0]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;    main &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Extending the example above that created a python example if necessary we cancreate the env if necessary, activate the environment, and run the script.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[0]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;create_if my_envconda activate my_envpython script.py&lt;span class="k"&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using this syntax to run our "main" functions will allow us to both runs thescript or source the script to utilize the functions that we created.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/save-vim-macro'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Save Vim Macro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/resume-tips'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Resume Tips&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/reusable-bash</guid><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate></item><item><title>Find and Replace in the Terminal.</title><link>https://waylonwalker.com/find-replace</link><description>notes about find and replace techniques</description><content:encoded>&lt;h2 id="grepr"&gt;grepr&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;```&lt;/span&gt;bashgrepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="grepd"&gt;grepd&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;grepd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iRl&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/^$1/d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="cocsearch"&gt;CocSearch&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;:CocSearch status: &lt;span class="s1"&gt;&amp;#39;false&amp;#39;&lt;/span&gt; -g *.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/fix-git-commit-author'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Fix git commit author&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/find-kedro-release'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;üì¢ Announcing find-kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/find-replace</guid><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate></item><item><title>Newsboat</title><link>https://waylonwalker.com/newsboat</link><description>Web browsers are a black hole of productivity.  I try to use them as little as I am going to give a terminal rss reader a try for a bit and see how that goes I </description><content:encoded>&lt;p&gt;Web browsers are a black hole of productivity.  I try to use them as little aspossible when it is time to focus.  I try to use &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;??&lt;/code&gt; withipython, or --help at the command line as much as possible.  What about thattime I am trying to see what my online friends are posting on their sites?  Iused to used google reader quite heavily before that was taken down.&lt;/p&gt;&lt;h2 id="newsboat"&gt;Newsboat&lt;/h2&gt;&lt;p&gt;I am going to give a terminal rss reader a try for a bit and see how that goesfor me.  I have really struggled to get into an rss reader since google readerdied.&lt;/p&gt;&lt;h2 id="installation"&gt;installation&lt;/h2&gt;&lt;p&gt;I installed with the reccomended snap for Ubuntu.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo snap install newsboat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="adding-feeds"&gt;Adding feeds&lt;/h2&gt;&lt;p&gt;&lt;em&gt;super simple&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Running help for newsboat directed me towards their config files at the bottom.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ newsboat --helpnewsboat r2.22usage: /snap/newsboat/3849/usr/local/bin/newsboat &lt;span class="o"&gt;[&lt;/span&gt;-i &amp;lt;file&amp;gt;&lt;span class="p"&gt;|&lt;/span&gt;-e&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-u &amp;lt;urlfile&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-c &amp;lt;cachefile&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-x &amp;lt;command&amp;gt; ...&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-h&lt;span class="o"&gt;]&lt;/span&gt;    -e, --export-to-opml        &lt;span class="nb"&gt;export&lt;/span&gt; OPML feed to stdout    -r, --refresh-on-start      refresh feeds on start    -i, --import-from-opml&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;   import OPML file    -u, --url-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;urlfile&amp;gt;    &lt;span class="nb"&gt;read&lt;/span&gt; RSS feed URLs from &amp;lt;urlfile&amp;gt;    -c, --cache-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;cachefile&amp;gt;    use &amp;lt;cachefile&amp;gt; as cache file    -C, --config-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;configfile&amp;gt;  &lt;span class="nb"&gt;read&lt;/span&gt; configuration from &amp;lt;configfile&amp;gt;    -X, --vacuum            compact the cache    -x, --execute&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;command&amp;gt;...  execute list of commands    -q, --quiet         quiet startup    -v, --version           get version information    -l, --log-level&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;loglevel&amp;gt;  write a log with a certain loglevel &lt;span class="o"&gt;(&lt;/span&gt;valid values: &lt;span class="m"&gt;1&lt;/span&gt; to &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    -d, --log-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;logfile&amp;gt;    use &amp;lt;logfile&amp;gt; as output log file    -E, --export-to-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt; &lt;span class="nb"&gt;export&lt;/span&gt; list of &lt;span class="nb"&gt;read&lt;/span&gt; articles to &amp;lt;file&amp;gt;    -I, --import-from-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;   import list of &lt;span class="nb"&gt;read&lt;/span&gt; articles from &amp;lt;file&amp;gt;    -h, --help          this &lt;span class="nb"&gt;help&lt;/span&gt;        --cleanup           remove unreferenced items from cacheFiles:    - configuration:  /home/nic/snap/newsboat/3849/.newsboat/config    - feed URLs:      /home/nic/snap/newsboat/3849/.newsboat/urls    - cache:          /home/nic/snap/newsboat/3849/.newsboat/cache.dbSupport at &lt;span class="c1"&gt;#newsboat at https://freenode.net or on our mailing list https://groups.google.com/g/newsboat&lt;/span&gt;For more information, check out https://newsboat.org/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I just need to edit its urls file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvim ~/snap/newsboat/3849/.newsboat/urls&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Urls file is just a list of urls to rss feeds.  Adding mine in allowed me to see all of my posts.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;https://waylonwalker.com/rss.xml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="config"&gt;Config&lt;/h2&gt;&lt;p&gt;I took most of my config from a &lt;a href="http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/"&gt;blogpost&lt;/a&gt;that I found by Evan Travers.  It set some sane defaults to the reading widthand vim keys.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/&lt;/span&gt;&lt;span class="c1"&gt;# Hide feeds where all the items are read.&lt;/span&gt;show-read-feeds no&lt;span class="c1"&gt;# Make the text width readable&lt;/span&gt;text-width &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="c1"&gt;# Use multiple threads to download all the news faster.&lt;/span&gt;reload-threads &lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="c1"&gt;# browser ~/bin/newsboat-browser.sh&lt;/span&gt;&lt;span class="c1"&gt;# browser &amp;quot;/usr/bin/brave-browser %u&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# unbind keys&lt;/span&gt;unbind-key ENTERunbind-key junbind-key kunbind-key Junbind-key Kunbind-key ^Dunbind-key ^Uunbind-key ounbind-key gunbind-key G&lt;span class="c1"&gt;# bind keys - vim style&lt;/span&gt;bind-key j downbind-key k upbind-key l openbind-key h quitbind-key ^D pagedownbind-key ^U pageupbind-key b toggle-source-viewbind-key U toggle-show-read-feedsbind-key u show-urlsbind-key g homebind-key G endbind-key b open-in-browser-and-mark-readbind-key B open-in-browserbind-key i sortbind-key I rev-sort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="gui-browser"&gt;GUI Browser&lt;/h2&gt;&lt;p&gt;No matter how many different guides I tried I keedp getting &lt;code&gt;error code 127&lt;/code&gt;when trying to &lt;code&gt;open-in-browser&lt;/code&gt;.  Please let me know if you know how to fixthis. For now I am just going to roll with it.&lt;/p&gt;&lt;h2 id="heres-how-it-looks"&gt;Here's how it looks&lt;/h2&gt;&lt;p&gt;&lt;img alt="newsboat feed" src="https://images.waylonwalker.com/newsboat-feed-waylonwalker-com.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;browsing a feed in newsboat&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img alt="newsboat article" src="https://images.waylonwalker.com/newsboat-article.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;reading an article in newsboat&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/nvim-ides-are-slow'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;nvim conf 2021 | IDE's are slow | Waylon Walker&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/new-machine-tpio'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;New Machine for developing Tests with TestProject.io&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/newsboat</guid><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Live Substitution In Neovim</title><link>https://waylonwalker.com/neovim-live-substitution</link><description>Replacing text in vim can be quite frustrating especially since it doesn https://twitter.com/ I had to do a bit of searching and found a great post from  I beli</description><content:encoded>&lt;p&gt;Replacing text in vim can be quite frustrating especially since it doesn't havelive feedback to what is changing. Today I was watching Josh Branchaud'sVim-Unalphabet series on Youtuve and realized that his vim was doing this and Ihad to have it.&lt;/p&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;neovim can live highlight substitutions.&lt;br&gt;&lt;br&gt;:set inccommand=nosplit&lt;/p&gt;&amp;mdash; Waylon Walker üêç (@_WaylonWalker) &lt;a href="https://twitter.com/_WaylonWalker/status/1346081617199198210?ref_src=twsrc%5Etfw"&gt;January 4, 2021&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;h2 id="how-to-do-it"&gt;How to do it.&lt;/h2&gt;&lt;p&gt;I had to do a bit of searching and found a great post from &lt;a href="http://vimcasts.org/episodes/neovim-eyecandy/"&gt;vimcasts&lt;/a&gt; that shows exactly how to get the live search and replace highlighting using &lt;code&gt;inccomand&lt;/code&gt;&lt;/p&gt;&lt;h2 id="h-inccommand"&gt;:h inccommand&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s1"&gt;&amp;#39;inccommand&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;icm&amp;#39;&lt;/span&gt;  string  &lt;span class="p"&gt;(&lt;/span&gt;default &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;            global&lt;span class="c"&gt;    &amp;quot;nosplit&amp;quot;: Shows the effects of a command incrementally, as you type.&lt;/span&gt;&lt;span class="c"&gt;    &amp;quot;split&amp;quot;  : Also shows partial off-screen results in a preview window.&lt;/span&gt;    Works &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;:substitute&lt;span class="p"&gt;|,&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;:smagic&lt;span class="p"&gt;|,&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;:&lt;span class="k"&gt;snomagic&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;. &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;hl&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;Substitute&lt;span class="p"&gt;|&lt;/span&gt;    If the preview &lt;span class="k"&gt;is&lt;/span&gt; too slow &lt;span class="p"&gt;(&lt;/span&gt;exceeds &lt;span class="s1"&gt;&amp;#39;redrawtime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; then &lt;span class="s1"&gt;&amp;#39;inccommand&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt;    automatically disabled until &lt;span class="p"&gt;|&lt;/span&gt;Command&lt;span class="p"&gt;-&lt;/span&gt;line&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="k"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; done.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="add-this-to-your-config"&gt;Add this to your config&lt;/h2&gt;&lt;p&gt;I believe that this is a neovim only feature, add it into your&lt;code&gt;~/.config/nvim/init.vim&lt;/code&gt; file. You can see it in my&lt;a href="https://github.com/WaylonWalker/devtainer/blob/main/nvim/.config/nvim/settings.vim#L155"&gt;dotfiles&lt;/a&gt;as well.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; inccommand&lt;span class="p"&gt;=&lt;/span&gt;nosplit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="see-it-in-action"&gt;See it in Action&lt;/h2&gt;&lt;p&gt;&lt;img alt="example livesubstitution" src="https://images.waylonwalker.com/nvim-live-substitute-inccommand.gif" /&gt;&lt;/p&gt;&lt;h2 id="the-video-that-inspired-this"&gt;The Video that inspired this&lt;/h2&gt;&lt;p&gt;Check out Josh Branchaud's great series on the Vim-Unalphabet.&lt;/p&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=5jMiYtXz2QA"&gt;https://www.youtube.com/watch?v=5jMiYtXz2QA&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/new-machine-tpio'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;New Machine for developing Tests with TestProject.io&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/named-tuples-data-science'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Clean up Your Data Science with Named Tuples&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/neovim-live-substitution</guid><pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Create a Virtual File Gallery with Symlinks</title><link>https://waylonwalker.com/symlink-gallery</link><description>Creating a directory that is a union of several directories can be achieved Here is how I am creating a virtual directory of all my projects that is a ‚ö† Notice </description><content:encoded>&lt;p&gt;Creating a directory that is a union of several directories can be achievedwith a few symlinks at the command line.&lt;/p&gt;&lt;h2 id="creating-a-virtual-file-gallery"&gt;Creating a Virtual File Gallery&lt;/h2&gt;&lt;p&gt;Here is how I am creating a virtual directory of all my projects that is acombination of both work and not-work projects.  I am creating symlinks forevery directory under &lt;code&gt;~/work&lt;/code&gt; and &lt;code&gt;~/git&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -rf ~/projectsmkdir ~/projectsln -sf ~/work/* ~/projectsln -sf ~/git/* ~/projects&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;‚ö† Notice that first I am recreating the directory each time. This will ensurethat any project that is deleted from their actual directory is removed fromthe virtual gallery.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="updating-the-gallery"&gt;Updating the gallery&lt;/h2&gt;&lt;p&gt;Since links are always kept up to date without any extra work, all the data isstill in the same place it started.  But as new directories are added to anyproject directory they will not be automatically added to the virtual gallery.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;cron&lt;/li&gt;&lt;li&gt;bashrc/zshrc&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you're concerned about system resources, you can add it to a cron job to runat a regular schedule that makes sense to you.  For me, I just popped those 4lines right in my &lt;code&gt;~/.zshrc&lt;/code&gt;.  It's a bit overkill, maybe bloat, but it runs inan impercieveable amount of time.&lt;/p&gt;&lt;h2 id="automatically-cd-to-the-real-directory"&gt;Automatically CD to the real directory&lt;/h2&gt;&lt;p&gt;When you cd into a &lt;code&gt;~/projects/my-proj&lt;/code&gt; directory, your &lt;code&gt;$PWD&lt;/code&gt; will still be&lt;code&gt;~/projects/my-proj&lt;/code&gt;.  I did not want this for my use case.  I wanted to followthe symlink to the real directory.  I found two options that worked for me.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias cd=&amp;#39;cd -P&amp;#39;set -o physical&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Add either of these to your &lt;code&gt;.bashrc&lt;/code&gt;/&lt;code&gt;.zshrc&lt;/code&gt; to follow symlinks to theactual directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/telegraph-release'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;I made a neovim plugin&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/supercharge-zsh-startup'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Supercharge Zsh Startup&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/symlink-gallery</guid><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate></item><item><title>Trim unused git branches</title><link>https://waylonwalker.com/trim-branches</link><description>prev Twitter deepdives next tmux zoom</description><content:encoded>&lt;h2 id="trim-branches-no-longer-on-origin"&gt;Trim branches no longer on origin&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote prune origin --dry-rungit remote prune origin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="find-branches-already-merged"&gt;Find branches already merged&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout main&lt;span class="c1"&gt;# list remote branches that have already been merged into main&lt;/span&gt;git branch -r --merged&lt;span class="c1"&gt;# list local branches that have already been merged into main&lt;/span&gt;git branch --merged&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/twitter-deepdives'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Twitter deepdives&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-zoom'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux zoom&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/trim-branches</guid><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate></item><item><title>How I navigate tmux in 2021</title><link>https://waylonwalker.com/tmux-nav-2021</link><description>In 2021 I changed the way I navigate between tmux sessions big time.  Now I can Since making this post, I have made ~20 other posts in short form that all have </description><content:encoded>&lt;script&gt;change_speed = (speed) =&gt; [...document.querySelectorAll('video')].map(v =&gt; v.playbackRate=v.playbackRate+speed)&lt;/script&gt;&lt;style&gt;&lt;/style&gt;&lt;p&gt;In 2021 I changed the way I navigate between tmux sessions big time.  Now I cancreate, kill, switch with ease, and generally keep work separated into logicalgroups.&lt;/p&gt;&lt;h2 id="update"&gt;Update&lt;/h2&gt;&lt;p&gt;Since making this post, I have made ~20 other posts in short form that all have a YouTube video to go along with them you can find them all on my&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;tmux-playlist&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="chris-toomeys-tmux-course"&gt;&lt;a href="https://twitter.com/christoomey"&gt;Chris Toomey's&lt;/a&gt; Tmux Course&lt;/h2&gt;&lt;p&gt;I took Chris's &lt;a href="https://thoughtbot.com/upcase/tmux"&gt;tmux course&lt;/a&gt; in December2020 and it was fantastic.  Even as a seasoned tmux user, I learned quite a bit.Before the course, I was proficient in navigating within each of my tmuxsessions but rarely started more than one session.  A few months later, I haveadopted a lot of what I learned from Chris and made it my own.&lt;/p&gt;&lt;p&gt;I am now keeping projects to their own session and can move between themfluidly with just a few keystrokes.  For high-traffic projects, I have thembound to a single keystroke for instant switching.  This change has been agame-changer from the mess of windows I used to have and the nightmare it wasto find work I was doing and end up duplicating project work in two separatewindows.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;üìù &lt;strong&gt;NOTE:&lt;/strong&gt; Some of my config comes straight from the course, and some of it hasbeen extended to my liking.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Let's take a quick look at how I am navigating through tmux on a day-to-day basis.&lt;/p&gt;&lt;!-- ![overview of how I switch and manage tmux sessions](https://images.waylonwalker.com/tmux-navigation-2021.gif "overview") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;üëÜ Overview of how I navigate tmux&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="tmux-ls"&gt;tmux ls&lt;/h2&gt;&lt;p&gt;Throughout this article, I have several recordings showing how I use managesessions with my keybindings.  I will often run a &lt;code&gt;tmux ls&lt;/code&gt; command tohighlight running sessions at various points to help guide the viewer.&lt;/p&gt;&lt;h2 id="ta"&gt;ta&lt;/h2&gt;&lt;p&gt;&lt;em&gt;my attach/session switch script&lt;/em&gt;&lt;/p&gt;&lt;p&gt;At the heart of my tmux navigation is a highly customized version of Chris'stat script that I renamed &lt;code&gt;ta&lt;/code&gt;.  Many folks add this to their bashrc &lt;code&gt;aliasta=tmux attach&lt;/code&gt;.  Simply calling ta will do the same thing as shown below.  Ifyou're in a tmux session, it does nothing, and if you're not in one, it willattach you to the first one.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;get the full &lt;a href="https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta"&gt;script&lt;/a&gt; from GitHub.&lt;/p&gt;&lt;/blockquote&gt;&lt;!-- ![overview of how I switch and manage tmux sessions](https://images.waylonwalker.com/tmux-navigation-2021-ta.gif "overview") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-ta.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-ta.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;üëÜ attaching to a session by default&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In my &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt; I add the &lt;code&gt;ta&lt;/code&gt; command to keep myself in a tmuxsession at all times.  Whenever I open my terminal, I am automatically droppedinto a tmux session, but if I am opening a split while in tmux it's smartenough to know not to nest tmux sessions.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ta&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Another article can dive into my &lt;code&gt;ta&lt;/code&gt; command. This one is more about themethodology, workflow, and keybindings to get me there.  It's available in my&lt;a href="https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta"&gt;script&lt;/a&gt;.&lt;/p&gt;&lt;h3 id="but-theres-more"&gt;but there's more&lt;/h3&gt;&lt;p&gt;&lt;em&gt;gettin fuzzy&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Give it a directory, and a &lt;code&gt;fzy&lt;/code&gt; dropdown will let you choose a subdirectory tostart your session in, and name the session after that directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ta ~/git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;üî• Bonus, use direnv to automatically set settings, echo your git status,activate your environment or whatever else you need.&lt;/p&gt;&lt;/blockquote&gt;&lt;!-- ![overview of how I switch and manage tmux sessions](https://images.waylonwalker.com/tmux-navigation-2021-ta-directory.gif "overview") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-ta-directory.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-ta-directory.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;üëÜ give it a directory, it will ask for input to which project and start a newnamed session in that directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note that starting from outside currently does not start in a split layout likeit does when starting from within tmux.  I am still playing with this, butgenerally, I want my terminal session to be plain when I first start myterminal. I usually am starting work after the first default session.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;ü§î I still use both fzy and fzf. It probably doesn't make sense to use both,but I am currently giving fzy a try.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="prefixw"&gt;prefix+w&lt;/h2&gt;&lt;p&gt;&lt;em&gt;tmux choose-tree&lt;/em&gt;&lt;/p&gt;&lt;p&gt;By default, tmux comes with a &lt;code&gt;tmux choose-tree&lt;/code&gt; command bound to &lt;code&gt;prefix+w&lt;/code&gt;,which opens in full screen.  The upper section of the screen will show everywindow opened.  While selected, you can show the splits in each window byhitting l, or fold it with h. You can search for a session name by hitting /.&lt;/p&gt;&lt;!-- ![jump to existing sessions with prefix+w](https://images.waylonwalker.com/tmux-navigation-2021-prefix+w.gif "using prefix+w") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+w.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+w.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.tmux.conf&lt;/span&gt;&lt;span class="c1"&gt;# expanded to show all splits&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; s choose-tree&lt;span class="c1"&gt;# simpler window to show only sessions&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; S choose-session&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="keybindings-in-choose-treechoose-session"&gt;Keybindings in choose-tree/choose-session&lt;/h3&gt;&lt;p&gt;The default keybindings of the tmux &lt;code&gt;choose-tree&lt;/code&gt; and &lt;code&gt;choose-session&lt;/code&gt; that Iuse are listed below.  J/K are very intuitive, but I just learned about h,l,/.When I do use one of these, the / (search) can be super helpful to findsessions/windows faster.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;action&lt;/th&gt;&lt;th&gt;key&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;fold&lt;/td&gt;&lt;td&gt;h&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;unfold&lt;/td&gt;&lt;td&gt;l&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;up&lt;/td&gt;&lt;td&gt;k&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;down&lt;/td&gt;&lt;td&gt;j&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;search&lt;/td&gt;&lt;td&gt;/&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id="prefixc-w-prefixc-g"&gt;prefix+c-w prefix+c-g&lt;/h2&gt;&lt;p&gt;&lt;em&gt;open a project&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I have set up to make it easy to open my non-work projects &lt;em&gt;(in my ~/git directory)&lt;/em&gt;and my work projects &lt;em&gt;(in my ~/work directory)&lt;/em&gt;.  I bound &lt;code&gt;prefix+c-g&lt;/code&gt; and&lt;code&gt;prefix+c-w&lt;/code&gt; to open a new session in their respective directories.  I likemapping common prefix commands with control to keep my pinky mashed onthat control key.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.tmux.conf&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; C-w new-window -n &lt;span class="s2"&gt;&amp;quot;work-session-picker&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ta ~/work&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; C-g new-window -n &lt;span class="s2"&gt;&amp;quot;git-session-picker&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ta ~/git&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- ![create a new session from my ~/git directory](https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-g.gif "using prefix+c-g") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-g.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-g.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;h2 id="prefixc-j"&gt;prefix+c-j&lt;/h2&gt;&lt;p&gt;&lt;em&gt;jump to session&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Now that I have &lt;code&gt;ta&lt;/code&gt; rocking with a good create or attach setup, I am rarelytoggling through a list of running sessions, but I am doing it with&lt;code&gt;prefix+c-j&lt;/code&gt; when I do it. Keeping my finger on control and pressing &lt;code&gt;&amp;lt;space&amp;gt;+j&lt;/code&gt;.This keybinding uses fzf to fuzzy match to an existing session and attach.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; C-j new-window -n &lt;span class="s2"&gt;&amp;quot;session-switcher&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;tmux list-sessions | sed -E &amp;#39;s/:.*&lt;/span&gt;$&lt;span class="s2"&gt;//&amp;#39; | grep -v \&amp;quot;^&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;tmux display-message -p &lt;span class="s1"&gt;&amp;#39;#S&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;\$\&amp;quot; | fzf --reverse | xargs tmux switch-client -t&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- ![jump to existing sessions with prefix+c-j](https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.gif "using prefix+c-j") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;h2 id="m-n-m-p"&gt;M-N M-P&lt;/h2&gt;&lt;p&gt;&lt;em&gt;next/prev&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Next and Previous sessions.  This is super handy when working with under 3sessions to be able to cycle through sessions holding &lt;code&gt;shift+alt&lt;/code&gt; and pressing&lt;code&gt;n&lt;/code&gt; or &lt;code&gt;p&lt;/code&gt;.&lt;/p&gt;&lt;!-- ![jump to next or previous sessions with m-N or m-P](https://images.waylonwalker.com/tmux-navigation-2021-m-N-M-P.gif "using m-N and m-P") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-m-N-M-P.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-m-N-M-P.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;h2 id="tkill"&gt;tkill&lt;/h2&gt;&lt;p&gt;&lt;em&gt;time to clean up&lt;/em&gt;&lt;/p&gt;&lt;p&gt;It's easy to get a long crufty list of sessions running throughout the day.Typically this is not too bad on system resources compared to running vscode inevery working project, but it does make it more challenging to manage and wadethrough the sessions list.  I use a handy shell alias that's been in my zshrcfor quite some time.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;tkill&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;for s in \$(tmux list-sessions | awk &amp;#39;{print \$1}&amp;#39; | rg &amp;#39;:&amp;#39; -r &amp;#39;&amp;#39; | fzy); do tmux kill-session -t \$s; done;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I don't have this one set up with a nice hotkey, but it works for myfingers.  I often pop open a lower split(&lt;code&gt;M-s&lt;/code&gt;), run &lt;code&gt;tkill&lt;/code&gt;, and close (&lt;code&gt;M-x&lt;/code&gt;).&lt;/p&gt;&lt;!-- ![create a new session git-diff switch back to original session with prefix+c-g then use tkill to kill the git-diff session](https://images.waylonwalker.com/tmux-navigation-2021-tkill.gif "tkill example") --&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-tkill.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-tkill.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;h2 id="last-session"&gt;Last Session&lt;/h2&gt;&lt;p&gt;&lt;em&gt;back&lt;/em&gt;&lt;/p&gt;&lt;p&gt;While &lt;code&gt;M-n&lt;/code&gt; and &lt;code&gt;M-p&lt;/code&gt; work well with a small, focused number of sessions, I oftenend up with too many sessions open, and it's not efficient to remember a double&lt;code&gt;M-N&lt;/code&gt; followed by a triple &lt;code&gt;M-P&lt;/code&gt; to get back and forth.  Most often, I want toget between two sessions quickly, no matter what the order is.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-B switch-client -l&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-b switch-client -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-m-b.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-m-b.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Once I get two sessions back to back, I can switch between them with insanespeed and precision.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="more-precision"&gt;More Precision&lt;/h2&gt;&lt;p&gt;&lt;em&gt;one keystroke&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The final layer of precision is for my most current project. I need to getto these with a single keystroke.  These are bound to a set of keybindings that werereadily available, just above the home row.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; C-t new-session -A -s todo &lt;span class="s2"&gt;&amp;quot;cd ~/work/todo &amp;amp;&amp;amp; nvim -O backlog.md doing.md done.md&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-i new-session -A -s ww3 &lt;span class="s2"&gt;&amp;quot;cd ~/git/ww3/ &amp;amp;&amp;amp; nvim&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-o new-session -A -s images_waylonwalker_com &lt;span class="s2"&gt;&amp;quot;cd ~/git/images.waylonwalker.com/ &amp;amp;&amp;amp; nvim&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-m-i-m-o.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-m-i-m-o.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;These few directories are always at my fingertips, encouraging me to keep better notes&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;And yes, I did steal this last one from &lt;a href="https://twitter.com/ThePrimeagen"&gt;Harpoon-man&lt;/a&gt; By The Way.&lt;/p&gt;&lt;h2 id="hub-and-spoke"&gt;Hub and Spoke&lt;/h2&gt;&lt;p&gt;&lt;em&gt;M-i M-b&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I have really been digging this hub and spoke workflow where I am rocking awayon a project hit &lt;code&gt;M-I&lt;/code&gt;, take some notes then hit &lt;code&gt;M-b&lt;/code&gt; to get back to where Iwas.&lt;/p&gt;&lt;p&gt;&lt;img alt="hub and spoke" src="https://images.waylonwalker.com/tmux-nav-hub-spoke.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Model of my current workflow&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="example"&gt;Example&lt;/h3&gt;&lt;p&gt;Here is an example of how I use the hub and spoke model to get to notes on myblog and back to my project quickly.&lt;/p&gt;&lt;video controls muted autoplay playsinline loop=true width="100%"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-quickly-access-notes.webm"            type="video/webm"&gt;    &lt;source src="https://images.waylonwalker.com/tmux-navigation-2021-quickly-access-notes.mp4"            type="video/mp4"&gt;    Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='speed-control'&gt;    &lt;button onclick="change_speed(.25)" &gt;        speed up    &lt;/button&gt;    &lt;button onclick="change_speed(-.25)" &gt;        slow down    &lt;/button&gt;&lt;/div&gt;&lt;h2 id="example-workflow"&gt;Example workflow&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;open tmux session with ta&lt;/li&gt;&lt;li&gt;&lt;code&gt;prefix+c-g&lt;/code&gt; start work in a project using a fuzzy matcher&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-t&lt;/code&gt; over to my todo list&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-b&lt;/code&gt; back to my project&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-i&lt;/code&gt; to my blog to look up notes/make notes&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-b&lt;/code&gt; back to my project&lt;/li&gt;&lt;li&gt;&lt;code&gt;prefix+c-g&lt;/code&gt; start work in another project using a fuzzy matcher&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-t&lt;/code&gt; over to my todo list&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-b&lt;/code&gt; back to my project&lt;/li&gt;&lt;li&gt;&lt;code&gt;prefix+c-j&lt;/code&gt; fuzzy back to the first project&lt;/li&gt;&lt;li&gt;&lt;code&gt;M-b&lt;/code&gt; back to the second project&lt;/li&gt;&lt;/ol&gt;&lt;hr /&gt;&lt;p&gt;Please let me know your thoughts.&lt;a href="https://twitter.com/_WaylonWalker"&gt;@waylonwalker&lt;/a&gt;, this one took me a bitlonger to put together with all of the animated gif's, but I think it helpsvisually show how I navigate tmux every day.&lt;/p&gt;&lt;h2 id="please-give-it-a-share-if-you-liked-it"&gt;Please give it a share if you liked it&lt;/h2&gt;&lt;p&gt;If you liked it, give it a share and tag me on&lt;a href="https://twitter.com/_WaylonWalker"&gt;twitter&lt;/a&gt;.  I don't often ask but thisarticle took a bit more to put together than my normal post.&lt;/p&gt;&lt;hr /&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://twitter.com/christoomey"&gt;Chris Toomey's&lt;/a&gt; Tmux Course&lt;/li&gt;&lt;li&gt;my &lt;a href="https://github.com/WaylonWalker/devtainer/blob/main/bin/.local/bin/ta"&gt;ta script&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;my &lt;a href="https://github.com/WaylonWalker/devtainer/blob/main/tmux/.tmux.conf"&gt;.tmux.conf&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-new-session'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux new-session&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-ls'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux ls&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-nav-2021</guid><pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate></item><item><title>tmux popups</title><link>https://waylonwalker.com/tmux-popups</link><description>https://youtu.be/2I8fB28zfB4 https://waylonwalker.com/tmux-nav-2021/ for more information on how I navigate tmux, check out this full post</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/2I8fB28zfB4"&gt;https://youtu.be/2I8fB28zfB4&lt;/a&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# open a popup scratchpad&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-g display-popup -E &lt;span class="s2"&gt;&amp;quot;tmux new-session -A -s scratch&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# open my blog in a scratchpad&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-prefix'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux prefix&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-next-prev-session'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux next/prev session&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-popups</guid><pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux floating popups</title><link>https://waylonwalker.com/tmux-floating-popups</link><description>https://youtu.be/2ZqFDsJywt8 Tmux popups are actually floating windows that you can drag around the screen.  They always open in the middle (by default) when yo</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/2ZqFDsJywt8"&gt;https://youtu.be/2ZqFDsJywt8&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Tmux popups are actually floating windows that you can drag around the screen.  They always open in the middle (by default) when you open them, no matter where you leave them.&lt;/p&gt;&lt;p&gt;Here are a couple of keybindings I use to open up popup windows.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; C-g display-popup -E &lt;span class="s2"&gt;&amp;quot;ta ~/git&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-g display-popup -E &lt;span class="s2"&gt;&amp;quot;tmux new-session -A -s scratch&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-fzf-session-jump'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux fzf session jumper&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-display-message'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux display-message&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-floating-popups</guid><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux last session</title><link>https://waylonwalker.com/tmux-last-session</link><description>https://youtu.be/RB87EEnnMnU An ultimate productivity key-binding in tmux is one to switch to the last session.  I use this to quickly get between sessions real</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/RB87EEnnMnU"&gt;https://youtu.be/RB87EEnnMnU&lt;/a&gt;&lt;/p&gt;&lt;p&gt;An ultimate productivity key-binding in tmux is one to switch to the last session.  I use this to quickly get between sessions really quick.  Often I am working and need to lookup a quick note, or copy something into my notes, then get back to where I was quickly.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-b switch-client -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I think of this hub and spoke model, and use &lt;code&gt;last-session&lt;/code&gt; to quickly drive it.&lt;/p&gt;&lt;p&gt;&lt;img alt="hub and spoke" src="https://images.waylonwalker.com/tmux-nav-hub-spoke.png" /&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-list-keys'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux list-keys&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-killing-tmux'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;killing tmux&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-last-session</guid><pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux splitting panes</title><link>https://waylonwalker.com/tmux-splitting-panes</link><description>https://youtu.be/kzgyiHap1nQ splitting panes is a core feature of tmux.  It allows us to split the terminal üóíÔ∏è note that   https://waylonwalker.com/tmux-nav-202</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/kzgyiHap1nQ"&gt;https://youtu.be/kzgyiHap1nQ&lt;/a&gt;&lt;/p&gt;&lt;p&gt;splitting panes is a core feature of tmux.  It allows us to split the terminalvertically or horizontally into new panes.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-s split-window -c &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-v split-window -h -c &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-X kill-pane&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;üóíÔ∏è note that  '#{pane_current_path}'will keep the split in the same directoryas it's parent, without this it will default to your home directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-start-application'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux start application&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-source-file'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux source-file&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-splitting-panes</guid><pubDate>Sat, 17 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux prefix</title><link>https://waylonwalker.com/tmux-prefix</link><description>https://youtu.be/BMkpbfhbkKM The prefix key is an essential part of tmux, by default all of tmux A few of the essential default key-bindings. A more complete li</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/BMkpbfhbkKM"&gt;https://youtu.be/BMkpbfhbkKM&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The prefix key is an essential part of tmux, by default all of tmux'skey-bindings sit behind a prefix.  This prefix is very similar to vim's leaderkey. It is common for folks to change the default &lt;code&gt;C-b&lt;/code&gt; (control b) to &lt;code&gt;C-a&lt;/code&gt; orif they are a vim user something to match their vim leader key.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -g prefix C-Space&lt;span class="nb"&gt;bind&lt;/span&gt; Space send-prefix&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A few of the essential default key-bindings.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;%      vertical split&amp;quot;      horizontal splitd      detachup     select up one panedown   select down one paneright  select right one paneleft   select left one panet      clocko      swap panesc      create windown      next windowp      previous window&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A more complete list of key-bindings can be found in this gist &lt;a href="https://gist.github.com/mzmonsour/8791835"&gt;https://gist.github.com/mzmonsour/8791835&lt;/a&gt;.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-rename-session'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux rename session&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-popups'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux popups&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-prefix</guid><pubDate>Sun, 18 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux choose-tree</title><link>https://waylonwalker.com/tmux-choose-tree</link><description>https://youtu.be/79Y-kqAiMpw Choose tree is a powerful tmux utility that provides a graphical interface to The default keybinding my preferred keybinding to ope</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/79Y-kqAiMpw"&gt;https://youtu.be/79Y-kqAiMpw&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Choose tree is a powerful tmux utility that provides a graphical interface topreview all sessions, windows, and panes, move between them kill them, movethem and much more.&lt;/p&gt;&lt;p&gt;The default keybinding&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key -T prefix s choose-tree -s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;my preferred keybinding to open sessions and windows collapsed and Zoomed in.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key j choose-tree -swZ&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From the man page.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;choose-tree &lt;span class="o"&gt;[&lt;/span&gt;-GNrswZ&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-F format&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-f filter&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-K key-format&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-O sort-order&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-t target-pane&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;template&lt;span class="o"&gt;]&lt;/span&gt;        Put a pane into tree mode, where a session, window or pane may be chosen interactively from a tree.  Each session, window or pane is shown on        one line.  A shortcut key is shown on the left &lt;span class="k"&gt;in&lt;/span&gt; brackets allowing &lt;span class="k"&gt;for&lt;/span&gt; immediate choice, or the tree may be navigated and an item chosen or        otherwise manipulated using the keys below.  -s starts with sessions collapsed and -w with windows collapsed.  -Z zooms the pane.  The follow‚Äê        ing keys may be used &lt;span class="k"&gt;in&lt;/span&gt; tree mode:            Key    Function            Enter  Choose selected item            Up     Select previous item            Down   Select next item            +      Expand selected item            -      Collapse selected item            M-+    Expand all items            M--    Collapse all items            x      Kill selected item            X      Kill tagged items            &amp;lt;      Scroll list of previews left            &amp;gt;      Scroll list of previews right            C-s    Search by name            m      Set the marked pane            M      Clear the marked pane            n      Repeat last search            t      Toggle &lt;span class="k"&gt;if&lt;/span&gt; item is tagged            T      Tag no items            C-t    Tag all items            :      Run a &lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; each tagged item            f      Enter a format to filter items            H      Jump to the starting pane            O      Change sort field            r      Reverse sort order            v      Toggle preview            q      Exit mode        After a session, window or pane is chosen, ‚Äò%%‚Äô is replaced by the target &lt;span class="k"&gt;in&lt;/span&gt; template and the result executed as a command.  If template is        not given, &lt;span class="s2"&gt;&amp;quot;switch-client -t &amp;#39;%%&amp;#39;&amp;quot;&lt;/span&gt; is used.        -O specifies the initial sort field: one of ‚Äòindex‚Äô, ‚Äòname‚Äô, or ‚Äòtime‚Äô.  -r reverses the sort order.  -f specifies an initial filter: the fil‚Äê        ter is a format - &lt;span class="k"&gt;if&lt;/span&gt; it evaluates to zero, the item &lt;span class="k"&gt;in&lt;/span&gt; the list is not shown, otherwise it is shown.  If a filter would lead to an empty list,        it is ignored.  -F specifies the format &lt;span class="k"&gt;for&lt;/span&gt; each item &lt;span class="k"&gt;in&lt;/span&gt; the tree and -K a format &lt;span class="k"&gt;for&lt;/span&gt; each shortcut key&lt;span class="p"&gt;;&lt;/span&gt; both are evaluated once &lt;span class="k"&gt;for&lt;/span&gt; each        line.  -N starts without the preview.  -G includes all sessions &lt;span class="k"&gt;in&lt;/span&gt; any session groups &lt;span class="k"&gt;in&lt;/span&gt; the tree rather than only the first.  This &lt;span class="nb"&gt;command&lt;/span&gt;        works only &lt;span class="k"&gt;if&lt;/span&gt; at least one client is attached.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-command-line'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux command line&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-attach'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux attach&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-choose-tree</guid><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux resize-panes</title><link>https://waylonwalker.com/tmux-resize-panes</link><description>https://youtu.be/hpFYE2LU7xc Resizing panes in tmux can be quite difficult in default tmux, I Most often when I need to resize panes I just grab the edge of the</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/hpFYE2LU7xc"&gt;https://youtu.be/hpFYE2LU7xc&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Resizing panes in tmux can be quite difficult in default tmux, Iuse a set of keybingings to help resize panes in the rare occasionsthat I do need just a bit more space.  I set the keybinding to the same as mysplit navigation bindings but shifted. They are very vim like (h,j,k,l).&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# resize panes&lt;/span&gt;&lt;span class="c1"&gt;#‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-H resize-pane -L &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-L resize-pane -R &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-K resize-pane -U &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-J resize-pane -D &lt;span class="m"&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Most often when I need to resize panes I just grab the edge of the pane with mymouse.  Yes the mouse, its not that often that I actually need to change thesize of a pane.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Enable mouse control (clickable windows, panes, resizable panes)&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt; -g mouse on&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-rotate-window'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux rotate-window&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-rename-session'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux rename session&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-resize-panes</guid><pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux select-layout</title><link>https://waylonwalker.com/tmux-select-layout</link><description>https://youtu.be/F0mHnwTrNNc When you get many splits going in tmux sometimes its time for a new layout. https://waylonwalker.com/tmux-nav-2021/ for more inform</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/F0mHnwTrNNc"&gt;https://youtu.be/F0mHnwTrNNc&lt;/a&gt;&lt;/p&gt;&lt;p&gt;When you get many splits going in tmux sometimes its time for a new layout.There are four layout strategies that I use, main-vertical, main-horizontal,even-vertical, even-horizontal. Almost always I am useing the main ones withmod plus a or mod plus shift a keybindings.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Select Layouts&lt;/span&gt;&lt;span class="c1"&gt;#‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-a &lt;span class="k"&gt;select&lt;/span&gt;-layout main-vertical&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-A &lt;span class="k"&gt;select&lt;/span&gt;-layout main-horizontal &lt;span class="nb"&gt;bind&lt;/span&gt; -n M-E &lt;span class="k"&gt;select&lt;/span&gt;-layout even-vertical&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-V &lt;span class="k"&gt;select&lt;/span&gt;-layout even-horizontal&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-select-pane'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux slect-pane&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-rotate-window'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux rotate-window&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-select-layout</guid><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux rotate-window</title><link>https://waylonwalker.com/tmux-rotate-window</link><description>https://youtu.be/06z5qf81ofo Rotate window is the main way that I navigated tmux before I learned Default keybindings My keybindings look just a bit different t</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/06z5qf81ofo"&gt;https://youtu.be/06z5qf81ofo&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Rotate window is the main way that I navigated tmux before I learned&lt;code&gt;select-pane&lt;/code&gt;.  It allows you to change your focused pane, or rotate theposition of the panes easily.&lt;/p&gt;&lt;p&gt;Default keybindings&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key        C-o rotate-windowbind-key          o &lt;span class="k"&gt;select&lt;/span&gt;-pane -t :.+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;My keybindings look just a bit different than the default ones, I do not likeneeding to hit prefix for every command, especially for repeated commands.  Iset a similar keybinding to the default one that uses mod instead of prefix.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-o &lt;span class="k"&gt;select&lt;/span&gt;-pane -t :.+&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-O rotate-window&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-select-layout'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux select-layout&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-resize-panes'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux resize-panes&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-rotate-window</guid><pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux slect-pane</title><link>https://waylonwalker.com/tmux-select-pane</link><description>https://youtu.be/CPZJZjN9YTY These are my MOST often used keybindings that I use in tmux.  They allow me to https://waylonwalker.com/tmux-nav-2021/ for more inf</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/CPZJZjN9YTY"&gt;https://youtu.be/CPZJZjN9YTY&lt;/a&gt;&lt;/p&gt;&lt;p&gt;These are my MOST often used keybindings that I use in tmux.  They allow me tojump between splits with ease with a vim style layout.  I can hold mod and jumpbetween panes with a familiar arrow key.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-h &lt;span class="k"&gt;select&lt;/span&gt;-pane -L&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-l &lt;span class="k"&gt;select&lt;/span&gt;-pane -R&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-k &lt;span class="k"&gt;select&lt;/span&gt;-pane -U&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-j &lt;span class="k"&gt;select&lt;/span&gt;-pane -D&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-show-messages'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux show-messages&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-select-layout'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux select-layout&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-select-pane</guid><pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux new-window</title><link>https://waylonwalker.com/tmux-new-window</link><description>https://youtu.be/YRPZBv-iYyE New window as it sounds makes new windows in tmux.  Windows are kind of like Default key bindings for creating and navigating windo</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/YRPZBv-iYyE"&gt;https://youtu.be/YRPZBv-iYyE&lt;/a&gt;&lt;/p&gt;&lt;p&gt;New window as it sounds makes new windows in tmux.  Windows are kind of liketabs.  They are another screen within your sessions that you can name and makenew panes in.&lt;/p&gt;&lt;p&gt;Default key bindings for creating and navigating windows in tmux.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key          c new-windowbind-key          p previous-windowbind-key          n next-window&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As always I have rebound these keys because I generally prefer a singlekeystroke over the prefix plus keybinding approach that tmux gives by default.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;#‚Äï‚Äïwindows‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-c new-window -c &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-p previous-window&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-n next-window&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When I started using tmux I did almost everything in one giant session withmany panes and windows.  It became a nightmare to manage and quickly getbetween two sets work efficiently.  This year I leaned in on sessions quiteheavily.  Checkout this üëá post to see that workflow in depth.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-next-prev-session'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux next/prev session&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-new-session'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux new-session&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-new-window</guid><pubDate>Sat, 24 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux zoom</title><link>https://waylonwalker.com/tmux-zoom</link><description>https://youtu.be/Rn6mOarCQ-Y Zooming into the current split in tmux is a valuable tool to give yourself some Default key bindings for zooming the current split </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/Rn6mOarCQ-Y"&gt;https://youtu.be/Rn6mOarCQ-Y&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Zooming into the current split in tmux is a valuable tool to give yourself somescreen real estate.  These days I am almost always presenting, streaming, orpairing up with a co-worker over a video call.  Since I am always sharing myscreen I am generally zoomed in to a level that is just a bit uncomfortable, soanytime I make a split it is really uncomfortable, being able to zoom into thesplit I am focused on is a big help, and also help anyone watching follow whereI am currently working.&lt;/p&gt;&lt;p&gt;Default key bindings for zooming the current split&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key          z resize-pane -Z&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I have rebound this to match the default binding with mod+z rather so that Iget that single keystroke experience.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -n M-z resize-pane -Z&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/trim-branches'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Trim unused git branches&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-targeted-session'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux targeted session&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-zoom</guid><pubDate>Sun, 25 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux break-pane</title><link>https://waylonwalker.com/break-pane</link><description>https://youtu.be/ICL609F2xnc Break-pane is a handy tmux command when your layout gets too cramped and you Default key binding for  https://waylonwalker.com/tmux</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/ICL609F2xnc"&gt;https://youtu.be/ICL609F2xnc&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Break-pane is a handy tmux command when your layout gets too cramped and youwant to just move a split into its own window.  Calling &lt;code&gt;break-pane&lt;/code&gt; doesexactly that, it creates a &lt;code&gt;new-window&lt;/code&gt; for you and moves your currentlyselected split into that window&lt;/p&gt;&lt;p&gt;Default key binding for &lt;code&gt;break-pane&lt;/code&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key          ! break-pane&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/building-cli-apps-in-python'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Building Cli apps in Python&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/brainstorming-kedro-hooks'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Brainstorming Kedro Hooks&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/break-pane</guid><pubDate>Mon, 26 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux join-pane</title><link>https://waylonwalker.com/tmux-join-pane</link><description>https://youtu.be/Vm5rRtcVXLw Join-pane allows you to join panes that you have broken away from your window, Before you can join a pane you must first have a pan</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/Vm5rRtcVXLw"&gt;https://youtu.be/Vm5rRtcVXLw&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Join-pane allows you to join panes that you have broken away from your window,or created in a different window to the window you want it in.  As far as Iknow there is not a default keybinding for it.&lt;/p&gt;&lt;p&gt;Before you can join a pane you must first have a pane marked to join.  Once youmark a pane, go back to the window you want to join it to and join-pane.&lt;/p&gt;&lt;p&gt;My keybindings, you must add this to your &lt;code&gt;~/.tmux.conf&lt;/code&gt; file to use them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Mark and swap panes&lt;/span&gt;&lt;span class="c1"&gt;#‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï‚Äï&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pane&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="c1"&gt;# mark&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pane&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="c1"&gt;# unmark&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;-&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pane&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also check out the full YouTube&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;tmux-playlist&lt;/a&gt;to see all of the videos in this series.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-killing-tmux'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;killing tmux&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-has-session'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux has-session&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-join-pane</guid><pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux copy-mode</title><link>https://waylonwalker.com/tmux-copy-mode</link><description>https://youtu.be/-ypY tmux copy-mode is a tmux mode that lets you scroll, search, copy, and jump your Default keybinding to get into copy mode is  If you are a </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/-ypY_-VmBKk"&gt;https://youtu.be/-ypY_-VmBKk&lt;/a&gt;&lt;/p&gt;&lt;p&gt;tmux copy-mode is a tmux mode that lets you scroll, search, copy, and jump yourway through a pane.  There are a ton of keybindings for copy-mode, the mainones you will need to know are &lt;code&gt;/&lt;/code&gt; for searching down &lt;code&gt;?&lt;/code&gt; for searching up, &lt;code&gt;n&lt;/code&gt;for next item, &lt;code&gt;space&lt;/code&gt; for starting a selection, and enter to copy theselection.  Arrow keys will be used for navigation unless you have specified vi mode, then it will be &lt;code&gt;hjkl&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Default keybinding to get into copy mode is &lt;code&gt;prefix+[&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key          &lt;span class="o"&gt;[&lt;/span&gt; copy-mode&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are a vim user you will likely want to use vi style keys, add this toyour &lt;code&gt;~/.tmux.conf&lt;/code&gt; file to enable vi mode.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;setw -g mode-keys vi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;full list of copy-mode keybindings from the man page.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  Command                                      vi              emacs           append-selection           append-selection-and-cancel                  A           back-to-indentation                          ^               M-m           begin-selection                              Space           C-Space           bottom-line                                  L           cancel                                       q               Escape           clear-selection                              Escape          C-g           copy-end-of-line &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;                  D               C-k           copy-line &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           copy-pipe &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;command&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           copy-pipe-no-clear &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;command&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           copy-pipe-and-cancel &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;command&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           copy-selection &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           copy-selection-no-clear &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           copy-selection-and-cancel &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;         Enter           M-w           cursor-down                                  j               Down           cursor-down-and-cancel           cursor-left                                  h               Left           cursor-right                                 l               Right           cursor-up                                    k               Up           end-of-line                                  $               C-e           goto-line &amp;lt;line&amp;gt;                             :               g           halfpage-down                                C-d             M-Down           halfpage-down-and-cancel           halfpage-up                                  C-u             M-Up           history-bottom                               G               M-&amp;gt;           history-top                                  g               M-&amp;lt;           jump-again                                   &lt;span class="p"&gt;;&lt;/span&gt;               &lt;span class="p"&gt;;&lt;/span&gt;           jump-backward &amp;lt;to&amp;gt;                           F               F           jump-forward &amp;lt;to&amp;gt;                            f               f           jump-reverse                                 ,               ,           jump-to-backward &amp;lt;to&amp;gt;                        T           jump-to-forward &amp;lt;to&amp;gt;                         t           jump-to-mark                                 M-x             M-x           middle-line                                  M               M-r           next-matching-bracket                        %               M-C-f           next-paragraph                               &lt;span class="o"&gt;}&lt;/span&gt;               M-&lt;span class="o"&gt;}&lt;/span&gt;           next-space                                   W           next-space-end                               E           next-word                                    w           next-word-end                                e               M-f           other-end                                    o           page-down                                    C-f             PageDown           page-down-and-cancel           page-up                                      C-b             PageUp           pipe &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;command&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           pipe-no-clear &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;command&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           pipe-and-cancel &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;command&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&amp;lt;prefix&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt;           previous-matching-bracket                                    M-C-b           previous-paragraph                           &lt;span class="o"&gt;{&lt;/span&gt;               M-&lt;span class="o"&gt;{&lt;/span&gt;           previous-space                               B           previous-word                                b               M-b           rectangle-on           rectangle-off           rectangle-toggle                             v               R           refresh-from-pane                            r               r           scroll-down                                  C-e             C-Down           scroll-down-and-cancel           scroll-up                                    C-y             C-Up           search-again                                 n               n           search-backward &amp;lt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;                        ?           search-backward-incremental &amp;lt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;                            C-r           search-backward-text &amp;lt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;           search-forward &amp;lt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;                         /           search-forward-incremental &amp;lt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;                             C-s           search-forward-text &amp;lt;&lt;span class="k"&gt;for&lt;/span&gt;&amp;gt;           search-reverse                               N               N           &lt;span class="k"&gt;select&lt;/span&gt;-line                                  V           &lt;span class="k"&gt;select&lt;/span&gt;-word           set-mark                                     X               X           start-of-line                                &lt;span class="m"&gt;0&lt;/span&gt;               C-a           stop-selection           top-line                                     H               M-R&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also check out the full YouTube&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;tmux-playlist&lt;/a&gt;to see all of the videos in this series.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-display-message'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux display-message&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-command-line'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux command line&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-copy-mode</guid><pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux command line</title><link>https://waylonwalker.com/tmux-command-line</link><description>https://youtu.be/SNu-4IrkjAs So far we have covered a lot of tmux commands and how they map to keybindings Let Or we can open the tmux command line and run it f</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/SNu-4IrkjAs"&gt;https://youtu.be/SNu-4IrkjAs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;So far we have covered a lot of tmux commands and how they map to keybindingsbut these same commands can be executed at the command line.&lt;/p&gt;&lt;h2 id="from-the-command-line"&gt;From the command line&lt;/h2&gt;&lt;p&gt;Let's make a popup that displays our git status for 5s or until we close itmanually.  We can run the following command at the command line, in a split.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tmux display-popup -E -d &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git status &amp;amp;&amp;amp; sleep 5&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="from-the-tmux-command-line"&gt;From the tmux command line&lt;/h2&gt;&lt;p&gt;Or we can open the tmux command line and run it from tmux's built in commandline, which is very similar to bim EX mode. By default the tmux command linecan be opened with &lt;code&gt;prefix+[&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;display-popup -E -d &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git status &amp;amp;&amp;amp; sleep 5&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;üóíÔ∏è note that the tmux command is called by default when inside of tmux.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="make-it-a-keybinding"&gt;Make it a keybinding&lt;/h2&gt;&lt;p&gt;Finally we can make it a keybinding by adding a bind command ahead of our tmuxcommand, then we can execute this in the tmux command line or add it to our&lt;code&gt;~/.tmux.conf&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; s display-popup -E -d &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;git status &amp;amp;&amp;amp; sleep 5&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also check out the full YouTube&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;tmux-playlist&lt;/a&gt;to see all of the videos in this series.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-copy-mode'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux copy-mode&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-choose-tree'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux choose-tree&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-command-line</guid><pubDate>Thu, 29 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux ls</title><link>https://waylonwalker.com/tmux-ls</link><description>https://youtu.be/LY41GLn tmux ls will list the sessions that you have running within the tmux server if https://waylonwalker.com/tmux-attach/ https://waylonwalk</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/LY41GLn_DGg"&gt;https://youtu.be/LY41GLn_DGg&lt;/a&gt;&lt;/p&gt;&lt;p&gt;tmux ls will list the sessions that you have running within the tmux server iftmux is currently running.  This is handy to combine with commands such as &lt;code&gt;attach&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tmux ls&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-attach/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-attach-og_250x140.png" alt="article cover for  tmux attach"/&gt;          &lt;p&gt;&lt;strong&gt; tmux attach&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also check out the full YouTube&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;tmux-playlist&lt;/a&gt;to see all of the videos in this series.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-nav-2021'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How I navigate tmux in 2021&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-list-keys'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux list-keys&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-ls</guid><pubDate>Fri, 30 Jul 2021 00:00:00 +0000</pubDate></item><item><title>tmux attach</title><link>https://waylonwalker.com/tmux-attach</link><description>https://youtu.be/JQ0yDCVu44E attach is one of the most useful features of tmux.  If you have no interest in this command will simply attach back to tmux if you </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/JQ0yDCVu44E"&gt;https://youtu.be/JQ0yDCVu44E&lt;/a&gt;&lt;/p&gt;&lt;p&gt;attach is one of the most useful features of tmux.  If you have no interest intmux for pane and window management, you should use tmux for this.  It can be alife saver if you ever get disconnected from the host machine or accidentlyclose your terminal you can connect right back into the session you were justin using attach.&lt;/p&gt;&lt;h2 id="attach"&gt;attach&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tmux attach&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;this command will simply attach back to tmux if you are ever disconnected&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If you ever run long running tasks on a remote machine by sshing into this youshould be doing it inside tmux, or something like tmux so that you do not looseyour work.&lt;/p&gt;&lt;h2 id="attach-to-a-specific-session"&gt;attach to a specific session&lt;/h2&gt;&lt;p&gt;If you have multiple sessions running you can select the session that you wantto attach to by passing &lt;code&gt;-t &amp;lt;name-of-session&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tmux attach -t scratch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;for more information on how I navigate tmux, check out this full post&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also check out the full YouTube&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETB4reAxbWza3CZeP9KL6Bkr"&gt;tmux-playlist&lt;/a&gt;to see all of the videos in this series.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/tmux-choose-tree'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux choose-tree&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/walrus-comprehension'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Python Walrus Inside List Comprehension&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/tmux-attach</guid><pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate></item><item><title>I made a neovim plugin</title><link>https://waylonwalker.com/telegraph-release</link><description>I https://youtu.be/8m5ipBuopPU Check out the project  I want a simple way to make remaps into shell commands that can open new tmux For example I want to make r</description><content:encoded>&lt;p&gt;I've slowly adding more and more lua functions into my neovim configuration,and recently I noticed a pattern for a class of functions that reach out to runshell commands that can be abstracted away.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/8m5ipBuopPU"&gt;https://youtu.be/8m5ipBuopPU&lt;/a&gt;&lt;/p&gt;&lt;h2 id="telegraphnvim"&gt;Telegraph.nvim&lt;/h2&gt;&lt;p&gt;Check out the project &lt;a href="https://github.com/WaylonWalker/Telegraph.nvim"&gt;readme&lt;/a&gt;for the most up to date details on the plugin itself.&lt;/p&gt;&lt;h2 id="motivation"&gt;Motivation&lt;/h2&gt;&lt;p&gt;I want a simple way to make remaps into shell commands that can open new tmuxwindows, popups, or just run a command with context from the editor.&lt;/p&gt;&lt;p&gt;For example I want to make remaps to do things like open the current file in lookatme.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# &lt;span class="k"&gt;vim&lt;/span&gt; :terminal&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Telegraph pipx run lookatme {filepath} &lt;span class="p"&gt;--&lt;/span&gt;live&lt;span class="p"&gt;-&lt;/span&gt;reload &lt;span class="p"&gt;--&lt;/span&gt;style gruvbox&lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;dark&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;# tmux session&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;telegraph&amp;#39;&lt;/span&gt;.telegraph&lt;span class="p"&gt;(&lt;/span&gt;{cmd&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pipx run lookatme {filepath} --live-reload --style gruvbox-dark&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; how&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt;}&lt;span class="p"&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;# tmux &lt;span class="k"&gt;popup&lt;/span&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;S &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;telegraph&amp;#39;&lt;/span&gt;.telegraph&lt;span class="p"&gt;(&lt;/span&gt;{cmd&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pipx run lookatme {filepath} --live-reload --style gruvbox-dark&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; how&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tmux_popup&amp;#39;&lt;/span&gt;}&lt;span class="p"&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The main goal here is that remaps become one liners that can just be putdirectly in my &lt;code&gt;init.vim&lt;/code&gt; without creating a whole new lua module for eachshell command I want to bind.&lt;/p&gt;&lt;h2 id="how"&gt;how&lt;/h2&gt;&lt;p&gt;&lt;code&gt;telegraph&lt;/code&gt; takes in a &lt;code&gt;how&lt;/code&gt; argument to determine where to tun the command.j&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;term&lt;/code&gt;(default) runs command in the built in terminal&lt;/li&gt;&lt;li&gt;&lt;code&gt;tmux&lt;/code&gt; runs command in a new tmux session and joins it.&lt;/li&gt;&lt;li&gt;&lt;code&gt;tmux_popup&lt;/code&gt; runs command in a tmux popup window.&lt;/li&gt;&lt;li&gt;&lt;code&gt;tmux_popup_session&lt;/code&gt; runs command in a tmux session and displays it in a popup&lt;/li&gt;&lt;li&gt;&lt;code&gt;subprocess&lt;/code&gt; runs command in a subprocess&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="format-strings"&gt;Format strings&lt;/h2&gt;&lt;p&gt;The current set of format strings that can be used with telegraph.  Placingthese in braces &lt;code&gt;{}&lt;/code&gt; within your command will get rendered into something withcontext from the editor.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;cword&lt;/code&gt; - the current word under the cursor&lt;/li&gt;&lt;li&gt;&lt;code&gt;cWORD&lt;/code&gt; - the current BIG Word under the cursor&lt;/li&gt;&lt;li&gt;&lt;code&gt;cline&lt;/code&gt; - the current line under the cursor&lt;/li&gt;&lt;li&gt;&lt;code&gt;filepath&lt;/code&gt; - the filepath of the current file&lt;/li&gt;&lt;li&gt;&lt;code&gt;filename&lt;/code&gt; - the filename of the current file&lt;/li&gt;&lt;li&gt;&lt;code&gt;parent&lt;/code&gt; - the parent directory of the current file&lt;/li&gt;&lt;li&gt;&lt;code&gt;current_session_name&lt;/code&gt; - name of the current tmux session&lt;/li&gt;&lt;li&gt;&lt;code&gt;cwd&lt;/code&gt; - the current working directory&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="give-it-a"&gt;Give it a ‚≠ê&lt;/h2&gt;&lt;p&gt;Check out the &lt;a href="https://github.com/WaylonWalker/Telegraph.nvim"&gt;repo&lt;/a&gt; and giveit a star if its something that interests you.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/testproject-io-py-actions'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Integration testing with Python, TestProject.io, and GitHub Actions&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/symlink-gallery'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create a Virtual File Gallery with Symlinks&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/telegraph-release</guid><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate></item><item><title>JUT | Read Notebooks in the Terminal</title><link>https://waylonwalker.com/jut</link><description>Trying to read a .ipynb file without starting a jupyter server?  jut has you https://youtu.be/t8AvImnwor0 watch the video version of this post on  jut ! Take a </description><content:encoded>&lt;p&gt;Trying to read a .ipynb file without starting a jupyter server?  jut has youcovered.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/t8AvImnwor0"&gt;https://youtu.be/t8AvImnwor0&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;watch the video version of this post on &lt;a href="https://youtu.be/t8AvImnwor0"&gt;YouTube&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="install"&gt;install&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jut&lt;/code&gt; is packaged and available on pypi so installing is as easy as pip installing it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install jut&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="installing jut with pip" src="https://images.waylonwalker.com/jut-install.gif" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;! This is my first time including snippets of the video in the article like this, let me know what you think!&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="examples"&gt;examples&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynbjut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --head &lt;span class="m"&gt;3&lt;/span&gt;jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --tail &lt;span class="m"&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running jut examples" src="https://images.waylonwalker.com/jut-command.gif" /&gt;&lt;/p&gt;&lt;h2 id="what-are-all-the-commands-available-for-jut"&gt;what are all the commands available for jut?&lt;/h2&gt;&lt;p&gt;Take a look at the help of the &lt;code&gt;jut&lt;/code&gt; cli to explore all the options that itoffers.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jut --help&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is some good information on the projects&lt;a href="https://github.com/kracekumar/jut"&gt;readme&lt;/a&gt; as well.&lt;/p&gt;&lt;p&gt;&lt;img alt="getting help with jut" src="https://images.waylonwalker.com/jut-help.gif" /&gt;&lt;/p&gt;&lt;h2 id="without-installing"&gt;without installing&lt;/h2&gt;&lt;p&gt;&lt;em&gt;using pipx&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Don't want jut cluttering up your venv, or want to save yourself from making anew one, &lt;a href="https://github.com/pypa/pipx"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt; can manage a separate virualenvironment for you.  This is one of the biggest selling points for me.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --head &lt;span class="m"&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running jut with pipx" src="https://images.waylonwalker.com/jut-pipx.gif" /&gt;&lt;/p&gt;&lt;h2 id="nbconvert"&gt;nbconvert&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jut&lt;/code&gt; is the lightweight option that I think will fit the bill often for me,but it just doesn't always cut it.  Mostly if there are images in the notebookor  large output that is hard to read, its time to pull out the medium gunsthat sit between fulling running jupyter and &lt;code&gt;jut&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install nbconvert&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;nbconvert does not have its own cli, instead it sits under the jupyter command.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="converting-to-html"&gt;converting to html&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;Need to see images, go here!&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynbjupyter nbconvert flame_temperature.ipynb --to htmlpython -m http.server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note, nb convert does not work with a url, you will need to have the notebook locally.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img alt="nbconvert to html to see images" src="https://images.waylonwalker.com/jut-nbconvert-html.gif" /&gt;&lt;/p&gt;&lt;h2 id="what-other-options-does-nbconvert-offer"&gt;what other options does nbconvert offer?&lt;/h2&gt;&lt;p&gt;&lt;code&gt;nbconvert&lt;/code&gt; also offers a standard help flag that you can access by passing inthe &lt;code&gt;--help&lt;/code&gt; flag&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter nbconvert --help&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="converting-to-markdown"&gt;converting to markdown&lt;/h3&gt;&lt;p&gt;&lt;code&gt;nbconvert&lt;/code&gt; also supports converting to many other formats, one option that isquite interesting for use in the terminal is markdown.  We could simply convertthe notebook to markdown and cat it out.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter nbconvert flame_temperature.ipynb --to maarkdowncat flameflame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="nbconvert to markdown and displaying in bat" src="https://images.waylonwalker.com/jut-nbconvert-markdown-bat.gif" /&gt;&lt;/p&gt;&lt;h3 id="viewing-markdown-with-glow"&gt;viewing markdown with glow&lt;/h3&gt;&lt;p&gt;Glow is a terminal markdown viewer that looks really good.  These days I use&lt;code&gt;bat&lt;/code&gt; as &lt;code&gt;cat&lt;/code&gt; so I don't get quite as much benefit from &lt;code&gt;glow&lt;/code&gt;, but it stilllooks pretty good.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;glow flameflame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="nbconvert to markdown and displaying in glow" src="https://images.waylonwalker.com/jut-nbconvert-markdown-glow.gif" /&gt;&lt;/p&gt;&lt;h3 id="viewing-markdown-as-slides-with-lookatme"&gt;viewing markdown as slides with lookatme&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;lookatme&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Lookatme is my slideshow tool of choice.  Creating slides in markdown is such afantasic user experience,  It realy lets you go from outline to finished slidedeck fluidly.  Refactoring the whole thing is also so much easier than with guitools.  Once you have your idea fleshed out it does make the process of makingslides in powerpoint much easier if thats what you need.&lt;/p&gt;&lt;p&gt;On to nbconvert, without even changing the notebook we can look at the notebookas a slideshow in the terminal.  The only thing that it needs is some markdownheaders to start new slides from.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;lookatme flameflame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="nbconvert to markdown and displaying as slides with lookatme" src="https://images.waylonwalker.com/jut-nbconvert-markdown-lookatme.gif" /&gt;&lt;/p&gt;&lt;h3 id="viewing-markdown-with-rich"&gt;viewing markdown with rich&lt;/h3&gt;&lt;p&gt;Bringing this full circle, lets take a look at the converted markdown withrich.  Here you will notice a surprising similarity to what we saw with &lt;code&gt;jut&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install richpython -m rich.markdown flame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Rich still cannot pull directly from a url or display markdown with out beinginstalled and managed by yourself.  Unlike how &lt;code&gt;jut&lt;/code&gt; can leverage &lt;a href="https://github.com/pypa/pipx"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt; tomanage the installation sandbox for you.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/kracekumar/jut"&gt;jut&lt;/a&gt; - View notebooks in the terminal&lt;/li&gt;&lt;li&gt;&lt;a href="https://nbconvert.readthedocs.io/en/latest/usage.html"&gt;nbconvert&lt;/a&gt; - convert notebooks to other formats&lt;/li&gt;&lt;li&gt;&lt;a href="https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb"&gt;flame-temperature notebook&lt;/a&gt; - The sample notebook I used&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/charmbracelet/glow"&gt;glow&lt;/a&gt; - Terminal Markdown viewer&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;lookatme&lt;/a&gt; - Terminal Markdown slideshow tool&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/pypa/pipx"&gt;pipx&lt;/a&gt; - Run python cli's without maintianing a virtual environment&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/willmcgugan/rich"&gt;rich&lt;/a&gt; - Beautiful python terminal formatter&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/just-use-pathlib'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Just Use Pathlib&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/jut</guid><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate></item><item><title>30 days dotfile ricing</title><link>https://waylonwalker.com/dotfile-rice-challenge-intro</link><description>https://youtu.be/Jq1Y48F I am challenging myself to 30 days of dotfile ricing.  I have been on linux This is primarily going to be focused on productivity, but </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/Jq1Y48F_rOU"&gt;https://youtu.be/Jq1Y48F_rOU&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I am challenging myself to 30 days of dotfile ricing.  I have been on linuxdesktop for a few months now and have a pretty good workflow going, I have thecoarse edits done to my workflow, but it has some rough edges that need sandeddown.  It's time to squash some of those little annoyances that still exist inmy setup.&lt;/p&gt;&lt;p&gt;This is primarily going to be focused on productivity, but may have  a fewthings to just look better.  This will comprise heavily of aliases, zsh, andnvim config.&lt;/p&gt;&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the &lt;a href="https://waylonwalker/rss/"&gt;rssfeed&lt;/a&gt; to stay up to date.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/drawing-ascii-boxes'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;drawing ascii boxes&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/don-t-waste-your-time-learning-everything'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Don‚Äôt waste your time learning everything&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/dotfile-rice-challenge-intro</guid><pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate></item><item><title>How linux users install a text editor</title><link>https://waylonwalker.com/install-nvim-skit</link><description>In honor of the neovim 0.6.0 release, I decided to do a funny skit installing https://youtu.be/64oKLphhBuo The thing that took me the longest to realize was....</description><content:encoded>&lt;p&gt;In honor of the neovim 0.6.0 release, I decided to do a funny skit installingneovim, and fix up my install script in the process as part of my challenge tofix up my dotfiles.  I ran into one snag where I was not updating the repo thatI cloned.  I moved it to the directory I now keep third-party git repos and setit to update with ansible.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/64oKLphhBuo"&gt;https://youtu.be/64oKLphhBuo&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The thing that took me the longest to realize was.... I had a path issuepointing me to an old install of the appimage over the fresh build,  fixed thatup and now we are on 0.7.0 nightly.&lt;/p&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;p&gt;&lt;a href="https://neovim.io/"&gt;https://neovim.io/&lt;/a&gt;&lt;a href="https://github.com/neovim/neovim"&gt;https://github.com/neovim/neovim&lt;/a&gt;&lt;a href="https://github.com/neovim/neovim/releases/tag/v0.6.0"&gt;https://github.com/neovim/neovim/releases/tag/v0.6.0&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/interrogate'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Interrogate is a pretty awesome, brand new, cli for Python packages&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/install-miniconda'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to Install miniconda on linux (from the command line only)&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/install-nvim-skit</guid><pubDate>Tue, 30 Nov 2021 00:00:00 +0000</pubDate></item><item><title>Open files FAST from zsh | or bash if thats your thing</title><link>https://waylonwalker.com/fuzzy-edit-zsh</link><description>https://youtu.be/PQw I am often in a set of tmux splits flying back and forth, accidentally close my Make sure you check out the YouTube video to see all of my </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/PQw_is7rQSw"&gt;https://youtu.be/PQw_is7rQSw&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I am often in a set of tmux splits flying back and forth, accidentally close myeditor, so when I come back to that split and hit my keybinds to edit files Ienter them into zsh rather than into nvim like I intended.  Today I am going tosand off that rough edge and get as similar behavior to nvim as I can with acouple of aliases.&lt;/p&gt;&lt;p&gt;Make sure you check out the YouTube video to see all of my improvements.&lt;/p&gt;&lt;h2 id="whats-an-alias"&gt;what's an alias&lt;/h2&gt;&lt;p&gt;If you have never heard of an alias before it's essentially a shortcut to agiven command.  You can pass additional flags to the underlying command andthey will get passed in.  Most of the time they are just shorter versions ofcommands that you run often or even like in this case a common muscle memorytypo that occurs for you.&lt;/p&gt;&lt;h2 id="my-new-aliass-for-fuzzy-editing-files-from-zsh"&gt;My new alias's for fuzzy editing files from zsh&lt;/h2&gt;&lt;p&gt;Here are the new aliases that I came up with to smooth out my workflow.  Thesegive me a similar feel to how these keys work in neovim but from zsh.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# fuzzy select file to edit&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nvim `fzf --preview=&amp;quot;bat --color always {}&amp;quot;`&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;# give me the same syntax as edit while in neovim&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; :e&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nvim &amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the &lt;a href="https://waylonwalker/rss/"&gt;rssfeed&lt;/a&gt; to stay up to date.&lt;/p&gt;&lt;h2 id="related-links"&gt;Related links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj"&gt;playlist for my dotfiles challenge&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/gatsby-remark-embedder'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;gatsby-remark-embedder&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/four-github-actions-website'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Four github actions for your website&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/fuzzy-edit-zsh</guid><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Setup a yaml schema | yamlls for a silky smooth setup</title><link>https://waylonwalker.com/setup-yamlls</link><description>I https://youtu.be/xo4HrFoKF4c The video for this one is part of a I have my  You will need the following plugins.  I use plug, if you don Make sure that you ha</description><content:encoded>&lt;p&gt;I've gone far too long without a good setup for editing yamlfiles, I am missing out on autocomplete and proper diagnostics.This ends today as I setup yaml-language-server in neovim.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/xo4HrFoKF4c"&gt;https://youtu.be/xo4HrFoKF4c&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The video for this one is part of a&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj"&gt;challenge-playlist&lt;/a&gt;I put out for myself to constantly improve my dotfiles for all of December.&lt;/p&gt;&lt;h2 id="initvim"&gt;init.vim&lt;/h2&gt;&lt;p&gt;I have my &lt;code&gt;init.vim&lt;/code&gt; setup to only source other modules, if you want everythingin a single config, feel free to do as you wish.  I broke mine up earlier thisyear as I doubled into nvim and am not going back.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/plugins.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.cmp&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.lsp-config&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="plugin-setup"&gt;Plugin setup&lt;/h2&gt;&lt;p&gt;You will need the following plugins.  I use plug, if you don't you will have toconvert the syntax over to the plugin manager you use.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/neovim/nvim-lspconfig"&gt;neovim/nvim-lspconfig&lt;/a&gt; is forconfiguring the lsp.  It comes with a bunch of sane defaults for most servers,so you pretty much just have to call setup on that server unless you want tochange the defaults.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;hrsh7th/nvim-cmp&lt;/a&gt; is what I use forautocomplete. If you are using something else you might need to set that up ina different way in order to get the autocomplete to work.  You will still getthe diagnostics with just lsp-config.&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/kabouzeid/nvim-lspinstall"&gt;kabouzeid/nvim-lspinstall&lt;/a&gt; willaide in installing lsp's if you want.  I have chosen not to because I want tohave my full setup scripted so when I setup any new machine I just run myansible-playbook.  This library is nice to just set things up quick and playwith them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;quot; /home/u_walkews/.config/nvim/plugins.vim&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;neovim/nvim-lspconfig&amp;#39;&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; if you want to use nvim-cmp&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/nvim-cmp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-nvim-lsp&amp;#39;&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; if you want to use lsp-install&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;kabouzeid/nvim-lspinstall&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="cmp-config"&gt;cmp config&lt;/h2&gt;&lt;p&gt;Make sure that you have nvim_lsp as a source in your cmp config.  This is myconfig as of now, its likely to change in the future, set yours up how youlike.  hrsh7th has a really good readme if you want help configuring cmp.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Again if you don't use cmp you can skip this step, cmp is for autocomplete.You can use a different plugin for autocomplete, or not use a plugin at allif that's your thing.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua&lt;/span&gt;&lt;span class="c1"&gt;-- Setup nvim-cmp.&lt;/span&gt;&lt;span class="kd"&gt;local&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmp&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;snippet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;expand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;-- For `vsnip` user.&lt;/span&gt;    &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;vsnip#anonymous&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;-- For `luasnip` user.&lt;/span&gt;    &lt;span class="c1"&gt;-- require(&amp;#39;luasnip&amp;#39;).lsp_expand(args.body)&lt;/span&gt;    &lt;span class="c1"&gt;-- For `ultisnips` user.&lt;/span&gt;    &lt;span class="c1"&gt;-- vim.fn[&amp;quot;UltiSnips#Anon&amp;quot;](args.body)&lt;/span&gt;    &lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-n&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_next_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-p&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_prev_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Insert&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;Down&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_next_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;Up&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_prev_item&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SelectBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-d&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scroll_docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-f&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scroll_docs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-Space&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;C-e&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;lt;CR&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mapping&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;confirm&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;    &lt;span class="n"&gt;behavior&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfirmBehavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="nb"&gt;select&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="n"&gt;sources&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;nvim_lsp&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vsnip&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;buffer&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;calc&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lsp-config"&gt;lsp config&lt;/h2&gt;&lt;p&gt;Next up is the heart of this post, the lsp-config.lua.  This one is prettystraight forward, require lspconfig (which you need the plugin for), then setit up with cmp and the extra schemas.  I'm sure there are yaml schemas for tonsof things, I'll probably add more in the future, but for now, this is what Ihave.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;--  ~/.config/nvim/lua/waylonwalker/lsp-config.lua&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lspconfig&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yamlls&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="n"&gt;on_attach&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;on_attach&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;capabilities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cmp_nvim_lsp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;update_capabilities&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lsp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;protocol&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_client_capabilities&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;    &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;yaml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;            &lt;span class="n"&gt;schemas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://raw.githubusercontent.com/quantumblacklabs/kedro/develop/static/jsonschema/kedro-catalog-0.17.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;conf/**/*catalog*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://json.schemastore.org/github-workflow.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/.github/workflows/*&amp;quot;&lt;/span&gt;            &lt;span class="p"&gt;}&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/WaylonWalker/devtainer/tree/main/nvim/.config/nvim"&gt;my nvim config&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/neovim/nvim-lspconfig"&gt;nvim-lspconfig GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/hrsh7th/nvim-cmp"&gt;nvim-cmp GitHub&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/kabouzeid/nvim-lspinstall/blob/main/lua/lspinstall/servers/yaml.lua"&gt;lspinstall yamlls&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.npmjs.com/package/yaml-language-server?activeTab=readme"&gt;yaml-language-server npm&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the&lt;a href="https://waylonwalker/rss/"&gt;rss-feed&lt;/a&gt; to stay up to date.&lt;/p&gt;&lt;h2 id="also-check-out-my-python-lsp-setup"&gt;Also Check out My python lsp setup&lt;/h2&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/setup-pylsp/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/setup-pylsp-og_250x140.png" alt="article cover for  python lsp setup"/&gt;          &lt;p&gt;&lt;strong&gt; python lsp setup&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/should-i-switch-to-zeit-now'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Should I switch to Zeit Now&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/serverless-things-to-investigate'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Serverless things to investigate&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/setup-yamlls</guid><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Code Review from the comfort of vim | Diffurcate</title><link>https://waylonwalker.com/diffurcate</link><description>I often review Pull requests from the browser as it just makes it so easy to see https://youtu.be/5NKaZFavM0E This all stems from the great plugin by First to q</description><content:encoded>&lt;p&gt;I often review Pull requests from the browser as it just makes it so easy to seethe diffs and navigate through them, but there comes a time when the diffs getreally big and hard to follow.  That's when its time to bring in the comforts ofvim.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/5NKaZFavM0E"&gt;https://youtu.be/5NKaZFavM0E&lt;/a&gt;&lt;/p&gt;&lt;h2 id="plugins-needed"&gt;Plugins needed&lt;/h2&gt;&lt;p&gt;This all stems from the great plugin by&lt;a href="https://github.com/AndrewRadev"&gt;AndrewRadev&lt;/a&gt;.  It breaks a downinto a project.  So rather than poping into a pager from git diff,you can pipe to diffurcate and it will setup a project in a tmpdirectory for you and you  can browse this project just like anyother except it's just a diff.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Plug &lt;span class="s1"&gt;&amp;#39;AndrewRadev/diffurcate.vim&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="my-aliases"&gt;My aliases&lt;/h2&gt;&lt;p&gt;First to quickly checkout PR's from azure devops I have setup an alias to fuzzyselect a pr and let the &lt;code&gt;az&lt;/code&gt; command do the checkout.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;azcheckout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;az repos pr checkout --id $(az repos pr list --output table | tail -n -2 | fzf | cut -d &amp;quot; &amp;quot; -f1)&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next I have a few aliases setup for checking diffs.  The first one checks whatis staged vs the current branch, the others check the current branch vs main ormaster.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias diffstaged=&amp;quot;git diff --staged | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;&amp;quot;alias diffmain=&amp;quot;git diff main.. | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;&amp;quot;alias diffmaster=&amp;quot;git diff master.. | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;&amp;quot;diffcommit() {    git diff $1 | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/AndrewRadev/diffurcate.vim"&gt;diffurcte.vim&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/digital-gardening-stream-6-6-2021'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;üå± Digital Gardening | gif to Mp4 | Stream replay June 4, 2021&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/devto-comments-from-url'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to get Dev Comments from an article Url&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/diffurcate</guid><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate></item><item><title>You must use augroup with autocmd in vim | Here's how</title><link>https://waylonwalker.com/vim-augroup</link><description>If you are running vim autocmd https://youtu.be/2ITTn4Dl0lc For  Lets create a new file called  I What you need to do is clear out all commands in the augroup w</description><content:encoded>&lt;p&gt;If you are running vim autocmd's without a group, you're killing yourperformance.  Granted your probably not sourcing your vimscript files withautocmd's too often, but every time you source that vimscript you are addinganother command that needs to run redundantly.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/2ITTn4Dl0lc"&gt;https://youtu.be/2ITTn4Dl0lc&lt;/a&gt;&lt;/p&gt;&lt;h2 id="this-is-what-i-had"&gt;This is what I had&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Not silky smooth&lt;/em&gt;&lt;/p&gt;&lt;p&gt;For &lt;strong&gt;WAAY&lt;/strong&gt; too long I have had something like this in my  vimrc or init.vim.It formats my python for me on every save, works great except if I source mydotfiles more than once I start adding how many times black runs.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;Black&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="why-is-a-bare-autocmd-bad"&gt;Why is a bare autocmd bad&lt;/h2&gt;&lt;p&gt;&lt;em&gt;let me demonstrate&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Lets create a new file called &lt;code&gt;format.vim&lt;/code&gt; and give it the &lt;code&gt;:so %&lt;/code&gt;. Worksgreat, it starts telling me that its formatting.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; :echo&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;formatting with black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="too-many-formats" src="https://images.waylonwalker.com/vim-augroups-too-many-formats.GIF" /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;BUT&lt;/strong&gt; as every time I give it the &lt;code&gt;:so %&lt;/code&gt; it formats an extra time on everysingle save.&lt;/p&gt;&lt;h2 id="setting-up-an-augroup"&gt;Setting up an augroup&lt;/h2&gt;&lt;p&gt;I've been told I need an &lt;code&gt;augroup&lt;/code&gt; to prevent duplicates. So I did it, andnothing changes, it still ran as many times as it was sources on every save.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;augroup black    autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; :echo&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;formatting with black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;augroup &lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="clearing-out-the-augroup"&gt;Clearing out the augroup&lt;/h2&gt;&lt;p&gt;What you need to do is clear out all commands in the augroup with &lt;code&gt;autocmd!&lt;/code&gt;right at the beginning of the group.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;augroup black    autocmd&lt;span class="p"&gt;!&lt;/span&gt;    autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; :echo&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;formatting with black&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;augroup &lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="my-final-silky-smooth-setup"&gt;My Final silky smooth setup&lt;/h2&gt;&lt;p&gt;Now this is what I have in my dotfiles for a silky smooth setup that does notrun automds like crazy as I am making changes to my dotfiles.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;augroup waylonwalker    autocmd&lt;span class="p"&gt;!&lt;/span&gt;    autocmd bufwritepre *.&lt;span class="k"&gt;py&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;PyPreSave&amp;#39;&lt;/span&gt;    autocmd bufwritepost *.&lt;span class="k"&gt;py&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;PyPostSave&amp;#39;&lt;/span&gt;    autocmd bufwritepost .tmux.&lt;span class="k"&gt;conf&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;:!tmux source-file %&amp;#39;&lt;/span&gt; autocmd bufwritepost .tmux.local.&lt;span class="k"&gt;conf&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;:!tmux source-file %&amp;#39;&lt;/span&gt;    autocmd bufwritepost *.&lt;span class="k"&gt;vim&lt;/span&gt; execute &lt;span class="s1"&gt;&amp;#39;:source %&amp;#39;&lt;/span&gt;augroup &lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://vimhelp.org/autocmd.txt.html#%3Aaugroup"&gt;vim-help&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://youtu.be/2ITTn4Dl0lc"&gt;youtube video&lt;/a&gt; for this article&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/vim-replace-visual-star'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim Replace Visual Star&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/variable-names-don-t-need-their-type'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Variables names don't need their type&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/vim-augroup</guid><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Serve html from your command line</title><link>https://waylonwalker.com/til/serve-html-command-line</link><description>When I first moved to vim from and ide like vscode or sublime text one of my You will need a way to run another process alongside vim, here are a couple use bac</description><content:encoded>&lt;p&gt;When I first moved to vim from and ide like vscode or sublime text one of myvery first issues was trying to preview my website at &lt;code&gt;localhost:8000&lt;/code&gt;.  Therehad always just been a button there to do it in all of my other editors, notvim.  There are not many buttons for anything in vim.  While there is probably aplugin that can run a webserver for me in vim, it's not necessary, we just needthe command line we are already in.&lt;/p&gt;&lt;h2 id="running-a-separate-process"&gt;running a separate process&lt;/h2&gt;&lt;p&gt;You will need a way to run another process alongside vim, here are a coupleideas to get you going that are not the focus here.style&lt;/p&gt;&lt;ul&gt;&lt;li&gt;use background jobs&lt;/li&gt;&lt;li&gt;c-z to send a job to the background&lt;/li&gt;&lt;li&gt;fg to bring it back&lt;/li&gt;&lt;li&gt;use a second terminal&lt;/li&gt;&lt;li&gt;use a second tab&lt;/li&gt;&lt;li&gt;use tmux and run it in a separate split/window&lt;/li&gt;&lt;li&gt;use an embeded nvim terminal&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="running-a-development-webserver-from-the-command-line"&gt;running a development webserver from the command line&lt;/h2&gt;&lt;p&gt;Python already exists on most linux systems by default, and most are now onpython3.  If you are on windows typing python will take you directly to thewindows store to install it, or you can also use wsl.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# python3&lt;/span&gt;python -m http.server&lt;span class="c1"&gt;# running on port 5000&lt;/span&gt;python -m http.server --directory markout &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# for the low chance you are on python2python -m SimpleHTTPServer# running on port 5000python -m SimpleHTTPServer 5000python -m SimpleHTTPServer --directory markout 5000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running a python static webserver from the command line" src="https://images.waylonwalker.com/python-m-http-server.png" /&gt;&lt;/p&gt;&lt;h2 id="using-nodejs"&gt;using nodejs&lt;/h2&gt;&lt;p&gt;If you are a web developer it's likely that you need nodejs and npm on yoursystem anyways and may want to use one of the servers from npm.  I'll admit withthese not being tied to the long term support of a language they are much morefeature rich with things like compression out of the box.  In my opinion theyare nice things that you would want out of a production server, but may notbe necessary for development.&lt;/p&gt;&lt;h3 id="installing-npx"&gt;installing npx&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# if you don&amp;#39;t alredy have npx&lt;/span&gt;npm i -g npx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;npx is a handy tool that lets you run command line applications straight fromnpm without installing them.  It pulls the latest version every time you wantto run, then executes it without it being installed.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="running-the-http-server-with-npx"&gt;running the http-server with npx&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npx http-server&lt;span class="c1"&gt;# running on port 5000&lt;/span&gt;npx http-server -p &lt;span class="m"&gt;5000&lt;/span&gt;npx http-server markout -p &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running a nodejs static webserver from the command line" src="https://images.waylonwalker.com/npx-http-server.png" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/simple-samba'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Simple Samba Share Setup&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/review-pull-requests-with-git-worktrees'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Review Pull Requests with git worktrees&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/serve-html-command-line</guid><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Installing Homebrew on Linux</title><link>https://waylonwalker.com/til/installing-homebrew-linux</link><description>Installing brew on linux proved quite easy and got pyenv running for me I had never used homebrew before, honestly I thought it was a mac only That was it, now </description><content:encoded>&lt;p&gt;Installing brew on linux proved quite easy and got pyenv running for mewithin 4 commands.&lt;/p&gt;&lt;p&gt;I had never used homebrew before, honestly I thought it was a mac onlything for years.  Today I wanted to try out pyenv, and the reccommendedway to install was using homebrew.  I am not yet sure if I want eitherin my normal workflow, so for now I am just going to pop open a newterminal and install homebrew and see how it goes.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/bin/bash -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eval &amp;quot;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /home/walkers/.zprofile&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;/home/linuxbrew/.linuxbrew/bin/brew shellenv&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That was it, now homebrew is working. Starting a new shell and runningthe command to install pyenv worked.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install pyenv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://brew.sh/"&gt;homebrew&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/installing-pipx-on-ubuntu'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Pipx on Ubuntu&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/install-yq'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Install yq | A light weight yaml parser cli&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/installing-homebrew-linux</guid><pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate></item><item><title>My first impressions with pyenv</title><link>https://waylonwalker.com/til/pyenv-first-impressions</link><description>pyenv provides an easy way to install almost any version of python from I needed to install an older version of python on ubuntu I Based on the Readme it looked</description><content:encoded>&lt;p&gt;pyenv provides an easy way to install almost any version of python froma large list of distributions. I have simply been using the version ofpython from the os package manager for awhile, but recently I bumped myhome system to Ubuntu 21.10 impish, and it is only 3.9+ while thelibraries I needed were only compatable with up to 3.8.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I needed to install an older version of python on ubuntu&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I've been wanting to check out pyenv for awhile now, but without aburning need to do so.&lt;/p&gt;&lt;h2 id="installing"&gt;installing&lt;/h2&gt;&lt;p&gt;Based on the Readme it looked like I needed to install using homebrew,so thisis what I did, but I later realized that there is a pyenv-installer repo thatmay have saved me this need.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/til/installing-homebrew-linux/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/til/installing-homebrew-linux-og_250x140.png" alt="article cover for  Installing Homebrew on Linux"/&gt;          &lt;p&gt;&lt;strong&gt; Installing Homebrew on Linux&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;h2 id="list-out-install-candidates"&gt;List out install candidates&lt;/h2&gt;&lt;p&gt;You can list all of the available versions to install with&lt;code&gt;pyenv install --list&lt;/code&gt;.  It does reccomend updating pyenv if you suspectthat it is missing one.  At the time of writing this comes out to 532different versions!&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install --list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lets-install-the-latest-38-patch"&gt;Let's install the latest 3.8 patch&lt;/h2&gt;&lt;p&gt;Installing a version is as easy as &lt;code&gt;pyenv install 3.8.12&lt;/code&gt;.  This willinstall it, but not make it active anywhere.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install 3.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lets-use-python-3812-while-in-this-directory"&gt;let's use python 3.8.12 while in this directory&lt;/h2&gt;&lt;p&gt;Running &lt;code&gt;pyenv local&lt;/code&gt; will set the version of python that we wish to usewhile in this directory and any directory underneath of it while usingthe pyenv command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;local&lt;/span&gt; python3.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="python-version-file"&gt;.python-version file&lt;/h2&gt;&lt;p&gt;This creates a &lt;code&gt;.python-version&lt;/code&gt; files in the directory I ran it in,that contains simply the version number.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-with-pipx"&gt;using with pipx&lt;/h2&gt;&lt;p&gt;I immediately ran into the same issue I was having before when trying torun pipx, as pipx was running my system python.  I had to install pipxin the python3.8 environment to get it to use it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;exec&lt;/span&gt; pip install pipxpyenv &lt;span class="nb"&gt;exec&lt;/span&gt; pipx run kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="python-is-still-the-system-python"&gt;python is still the system python&lt;/h2&gt;&lt;p&gt;When I open a terminal and call &lt;code&gt;python&lt;/code&gt; its still my system python thatI installed and set with update-alternatives.  I am not sure if this isexpected or based on how I had installed the system python previously,but it's what happened on my system.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;update-alternatives --query pythonName: pythonLink: /home/walkers/.local/bin/pythonStatus: autoBest: /usr/bin/python3Value: /usr/bin/python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="making-a-virtual-environment"&gt;making a virtual environment&lt;/h2&gt;&lt;p&gt;To make a virtual environment, I simply ran &lt;code&gt;pyenv exec python&lt;/code&gt; in placeof where I would normally run python and it worked for me.  There is awhole package to get pyenv and venv to play nicely together, so Isuspect that there is more to it, but this worked well for me and I washappy.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv exec python -m venv .venv --prompt $(basename $PWD)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now when my virtual environment is active it points to the python inthat virtual environment, and is the version of python that was used tocreate the environment.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/pyenv/pyenv#installation"&gt;https://github.com/pyenv/pyenv#installation&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/pyenv-no-sqlite3'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;pyenv no module named '_sqlite3'&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/practice-kedro'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Practice making pipelines with kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/pyenv-first-impressions</guid><pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate></item><item><title>List all the files containing a phrase</title><link>https://waylonwalker.com/til/list-all-files-containing-phrase</link><description>One of the most useful skills you can acquire to make you faster at I Passing the flag  Giving </description><content:encoded>&lt;p&gt;One of the most useful skills you can acquire to make you faster atalmost any job that uses a computer is getting good at finding text inyour current working diretory and identifying the files that its in.  Ioften use the silver searcher &lt;code&gt;ag&lt;/code&gt; or ripgrep &lt;code&gt;rg&lt;/code&gt; to find files inlarge directories quickly.  Both have a sane set of defaults that ignorehidden and gitignored files, but getting them to list only the filenamesand not the matched was not trivial to me.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I've searched throught he help/man pages many times looking for theseflags and they always seem to evade me.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="ag"&gt;ag&lt;/h2&gt;&lt;p&gt;Passing the flag &lt;code&gt;-l&lt;/code&gt; to ag will get it to list only the filepath, andnot the match. Here I gave it a &lt;code&gt;--md&lt;/code&gt; as well to only return markdownfiletypes.  &lt;code&gt;ag&lt;/code&gt; supports a number of filetypes in a very similar way.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag nvim --md -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rg"&gt;rg&lt;/h2&gt;&lt;p&gt;Giving &lt;code&gt;rg&lt;/code&gt; the &lt;code&gt;--files-with-matches&lt;/code&gt; flag will yield you a similar setof results, giving only the filepaths themselves and not the matchstatement.  Also passing in the &lt;code&gt;-g "*.md"&lt;/code&gt; will similarly yield onlyresults from markdown files.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --files-with-matches you -g &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/lookatme-slides'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How I Present Markdown Slides from the Terminal&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-unzip-directory'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Unzip minecraft mods to their directory from the command line&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/list-all-files-containing-phrase</guid><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Tmux Pop size</title><link>https://waylonwalker.com/til/tmux-pop-size</link><description>tmux popups can be sized how you like based on the % width of the</description><content:encoded>&lt;p&gt;tmux popups can be sized how you like based on the % width of theterminal on creation by using the flags (h, w, x, y) for height, width,and position.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# normal popup&lt;/span&gt;tmux popup figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# fullscreen popup&lt;/span&gt;tmux popup -h &lt;span class="m"&gt;100&lt;/span&gt;% -w &lt;span class="m"&gt;100&lt;/span&gt;% figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# 75% centered popup&lt;/span&gt;tmux popup -h &lt;span class="m"&gt;100&lt;/span&gt;% -w &lt;span class="m"&gt;75&lt;/span&gt;% figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# 75% popup on left side&lt;/span&gt;tmux popup -h &lt;span class="m"&gt;100&lt;/span&gt;% -w &lt;span class="m"&gt;75&lt;/span&gt;% -x &lt;span class="m"&gt;0&lt;/span&gt;% figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="example video running these commands" src="https://images.waylonwalker.com/tmux-popup-position.gif" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ubuntu-terminal-clipboard'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Tmux and Vim Clipboard for Ubuntu&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/tmux-copy-mode-binding'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A better copy-mode bind for Tmux&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/tmux-pop-size</guid><pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Remove Vim Tab Characters</title><link>https://waylonwalker.com/til/remove-vim-tab-characters</link><description>I It turns out they are tabs, and you can get rid of the little leading</description><content:encoded>&lt;p&gt;I've been stuck many times looking at a vim buffer with little questionmarks at the beginning of each line and trying to get rid of them.  forso long I didn't know what they were so trying to get rid of them wasimpossible.&lt;/p&gt;&lt;p&gt;&lt;img alt="example of what the tab character renders as in my editor" src="https://images.waylonwalker.com/vim-tab-characters.png" /&gt;&lt;/p&gt;&lt;p&gt;It turns out they are tabs, and you can get rid of the little leadingquestion marks with this substitution command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;%s&lt;span class="sr"&gt;/\t/&lt;/span&gt;    /&lt;span class="k"&gt;g&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/review-pull-requests-with-git-worktrees'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Review Pull Requests with git worktrees&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/python-sys-excepthook'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Python sys.excepthook&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/remove-vim-tab-characters</guid><pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Using Copier Answers to rerun templates quickly</title><link>https://waylonwalker.com/til/copier-answers</link><description>The copier answers file is a key component to making your templates Inside of my  Inside my copier.yml I have setup my  Once I change the  I After rendering the</description><content:encoded>&lt;p&gt;The copier answers file is a key component to making your templatesre-runnable.  Let's look at the example for my setup.py.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ tree ~/.copier-templates/setup.py/home/walkers/.copier-templates/setup.py‚îú‚îÄ‚îÄ &lt;span class="o"&gt;[[&lt;/span&gt; _copier_conf.answers_file &lt;span class="o"&gt;]]&lt;/span&gt;.tmpl‚îú‚îÄ‚îÄ copier.yml‚îú‚îÄ‚îÄ setup.cfg‚îî‚îÄ‚îÄ setup.py.tmpl&lt;span class="m"&gt;0&lt;/span&gt; directories, &lt;span class="m"&gt;4&lt;/span&gt; files&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inside of my &lt;code&gt;[[ _copier_conf.answers_file ]].tmpl&lt;/code&gt; file is this, amessage not to muck around with it, and the ansers in yaml form.  Thefirst line is just a helper for the blog post.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.copier-templates/setup.py/\[\[\ _copier_conf.answers_file\ \]\].tmpl&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Changes here will be overwritten by Copier; NEVER EDIT MANUALLY&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;[[&lt;/span&gt;&lt;span class="nv"&gt;_copier_answers|to_nice_yaml&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inside my copier.yml I have setup my _answers_file to point to a specialfile.  This is because this is not a whole projet template, but one justfor a single file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# copier.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# ...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;_answers_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;.setup-py-copier-answers.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Once I change the _answers_file I was incredibly stuck&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="run-it"&gt;Run it&lt;/h2&gt;&lt;p&gt;I'm making a library of personal copier templates in my&lt;code&gt;~/.copier-templates&lt;/code&gt; directory and I am going to run it from there.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;copier copy ~/.copier-templates/setup.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="results"&gt;Results&lt;/h2&gt;&lt;p&gt;After rendering the template we have the following content in our&lt;code&gt;.setup.setup-py-copier-answers.yml&lt;/code&gt; file.  This will allow us to updatequick if we ever change our template.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# .setup-py-copier-answers.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Changes here will be overwritten by Copier; NEVER EDIT MANUALLY&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;_src_path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/home/walkers/.copier-templates/setup.py&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;author_github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;waylonwalker&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;author_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Waylon Walker&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;awesomeness&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;framework&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;null&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;keywords&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;null&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;package_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;my-package&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="update-it"&gt;Update it&lt;/h2&gt;&lt;p&gt;This is where I was most stuck, primarily becuase &lt;code&gt;-a &amp;lt;answers_file&amp;gt;&lt;/code&gt;must come exactly after the base command &lt;code&gt;copier&lt;/code&gt;.  This felt a bit oddto and not where I expected it so it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;copier -a .setup-py-copier-answers.yml update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="stop-asking-all-these-damn-questions"&gt;Stop asking all these damn questions&lt;/h2&gt;&lt;p&gt;So the defaults are now changed to our previous results, but it keepsasking for them.  To stop asking we can simply add a &lt;code&gt;-f&lt;/code&gt; flag.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;copier -fa .setup-py-copier-answers.yml update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/copier-tasks'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Copier Tasks | Python templating post run task&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/convert-markdown-pdf-linux'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Converting markdown to pdf with pandoc on linux&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/copier-answers</guid><pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate></item><item><title>2 minutes to stow</title><link>https://waylonwalker.com/til/2-minutes-to-stow</link><description>Stow is an incredible way to manage your dotfiles.  It works by managing When using stow its easiest to keep your dotfiles directory (you may name it Then each </description><content:encoded>&lt;p&gt;Stow is an incredible way to manage your dotfiles.  It works by managingsymlinks between your dotfiles directory and the rest of the system.  You canthen make your dotfiles directory a git repo and have it version controlled.  Inmy honest opinion, when I was trying to get started the docs straight into deepdetail of things I frankly don't really care about and jumped right over how touse it.&lt;/p&gt;&lt;p&gt;When using stow its easiest to keep your dotfiles directory (you may name itwhat you want) in your home directory, with application directories inside ofit.&lt;/p&gt;&lt;p&gt;Then each application directory should reflet the same diretory structure as youwant in your home directory.&lt;/p&gt;&lt;h2 id="zsh"&gt;zsh&lt;/h2&gt;&lt;p&gt;Here is a simple example with my zshrc.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir ~/dotfiles&lt;span class="nb"&gt;cd&lt;/span&gt; ~/dotfilesmkdir zshmv ~/.zshrc zshstow --simulate zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can pass in the --simulate if you wish, it will tell you if there are goingto be any more errors or not, but it wont give much more than that.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;WARNING: in simulation mode so not modifying filesystem.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once your ready you can stow your zsh application.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stow zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="nvim"&gt;nvim&lt;/h2&gt;&lt;p&gt;A slightly more complicated example is neovim since its diretory structure doesnot put configuration files directly in your home directory, but rather at adeeper level.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir ~/dotfiles/nvim/.config/nvim/ -p&lt;span class="nb"&gt;cd&lt;/span&gt; ~/dotfilesmv ~/.config/nvim/ ~/dotfiles/nvim/.config/nvim/stow zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;!notice how the nvim directory inside of dotfiles is structured like it wouldbe in your $HOME directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ag-ahead'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;ag silver searcher look ahead and look behind&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/testproject-io-py-actions'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Integration testing with Python, TestProject.io, and GitHub Actions&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/2-minutes-to-stow</guid><pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Installing Pipx on Ubuntu</title><link>https://waylonwalker.com/til/installing-pipx-on-ubuntu</link><description>I recently paired up with another dev running windows with Ubuntu running in Open up a terminal and get your required system dependencies using the apt I like r</description><content:encoded>&lt;p&gt;I recently paired up with another dev running windows with Ubuntu running inwsl, and we had a bit of a stuggle to get our project off the ground becausethey were missing com system dependencies to get going.&lt;/p&gt;&lt;h2 id="straight-in-the-terminal"&gt;Straight in the terminal&lt;/h2&gt;&lt;p&gt;Open up a terminal and get your required system dependencies using the aptpackage manager and the standard ubuntu repos.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt updatesudo apt upgradesudo apt install &lt;span class="se"&gt;\&lt;/span&gt;      python3-dev &lt;span class="se"&gt;\&lt;/span&gt;      python3-pip &lt;span class="se"&gt;\&lt;/span&gt;      python3-venv &lt;span class="se"&gt;\&lt;/span&gt;      python3-virtualenvpip install pipx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-an-ansible-playbook"&gt;Using an Ansible-Playbook&lt;/h2&gt;&lt;p&gt;I like running things like this through an ansible-playbook as it give me someextra control and repeatability next time I have a new machine to setup.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;localhost&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;gather_facts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;become&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;become_user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;lookup(&amp;#39;env&amp;#39;,&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;USER&amp;#39;)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;pre_tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;update repositories&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;apt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;update_cache=yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;become_user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;changed_when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;False&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_user_id&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install System Packages 1 (terminal)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;become_user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;apt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;build-essential&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python3-dev&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python3-pip&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python3-venv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python3-virtualenv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;check is pipx installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command -v pipx&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;register&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pipx_exists&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;ignore_errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pipx&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pipx_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;pip&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pipx&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pipx&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="video-clip"&gt;video clip&lt;/h2&gt;&lt;p&gt;Here is a clip of me getting pipx running on ubuntu 21.10, and running a few ofmy favorite pipx commands.&lt;/p&gt;&lt;p&gt;&lt;img alt="installation video" src="https://images.waylonwalker.com/pipx-install-ubuntu.gif" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/kedro-lambda-node'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Lambda Function as a Kedro Node&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/installing-homebrew-linux'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Homebrew on Linux&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/installing-pipx-on-ubuntu</guid><pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Converting markdown to pdf with pandoc on linux</title><link>https://waylonwalker.com/til/convert-markdown-pdf-linux</link><description>Converting markdown posts to pdf on ubuntu takes a few packages from the Here is an image of what converting this article over to a pdf looks</description><content:encoded>&lt;p&gt;Converting markdown posts to pdf on ubuntu takes a few packages from thestandard repos.  I had to go through a few stack overflow posts, andnothing seemed to have all the fonts and packages that I needed toconvert markdown, but this is what ended up working for me.&lt;/p&gt;&lt;h2 id="installing-all-the-packages"&gt;Installing all the packages&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install &lt;span class="se"&gt;\&lt;/span&gt;  pandoc &lt;span class="se"&gt;\&lt;/span&gt;  texlive-latex-base &lt;span class="se"&gt;\&lt;/span&gt;  texlive-fonts-recommended &lt;span class="se"&gt;\&lt;/span&gt;  texlive-extra-utils &lt;span class="se"&gt;\&lt;/span&gt;  texlive-latex-extra &lt;span class="se"&gt;\&lt;/span&gt;  texlive-xetex&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-pandoc-to-convert-markdown-to-a-pdf"&gt;Using pandoc to convert markdown to a pdf.&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# older versions of pandoc, I needed this one on ubuntu 18.04&lt;/span&gt;&lt;span class="n"&gt;pandoc&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;til&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xelatex&lt;/span&gt;&lt;span class="c1"&gt;# newer versions of pandoc, I needed this one on ubuntu 21.04&lt;/span&gt;&lt;span class="n"&gt;pandoc&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;til&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;linux&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;pdf&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xelatex&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="results of converting this post to a pdf" src="https://images.waylonwalker.com/convert-markdown-pdf-linux-result.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Here is an image of what converting this article over to a pdf lookslike.  The raw markdown is&lt;a href="https://waylonwalker.com/convert-markdown-pdf-linux.md"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/copier-answers'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Using Copier Answers to rerun templates quickly&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/clean-qutebrowser'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;qutebrowser clean up all status bars&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/convert-markdown-pdf-linux</guid><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate></item><item><title>fuzzy wallpaper with fzf</title><link>https://waylonwalker.com/til/fzf-wallpaper</link><description>I really appreciate that in linux anything can be scripted, including I set my default wallpaper with  Leaning in on feh, we can use fzf to pick a wallpaper fro</description><content:encoded>&lt;p&gt;I really appreciate that in linux anything can be scripted, includingsetting the wallpaper.  So everytime I disconnect a monitor I can justrerun my script and fix my wallpaper without digging deep into the uiand fussing through a bunch of settings.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;feh --bg-scale ~/.config/awesome/wallpaper/my_wallpaper.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I set my default wallpaper with &lt;code&gt;feh&lt;/code&gt; using the command above.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Leaning in on feh, we can use fzf to pick a wallpaper from a directoryfull of wallpapers with very few keystrokes.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias wallpaper=&amp;#39;ls ~/.config/awesome/wallpaper | fzf --preview=&amp;quot;feh --bg-scale ~/.config/awesome/wallpaper/{}&amp;quot; | xargs -I {} feh --bg-scale ~/.config/awesome/wallpaper/{}&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I have mine alias'd to &lt;code&gt;wallpaper&lt;/code&gt; so that I can quickly run it frommy terminal.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/git-checkout-worktree'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Git Worktrees are not so Scary&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/fugitive-commit-verbose'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;fugitive verbose commit&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/fzf-wallpaper</guid><pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Copier Tasks | Python templating post run task</title><link>https://waylonwalker.com/til/copier-tasks</link><description>Copier allows you to run post render tasks, just like cookiecutter. These are The example I have below runs an  I have put the script in </description><content:encoded>&lt;p&gt;Copier allows you to run post render tasks, just like cookiecutter. These aredefined as a list of &lt;code&gt;tasks&lt;/code&gt; in your &lt;code&gt;copier.yml&lt;/code&gt;.  They are simply shellcommands to run.&lt;/p&gt;&lt;p&gt;The example I have below runs an &lt;code&gt;update-gratitude&lt;/code&gt; bash script after thecopier template has been rendered.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# copier.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;128&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;_answers_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;.gratitude-copier-answers.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;_tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;update-gratitude&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I have put the script in &lt;code&gt;~/.local/bin&lt;/code&gt; so that I know it's always on my&lt;code&gt;$PATH&lt;/code&gt;.  It will reach back into the &lt;code&gt;copier.yml&lt;/code&gt; and update the defaultnumber.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;&lt;span class="c1"&gt;# ~/.local/bin/update-gratitude&lt;/span&gt;&lt;span class="nv"&gt;current&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; ~/.copier-templates/gratitude/copier.yml &lt;span class="p"&gt;|&lt;/span&gt; head -n &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nv"&gt;new&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;expr &lt;span class="nv"&gt;$current&lt;/span&gt; + &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$current&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$new&lt;/span&gt;sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$current&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$new&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt; ~/.copier-templates/gratitude/copier.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/copier-template-variables'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;copier template variables&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/copier-answers'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Using Copier Answers to rerun templates quickly&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/copier-tasks</guid><pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Tmux hotkey for copier templates</title><link>https://waylonwalker.com/til/tmux-copier-templates</link><description>I have added a hotkey to my copier template setup to quickly access all my I</description><content:encoded>&lt;p&gt;I have added a hotkey to my copier template setup to quickly access all mytemplates at any time from tmux.  At any point I can hit &lt;code&gt;&amp;lt;c-b&amp;gt;&amp;lt;c-b&amp;gt;&lt;/code&gt;, thatsholding control and hitting &lt;code&gt;bb&lt;/code&gt;, and I will get a popup list of all of mytemplates directory names.  Its an fzf list, which means that I can fuzzysearch through it for the template I want, or arrow key to the one I want if Iam feeling insane.  I even setup it up so that the preview is a list of thefiles that come with the template in tree view.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bind-key c-b popup -E -w &lt;span class="m"&gt;80&lt;/span&gt;% -d &lt;span class="s1"&gt;&amp;#39;#{pane_current_path}&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\&lt;/span&gt;&lt;span class="s2"&gt;    pipx run copier copy ~/.copier-templates/`ls ~/.copier-templates |\&lt;/span&gt;&lt;span class="s2"&gt;    fzf --header &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; --preview=&amp;#39;tree ~/.copier-templates/{} |\&lt;/span&gt;&lt;span class="s2"&gt;    lolcat&amp;#39;` . \&lt;/span&gt;&lt;span class="s2"&gt;    &amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I've had this on my systems for a few weeks now and I am constantly using itfor my &lt;a href="https://waylonwalker.com/til/"&gt;tils&lt;/a&gt;,&lt;a href="https://waylonwalker.com/archive"&gt;blogs&lt;/a&gt;, and my .envrc file that goes intoall of my projects to make sure that I have a virtual environment installed andrunning any time I open it.&lt;/p&gt;&lt;p&gt;&lt;img alt="this is what it looks like when I open my copier templates popup" src="https://images.waylonwalker.com/copier-templates-tmux-popup.png" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/tmux-copy-mode-binding'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A better copy-mode bind for Tmux&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/textual-popup-hack'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Textual Popup Hack&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/tmux-copier-templates</guid><pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Tmux and Vim Clipboard for Ubuntu</title><link>https://waylonwalker.com/til/ubuntu-terminal-clipboard</link><description>One of the first things I noticed broken in my terminal based workflow moving First off you need to get  I have tmux setup to automatically copy any selection I</description><content:encoded>&lt;p&gt;One of the first things I noticed broken in my terminal based workflow movingfrom Windows wsl to ubuntu was that my clipboard was all messed up and notworking with my terminal apps.  Luckily setting tmux and neovim to work withthe system clipboard was much easier than it was on windows.&lt;/p&gt;&lt;p&gt;First off you need to get &lt;code&gt;xclip&lt;/code&gt; if you don't already have it provided by yourdistro.  I found it in the apt repositories.  I have used it between Ubuntu18.04 and 21.10 and they all work flawlessly for me.&lt;/p&gt;&lt;p&gt;I have tmux setup to automatically copy any selection I make to the clipboardby setting the following in my &lt;code&gt;~/.tmux.conf&lt;/code&gt;. While I have neovim open I needto be in insert mode for this to pick up.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/tmux.conf&lt;/span&gt;&lt;span class="nb"&gt;bind&lt;/span&gt; -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel &lt;span class="s2"&gt;&amp;quot;xclip -i -f -selection primary | xclip -i -selection clipboard&amp;quot;&lt;/span&gt;bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel &lt;span class="s2"&gt;&amp;quot;xclip -selection clipboard -i&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To get my yanks to go to the system clipboard in neovim, I just addedunnamedplus to my existing clipboard variable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/init.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;clipboard&lt;/span&gt;&lt;span class="p"&gt;+=&lt;/span&gt;unnamedplus&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you need to copy something right from the terminal you can use xclipdirectly.  I do this semi-often to send someone a message in chat.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cat file.txt &lt;span class="p"&gt;|&lt;/span&gt; clip -sel copy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I set up some alias's for doing this a bit more efficiently, but don't findmyself using them very often.  This helps me grab commands from history andcopy them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;hclip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;history | tail -n1 | cut -c 8- | xclip -sel clip&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;fclip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;history -n 1000 | fzf | cut -c 8- | xclip -sel clip&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;fclip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;history -n 1000 | fzf | xclip -sel clip&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/vim-cmd'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim remaps use cmd in place of :&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/tmux-pop-size'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Tmux Pop size&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/ubuntu-terminal-clipboard</guid><pubDate>Wed, 26 Jan 2022 00:00:00 +0000</pubDate></item><item><title>How to Properly Simulate Stow</title><link>https://waylonwalker.com/til/stow-simulate</link><description>prev Textual has devtools next Squoosh cli</description><content:encoded>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stow -R --simulate -vvv git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/textual-has-devtools'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Textual has devtools&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/squoosh-cli'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Squoosh cli&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/stow-simulate</guid><pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Neovim Config for Git</title><link>https://waylonwalker.com/til/neovim-config-for-git</link><description>Creating a minimal config specifically for git commits has made running The other thing that is engrained into my muscle memory is  Here is the config that has </description><content:encoded>&lt;p&gt;Creating a minimal config specifically for git commits has made running&lt;code&gt;git commit&lt;/code&gt; much more pleasant.  It starts up Much faster, and has allof the parts of my config that I use while making a git commit.  The onething that I often use is autocomplete, for things coming from elsewherein the tmux session.  For this &lt;code&gt;cmpe-tmux&lt;/code&gt; specifically is superhelpful.&lt;/p&gt;&lt;p&gt;The other thing that is engrained into my muscle memory is &lt;code&gt;jj&lt;/code&gt;for escape.  For that I went agead and added my &lt;code&gt;settings&lt;/code&gt; and &lt;code&gt;keymap&lt;/code&gt;with no noticable performance hit.&lt;/p&gt;&lt;p&gt;Here is the config that has taken&lt;/p&gt;&lt;p&gt;~/.config/nvim/init-git.vim&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/settings.&lt;span class="k"&gt;vim&lt;/span&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/&lt;span class="nb"&gt;keymap&lt;/span&gt;.&lt;span class="k"&gt;vim&lt;/span&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/git&lt;span class="p"&gt;-&lt;/span&gt;plugins.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.cmp&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;~/.config/nvim/git-plugins.vim&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;call&lt;/span&gt; plug#begin&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;~/.local/share/nvim/plugged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; cmp&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/nvim-cmp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-nvim-lsp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-buffer&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-path&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-calc&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;andersevenrud/compe-tmux&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; { &lt;span class="s1"&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;cmp&amp;#39;&lt;/span&gt; }&lt;span class="k"&gt;call&lt;/span&gt; plug#&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;~/.gitconfig&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nvim&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nvim&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init-git&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/nix-install-java8'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;nix rescues modded minecraft night&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/modded-minecraft-in-docker'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Modded Minecraft in Docker&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/neovim-config-for-git</guid><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Installing Rust and Cargo on Ubuntu 21.10 using Ansible</title><link>https://waylonwalker.com/til/install-rust</link><description>Installing rust in your own ansible playbook will make sure that you can I try to install everything that I will want to use for more than just a This is how ru</description><content:encoded>&lt;p&gt;Installing rust in your own ansible playbook will make sure that you canget consistent installs accross all the machines you may use, orreplicate your development machine if it ever goes down.&lt;/p&gt;&lt;h2 id="personal-philosophy"&gt;Personal philosophy&lt;/h2&gt;&lt;p&gt;I try to install everything that I will want to use for more than just atrial inside of my ansible playbook.  This way I always get the samesetup across my work and home machines, and anytime I might setup athrow away vm.&lt;/p&gt;&lt;h2 id="reccommended-install"&gt;reccommended install&lt;/h2&gt;&lt;p&gt;This is how rust reccomends that you install it on Ubuntu.  First updateyour system, then run their installer, and finally check that theinstall was successful.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# system update&lt;/span&gt;sudo apt updatesudo apt upgrade&lt;span class="c1"&gt;# download and run the rust installer&lt;/span&gt;curl https://sh.rustup.rs -sSf &lt;span class="p"&gt;|&lt;/span&gt; sh&lt;span class="c1"&gt;# confirm your installation is successful&lt;/span&gt;rustc --version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="ansible-install"&gt;Ansible Install&lt;/h2&gt;&lt;p&gt;The first thing I do in my playbooks is to check if the tool is alreadyinstalled.  Here I chose to look for &lt;code&gt;cargo&lt;/code&gt;, you could also look for&lt;code&gt;rustc&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;check if cargo is installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command -v cargo&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;register&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cargo_exists&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;ignore_errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I first check for an existing install so I can re-run my playbooksquickly filling in only missing tools. More on this&lt;a href="https://waylonwalker.com/til/ansible_install_if_not_callable/"&gt;ansible install conditionally&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Next we need to download the installer script and make it executable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Download Installer&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cargo_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;https://sh.rustup.rs&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/tmp/sh.rustup.rs&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0755&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;force&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;rust&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I chose to download the installer, because I was unable to pass in the&lt;code&gt;-y&lt;/code&gt; flag otherwise, which is required to do unattended installs.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Last we just run the installer given to us by rust with the &lt;code&gt;-y&lt;/code&gt; flag sothat it will run unattended.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;install rust/cargo&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cargo_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/tmp/sh.rustup.rs -y&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;rust&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="one-more-thing"&gt;One more thing&lt;/h2&gt;&lt;p&gt;Make sure that you source your cargo env, otherwise your shell will notfind &lt;code&gt;rustc&lt;/code&gt; or &lt;code&gt;cargo&lt;/code&gt;.  I chose to do this by adding the followingline to my &lt;code&gt;~/.zshrc&lt;/code&gt;.  You can but it in &lt;code&gt;~/.bashrc&lt;/code&gt; if that is yourthing, or just run it in your shell to just get it to work.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f ~/.cargo/env &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.cargo/env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="full-install-playbook"&gt;Full Install Playbook&lt;/h2&gt;&lt;p&gt;Here is a fully working install playbook to get you started or to portinto your own playbook.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;localhost&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;gather_facts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;become&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;become_user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;lookup(&amp;#39;env&amp;#39;,&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;USER&amp;#39;)&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;pre_tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;update repositories&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;apt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;update_cache=yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;become_user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;root&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;changed_when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;False&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ansible_user_id&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;check if cargo is installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command -v cargo&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;register&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cargo_exists&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;ignore_errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Download Installer&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cargo_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;https://sh.rustup.rs&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/tmp/sh.rustup.rs&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;0755&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;force&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;rust&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;install rust/cargo&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cargo_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;/tmp/sh.rustup.rs -y&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;rust&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can save this as a  &lt;code&gt;local.yml&lt;/code&gt; and run the following in your shellto run the playbook on your local machine.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ansible-playbook local.yml --ask-become-pass&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;note: &lt;code&gt;--ask-become-pass&lt;/code&gt; is required for the system update step.This will ask for your password as soon as ansible starts.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I also have a very similar article on hwo I &lt;a href="https://waylonwalker.com/til/ansible_install_fonts/"&gt;ansible install fonts&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/install-yq'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Install yq | A light weight yaml parser cli&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/install-obs-flatpak'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Install obs flatpak&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/install-rust</guid><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate></item><item><title>ag silver searcher look ahead and look behind</title><link>https://waylonwalker.com/til/ag-ahead</link><description>A super useful tool when doing PR It</description><content:encoded>&lt;p&gt;A super useful tool when doing PR's or checking your own work during a bigrefactor is the silver searcher.  Its a super fast command line based searchingtool. You just run &lt;code&gt;ag "&amp;lt;search term&amp;gt;"&lt;/code&gt; to search for your search term.  Thiswill list out every line of every file in any directory under your currentworking directory that contains a match.&lt;/p&gt;&lt;h2 id="aheadbehind"&gt;Ahead/Behind&lt;/h2&gt;&lt;p&gt;It's often useful to need some extra context around the change.  I recentlyreviewed a bunch of PR's that moved schema from &lt;code&gt;save_args&lt;/code&gt; to the root of thedataset in all yaml configs.  To ensure they all made it to the top levelDataSet configuraion, and not underneath save_args.  I can do a search for allthe schemas, and ensure that none of them are under &lt;code&gt;save_args&lt;/code&gt; anymore.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag &lt;span class="s2"&gt;&amp;quot;schema: &amp;quot;&lt;/span&gt; -A &lt;span class="m"&gt;12&lt;/span&gt; -B &lt;span class="m"&gt;12&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ansible_install_fonts'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing system nerd-fonts with ansible&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/2-minutes-to-stow'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;2 minutes to stow&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/ag-ahead</guid><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Simple Samba Share Setup</title><link>https://waylonwalker.com/til/simple-samba</link><description>Samba is an implementation of the smb protocol that allows me to setup network I think the homelab is starting to intrigue me enought to dive into the path of T</description><content:encoded>&lt;p&gt;Samba is an implementation of the smb protocol that allows me to setup networkshares on my linux machine that I can open on a variety of devices.&lt;/p&gt;&lt;p&gt;I think the homelab is starting to intrigue me enought to dive into the path ofexperimenting with different things that I might want setup in my own home.One key piece of this is network storage.  As I looked into nas, I realizedthat it takes a dedicated machine, or one virtualized at a lower level than Ihave capability for right now.&lt;/p&gt;&lt;h2 id="humble-beginnings"&gt;Humble Beginnings&lt;/h2&gt;&lt;p&gt;To get goind I am going to make a directory &lt;code&gt;/srv/samba/public&lt;/code&gt; open to anyoneon my network.  I am not going to worry too much about it, I just wantsomething up and running so that I can learn.&lt;/p&gt;&lt;p&gt;Install samba, open the firewall, and edit the &lt;code&gt;smb.conf&lt;/code&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install samba samba-common-binsudo ufw allow sambasudo nvim /etc/samba/smb.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;I added this to the end of my &lt;code&gt;smb.conf&lt;/code&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[public]comment = public share, no need to enter username and passwordpath = /srv/samba/public/browseable = yeswritable = yesguest ok = yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then I made the &lt;code&gt;/srv/samba/public&lt;/code&gt; directory and made it writable by anyone.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mkdir -p /srv/samba/publicsudo setfacl -R -m &amp;quot;u:nobody:rwx&amp;quot; /srv/samba/public/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="windows-yes-windows"&gt;Windows, yes windows&lt;/h2&gt;&lt;p&gt;I have a windows desktop in my office, primarily for my wife to run premierepro, and my son to play Minecraft.  I walked over to it, opened the fileexplorer, and ernt to &lt;code&gt;\\&amp;lt;my-local-ip&amp;gt;&lt;/code&gt;.  It asked for the username andpassword, I typed in the username and password of the linux device I have theshare running on, and I was in.  Right there I could see the Public folder.  Iopened it and made a files successfully.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/simple-textual-widget'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Making a Textual Widget from a Rich Renderable&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/serve-html-command-line'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Serve html from your command line&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/simple-samba</guid><pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Bluetooth at the command line on Ubuntu</title><link>https://waylonwalker.com/til/linux-bluetoothctl</link><description>One thing about moving to a tiling window manager like awesome wm or i3 is that Running  Here is what I had to do to connect my headphones. Here is the output o</description><content:encoded>&lt;p&gt;One thing about moving to a tiling window manager like awesome wm or i3 is thatthey are so lightweight they are all missing things like bluetooth gui's out ofthe box, and you generally bring your own.  Today I just needed to connet a newset of headphones, so I decided to just give the &lt;code&gt;bluetoothctl&lt;/code&gt; cli a try.  Itseems to come with Ubuntu, I don't think I did anything to get it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bluetoothctl&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Running &lt;code&gt;bluetoothctl&lt;/code&gt; pops you into a repl/shell like bah, python, or ipython.From here you can execute &lt;code&gt;bluetoothctl&lt;/code&gt; commands.&lt;/p&gt;&lt;p&gt;Here is what I had to do to connect my headphones.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# list out the commands available&lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="c1"&gt;# scan for new devices and stop when you see your device show up&lt;/span&gt;scan onscan off&lt;span class="c1"&gt;# list devices&lt;/span&gt;devicespaired-devices&lt;span class="c1"&gt;# pair the device&lt;/span&gt;pair XX:XX:XX:XX:XX:XX&lt;span class="c1"&gt;# now your device should show up in the paired list&lt;/span&gt;paired-devices&lt;span class="c1"&gt;# connet the device&lt;/span&gt;connect XX:XX:XX:XX:XX:XX&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="help"&gt;help&lt;/h2&gt;&lt;p&gt;Here is the output of the help menu on my machine, it seems pretty straightforward to block, and remove devices from here.&lt;/p&gt;&lt;p&gt;note ctrl revers to the bluetooth controller on the machine you are on, and devrefers to a device id.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Menu main:Available commands:-------------------advertise                                         Advertise Options Submenuscan                                              Scan Options Submenugatt                                              Generic Attribute Submenulist                                              List available controllersshow &lt;span class="o"&gt;[&lt;/span&gt;ctrl&lt;span class="o"&gt;]&lt;/span&gt;                                       Controller information&lt;span class="k"&gt;select&lt;/span&gt; &amp;lt;ctrl&amp;gt;                                     Select default controllerdevices                                           List available devicespaired-devices                                    List paired devicessystem-alias &amp;lt;name&amp;gt;                               Set controller &lt;span class="nb"&gt;alias&lt;/span&gt;reset-alias                                       Reset controller &lt;span class="nb"&gt;alias&lt;/span&gt;power &amp;lt;on/off&amp;gt;                                    Set controller powerpairable &amp;lt;on/off&amp;gt;                                 Set controller pairable modediscoverable &amp;lt;on/off&amp;gt;                             Set controller discoverable modeagent &amp;lt;on/off/capability&amp;gt;                         Enable/disable agent with given capabilitydefault-agent                                     Set agent as the default oneadvertise &amp;lt;on/off/type&amp;gt;                           Enable/disable advertising with given &lt;span class="nb"&gt;type&lt;/span&gt;set-alias &amp;lt;alias&amp;gt;                                 Set device &lt;span class="nb"&gt;alias&lt;/span&gt;scan &amp;lt;on/off&amp;gt;                                     Scan &lt;span class="k"&gt;for&lt;/span&gt; devicesinfo &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                        Device informationpair &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                        Pair with devicetrust &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                       Trust deviceuntrust &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                     Untrust deviceblock &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                       Block deviceunblock &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                     Unblock deviceremove &amp;lt;dev&amp;gt;                                      Remove deviceconnect &amp;lt;dev&amp;gt;                                     Connect devicedisconnect &lt;span class="o"&gt;[&lt;/span&gt;dev&lt;span class="o"&gt;]&lt;/span&gt;                                  Disconnect devicemenu &amp;lt;name&amp;gt;                                       Select submenuversion                                           Display versionquit                                              Quit program&lt;span class="nb"&gt;exit&lt;/span&gt;                                              Quit program&lt;span class="nb"&gt;help&lt;/span&gt;                                              Display &lt;span class="nb"&gt;help&lt;/span&gt; about this program&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="final-impressions"&gt;Final Impressions&lt;/h2&gt;&lt;p&gt;This was something that I have never used, and thought it would be intimidatingbut it worked great first try out of the box.  It could have been my device onthe other end, but this was one of the least frustrations I have had pairing anew device.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/linux-swap'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create a Swapfile on Your Linux Machine&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/kedro-ubuntu-impish'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Running Kedro on Ubuntu 21.10 Impish Indri&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/linux-bluetoothctl</guid><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Vim remaps use cmd in place of :</title><link>https://waylonwalker.com/til/vim-cmd</link><description>Anyone just starting out their vim customization journey is bound to run into this error. I If you run  You still need to map your remaps with a : if you do not</description><content:encoded>&lt;p&gt;Anyone just starting out their vim customization journey is bound to run into this error.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;E5520: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Cmd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; mapping must &lt;span class="k"&gt;end&lt;/span&gt; with &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="i-did-not-get-it"&gt;I did not get it&lt;/h2&gt;&lt;p&gt;I'll admit, in hindsight it's very clear what this is trying to tell me, butfor whatever reason I still did not understand it and I just used a :everywhere.&lt;/p&gt;&lt;h2 id="from-the-docs"&gt;From the docs&lt;/h2&gt;&lt;p&gt;If you run &lt;code&gt;:h &amp;lt;cmd&amp;gt;&lt;/code&gt; you will see a lot of reasons why you should do it, fromperformance, to hygene, to ergonomics.  You will also see another clearstatement about how to use &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;                                                          E5520  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;Cmd&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; commands must terminate&lt;span class="p"&gt;,&lt;/span&gt; that &lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; they must be followed by &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;CR&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; the  {rhs} of the mapping definition.  Command&lt;span class="p"&gt;-&lt;/span&gt;line &lt;span class="k"&gt;mode&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; never entered.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="when-to-map-with-a"&gt;When to map with a :&lt;/h2&gt;&lt;p&gt;You still need to map your remaps with a : if you do not close it with a&lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt;.  This might be something like prefilling a command with a search term.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;f&lt;/span&gt; :s&lt;span class="sr"&gt;/search/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="otherwise-use"&gt;Otherwise use &lt;cmd&gt;&lt;/h2&gt;&lt;p&gt;If you can close the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; with a &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; the command do so.  Your map willautomatically be silent, more ergonomic, performant, and all that good stuff.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="k"&gt;f&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;cmd&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;s&lt;span class="sr"&gt;/search/&lt;/span&gt;Search/&lt;span class="k"&gt;g&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;cr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/vim-markdown-links'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Automatically Generate a list of Markown Links in Vim&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/ubuntu-terminal-clipboard'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Tmux and Vim Clipboard for Ubuntu&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/vim-cmd</guid><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Install obs flatpak</title><link>https://waylonwalker.com/til/install-obs-flatpak</link><description>Big announcement recently that obs studio now builds out to a flatpak, I did not have flatpak installed so the first thing I had to do was get Once I had flatpa</description><content:encoded>&lt;p&gt;Big announcement recently that obs studio now builds out to a flatpak,hopefully making it easier for all of us to install, especially us nearnormies that don't regularly compile anything from source.&lt;/p&gt;&lt;h2 id="install-flatpak"&gt;install flatpak&lt;/h2&gt;&lt;p&gt;I did not have flatpak installed so the first thing I had to do was getthe &lt;code&gt;flatpak&lt;/code&gt; command installed, and add their default repo.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install flatpakflatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once I had flatpak, I was able to get obs installed with the followingcommand.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;flatpak install flathub com.obsproject.Studio&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once Installed it fired right up for me with the next command theysuggested.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;flatpak run com.obsproject.Studio&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="it-works"&gt;It Works&lt;/h2&gt;&lt;p&gt;Pretty straightforward, following the instructions given it all workedfor me, but it was missing a lot of the plugins that the current snappackage I am using gives me (namely virtual webcam).  So I am not readyto jump onto it until I figure out how to manage my own obs plugins.For now I think the snap is working just well enough.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://flatpak.org/setup/Ubuntu"&gt;flatpak setup for ubuntu&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/obsproject/obs-studio/releases/tag/27.2.0"&gt;obs release notes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://flathub.org/apps/details/com.obsproject.Studio"&gt;obs flatpak&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/install-rust'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Rust and Cargo on Ubuntu 21.10 using Ansible&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/htmx-get'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Ease into htmx with htmx-get&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/install-obs-flatpak</guid><pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Recover a lost git branch with checkout</title><link>https://waylonwalker.com/til/git-recover-checkout</link><description>Once you give a branch the big D ( Checkout is your savior, all you need is the commit hash. We have all done this, you give  branch the big D only to realize i</description><content:encoded>&lt;p&gt;Once you give a branch the big D (&lt;code&gt;git branch -D mybranch&lt;/code&gt;) its gone,its lost from your history.  It's completely removed from your log.There will be no reference to these commits, or will there?&lt;/p&gt;&lt;h2 id="tldr"&gt;TLDR&lt;/h2&gt;&lt;p&gt;Checkout is your savior, all you need is the commit hash.&lt;/p&gt;&lt;h2 id="immediate-regret"&gt;Immediate Regret&lt;/h2&gt;&lt;p&gt;&lt;em&gt;your terminal is still open&lt;/em&gt;&lt;/p&gt;&lt;p&gt;We have all done this, you give  branch the big D only to realize it wasthe wrong one.  Don't worry, not all is lost, this is the easiest torecover from.  When you run the delete command you will see somethinglike this.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ git branch -D newDeleted branch new &lt;span class="o"&gt;(&lt;/span&gt;was bc02a64&lt;span class="o"&gt;)&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice the hash is right there is the hash of your commit.  You can usethat to get your content back.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout -b bc02a64git branch new&lt;span class="c1"&gt;# or in one swoop checkout your new branch at the `start-point` you want&lt;/span&gt;git checkout -b new bc02a64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="delayed-reaction"&gt;Delayed reaction&lt;/h2&gt;&lt;p&gt;&lt;em&gt;you have closed your terminal&lt;/em&gt;&lt;/p&gt;&lt;p&gt;If you have closed your terminal, or have deleted with a gui orsomething that does not tell you the hash as you run it, don't fret, allyour work is still there (as long as you have commited).  You just haveto dig it out.  The reflog contains a list of all git operations thathave occurred on your git repo, and can be incredibly helpful with this.&lt;/p&gt;&lt;h3 id="kinda-recent"&gt;Kinda Recent&lt;/h3&gt;&lt;p&gt;If your botched delete operation was recent just diving right into thereflog will show it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ git reflog03a3338 &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from new to mainbc02a64 &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; another, new&lt;span class="o"&gt;)&lt;/span&gt; HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: commit: newfile03a3338 &lt;span class="o"&gt;(&lt;/span&gt;main&lt;span class="o"&gt;)&lt;/span&gt; HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;In this example, I checked out a branch called new, commited a newfile, then switched back to main and deleted new.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Now That I have the commit hash I can use the same solution to get mybranch back.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout -b bc02a64git branch new&lt;span class="c1"&gt;# or in one swoop checkout your new branch at the `start-point` you want&lt;/span&gt;git checkout -b new bc02a64&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="a-lot-has-happened-since-then"&gt;A lot has happened since then&lt;/h3&gt;&lt;p&gt;If a lot has happened since then, you are going to need to pull out somemore tool to sift through that &lt;code&gt;reflog&lt;/code&gt;, especially if its a big one.The first suggestion that I have is to pipe into grep and look forcommit messages, or the name of the branch.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ git reflog &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;moving from&amp;quot;&lt;/span&gt;03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to branch/oops03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from oops to main03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to oops03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from another to mainbc02a64 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to another03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from another to mainbc02a64 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from new to anotherbc02a64 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from bc02a64bbe5683d905e333e8dfcbbb91a5e77549 to newbc02a64 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to bc02a64bbe5603a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from new to main03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to new03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from other to main03a3338 HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: checkout: moving from main to other&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;git has a built in &lt;code&gt;--grep&lt;/code&gt; flag, but I don't think there is a way tofilter by branch name, regardless it still is helpful.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ git reflog --grep newbc02a64 &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; another, new&lt;span class="o"&gt;)&lt;/span&gt; HEAD@&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;: commit: newfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Maybe if you can remember a filename you can pass in &lt;code&gt;-- &amp;lt;filename&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git reflog -- readme.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rtfm"&gt;RTFM&lt;/h2&gt;&lt;p&gt;There are many other ways to slice up a git log, and reflog alike. checkout &lt;code&gt;man git log&lt;/code&gt; for some more flags.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/git-reflog-is-an-alias'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Git reflog is an alias for git log -g&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/git-rebase-root'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Git rebase to the beginning of time&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/git-recover-checkout</guid><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Bash mktemp</title><link>https://waylonwalker.com/til/bash-mktemp</link><description>There is GNU coreutils command called  Here are some examples of making temp directories in different places, my Here is a sample script that shows how to captu</description><content:encoded>&lt;p&gt;There is GNU coreutils command called &lt;code&gt;mktemp&lt;/code&gt; that is super handy in shellscripts to make temporary landing spots for files so that they never clash withanother instance, and will automatically get cleaned up when you restart, orwhenever &lt;code&gt;/tmp&lt;/code&gt; gets wiped.  I'm not sure when that is, but I don't expect itto be long.&lt;/p&gt;&lt;h2 id="making-temp-directories"&gt;Making temp directories&lt;/h2&gt;&lt;p&gt;Here are some examples of making temp directories in different places, myfavorite is &lt;code&gt;mktemp -dt mytemp-XXXXXX&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# makes a temporary directory in /tmp/ with the defaul template tmp.XXXXXXXXXX&lt;/span&gt;mktemp&lt;span class="c1"&gt;# makes a temporary directory in your current directory&lt;/span&gt;mktemp --directory mytemp-XXXXXX&lt;span class="c1"&gt;# shorter version&lt;/span&gt;mktemp -d mytemp-XXXXXX&lt;span class="c1"&gt;# same thing, but makes a file&lt;/span&gt;mktemp mytemp-XXXXXX&lt;span class="c1"&gt;# makes a temporary directory in your /tmp/ directory (or what ever you have configured as your TMPDIR)&lt;/span&gt;mktemp --directory --tmpdir mytemp-XXXXXX&lt;span class="c1"&gt;# shorter version&lt;/span&gt;mktemp -dt mytemp-XXXXXX&lt;span class="c1"&gt;# same thing, but makes a file&lt;/span&gt;mktemp --tmpdir mytemp-XXXXXX&lt;span class="c1"&gt;# shorter version&lt;/span&gt;mktemp -t mytemp-XXXXXX&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="use-case"&gt;Use Case&lt;/h2&gt;&lt;p&gt;Here is a sample script that shows how to capture the tempdir as a variable andreuse it.  Here is an example of curling my bootstrap file into a tempdirectory and running it from that directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;mktemp -dt bootstrap-XXXXXX&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;$tmp&lt;/span&gt;curl https://raw.githubusercontent.com/WaylonWalker/devtainer/main/bootstrap &amp;gt; bootstrapbash bootstrap&lt;span class="nb"&gt;popd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="templates"&gt;Templates&lt;/h2&gt;&lt;p&gt;You must have at least 3 trailing X's that mktemp will replace with randomcharacters.  I played with it for a bit, it kinda allows for some trailingcharacters, and will not fill groups of X's earlier in your template, only thelast consecutive string.&lt;/p&gt;&lt;p&gt;My randomm samples I played with.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;waylonwalker.com on ÓÇ† main &lt;span class="o"&gt;[&lt;/span&gt;!?&lt;span class="o"&gt;]&lt;/span&gt; Óàµ v3.9.7 &lt;span class="o"&gt;(&lt;/span&gt;waylonwalker.com&lt;span class="o"&gt;)&lt;/span&gt; took 2m24s‚ùØ mktemp myXtemp-XaXbXXXX -dt/tmp/myXtemp-XaXbx9hnwaylonwalker.com on ÓÇ† main &lt;span class="o"&gt;[&lt;/span&gt;!?&lt;span class="o"&gt;]&lt;/span&gt; Óàµ v3.9.7 &lt;span class="o"&gt;(&lt;/span&gt;waylonwalker.com&lt;span class="o"&gt;)&lt;/span&gt;‚ùØ mktemp myXtemp-XaXbXXXXs -dt/tmp/myXtemp-XaXb2tpGswaylonwalker.com on ÓÇ† main &lt;span class="o"&gt;[&lt;/span&gt;!?&lt;span class="o"&gt;]&lt;/span&gt; Óàµ v3.9.7 &lt;span class="o"&gt;(&lt;/span&gt;waylonwalker.com&lt;span class="o"&gt;)&lt;/span&gt;‚ùØ mktemp myXtemp-XaXbXXcXXs -dtmktemp: too few X&lt;span class="s1"&gt;&amp;#39;s in template ‚ÄòmyXtemp-XaXbXXcXXs‚Äô&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XaXbXXcXXs -dt&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XaXbXXXXt -dt&lt;/span&gt;&lt;span class="s1"&gt;/tmp/myXtemp-XaXbe8PWt&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XXX-you-XXX -dt&lt;/span&gt;&lt;span class="s1"&gt;/tmp/myXtemp-XXX-you-48l&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XXX-you-XX -dt&lt;/span&gt;&lt;span class="s1"&gt;mktemp: too few X&amp;#39;&lt;/span&gt;s &lt;span class="k"&gt;in&lt;/span&gt; template ‚ÄòmyXtemp-XXX-you-XX‚Äô&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rtfm"&gt;RTFM&lt;/h2&gt;&lt;p&gt;The man page has good stuff on all the flags that you might need.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;man mktemp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/bs4-findall-headings'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Find all Headings with BeautifulSoup&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/aws-eventbridge-visidata'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;View AWS event bridge rules with visidata&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/bash-mktemp</guid><pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Dedupe your shell paths</title><link>https://waylonwalker.com/til/dedupe-your-shell-paths</link><description>If you have ever ran </description><content:encoded>&lt;p&gt;If you have ever ran &lt;code&gt;which &amp;lt;command&amp;gt;&lt;/code&gt; and see duplicate entries it's likelythat you have duplicate entries in your $PATH.  You can clean this up with aone liner at the end of your bashrc or zshrc.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;typeset -U path&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/docker-minecraft-server'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Running a Minecraft Server in Docker&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/copier_endops'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Changing copier template strings (_endops)&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/dedupe-your-shell-paths</guid><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Setup SSH from chromebook to home desktop</title><link>https://waylonwalker.com/til/open-ssh-setup</link><description>I write many of these posts from a 10 year old desktop that sits in my I Today I am giving it a second try, but this time with ssh. Before doing anything I chec</description><content:encoded>&lt;p&gt;I write many of these posts from a 10 year old desktop that sits in myoffice these days.  It does a very fine job running all of the things Ineed it to for my side work, but sometimes I want a mobile setup.  Idon't really want to spend the $$ on a new laptop just for the few timesI want to be somewhere else in the house.  What I do have though is achromebook.&lt;/p&gt;&lt;p&gt;I've tried to get the chromebook into my workflow in the past, but havefailed.  Much because by the time I got all of my tools up and runningin the linux vm it was taking up quite a bit of space on the device andmade it harder for others to use as a chromebook.&lt;/p&gt;&lt;p&gt;Today I am giving it a second try, but this time with ssh.&lt;/p&gt;&lt;h2 id="checking-for-existing-sshd"&gt;Checking for existing sshd&lt;/h2&gt;&lt;p&gt;Before doing anything I checked to see if sshd is already running. Usingthe following command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo service ssh status&lt;span class="c1"&gt;# or&lt;/span&gt;pgrep -l sshd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Both returned nothing so I know that its not running.&lt;/p&gt;&lt;h2 id="setting-up-sshd"&gt;setting up sshd&lt;/h2&gt;&lt;p&gt;&lt;em&gt;just apt install it&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Next install the openssh-client and openssh-server&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install openssh-client -ysudo apt install openssh-server -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After this I can see that its now running by checking its status onceagain.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo service ssh status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Gives me the result.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚óè ssh.service - OpenBSD Secure Shell server     Loaded: loaded &lt;span class="o"&gt;(&lt;/span&gt;/lib/systemd/system/ssh.service&lt;span class="p"&gt;;&lt;/span&gt; enabled&lt;span class="p"&gt;;&lt;/span&gt; vendor preset: enabled&lt;span class="o"&gt;)&lt;/span&gt;     Active: active &lt;span class="o"&gt;(&lt;/span&gt;running&lt;span class="o"&gt;)&lt;/span&gt; since Tue &lt;span class="m"&gt;2022&lt;/span&gt;-03-08 &lt;span class="m"&gt;08&lt;/span&gt;:17:05 CST&lt;span class="p"&gt;;&lt;/span&gt; 12min ago       Docs: man:sshd&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;             man:sshd_config&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    Process: &lt;span class="m"&gt;181185&lt;/span&gt; &lt;span class="nv"&gt;ExecStartPre&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/sbin/sshd -t &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited, &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;/SUCCESS&lt;span class="o"&gt;)&lt;/span&gt;   Main PID: &lt;span class="m"&gt;181189&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;sshd&lt;span class="o"&gt;)&lt;/span&gt;      Tasks: &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;limit: &lt;span class="m"&gt;19119&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;     Memory: &lt;span class="m"&gt;2&lt;/span&gt;.8M        CPU: 96ms     CGroup: /system.slice/ssh.service             ‚îî‚îÄ181189 sshd: /usr/sbin/sshd -D &lt;span class="o"&gt;[&lt;/span&gt;listener&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; of &lt;span class="m"&gt;10&lt;/span&gt;-100 startups&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="accessing-the-desktop"&gt;Accessing the desktop&lt;/h2&gt;&lt;p&gt;I have already enabled the Linux terminal on my chromebook, so I justopened the terminal, and ran the following.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ssh &amp;lt;username&amp;gt;@&amp;lt;ip-address&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It prompted for my password and I was in.  I had all of my vim, tmux,and zsh comforts that I enjoy without installing anything.  It worked sowell that this whole post was written from my chromebook.&lt;/p&gt;&lt;h2 id="limitations"&gt;Limitations&lt;/h2&gt;&lt;p&gt;This does limit me to being on the same network as my desktop, whichthese days is almost always true.&lt;/p&gt;&lt;h2 id="ssh-keys"&gt;ssh keys&lt;/h2&gt;&lt;p&gt;Out of the box I am just using passwords to get in, but if this werepublic I would lock down to requiring an ssh key to enter.  I'll likeydo this in a future post.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/pandas-read-csv-user-agent'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Set User Agent on pandas read_csv&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/nvr-open-files'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Open Files with Nvim Remote&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/open-ssh-setup</guid><pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Git Worktrees are not so Scary</title><link>https://waylonwalker.com/til/git-checkout-worktree</link><description>So worktrees, I always thought they were a big scary things.  Turns out they I thought you had to be all in or worktrees or normal git, but not both.  When Maki</description><content:encoded>&lt;p&gt;So worktrees, I always thought they were a big scary things.  Turns out theyare much simpler than I thought.&lt;/p&gt;&lt;h2 id="myth-1"&gt;Myth #1&lt;/h2&gt;&lt;p&gt;&lt;em&gt;no special setup&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I thought you had to be all in or worktrees or normal git, but not both.  WhenI see folks go all in on worktrees they start with a bare repo, while its truethis is the way you go all in, its not true that this is required.&lt;/p&gt;&lt;h2 id="lets-make-a-worktree"&gt;Lets make a worktree&lt;/h2&gt;&lt;p&gt;Making a worktree is as easy as making a branch.  It's actually just a branchthat lives in another place in your filesystem.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# checkout a new worktree called compare based on main in /tmp/project&lt;/span&gt;git worktree add -b compare /tmp/project main&lt;span class="c1"&gt;# checkout a new worktree called compare based on HEAD in /tmp/project&lt;/span&gt;git worktree add -b compare /tmp/project&lt;span class="c1"&gt;# checkout a worktree from an existing feature branch in /tmp/project&lt;/span&gt;git worktree add /tmp/project my-existing-feature-branch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;The worktree that you create is considered a &lt;em&gt;linked worktree&lt;/em&gt;, while theoriginal worktree is called the &lt;em&gt;main worktree&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note that I put this in my tmp directory because I don't expect it to live verylong, my recent use case was to compare two files after a big formattingchange.  You put these where you want, but dont come at me when your /tmp getswiped and you loose work.&lt;/p&gt;&lt;p&gt;## Myth #2 &lt;em&gt;they are hidden mysterious creatures&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Just like branches git has some nice commands to help us understand whatworktrees we have on our system.  Firstly we have something very specific toworktrees to list them out.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git worktree list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gives the output&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/home/u_walkews/git/git-work-play  b202442 &lt;span class="o"&gt;[&lt;/span&gt;main&lt;span class="o"&gt;]&lt;/span&gt;/tmp/another                       d9b2cf1 &lt;span class="o"&gt;[&lt;/span&gt;another&lt;span class="o"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Even the branch command gives a bit different output for a worktree.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git branch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;gives this output, notice the + denotes an actively linked worktree, and the *gives the active branch.  If you cd over to the worktree directory, these willswitch roles.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+ another  just-a-branch* main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="you-can-only-checkout-a-branch-in-one-place"&gt;You can only checkout a branch in one place&lt;/h2&gt;&lt;p&gt;If you try to checkout a branch that is checked out in a linked worktree, youwill be presented with an error, and it will not let you check out a secondcopy of that branch.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ git checkout anotherfatal: &amp;#39;another&amp;#39; is already checked out at &amp;#39;/tmp/another&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="myth-3"&gt;Myth #3&lt;/h2&gt;&lt;p&gt;&lt;em&gt;once you go worktree, you worktree&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Once you have worktrees on your system, you have a few ways to get rid of them.Using git's way feels much superior, but if your a doof like me and didn't readthe manual before you &lt;code&gt;rm /tmp/another -rf&lt;/code&gt; you will notice that the worktreeis still active.  If you run &lt;code&gt;git worktree prune&lt;/code&gt; it will clean that right up.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git worktree remove anotherrm /tmp/anothergit worktree prune&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="it-wont-let-you-remove-if-you-have-changes"&gt;It won't let you remove if you have changes&lt;/h2&gt;&lt;p&gt;This makes me think that &lt;code&gt;remove&lt;/code&gt; is a much safer option.  If you haveuncommitted changes, &lt;code&gt;git worktree remove&lt;/code&gt; will throw an error, and make youcommit or use &lt;code&gt;--force&lt;/code&gt; to remove the worktree.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ git worktree remove anotherfatal: &lt;span class="s1"&gt;&amp;#39;another&amp;#39;&lt;/span&gt; contains modified or untracked files, use --force to delete it&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rtfm"&gt;RTFM&lt;/h2&gt;&lt;p&gt;&lt;em&gt;read the friendly manual&lt;/em&gt;&lt;/p&gt;&lt;p&gt;There is a ton more information in the man page for worktrees, these are justthe parts that seemed really useful to me out of the gate.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;man git worktree&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/git-config-help-autocorrect'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Configure Git to Autocorrect Your Fat Fingers&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/fzf-wallpaper'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;fuzzy wallpaper with fzf&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/git-checkout-worktree</guid><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Install yq | A light weight yaml parser cli</title><link>https://waylonwalker.com/til/install-yq</link><description>yq I love that all of these modern tools built in go and rust, just give you a I use a bunch of these tools, and for what its worth I trust the devs behind Sinc</description><content:encoded>&lt;p&gt;&lt;code&gt;yq&lt;/code&gt; is a command line utility for parsing and querying yaml, like &lt;code&gt;jq&lt;/code&gt; does for json.&lt;/p&gt;&lt;h2 id="this-is-for-me"&gt;This is for me&lt;/h2&gt;&lt;p&gt;I love that all of these modern tools built in go and rust, just give you azipped up executable right from GitHub releases, but it's not necessarilystraight forward how to install them.  &lt;code&gt;yq&lt;/code&gt; does one of the best jobs I haveseen, giving you instructions on how to get a specific version and install it.&lt;/p&gt;&lt;p&gt;I use a bunch of these tools, and for what its worth I trust the devs behindthem to make sure they don't break.  This so far has worked out well for me,but if it ever doesn't I can always pick an older version.&lt;/p&gt;&lt;h2 id="just-give-me-the-latest"&gt;Just give me the latest&lt;/h2&gt;&lt;p&gt;Since I am all trusting of them I just want the latest version.  I do not wantto update a shell script with new versions, or even care about what then nextversion is, I just want it. Luckily you can script the release page for thelatest version on all that I have came accross.&lt;/p&gt;&lt;h2 id="what-is-the-latest"&gt;What is the latest&lt;/h2&gt;&lt;p&gt;I wrote or stole, I think I wrote it, this line of bash quite awhile ago, andit has served me well for finding the latest release for any GitHub projectusing releases.  Just update it with the name of the tool, org, and repo and itworks.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;YQ_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl --silent https://github.com/mikefarah/yq/releases/latest &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^.*tag\///g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/&amp;gt;.*$//g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^v//&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="install-with-your-shell"&gt;Install with your shell&lt;/h2&gt;&lt;p&gt;Now that we know how to consistently get the right version, I generally rightclick the release in the releases page, replace the version with&lt;code&gt;${TOOL_VERSION}&lt;/code&gt; and put it in this wget call, then move the binary over to &lt;code&gt;~/.local/bin&lt;/code&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;mktemp -dt install-XXXXXX&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;$tmp&lt;/span&gt;&lt;span class="nv"&gt;YQ_VERSION&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl --silent https://github.com/mikefarah/yq/releases/latest &lt;span class="p"&gt;|&lt;/span&gt; tr -d &lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^.*tag\///g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/&amp;gt;.*$//g&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/^v//&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;wget https://github.com/mikefarah/yq/releases/download/v&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YQ_VERSION&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/yq_linux_amd64.tar.gz -O- -q &lt;span class="p"&gt;|&lt;/span&gt; tar -zxf - -C /tmpcp yq_linux_amd64 ~/.local/bin/yq&lt;span class="nb"&gt;popd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="install-with-ansible"&gt;Install with ansible&lt;/h2&gt;&lt;p&gt;Now I don't want to worry about missing &lt;code&gt;yq&lt;/code&gt; again, so I am added it to myansible install script.  This way it's installed everyt time I setup a newsystem with all of my favorite cli's.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;check is yq installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command -v yq&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;register&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yq_exists&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;ignore_errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yq&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Install yq&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yq_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;local tmp=`mktemp -dt install-XXXXXX`&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;pushd $tmp&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;YQ_VERSION=$(curl --silent https://github.com/mikefarah/yq/releases/latest | tr -d &amp;#39;&amp;quot;&amp;#39; | sed &amp;#39;s/^.*tag\///g&amp;#39; | sed &amp;#39;s/&amp;gt;.*$//g&amp;#39; | sed &amp;#39;s/^v//&amp;#39;)&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;wget https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_amd64.tar.gz -O- -q | tar -zxf - -C /tmp&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;cp yq_linux_amd64 {{ lookup(&amp;#39;env&amp;#39;, &amp;#39;HOME&amp;#39;) }}/.local/bin/yq&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;popd&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yq&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;p&gt;This is how I installed it, of course you can always follow Mike's instructionsfrom the repo.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/mikefarah/yq"&gt;yq repo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/"&gt;yq docs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/installing-homebrew-linux'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Homebrew on Linux&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/install-rust'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Rust and Cargo on Ubuntu 21.10 using Ansible&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/install-yq</guid><pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Create a Swapfile on Your Linux Machine</title><link>https://waylonwalker.com/til/linux-swap</link><description>If you ever end up on a linux machine that just does not have enough ram to You can put this where you wish, for this example I am going to pop it into You can </description><content:encoded>&lt;p&gt;If you ever end up on a linux machine that just does not have enough ram tosuffice what you are doing and you just need to get the job done you can giveit some more swap.  You can look up reccomendations for how much swap youshould have this is more about just trying to get your job done when you arealmost there, but running out of memory on the hardware you have.&lt;/p&gt;&lt;h2 id="make-the-swap-file"&gt;make the /swap file&lt;/h2&gt;&lt;p&gt;You can put this where you wish, for this example I am going to pop it into&lt;code&gt;/swap&lt;/code&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo fallocate -l 4G /swapsudo chmod &lt;span class="m"&gt;600&lt;/span&gt; /swapsudo mkswap /swapsudo swapon /swap&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="make-sure-that-your-swap-is-on"&gt;make sure that your swap is on&lt;/h2&gt;&lt;p&gt;You can make sure that your swap is working by using the &lt;code&gt;free&lt;/code&gt; command, I likeusing the &lt;code&gt;-h&lt;/code&gt; flag to get human readable numbers.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ free -h               total        used        free      shared  buff/cache   availableMem:            15Gi       &lt;span class="m"&gt;5&lt;/span&gt;.5Gi       &lt;span class="m"&gt;4&lt;/span&gt;.9Gi       458Mi       &lt;span class="m"&gt;5&lt;/span&gt;.2Gi       &lt;span class="m"&gt;9&lt;/span&gt;.3GiSwap:          &lt;span class="m"&gt;4&lt;/span&gt;.0Gi          0B       &lt;span class="m"&gt;4&lt;/span&gt;.0Gi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/reset-ipython/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/reset-ipython-og_250x140.png" alt="article cover for  Reclaim memory usage in Jupyter"/&gt;          &lt;p&gt;&lt;strong&gt; Reclaim memory usage in Jupyter&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I also used this trick in this article to give my python process a bit more oompf and get it on home.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/linux-tty'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A TTY Can Save Your Bacon&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-bluetoothctl'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Bluetooth at the command line on Ubuntu&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/linux-swap</guid><pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Unzip minecraft mods to their directory from the command line</title><link>https://waylonwalker.com/til/linux-unzip-directory</link><description>This morning I was trying to install a modpack on my minecraft server after So I Then I go back to my server and download the modpack with wget. Now I can unzip</description><content:encoded>&lt;p&gt;This morning I was trying to install a modpack on my minecraft server aftergetting a zip file, and its quite painful when I unzip everything in thecurrent directory rather than the directory it belongs in.&lt;/p&gt;&lt;h2 id="i-had-the-files-on-a-windows-machine"&gt;I had the files on a Windows Machine&lt;/h2&gt;&lt;p&gt;So I've been struggling to get mods installed on linux lately and the easiestway to download the entire pack rather than each mod one by one seems to be touse the overwolf application on windows.  Once I have the modpack I can startmyself a small mod-server by zipping it, putting it in a mod-server directoryand running a python &lt;code&gt;http.server&lt;/code&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m http.server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="downoading-on-the-server"&gt;Downoading on the server&lt;/h2&gt;&lt;p&gt;Then I go back to my server and download the modpack with wget.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="mf"&gt;10.0.0.171&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;BBlock&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;BServer&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;BPack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="unzip-to-the-minecraft-data-directory"&gt;Unzip to the minecraft-data directory&lt;/h2&gt;&lt;p&gt;Now I can unzip my mods into the &lt;code&gt;minecraft-data&lt;/code&gt; directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip One+Block+Server+Pack-1.4.zip -d minecraft-data&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="running-the-server-with-docker"&gt;Running the server with docker&lt;/h2&gt;&lt;p&gt;I run the minecraft server with docker, which is setup to mount theminecraft-data directory.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/til/docker-minecraft-server/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/til/docker-minecraft-server-og_250x140.png" alt="article cover for  Running a Minecraft Server in Docker"/&gt;          &lt;p&gt;&lt;strong&gt; Running a Minecraft Server in Docker&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;p&gt;A bit more on that in the other post, but when I download the whole modpacklike this I make these changes to my docker compose. (commented out lines)&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;walkercraft&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;itzg/minecraft-server:java8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;EULA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TRUE&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;TYPE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;FORGE&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;VERSION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1.15.2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# MODS_FILE: /extras/mods.txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# REMOVE_OLD_MODS: &amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;stdin_open&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;unless-stopped&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;25565:25565&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./minecraft-data:/data&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# - ./mods.txt:/extras/mods.txt:ro&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/list-all-files-containing-phrase'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;List all the files containing a phrase&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-tty'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A TTY Can Save Your Bacon&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/linux-unzip-directory</guid><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate></item><item><title>Dunk is my new diff pager</title><link>https://waylonwalker.com/til/dunk-is-my-new-diff-pager</link><description>Browsing through twitter the other day I discovered it through this https://twitter.com/ Before I dive in deep, I do want to mention that Dunk is super new and </description><content:encoded>&lt;p&gt;&lt;a href="https://github.com/darrenburns/dunk"&gt;Dunk&lt;/a&gt; is a beautiful git diff toolbuilt on top of &lt;a href="https://github.com/Textualize/rich"&gt;rich&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Browsing through twitter the other day I discovered it through thistweet by &lt;a href="https://twitter.com/_darrenburns"&gt;_darrenburns&lt;/a&gt;.&lt;/p&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Ok, here&amp;#39;s what I&amp;#39;ve been building today üëá&lt;br&gt;&lt;br&gt;Pipe the output of &amp;#39;git diff&amp;#39; into dunk and you&amp;#39;ll get a GitHub style side-by-side diff right in your terminal.&lt;a href="https://t.co/al5y68YSda"&gt;https://t.co/al5y68YSda&lt;/a&gt; &lt;a href="https://t.co/LLOcaNhpyP"&gt;pic.twitter.com/LLOcaNhpyP&lt;/a&gt;&lt;/p&gt;&amp;mdash; Darren Burns üå± (@_darrenburns) &lt;a href="https://twitter.com/_darrenburns/status/1510350016623394817?ref_src=twsrc%5Etfw"&gt;April 2, 2022&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;h2 id="dunk-is-beta"&gt;Dunk is beta&lt;/h2&gt;&lt;p&gt;Before I dive in deep, I do want to mention that Dunk is super new and beta atthis point.  I am making it my default pager, because I know what I am doingand can quickly shift back if I need to, no sweat.  If you are a little lesscomfortable with the command line, terminal, or reading any issues that mightcome up, it might be best if you just pipe into Dunk when you want to use it.&lt;/p&gt;&lt;p&gt;The author really cautions the use of it as your default pager this early, I'mjust showing that it's possible, and I'm trying it.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;He notes that it might have some issues especially with partially staged files.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="try-it"&gt;try it&lt;/h2&gt;&lt;p&gt;You can try it with pipx.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git diff &lt;span class="p"&gt;|&lt;/span&gt; pipx run dunk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="install-it"&gt;install it&lt;/h2&gt;&lt;p&gt;If you like it, you can install it with pip or pipx, I prefer pipx forcli applications like this.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx install dunk&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="set-it-as-your-default-pager"&gt;set it as your default pager&lt;/h2&gt;&lt;p&gt;You can configure dunk as your default pager with the command line, orby editing your &lt;code&gt;.gitconfig&lt;/code&gt; file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global pager.diff &lt;span class="s2"&gt;&amp;quot;dunk | less -R`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[pager]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dunk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;less&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;As &lt;a href="https://twitter.com/_darrenburns/status/1511106440613797896"&gt;pointed out&lt;/a&gt; by&lt;a href="https://twitter.com/_darrenburns"&gt;_darrenburns&lt;/a&gt; dunk is not a pager and youcan gain back all of the benefits of using a pager by piping into less with the&lt;code&gt;-R&lt;/code&gt; flag.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="reset-it-if-you-dont-like-it"&gt;reset it if you don't like it&lt;/h2&gt;&lt;p&gt;You can &lt;code&gt;--unset&lt;/code&gt; your pager configuration from the command line or edityour &lt;code&gt;.gitconfig&lt;/code&gt; file by hand to remove the lines shown above.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global --unset pager.diff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="comparison"&gt;Comparison&lt;/h2&gt;&lt;p&gt;I have some edits to a game my son and I are working on unstaged so Iran &lt;code&gt;git diff&lt;/code&gt; on that project with and without dunk to compare thedifferences.&lt;/p&gt;&lt;p&gt;&lt;img alt="default diff" src="https://images.waylonwalker.com/git-diff-creeper-adventure-default.png" /&gt;&lt;/p&gt;&lt;p&gt;Dunk just looks so good.&lt;/p&gt;&lt;p&gt;&lt;img alt="dunk diff" src="https://images.waylonwalker.com/git-diff-creeper-adventure-dunk.png" /&gt;&lt;/p&gt;&lt;h2 id="always-install"&gt;Always install&lt;/h2&gt;&lt;p&gt;If you follow along here often you know that I am a big fan ofinstalling all my tools in an ansible playbook so that I don't sufferconfiguring a new machine for months after getting it and wondering whyits not exactly like the last.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Dunk - prettier git diffs&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# https://github.com/darrenburns/dunk&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;check is dunk installed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;command -v black&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;register&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;dunk_exists&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;ignore_errors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;yes&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;install dunk&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;when&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;dunk_exists is failed&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;shell&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pipx install dunk&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/til/ansible_install_if_not_callable/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/til/ansible_install_if_not_callable-og_250x140.png" alt="article cover for  Installing packages with ansible only if they do not exist"/&gt;          &lt;p&gt;&lt;strong&gt; Installing packages with ansible only if they do not exist&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;More on conditionally installing tools with ansible in this post.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ewhich'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Bash function to edit scripts faster&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/dunder_rich'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Adding __rich__ methods to python classes&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/dunk-is-my-new-diff-pager</guid><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate></item><item><title>A TTY Can Save Your Bacon</title><link>https://waylonwalker.com/til/linux-tty</link><description>I recently was unable to boot into my home Linux Desktop, it got stuck at https://twitter.com/ There Normally you have 6 TTY ctrl+alt+F1: login screen ctrl+alt+</description><content:encoded>&lt;p&gt;I recently was unable to boot into my home Linux Desktop, it got stuck atdiskcheck &lt;code&gt;fsck&lt;/code&gt;.  I found that I was able to get in to a tty through a hotkey.&lt;/p&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;Did a sudo apt update &amp;amp;&amp;amp; upgrade last night, power got tripped off couldnt reboot, had to reinstall my display manager from a tty.&lt;/p&gt;&amp;mdash; Waylon Walker üêç (@_WaylonWalker) &lt;a href="https://twitter.com/_WaylonWalker/status/1512281106120384519?ref_src=twsrc%5Etfw"&gt;April 8, 2022&lt;/a&gt;&lt;/blockquote&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;h2 id="whats-a-tty"&gt;What's a TTY?&lt;/h2&gt;&lt;p&gt;There's probably more to it, but to me its a full screen terminal with zerogui, not even your gui fonts.  It does log into your default shell so if youhave a comfy command line setup it will be here for you even though it looksmuch different without fonts and full colorspace.&lt;/p&gt;&lt;h2 id="normal-setup"&gt;Normal setup&lt;/h2&gt;&lt;p&gt;Normally you have 6 TTY's running, the first is dedicated to your desktopmanager, which is your login screen it might be something like gdm or lightdm.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;ctrl+alt+F1: login screen&lt;/li&gt;&lt;li&gt;ctrl+alt+F2: Desktop&lt;/li&gt;&lt;li&gt;ctrl+alt+F3: TTY 3&lt;/li&gt;&lt;li&gt;ctrl+alt+F4: TTY 4&lt;/li&gt;&lt;li&gt;ctrl+alt+F5: TTY 5&lt;/li&gt;&lt;li&gt;ctrl+alt+F6: TTY 6&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In my case the desktop manager neverstarted, so ctrl+alt+F1 brought me into a tty.&lt;/p&gt;&lt;h2 id="what-happened"&gt;What happened??&lt;/h2&gt;&lt;p&gt;Well after getting back in and having some time to reflect, I think my Desktopmanager was installed or just broken, possibly during a update I ran a few daysprior.&lt;/p&gt;&lt;p&gt;I tried a bunch of things like switching to lightdm, and manually running startx.&lt;/p&gt;&lt;h2 id="getting-back-in"&gt;Getting back in&lt;/h2&gt;&lt;p&gt;The final commands that ended up getting me back in were installing and starting gdm3.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install gdm3sudo systemctl start gdm3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/linux-unzip-directory'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Unzip minecraft mods to their directory from the command line&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-swap'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create a Swapfile on Your Linux Machine&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/linux-tty</guid><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate></item><item><title>qutebrowser clean up all status bars</title><link>https://waylonwalker.com/til/clean-qutebrowser</link><description>I really like the super clean look of no status menus, no url bar, no bookmarks</description><content:encoded>&lt;p&gt;I really like the super clean look of no status menus, no url bar, no bookmarksbar, nothing.  Don't get me wrong these things are useful, but honestly theytake up screen real estate and I RARELY look at them.  What I really want is atoggle hotkey.  I found this one from one of DT's youtube video's.  I can nowtap &lt;code&gt;xx&lt;/code&gt; and both the status bar at the botton and the address bar at the topdisappear.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.config/qutebrowser/config.py&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config-cycle statusbar.show always never&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;config-cycle tabs.show always never&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;xx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;config-cycle statusbar.show always never;; config-cycle tabs.show always never&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/convert-markdown-pdf-linux'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Converting markdown to pdf with pandoc on linux&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/bs4-findall-headings'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Find all Headings with BeautifulSoup&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/clean-qutebrowser</guid><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate></item></channel></rss>