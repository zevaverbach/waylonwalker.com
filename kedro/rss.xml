<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Waylon Walkers Digital Garden - kedro posts</title><link>https://waylonwalker.com/kedro-rss.xml</link><description>Waylon Walkers posts - kedro posts</description><atom:link href="https://waylonwalker.com/kedro-rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>8bitcc.png</url><title>Waylon Walkers Digital Garden - kedro posts</title><link>https://waylonwalker.com/kedro-rss.xml</link></image><language>en</language><lastBuildDate>Fri, 10 Jun 2022 02:40:00 +0000</lastBuildDate><item><title>Kedro</title><link>https://waylonwalker.com/kedro</link><description>My Notes about using kedro</description><content:encoded>&lt;h2 id="kedrotips"&gt;&lt;a href="https://twitter.com/search?q=%23kedrotips&amp;amp;f=live"&gt;#kedrotips&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I am tweeting out most of these snippets as I add them, you can find them all here &lt;a href="https://twitter.com/search?q=%23kedrotips"&gt;#kedrotips&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="heads-up"&gt;🗣 Heads up&lt;/h2&gt;&lt;p&gt;Below are some quick snippets/notes for when using kedro to build data pipelines. So far I am just compiling snippets. Eventually I will create several posts on kedro. These are mostly things that I use In my everyday with kedro. Some are a bit more essoteric. Some are helpful when writing production code, some are useful more usefule for exploration.&lt;/p&gt;&lt;h2 id="catalog"&gt;📚 Catalog&lt;/h2&gt;&lt;p&gt;&lt;img alt="catalogs" src="https://images.waylonwalker.com/jesse-orrico-h6xNSDlgciU-unsplash.jpg" /&gt;&lt;em&gt;Photo by jesse orrico on Unsplash&lt;/em&gt;&lt;/p&gt;&lt;h3 id="csvlocaldataset"&gt;CSVLocalDataSet&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;python&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B&lt;/span&gt;&lt;span class="si"&gt;%20c&lt;/span&gt;&lt;span class="s1"&gt;ookiecutter.repo_name&lt;/span&gt;&lt;span class="si"&gt;%20%&lt;/span&gt;&lt;span class="s1"&gt;7D%7D/data/01_raw/iris.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;data_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CSVLocalDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                                 &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;index&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;reloaded_iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;yaml&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;test_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;CSVLocalDataset&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;load_args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;None&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;save_args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;False&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="csvhttpdataset"&gt;CSVHTTPDataSet&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;cities&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CSVHTTPDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;fileurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B&lt;/span&gt;&lt;span class="si"&gt;%20c&lt;/span&gt;&lt;span class="s2"&gt;ookiecutter.repo_name&lt;/span&gt;&lt;span class="si"&gt;%20%&lt;/span&gt;&lt;span class="s2"&gt;7D%7D/data/01_raw/iris.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cities&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;CSVHTTPDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;fileurl&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;https://people.sc.fsu.edu/~jburkardt/data/csv/cities.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;auth&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;None&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;load_args&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;None&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="hdflocaldataset"&gt;HDFLocalDataSet&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HDFLocalDataSet&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B&lt;/span&gt;&lt;span class="si"&gt;%20c&lt;/span&gt;&lt;span class="s1"&gt;ookiecutter.repo_name&lt;/span&gt;&lt;span class="si"&gt;%20%&lt;/span&gt;&lt;span class="s1"&gt;7D%7D/data/01_raw/iris.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HDFLocalDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;iris.hdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test_hdf_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;reloaded_iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;HDFLocalDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test.hdf&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test_hdf_key&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="hdfs3localdataset"&gt;HDFS3LocalDataSet&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HDFS3DataSet&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B&lt;/span&gt;&lt;span class="si"&gt;%20c&lt;/span&gt;&lt;span class="s1"&gt;ookiecutter.repo_name&lt;/span&gt;&lt;span class="si"&gt;%20%&lt;/span&gt;&lt;span class="s1"&gt;7D%7D/data/01_raw/iris.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HDFS3DataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;iris.hdf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;bucket_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bucket-us-west-1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test_hdf_key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;reloaded_iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;HDFS3DataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cars.hdf&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;bucket_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;bucket-us-west-1&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;test_hdf_key&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="jsonlocaldataset"&gt;JSONLocalDataSet&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSONLocalDataSet&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B&lt;/span&gt;&lt;span class="si"&gt;%20c&lt;/span&gt;&lt;span class="s1"&gt;ookiecutter.repo_name&lt;/span&gt;&lt;span class="si"&gt;%20%&lt;/span&gt;&lt;span class="s1"&gt;7D%7D/data/01_raw/iris.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSONLocalDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;iris.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                        &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;reloaded_iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;JSONLocalDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;iris.json&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="parquetlocaldataset"&gt;ParquetLocalDataSet&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ParquetLocalDataSet&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://raw.githubusercontent.com/quantumblacklabs/kedro/d3218bd89ce8d1148b1f79dfe589065f47037be6/kedro/template/%7B%7B&lt;/span&gt;&lt;span class="si"&gt;%20c&lt;/span&gt;&lt;span class="s1"&gt;ookiecutter.repo_name&lt;/span&gt;&lt;span class="si"&gt;%20%&lt;/span&gt;&lt;span class="s1"&gt;7D%7D/data/01_raw/iris.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ParquetLocalDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;iris&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;auto&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                           &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iris&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;reloaded_iris&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;iris_data_set&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;JSONLocalDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;cars&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;PickleS3DataSet&lt;/p&gt;&lt;p&gt;SQLTableDataSet&lt;/p&gt;&lt;p&gt;SQLQueryDataSet&lt;/p&gt;&lt;p&gt;TextLocalDataSet&lt;/p&gt;&lt;p&gt;ExcelLocalDataSet&lt;/p&gt;&lt;h2 id="loading-data"&gt;⏳ Loading Data&lt;/h2&gt;&lt;p&gt;&lt;img alt="loading data" src="https://images.waylonwalker.com/battlecreek-coffee-roasters-eg6OUchGCsw-unsplash.jpg" /&gt;&lt;em&gt;Photo by Battlecreek Coffee Roasters on Unsplash&lt;/em&gt;&lt;/p&gt;&lt;h3 id="simple-loading"&gt;Simple Loading&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="list-all-datasets"&gt;list all datasets&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="saving-data"&gt;Saving Data&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="finding-data"&gt;🔍 Finding data&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;simple keyword search&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href="https://twitter.com/_WaylonWalker/status/1197130980659732480?s=20"&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;multi keyword serch&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw sales&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;data_sets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;    &lt;span class="n"&gt;data_sets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;       &lt;span class="n"&gt;data&lt;/span&gt;       &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data_sets&lt;/span&gt;       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;       &lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href="https://twitter.com/_WaylonWalker/status/1197528461587419139?s=20"&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;🐒 monkey patch it&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;search_terms&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;     &lt;span class="n"&gt;data_sets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;     &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;search_terms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         &lt;span class="n"&gt;data_sets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;         &lt;span class="n"&gt;data&lt;/span&gt;         &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data_sets&lt;/span&gt;         &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;         &lt;span class="p"&gt;]&lt;/span&gt;     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data_sets&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;query&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;_see on &lt;a href="https://twitter.com/_WaylonWalker/status/1197855759507300352?s=20"&gt;#kedrotips&lt;/a&gt;&lt;/p&gt;&lt;h3 id="yolo"&gt;🤙 YOLO&lt;/h3&gt;&lt;p&gt;&lt;em&gt;You Only Load Once&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;simple&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;        &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c_pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;more refined&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c_pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;🍷 refined like a fine wine&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;types&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleNamespace&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpleNamespace&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c_pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;🧀 Make it a function&lt;/strong&gt;&lt;em&gt;getting funcy&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;types&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SimpleNamespace&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;yolo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;search_terms&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;you only load once&lt;/span&gt;&lt;span class="sd"&gt;   using query method from previous tip&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;   &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SimpleNamespace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;       &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;search_terms&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="p"&gt;})&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="n"&gt;all_pri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yolo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c_pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;🐒 monkey patch it&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;partial&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yolo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;yolo&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yolo&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__doc__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;you only load once&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;all_pri&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yolo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c_pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="adding-catalogs-together"&gt;adding catalogs together&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;cat1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_data_sets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;cat2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;_data_sets&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="building-pipelines"&gt;🛢 Building pipelines&lt;/h2&gt;&lt;p&gt;&lt;img alt="building pipelines" src="https://images.waylonwalker.com/roman-pentin-T5QT2bmiD4E-unsplash.jpg" /&gt;&lt;em&gt;Photo by roman pentin on Unsplash&lt;/em&gt;&lt;/p&gt;&lt;h3 id="creating-nodes"&gt;📍 Creating Nodes&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;drop_columns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;drop_columns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;vs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;am&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;gear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;carb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri_cars&amp;#39;&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="creating-a-pipeline"&gt;🛢 Creating a pipeline&lt;/h3&gt;&lt;h3 id="dont-be-so-verbose"&gt;Don't be so verbose&lt;/h3&gt;&lt;p&gt;Create similar nodes dynamically&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;   &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; splits a dataframe in half &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;   &lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;trucks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;boats&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;motorcycles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;planes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="s1"&gt;&amp;#39;ships&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;busses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;trains&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;subways&amp;#39;&lt;/span&gt;   &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# creates a pipeline node for every dataset in the datasets list&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;datasets&lt;/span&gt;   &lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;       &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="s1"&gt;&amp;#39;e_modin_&lt;/span&gt;&lt;span class="si"&gt;{dataset}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train_&lt;/span&gt;&lt;span class="si"&gt;{dataset}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_&lt;/span&gt;&lt;span class="si"&gt;{dataset}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="running-pipelines"&gt;🏃‍♂️ Running Pipelines&lt;/h2&gt;&lt;p&gt;&lt;img alt="running pipelines" src="https://images.waylonwalker.com/rodion-kutsaev-xNdPWGJ6UCQ-unsplash.jpg" /&gt;&lt;em&gt;Photo by Rodion Kutsaev on Unsplash&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;🔖 filter by tags&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href="https://twitter.com/_WaylonWalker/status/1195319044808888321?s=20"&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;filter by node&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b_int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;_see on &lt;a href="https://twitter.com/_WaylonWalker/status/1196406204479737856?s=20"&gt;#kedrotips&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;filter nodes like&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;query_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;   &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;query_string&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;   &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;see on&lt;/em&gt; &lt;a href="https://twitter.com/_WaylonWalker/status/1196813895228428288?s=20"&gt;&lt;em&gt;#kedrotips&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;only nodes with tags&lt;/strong&gt; &lt;em&gt;or&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;trains&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;only nodes with tags&lt;/strong&gt; &lt;em&gt;and&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;raw_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;car_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;raw_car_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;raw_nodes&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;car_nodes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;raw_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="n"&gt;pipeline&lt;/span&gt;   &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;add pipelines&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;car_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;train_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;trains&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;transportation_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;car_nodes&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;train_nodes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;ensure nodes are attached&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;cars_attached&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="n"&gt;pipeline&lt;/span&gt;   &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes_with_tags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grouped_nodes&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="pipeline-decorators"&gt;🎂 Pipeline Decorators&lt;/h3&gt;&lt;p&gt;&lt;a href="https://kedro.readthedocs.io/en/latest/_modules/kedro/pipeline/decorators.html#log_time"&gt;example - log_time&lt;/a&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;log_time&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mem_profile&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decorate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;log_running_time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="pipeline-io"&gt;Pipeline IO&lt;/h2&gt;&lt;p&gt;&lt;code&gt;pipleine.all_inputs()&lt;/code&gt; and &lt;code&gt;pipeline.all_outputs()&lt;/code&gt; return sets of pipeline inputs and outputs and you can do set operations on them.  This is particularly useful to find the upper and lower edges of your pipeline or subset of pipeline.  The pipeline object here is any &lt;code&gt;kedro&lt;/code&gt; pipeline including a filtered subset.&lt;/p&gt;&lt;h3 id="find-all-raw-data"&gt;Find all raw data&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_inputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_outputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="find-all-final-data"&gt;Find all final data&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_outputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_inputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="find-all-nodes-that-do-not-raw"&gt;Find all nodes that do not raw&lt;/h3&gt;&lt;p&gt;This one is probably one that is pushing the limits of what I would do in a list comprehension that I use in prod or even put into a text editor, but I commonly use ipython for my adhoc work and keeping it all in one line is very handy.  Complex list comprehensions kinda start becoming like regex in a way that they are really easy to write and really hard to read.  I don't think this one quite hits that point but its getting close.&lt;/p&gt;&lt;p&gt;I find this one super useful to help me either move data beween environments, or avoid unnecessary database calls.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;raw_inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_inputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_outputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;raw_nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;raw_inputs&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="p"&gt;[]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-basics'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Basics&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/jut'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;JUT | Read Notebooks in the Terminal&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro</guid><pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate></item><item><title>What is Kedro</title><link>https://waylonwalker.com/what-is-kedro-1</link><description>https://waylonwalker.com/what-is-kedro This is my original what-is-kedro article.  There is a brand new one Kedro is an open source data pipeline framework.  It</description><content:encoded>&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;This is my original what-is-kedro article.  There is a brand new one&lt;/p&gt;&lt;/blockquote&gt;&lt;hr /&gt;&lt;p&gt;Kedro is an open source data pipeline framework.  It provides guardrails to setyour project up right from the start without needing to know deeply how tosetup your own python library for data pipelining.  It includes really greatways to manipulate &lt;code&gt;catalogs&lt;/code&gt; and &lt;code&gt;pipelines&lt;/code&gt;.  This article will cover the 10Kview of kedro, future articles will dive deper into each one.&lt;/p&gt;&lt;p&gt;&lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; is an open-source data pipeline framework.  It provides guardrails to set your project up right from the start without needing to know deeply how to set up your own python library for data pipelining.  It includes great ways to manipulate &lt;code&gt;catalogs&lt;/code&gt; and &lt;code&gt;pipelines&lt;/code&gt;.  This article will cover the 10K view of &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;, future articles will dive deeper into each one.&lt;/p&gt;&lt;!-- {% slideshare DAZrqvJmuUUfFF %} --&gt;&lt;h2 id="libraries"&gt;Libraries&lt;/h2&gt;&lt;p&gt;Currently, &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; is broken down into 3 different libraries.&lt;/p&gt;&lt;p&gt;💎 &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;&lt;/p&gt;&lt;p&gt;📉 &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt;&lt;/p&gt;&lt;p&gt;🏗 &lt;a href="https://github.com/quantumblacklabs/kedro-docker"&gt;kedro-docker&lt;/a&gt;&lt;/p&gt;&lt;h2 id="kedro"&gt;&lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img alt="kedro logo" src="https://images.waylonwalker.com/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7175616e74756d626c61636b6c6162732f6b6564726f2f6d61737465722f696d672f6b6564726f5f62616e6e65722e6a7067.jpg" /&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; is the core of the ecosystem.  It provides the docs, getting started, &lt;code&gt;kedro new&lt;/code&gt; templates, and the core library including the catalog and pipeline.&lt;/p&gt;&lt;h3 id="catalog"&gt;Catalog&lt;/h3&gt;&lt;p&gt;&lt;img alt="catalogs" src="https://dev-to-uploads.s3.amazonaws.com/i/trzfj86dbq0ronis26x1.jpg" /&gt;&lt;/p&gt;&lt;p&gt;Inside this core library is a data catalog object.  This allows you to specify attributes about your data, then load and save it without ever writing a single line of read/write code, which can become very cumbersome.  Older versions would load this into the io variable, currently it loads into the catalog.  The power of the catalog is that it allows you to read and write data by just referencing its name.  Typically this is done inside of a YAML file, but can be done in python.&lt;/p&gt;&lt;p&gt;Here is an example of a CSV dataset stored locally&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example 1: Loads a local csv file&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;bikes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;CSVLocalDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;data/01_raw/bikes.csv&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This dataset can be loaded by name&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bikes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Though it's not typical practice it is possible to save data to a catalog entry ad-hoc.  Typically the pipeline is used to run functions and save data for you.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="n"&gt;bikes_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="o"&gt;...&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;bikes_data&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;...&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bikes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bikes_df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="pipeline"&gt;Pipeline&lt;/h3&gt;&lt;p&gt;&lt;img alt="building pipelines" src="https://images.waylonwalker.com/roman-pentin-T5QT2bmiD4E-unsplash.jpg" /&gt;&lt;/p&gt;&lt;p&gt;The pipeline object is the brains of &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;.  When working with &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; you simply define functions that take in data as arguments, manipulate it, and return a new dataset.  The pipeline will decide what order to execute these functions ini based on their dependencies.  It will then work with the catalog to load the data from the catalog pass it to your function, the save the returned data in the catalog.&lt;/p&gt;&lt;p&gt;Here is an example pipeline from the docs.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;               &lt;span class="n"&gt;boats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;boats_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;boats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clean_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;         &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                      &lt;span class="n"&gt;boats_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="s1"&gt;&amp;#39;clean_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="kedro-viz"&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; is a priceless component to the &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; ecosystem.  It gives you x-ray vision into your project.  You can see exactly how data flows through your pipeline.  Since it is fully automated it is always up to date and never lies to you.  &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; is an integral part of my daily debugging and refactoring toolbelt.&lt;/p&gt;&lt;p&gt;Starting the viz from the command line is super easy&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; my-kedro-projectkedro viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/pipeline_visualisation.png" /&gt;&lt;/p&gt;&lt;h2 id="kedro-docker"&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-docker"&gt;kedro-docker&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-docker"&gt;kedro-docker&lt;/a&gt; is a simple way to set up your project for production.  It provides a few simple cli commands&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; my-kedro-projectkedro docker buildkedro docker run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="other-resources"&gt;Other resources&lt;/h2&gt;&lt;p&gt;The &lt;a href="https://kedro.readthedocs.io/"&gt;kedro docs&lt;/a&gt; have a ton of great resources.  They are searchable, but can be a bit of an overwhelming amount of data.&lt;/p&gt;&lt;p&gt;I keep adding to my &lt;a href="https://waylonwalker.com/kedro/"&gt;kedro notes&lt;/a&gt; as I find new and interesting things.&lt;/p&gt;&lt;p&gt;I tweet out most of those snippets as I add them, you can find them all here &lt;a href="https://twitter.com/search?q=%23kedrotips"&gt;#kedrotips&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="more-to-come"&gt;More to come&lt;/h2&gt;&lt;p&gt;I am planning to do more articles like this, you can stay up to date with them by following me on &lt;a href="https://dev.to/waylonwalker"&gt;dev.to&lt;/a&gt;, subscribing to my &lt;a href="https://waylonwalker.com/rss.xml"&gt;rss feed&lt;/a&gt;, or subscribe to my &lt;a href="https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe"&gt;newsletter&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/whats-new-in-kedro-0164'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What's New in Kedro 0.16.4&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/what-is-kedro'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What is Kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/what-is-kedro-1</guid><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate></item><item><title>Create New Kedro Project</title><link>https://waylonwalker.com/create-new-kedro-project</link><description>This is a quickstart to getting a new  🧹 Install  🛢 Create the Example Pipeline 💨 Run the example 📉 Show the pipeline visualization I use conda to control my vi</description><content:encoded>&lt;p&gt;This is a quickstart to getting a new &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;pipeline up and running.  After this article you should be able to understandhow to get started with &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;.  You can learnmore about this &lt;a href="https://kedro.readthedocs.io/en/stable/02_get_started/03_hello_kedro.html"&gt;Hello WorldExample&lt;/a&gt;in the&lt;a href="https://kedro.readthedocs.io/en/stable/02_get_started/03_hello_kedro.html"&gt;docs&lt;/a&gt;&lt;/p&gt;&lt;p&gt;🧹 Install &lt;a href="https://kedro.readthedocs.io"&gt;Kedro&lt;/a&gt;&lt;/p&gt;&lt;p&gt;🛢 Create the Example Pipeline&lt;/p&gt;&lt;p&gt;💨 Run the example&lt;/p&gt;&lt;p&gt;📉 Show the pipeline visualization&lt;/p&gt;&lt;h2 id="create-a-virtual-environment"&gt;Create a Virtual Environment&lt;/h2&gt;&lt;p&gt;I use conda to control my virtual environments and will create a new environment called &lt;code&gt;kedro_iris&lt;/code&gt; with the following command.  &lt;strong&gt;note&lt;/strong&gt; the latest compatible version of python is 3.7.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: as of kedro 0.16.0 kedro supports up to 3.8&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n kedro_iris &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8 -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/conda-create-kedro-iris.gif" /&gt;&lt;/p&gt;&lt;p&gt;Options&lt;/p&gt;&lt;h2 id="activate-your-conda-environment"&gt;Activate your conda environment&lt;/h2&gt;&lt;p&gt;I try to keep my base environment as clean as possible.  I have ran into too many issues installing things in the base environment.  Almost always its some dependency that starts causing issues making it even harder to realize where its coming from as I never even installed it in base.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; activate kedro_iris&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="install-kedro"&gt;Install &lt;a href="https://kedro.readthedocs.io"&gt;Kedro&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Currently &lt;code&gt;kedro==0.15.5&lt;/code&gt; is available on pypi and can be pip installed.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt; kedro is up to &lt;a href="https://pypi.org/project/kedro/"&gt;&lt;img alt="PyPI version" src="https://badge.fury.io/py/kedro.svg" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="make-sure-you-are-in-the-directory-that-you-want-your-project-in"&gt;Make sure you are in the directory that you want your project in&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/c/temp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="create-a-new-kedro-project"&gt;Create a new &lt;a href="https://kedro.readthedocs.io"&gt;Kedro&lt;/a&gt; project&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro new&lt;span class="nb"&gt;cd&lt;/span&gt; kedro-irisgit initkedro install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/kedro-new-iris.gif" /&gt;&lt;/p&gt;&lt;h2 id="run-the-pipeline"&gt;Run the pipeline&lt;/h2&gt;&lt;p&gt;This will tell kedro to run your pipeline.  It will look at all of your nodes and determine the correct execution order for you, then run each one of them.  You can do this from a python script, python terminal session, or from the &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; cli.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;✨ It will look at all of your nodes and determine the correct execution order for you&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Lets run from the cli while in the same directory as kedro-iris&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/kedro-new-iris.gif" /&gt;&lt;/p&gt;&lt;h2 id="viz"&gt;Viz&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; is a priceless feature of &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt;.  It's like x-ray vision into your pipeline.  I can't imagine working without it after having it over the past year.  Unlike traditional documentation &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; cannot lie to you.  It will help guarantee your changes line up properly, plan out adding nodes, and identify dependencies of deprecating nodes.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Unlike traditional documentation &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; cannot lie to you.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="install-kedro-viz"&gt;Install &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; is also on pypi and can be installed just like any other python package with &lt;code&gt;pip&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install kedro-viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="visualize-the-pipeline"&gt;Visualize the pipeline&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; is ran from the command line in the same directory as your kedro project.  There are ways to store your pipeline data as json, then load them from outside your project, but we will follow the standard practice for now.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro viz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/kedro-viz-iris.gif" /&gt;&lt;/p&gt;&lt;h2 id="docker"&gt;🏗 Docker&lt;/h2&gt;&lt;p&gt;There is another package that makes creating docker images from kedro projects super simple &lt;a href="https://github.com/quantumblacklabs/kedro-docker"&gt;kedro-docker&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;If you dont already have docker installed on your machine, feel free to skip this section.&lt;/p&gt;&lt;h3 id="install-kedro-docker"&gt;install &lt;a href="https://github.com/quantumblacklabs/kedro-docker"&gt;kedro-docker&lt;/a&gt;&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install kedro-docker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="build-the-image"&gt;build the image&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro docker build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="run-the-image"&gt;run the image&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro docker run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="simple-huh"&gt;Simple Huh&lt;/h2&gt;&lt;p&gt;Getting up and going with a brand new &lt;a href="https://kedro.readthedocs.io"&gt;kedro&lt;/a&gt; project is super simple, thanks to the help of the &lt;code&gt;kedro new&lt;/code&gt; command.  The ability to add an example pipeline from the start makes it that much easier to get going and have a template to follow for your own projects.&lt;/p&gt;&lt;h2 id="recap"&gt;Recap&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n kedro_iris &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.7 -y&lt;span class="nb"&gt;source&lt;/span&gt; activate kedro_irispip install kedro&lt;span class="nb"&gt;cd&lt;/span&gt; /mnt/c/tempkedro new&lt;span class="c1"&gt;# give it a project name Kedro Iris&lt;/span&gt;&lt;span class="c1"&gt;# accept default package name kedro_iris&lt;/span&gt;&lt;span class="c1"&gt;# addept default directory name kedro-iris&lt;/span&gt;&lt;span class="c1"&gt;# yes for an example pipeline&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; kedro-irisgit initgit add .git commit -m &lt;span class="s2"&gt;&amp;quot;initialized new kedro project&amp;quot;&lt;/span&gt;kedro installkedro runpip install kedro-vizkedro vizpip install kedro-dockerkedro docker buildkedro docker run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="other-resources"&gt;Other resources&lt;/h2&gt;&lt;p&gt;The &lt;a href="https://kedro.readthedocs.io/"&gt;kedro docs&lt;/a&gt; have a ton of great resources.  They are searchable, but can be a bit of an overwhelming amount of data.&lt;/p&gt;&lt;p&gt;I keep adding to my &lt;a href="https://waylonwalker.com/notes/kedro/"&gt;kedro notes&lt;/a&gt; as I find new and interesting things.&lt;/p&gt;&lt;p&gt;I tweet out most of those snippets as I add them, you can find them all here &lt;a href="https://twitter.com/search?q=%23kedrotips"&gt;#kedrotips&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="more-to-come"&gt;More to come&lt;/h2&gt;&lt;p&gt;I am planning to do more articles like this, you can stay up to date with them by following me on &lt;a href="https://dev.to/waylonwalker"&gt;dev.to&lt;/a&gt;, subscribing to my &lt;a href="https://waylonwalker.com/rss.xml"&gt;rss feed&lt;/a&gt;, or subscribe to my &lt;a href="https://emailoctopus.com/lists/b194a4af-9875-11ea-a3d0-06b4694bee2a/forms/subscribe"&gt;newsletter&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/creating-the-kedro-preflight-hook'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;creating the kedro-preflight hook&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/create-custom-kedro-dataset'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create Custom Kedro Dataset&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/create-new-kedro-project</guid><pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate></item><item><title>creating the kedro-preflight hook</title><link>https://waylonwalker.com/creating-the-kedro-preflight-hook</link><description>Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro kedro hooks are an exciting upcoming feature of kedro  https://waylonwalker.com/what-i</description><content:encoded>&lt;p&gt;Kedro Hooks Intro - kedro hooks are an exciting upcoming feature of kedro&lt;code&gt;0.16.0&lt;/code&gt;.  They allow you to hook into &lt;code&gt;catalog_created&lt;/code&gt;,&lt;code&gt;pipeline_run&lt;/code&gt;, and&lt;code&gt;node_run&lt;/code&gt;(nouns).  With a &lt;code&gt;before&lt;/code&gt;, or &lt;code&gt;after&lt;/code&gt; (adjective).  This reallyreminds me of reacts lifecycle hooks, that let you hook into various state ofreact web components.  This is going to make kedro so extendable by thecommunity.  I am super pumped to see what the community is able to do with thisability.&lt;/p&gt;&lt;p&gt;kedro hooks are an exciting upcoming feature of kedro &lt;code&gt;0.16.0&lt;/code&gt;.  They allow you to hook into &lt;code&gt;catalog_created&lt;/code&gt;,&lt;code&gt;pipeline_run&lt;/code&gt;, and &lt;code&gt;node_run&lt;/code&gt;(nouns). With a &lt;code&gt;before&lt;/code&gt;, or &lt;code&gt;after&lt;/code&gt; (adjective).  This really reminds me of reacts lifecycle hooks, that let you hook into various state of react web components.  This is going to make kedro so extendable by the community.  I am super pumped to see what the community is able to do with this ability.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;If you are completely unsure what kedro is be sure to check out my what is kedro post&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="docs"&gt;Docs&lt;/h2&gt;&lt;p&gt;&lt;em&gt;a work in progress&lt;/em&gt;&lt;/p&gt;&lt;p&gt;As this is a part of an upcoming release you will need to look in the &lt;code&gt;latest&lt;/code&gt; docs, &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;stable&lt;/code&gt; and you will find a &lt;a href="https://kedro.readthedocs.io/en/stable/07_extend_kedro/02_hooks.html"&gt;15_hoooks&lt;/a&gt; page.  As these docs are still in development they are not very complete at this point and do require a bit more existing &lt;code&gt;kedro&lt;/code&gt; knowledge to understand.  I am sure they will get much better as we approach the realease of hooks.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;This doesn't mean that we can't still install the latest/unstable version and have some fun learning!&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Straight from GitHub&lt;/em&gt;&lt;/p&gt;&lt;p&gt;As this is part of an upcoming release you will need to get the library straight from github.  Since this is not a stable release of &lt;code&gt;kedro&lt;/code&gt; I cannot express the importance of using a virtual environment enough.  Trying to install this version in the same place that you are trying to develop a pipeline potentially break your existing working development environment.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n kedro0160 -yconda activate kedro0160 &lt;span class="c1"&gt;# may also be source activate kedro0160 or activate kedro0160&lt;/span&gt;pip install git+https://github.com/quantumblacklabs/kedro.gitpip install colorama&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; the version is still somewhere between &lt;code&gt;0.15.9&lt;/code&gt; and &lt;code&gt;0,16.0&lt;/code&gt;.  &lt;code&gt;kedro.__version__&lt;/code&gt; will still be &lt;code&gt;0.15.9&lt;/code&gt; and wiill not roll until the official release.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="create-a-sample-project"&gt;Create a sample project&lt;/h2&gt;&lt;blockquote&gt;&lt;h3 id="kedro-new"&gt;Kedro new&lt;/h3&gt;&lt;p&gt;For more details check out my full post on &lt;a href="https://waylonwalker.com/create-new-kedro-project/"&gt;kedro new&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;For this post I really just want a working pipeline as fast as possible.  For this I am going to use iris pipeline that is generated from the &lt;code&gt;kedro new&lt;/code&gt; command in the cli.  It's &lt;strong&gt;important&lt;/strong&gt; that you answer &lt;code&gt;y&lt;/code&gt; to create an example pipeline.&lt;/p&gt;&lt;blockquote&gt;&lt;h3 id="hold-on"&gt;Hold On ✋&lt;/h3&gt;&lt;p&gt;Did you create a separate environment for this?  Please do.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After you run the &lt;code&gt;kedro new&lt;/code&gt; command it will ask a series of questions.  👇 Here is how I answered them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Project Name:&lt;span class="o"&gt;=============&lt;/span&gt;Please enter a human readable name &lt;span class="k"&gt;for&lt;/span&gt; your new project.Spaces and punctuation are allowed. &lt;span class="o"&gt;[&lt;/span&gt;New Kedro Project&lt;span class="o"&gt;]&lt;/span&gt;: Kedro HooksRepository Name:&lt;span class="o"&gt;================&lt;/span&gt;Please enter a directory name &lt;span class="k"&gt;for&lt;/span&gt; your new project repository.Alphanumeric characters, hyphens and underscores are allowed.Lowercase is recommended. &lt;span class="o"&gt;[&lt;/span&gt;kedro-hooks&lt;span class="o"&gt;]&lt;/span&gt;:Python Package Name:&lt;span class="o"&gt;====================&lt;/span&gt;Please enter a valid Python package name &lt;span class="k"&gt;for&lt;/span&gt; your project package.Alphanumeric characters and underscores are allowed.Lowercase is recommended. Package name must start with a letter or underscore. &lt;span class="o"&gt;[&lt;/span&gt;kedro_hooks&lt;span class="o"&gt;]&lt;/span&gt;:Generate Example Pipeline:&lt;span class="o"&gt;==========================&lt;/span&gt;Do you want to generate an example pipeline &lt;span class="k"&gt;in&lt;/span&gt; your project?Good &lt;span class="k"&gt;for&lt;/span&gt; first-time users. &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;N&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;: yChange directory to the project generated &lt;span class="k"&gt;in&lt;/span&gt; /mnt/c/temp/kedro-hooks/A best-practice setup includes initialising git and creating a virtual environment before running &lt;span class="sb"&gt;`&lt;/span&gt;kedro install&lt;span class="sb"&gt;`&lt;/span&gt; to install project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="install-the-project"&gt;Install the Project&lt;/h3&gt;&lt;p&gt;Next install the project itself and all of its dependencies with the &lt;code&gt;kedro install&lt;/code&gt; command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; kedro-hookskedro install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="run-the-pipeline"&gt;🏃‍♀️ Run the pipeline&lt;/h3&gt;&lt;p&gt;Before we start developing any hooks lets make sure everything is setup correctly by running the pipeline with &lt;code&gt;kedro run&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lets-make-a-hook"&gt;Let's make a hook&lt;/h2&gt;&lt;p&gt;&lt;em&gt;getting to the meat of the post&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Now that we have a project scaffolded up and running we can develop a hook for it.  As far as I can tell hooks can be implemented one of &lt;strong&gt;two ways&lt;/strong&gt;.  As a &lt;strong&gt;function&lt;/strong&gt; inside of a module, then import that module and pass it into the hooks list, or implemented as a method on a &lt;strong&gt;class&lt;/strong&gt;, then the class is passed into the hooks list.  Either method must follow the naming convention with the &lt;code&gt;@hook_impl&lt;/code&gt; decorator.  Each module/class can implement more than one hook, but not more than one of the same type. One of each kind will be created below.&lt;/p&gt;&lt;h3 id="full-list-of-hooks-available"&gt;Full list of hooks available&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;&lt;code&gt;before_catalog_created&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;after_catalog_created&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;before_pipeline_run&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;after_pipeline_run&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;before_node_run&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;after_node_run&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="debug_hook-class"&gt;debug_hook (class)&lt;/h2&gt;&lt;p&gt;&lt;em&gt;quick and dirty&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I highly recommend this as your first hook.  It's super easy to make and lets you explore the arguments passed into the hook.  For this one I am going to pop the following class right into &lt;code&gt;kedro-hooks/src/kedro-hooks/run.py&lt;/code&gt;, remember that I chose &lt;code&gt;kedro-hooks&lt;/code&gt; as my project name.  Your path might be slightly different.  If you wanted to make a real hook it might make sense to put it in its own module, but for simplicity of your first hook you can put it directly in the same module that it gets implemented.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;debug_hook&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="nd"&gt;@hook_impl&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;before_pipeline_run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run_params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;pops into a debugger before pipeline run&amp;quot;&lt;/span&gt;        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I hooked in right before the pipeline run&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="nb"&gt;breakpoint&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It is really that easy to create a kedro hook!  Now lets apply it to our project.  All we need to do is add one line (&lt;code&gt;hooks = [debug_hook]&lt;/code&gt;) to the existing &lt;code&gt;ProjectContext&lt;/code&gt; class within &lt;code&gt;kedro-hooks/src/kedro-hooks/run.py&lt;/code&gt;.  Once we do that our &lt;code&gt;ProjectContext&lt;/code&gt; will look like this.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProjectContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KedroContext&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Users can override the remaining methods from the parent class here,&lt;/span&gt;&lt;span class="sd"&gt;    or create new ones (e.g. as required by plugins)&lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;    &lt;span class="n"&gt;project_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;kedro-hooks&amp;quot;&lt;/span&gt;    &lt;span class="c1"&gt;# `project_version` is the version of kedro used to generate the project&lt;/span&gt;    &lt;span class="n"&gt;project_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.15.9&amp;quot;&lt;/span&gt;    &lt;span class="n"&gt;package_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;kedro-hooks&amp;quot;&lt;/span&gt;    &lt;span class="n"&gt;hooks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;debug_hook&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 👈 This is where you implement the hook&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_get_pipelines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;create_pipelines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run it!  While you are in the debugger, explore what the &lt;code&gt;run_params&lt;/code&gt;, &lt;code&gt;pipeine&lt;/code&gt;, and &lt;code&gt;catalog&lt;/code&gt; arguments give you.  This will give you some insight to what to expect when creating your next hook.&lt;/p&gt;&lt;h2 id="preflight-hook-module"&gt;preflight hook (module)&lt;/h2&gt;&lt;p&gt;&lt;em&gt;giving it a bit more flair&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Create a new file &lt;code&gt;kedro-hooks/src/kedro-hooks/preflight.py&lt;/code&gt; and place the following content into the file.  This will raise a &lt;code&gt;DataSetNotFoundError&lt;/code&gt; before wasting time running any of the pipeline.  This could be useful to save some developer time for long running pipelines by warning them that they don't have all of the raw data they need before running.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# kedro-hooks/src/kedro-hooks/preflight.py&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.hooks&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;hook_impl&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io.core&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataSetNotFoundError&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;colorama&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;textwrap&lt;/span&gt;&lt;span class="nd"&gt;@hook_impl&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;before_pipeline_run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;run_params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="n"&gt;missing_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_exists&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;DataSetNotFoundError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;textwrap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dedent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;    &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIGHTBLACK_EX&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;――――――――  &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;PREFLIGHT ERROR &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LIGHTBLACK_EX&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;―――――――――&lt;/span&gt;&lt;span class="s1"&gt;    &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; preflight of pipeline failed due to &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;missing datasets&lt;/span&gt;&lt;span class="s1"&gt;    &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BLUE&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;missing_input&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;Fore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&lt;/span&gt;&lt;span class="s1"&gt;    &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we are happy with this hook, it can live anywhere.  It can be a module inside our project.  It can be a separate libarary that gets handed out as a back ally wheel, or we can even publish it as its own package to pypi so that anyone can easily pip install it.&lt;/p&gt;&lt;h3 id="one-step-back"&gt;One Step Back&lt;/h3&gt;&lt;p&gt;&lt;em&gt;a bit of explanation of preflight&lt;/em&gt;&lt;/p&gt;&lt;p&gt;If you are not familiar, &lt;code&gt;pipeline.inputs()&lt;/code&gt; gives us all of the edge inputs into the pipeline.  kedro does also have a &lt;code&gt;pipeline.all_inputs()&lt;/code&gt; that tells us all of the edge and internal pipeline inputs that will be called throughout the pipeline run.  For this hook we are just concerned with the edge inputs as internal inputs will be generated during the run.&lt;/p&gt;&lt;p&gt;Also each one of the kedro datasets have an &lt;code&gt;_exists()&lt;/code&gt; method attached to them to check if the dataset exists or not.  For a more robust implementation of &lt;code&gt;preflight&lt;/code&gt; it would probably be best to ignore &lt;code&gt;AttributeError&lt;/code&gt;s, i.e the dataset type does not have an implementation of &lt;code&gt;_exists&lt;/code&gt;.  It would probably also be a good idea to filter for types such as &lt;code&gt;SQLQueryDataSet&lt;/code&gt;s that assume &lt;code&gt;_exists&lt;/code&gt; is False by default.&lt;/p&gt;&lt;h2 id="ideas"&gt;Ideas&lt;/h2&gt;&lt;p&gt;Now that the juices are flowing what ideas do you have for &lt;code&gt;kedro&lt;/code&gt; hooks?&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/crush-dev-to-posts'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to crush amazing posts on DEV&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/create-new-kedro-project'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create New Kedro Project&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/creating-the-kedro-preflight-hook</guid><pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate></item><item><title>Create Custom Kedro Dataset</title><link>https://waylonwalker.com/create-custom-kedro-dataset</link><description>Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For t</description><content:encoded>&lt;p&gt;Kedro provides an efficient way to build out data catalogs with their yaml api.  It allows you to be very declaritive about loading and saving your data.  For the most part you just need to tell Kedro what connector to use and its filepath.  When running Kedro takes care of all of the read/write, you just reference the catalog key.&lt;/p&gt;&lt;h2 id="but-what-is-happening-behind-the-scenes"&gt;But what is happening behind the scenes&lt;/h2&gt;&lt;p&gt;Under the hood there is an &lt;code&gt;AbstractDataSet&lt;/code&gt; that each connector inherits from.  It sets up a lot of the behind the scenes structure for us so that we dont have to.  For the most part kedro has connectors for about anything that you want to load, csv, parquet, sql, json, from about anywhere, http, s3, localfile system are just some of the examples.&lt;/p&gt;&lt;p&gt;Here is a DataSet implementation from their docs.  Here you can see the barebones example straight from the docs.  Parameters from the yaml catalog will get passed in&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AbstractDataSet&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyOwnDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractDataSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_param1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;param1&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_param2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;param2&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;load_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_load_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;load_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;save_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_save_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;        &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;save_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_get_load_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_version&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_param1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;param2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_param2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/create-new-kedro-project'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create New Kedro Project&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/codeit-bro-interview'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Codeit Bro Interview&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/create-custom-kedro-dataset</guid><pubDate>Fri, 15 May 2020 00:00:00 +0000</pubDate></item><item><title>Kedro Static Viz 0.3.0 is out with Hooks Support</title><link>https://waylonwalker.com/kedro-static-viz-0-3-0</link><description>Even though it is a static site there is no functionality lost.  The only thing that Even though it Kedro viz is a fantastic kedro plugin that allows you to vis</description><content:encoded>&lt;p&gt;&lt;a href="https://github.com/WaylonWalker/kedro-static-viz"&gt;kedro-static-viz&lt;/a&gt; is out with support for the newly released hooks feature.  This means that you can have &lt;code&gt;kedro-static-viz&lt;/code&gt; automatically deploy a full gatsby site &lt;code&gt;before_pipeline_run&lt;/code&gt; keeping your visualization always up to date.&lt;/p&gt;&lt;p&gt;Even though it is a static site there is no functionality lost.  The only thing that's missing is the flask server.  With &lt;a href="https://github.com/WaylonWalker/kedro-static-viz"&gt;kedro-static-viz&lt;/a&gt; you can deploy your visualization to a number of static hosting providers such as GitHub pages free of charge with wicked fast performance&lt;/p&gt;&lt;h2 id="its-fast"&gt;⚡ It's Fast&lt;/h2&gt;&lt;p&gt;Even though it's built on gatsbyjs the full site builds in under 2s even on slower hardware.  This is because the site is already pre-rendered and stripped of any excess.  It's zipped up right into the python package and is typically used with the cli, but now can be used with python, or as a hook as well.&lt;/p&gt;&lt;blockquote&gt;&lt;h3 id="what-is-kedro-viz"&gt;What is &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; 🤔&lt;/h3&gt;&lt;/blockquote&gt;&lt;p&gt;Kedro viz is a fantastic kedro plugin that allows you to visualize your data pipeline.  Kedro allows you to quickly build production-ready pipelines where you just configure a catalog, then toss python functions into a big pile.  Kedro figures out the order everything needs ran in for you, allows you to run a datasets dependencies or dependents only.  &lt;a href="https://github.com/quantumblacklabs/kedro-viz"&gt;kedro-viz&lt;/a&gt; gives you a great way to see this ordering visually.&lt;/p&gt;&lt;p&gt;&lt;img alt="a visualization of a kedro data pipeline featuring data and functions flowing together." src="https://images.waylonwalker.com/pipeline_visualisation-1.png" title="kedro visualization" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;kedro visualization from the projects readme&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="check-out-a-live-running-example"&gt;Check out a live running example&lt;/h2&gt;&lt;p&gt;Using the power of GitHub actions the I have built a kedro iris pipeline visualization that can be found on &lt;a href="https://static-viz.kedro.dev/"&gt;https://static-viz.kedro.dev/&lt;/a&gt;&lt;/p&gt;&lt;h2 id="itching-to-get-started-with-kedro"&gt;Itching to get started with kedro&lt;/h2&gt;&lt;p&gt;You can be up and running in a matter of minutes if you already have python running on your machine.&lt;/p&gt;&lt;p&gt;Make a virtual environment with your environment manager of choice.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;practice&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;practice&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install kedro. Then create a new project with their awesome cli template built on cookiecutter. Make sure to answer &lt;code&gt;y&lt;/code&gt; to get a prebuilt example pipeline with data.&lt;/p&gt;&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install kedro kedro-static-vizkedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="vizualize-your-pipeline-with-the-cli"&gt;Vizualize your pipeline with the cli 〽&lt;/h2&gt;&lt;p&gt;For local use when you already have the full project &lt;code&gt;kedro viz&lt;/code&gt; is a great tool to use, but this is an article about kedro-static-viz.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;viz&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;viz&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since we used &lt;code&gt;kedro-static-viz&lt;/code&gt; you will have a new directory called &lt;code&gt;public&lt;/code&gt; that you can host on any static web hosting service, like GitHub pages or Netlify.&lt;/p&gt;&lt;h2 id="ready-to-try-out-the-new-hooks-feature"&gt;Ready to try out the new hooks feature 🙋‍♀️&lt;/h2&gt;&lt;p&gt;Open up your &lt;code&gt;&amp;lt;project&amp;gt;/src/run.py&lt;/code&gt; and add the hook to your &lt;code&gt;ProjectContext&lt;/code&gt; class.  Next time you run your pipeline you will have an updated pipeline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro_static_viz.hooks&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StaticViz&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProjectContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;KedroContext&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;   &lt;span class="n"&gt;project_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;kedro0160&amp;quot;&lt;/span&gt;   &lt;span class="n"&gt;project_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.16.1&amp;quot;&lt;/span&gt;   &lt;span class="n"&gt;package_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;kedro0160&amp;quot;&lt;/span&gt;   &lt;span class="n"&gt;hooks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;StaticViz&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="now-run-that-pipeline"&gt;Now Run that pipeline 🏃‍♀️&lt;/h2&gt;&lt;p&gt;Run your pipeline and enjoy that fresh kedro viz each and every time you run your pipeline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="want-to-make-your-own-hooks"&gt;Want to make your own hooks 🎣&lt;/h2&gt;&lt;p&gt;Check out some of my other articles on building kedro hooks.&lt;/p&gt;&lt;p&gt;&lt;a href="https://waylonwalker.com/kedro-class-hooks/"&gt;&lt;img alt="creating customizable kedro hooks" src="https://images.waylonwalker.com/configurable-kedro-hooks.png" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://waylonwalker.com/creating-the-kedro-preflight-hook/"&gt;&lt;img alt="creating the kedro preflight hook" src="https://images.waylonwalker.com/kedro-hooks.png" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Check out the example 👉 &lt;a href="https://static-viz.kedro.dev/"&gt;https://static-viz.kedro.dev/&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-your-first-nodes'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Writing your first kedro Nodes&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-spaceflights-stream2'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Spaceflights - part 2 | Stream replay June 7, 2021&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-static-viz-0-3-0</guid><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate></item><item><title>How Kedro handles your inputs</title><link>https://waylonwalker.com/kedro-inputs</link><description>Passing inputs into kedro is a key concept.  Understanding how it accepts a Check out this post for a review of how  https://waylonwalker.com/python-args-kwargs</description><content:encoded>&lt;p&gt;Passing inputs into kedro is a key concept.  Understanding how it accepts asingle catalog key as input is quite trivial that easily makes sense, butpassing a list or dictionary of catalog entries can be a bit confusing.&lt;/p&gt;&lt;h2 id="argsargs-review"&gt;&lt;em&gt;args/&lt;/em&gt;*args review&lt;/h2&gt;&lt;p&gt;Check out this post for a review of how &lt;code&gt;*args&lt;/code&gt; &lt;code&gt;**kwargs&lt;/code&gt; work in python.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/python-args-kwargs/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/python-args-kwargs-og_250x140.png" alt="article cover for  understanding python \*args and \*\*kwargs"/&gt;          &lt;p&gt;&lt;strong&gt; understanding python \*args and \*\*kwargs&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href="https://waylonwalker.com/python-args-kwargs"&gt;python args and kwargs&lt;/a&gt; article by &lt;a href="https://twitter.com/_WaylonWalker"&gt;@_waylonwalker&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="all-kedro-inputs-are-catalog-entries"&gt;All Kedro inputs are catalog Entries&lt;/h2&gt;&lt;p&gt;When kedro runs your pipeline it uses the catalog to imperatively load your data, meaning that you don't tell kedro how to load your data, you tell it where your data is and what type it is.  These catalog entries are like a &lt;code&gt;key-value&lt;/code&gt; store.  You just need to give the key when setting up a node.&lt;/p&gt;&lt;h2 id="single-inputs"&gt;Single Inputs&lt;/h2&gt;&lt;p&gt;These are fairly straightforward to understand.  In the example below when &lt;code&gt;kedro&lt;/code&gt; runs the pipeline it will load the input from the catalog, then pass that input to the func, then save the returned value to the output catalog entry.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_int_sales&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sales&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;cleans up raw sales data&amp;quot;&lt;/span&gt;    &lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cleaned_sales&lt;/span&gt;&lt;span class="n"&gt;my_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;create_int_sales&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr /&gt;&lt;h2 id="list-of-inputs"&gt;List of inputs&lt;/h2&gt;&lt;p&gt;Let's look at an example node that combines more than one dataset. When kedro has sees a list of catalog entries it will load up each catalog entry sequentially then pass them in order to the &lt;code&gt;create_sales_report&lt;/code&gt; function.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_sales_report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sales&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;adds product metadata to the sales data&amp;quot;&lt;/span&gt;    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;my_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;create_sales_report&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_products&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;    &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sales_report&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="simulating-pipeline-run-using-2-inputs"&gt;simulating pipeline run using 2 inputs&lt;/h2&gt;&lt;p&gt;Here We can simulate what kedro does during the pipeline run by using &lt;code&gt;*args&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# inputs you gave kedro&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_products&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# load data&lt;/span&gt;&lt;span class="n"&gt;input_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;  &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# run the node&lt;/span&gt;&lt;span class="n"&gt;sales_report&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_sales_report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;input_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# save the data to the output&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sales_report&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sales_report&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="more-generalizable-functions"&gt;More generalizable functions&lt;/h2&gt;&lt;p&gt;We can also use &lt;code&gt;*args&lt;/code&gt; to make our functions a little bit more generalizable. The first thatcomes to my mind is a unioner. The second&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unioner&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;    &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we can pass any number of DataFrames into our kedro node to get unioned together, butdo we really need a function for a one-liner... No we can use an inline function for this case.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;my_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dfs&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;    &lt;span class="nb"&gt;input&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sales_2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;sales_2018&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;    &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="args-scares-the-crap-out-of-me"&gt;&lt;code&gt;*args&lt;/code&gt; scares the crap out of me!&lt;/h2&gt;&lt;p&gt;It's great for the &lt;code&gt;unioner&lt;/code&gt; example where its a collection of similar things where orderdoes not matter.  But for the &lt;code&gt;create_sales_report&lt;/code&gt; function.  Those are distinctly differentinputs.  If someone does some refactoring and changes the order in one place or another it'sgoing to turn into a bad day real fast.&lt;/p&gt;&lt;h2 id="kwargs-are-a-bit-better"&gt;**kwargs are a bit better&lt;/h2&gt;&lt;p&gt;Let's refactor the &lt;code&gt;create_sales_report&lt;/code&gt; before someone tries to ruin our day.  We can easilydo this by passing a dictionary (keys are the argument name, values are the catalog key)of arguments to kedro instead of a list.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_sales_report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sales&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;products&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;adds product metadata to the sales data&amp;quot;&lt;/span&gt;    &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;my_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;create_sales_report&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;products&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_products&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;    &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sales_report&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now if someone tries to refactor the order of arguments we are safe!&lt;/p&gt;&lt;h2 id="simulating-the-pipeline-run-with-kwargs"&gt;Simulating the pipeline run with &lt;code&gt;**kwargs&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;Pretty much the same as before, except with &lt;code&gt;**kwargs&lt;/code&gt; and &lt;code&gt;dictionaries&lt;/code&gt; keeping us a bitsafer.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# inputs you gave kedro&lt;/span&gt;&lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;products&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_products&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="c1"&gt;# load data&lt;/span&gt;&lt;span class="n"&gt;input_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="c1"&gt;# run the node&lt;/span&gt;&lt;span class="n"&gt;sales_report&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_sales_report&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;input_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# save the data to the output&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sales_report&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sales_report&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="stay-safe"&gt;Stay Safe&lt;/h2&gt;&lt;p&gt;Kedro inputs are quite easy to understand if you already have a grasp of &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt;and if you don't it is still fairly intuitive to pick up.  Stay on the safe side, if yourcollection of inputs are clearly different things, use a dictionary for safety.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-install'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Install&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-incremental-versioned-datasets'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Incremental Versioned Datasets in Kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-inputs</guid><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate></item><item><title>How to find things in your kedro catalog</title><link>https://waylonwalker.com/kedro-catalog-search</link><description>kedro 0.16.2 just dropped last week with a long-awaited feature...  The kedro data catalog is a key component to the kedro framework.  It handles all data loadi</description><content:encoded>&lt;p&gt;kedro 0.16.2 just dropped last week with a long-awaited feature... &lt;strong&gt;catalog search&lt;/strong&gt;!  I went as far as monkey patching this into each of my projects.  I work jump between a few really big projects that have tons of datasets.  Being able to quickly search for what I need is so useful.&lt;/p&gt;&lt;h2 id="the-catalog"&gt;The Catalog&lt;/h2&gt;&lt;p&gt;The kedro data catalog is a key component to the kedro framework.  It handles all data loading and saving for you.  It is configurable and hackable.  Having all your data connections listed in one place make it so easy to pick your project up and move it to a completely new environment.  That sweet imperative loading style saves so much read/write overhead.  I can load all my data with a single command whether it's in amazon s3, google cloud platform, or a local file.&lt;/p&gt;&lt;h2 id="kick-start-a-toy-project"&gt;Kick start a toy project&lt;/h2&gt;&lt;p&gt;Just like with most of these articles, I am going to create a conda environment so that I don't break any existing projects and scaffold up a toy project to learn from.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n kedro0162 &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8 -yactivate kedro0162pip install kedrokedro new &lt;span class="c1"&gt;# call it Kedro 0162 and click-through&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; kedro-0162kedro install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Expect this set of commands to take a few minutes depending on your system, connection speed, and amount of packages already in your local cache.&lt;/p&gt;&lt;h2 id="create-some-catalog"&gt;Create some catalog&lt;/h2&gt;&lt;p&gt;Now the power of the catalog search really starts to shine when your projects grow legs.  You have groups of many datasets containing patterns of data including &lt;code&gt;layer&lt;/code&gt;, or &lt;code&gt;source&lt;/code&gt; among other things.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vim conf/base/catalog.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the catalog, you will see a few lines of instructions followed by&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;example_iris_data:  type: pandas.CSVDataSet  filepath: data/01_raw/iris.csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives us one stored catalog entry called &lt;code&gt;example_iris_data&lt;/code&gt;, it is a CSV file stored in &lt;code&gt;data/01_raw/iris.csv&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Let's make up a transportation company that is siloed into three different divisions and it is our job to bring their sales and product metadata into a single report.  This company makes &lt;code&gt;lifted-trucks&lt;/code&gt;, &lt;code&gt;primium-scoots&lt;/code&gt;, and &lt;code&gt;luxy-yahts&lt;/code&gt;.  and we know that we will want &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;pri&lt;/code&gt; and &lt;code&gt;modin&lt;/code&gt; layers to start our project so let's scaffold up that catalog real quick.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# ――――――――― lifted-truck ―――――――――raw_lifted_truck_sales:  type: pandas.CSVDataSet  filepath: data/01_raw/sales/lifted-truck.csvint_lifted_truck_sales:  type: pandas.CSVDataSet  filepath: data/01_int/sales/lifted-truck.csvpri_lifted_truck_sales:  type: pandas.CSVDataSet  filepath: data/01_pri/sales/lifted-truck.csvraw_lifted_truck_info:  type: pandas.CSVDataSet  filepath: data/01_raw/info/lifted-truck.csvint_lifted_truck_info:  type: pandas.CSVDataSet  filepath: data/01_int/info/lifted-truck.csvpri_lifted_truck_info:  type: pandas.CSVDataSet  filepath: data/01_pri/info/lifted-truck.csv# ――――――――― primium-scoot ―――――――――raw_primium_scoot_sales:  type: pandas.CSVDataSet  filepath: data/01_raw/sales/primium-scoot.csvint_primium_scoot_sales:  type: pandas.CSVDataSet  filepath: data/01_int/sales/primium-scoot.csvpri_primium_scoot_sales:  type: pandas.CSVDataSet  filepath: data/01_pri/sales/primium-scoot.csvraw_primium_scoot_info:  type: pandas.CSVDataSet  filepath: data/01_raw/info/primium-scoot.csvint_primium_scoot_info:  type: pandas.CSVDataSet  filepath: data/01_int/info/primium-scoot.csvpri_primium_scoot_info:  type: pandas.CSVDataSet  filepath: data/01_pri/info/primium-scoot.csv# ――――――――― luxy-yaht ―――――――――raw_luxy_yaht_sales:  type: pandas.CSVDataSet  filepath: data/01_raw/sales/luxy-yaht.csvint_luxy_yaht_sales:  type: pandas.CSVDataSet  filepath: data/01_int/sales/luxy-yaht.csvpri_luxy_yaht_sales:  type: pandas.CSVDataSet  filepath: data/01_pri/sales/luxy-yaht.csvraw_luxy_yaht_info:  type: pandas.CSVDataSet  filepath: data/01_raw/info/luxy-yaht.csvint_luxy_yaht_info:  type: pandas.CSVDataSet  filepath: data/01_int/info/luxy-yaht.csvpri_luxy_yaht_info:  type: pandas.CSVDataSet  filepath: data/01_pri/info/luxy-yaht.csv# ――――――――― combined ―――――――――pri_combined_sales:  type: pandas.CSVDataSet  filepath: data/01_pri/sales/combined.csvpri_combined_info:  type: pandas.CSVDataSet  filepath: data/01_pri/info/combined.csv# ――――――――― modin ―――――――――modin_main:  type: pandas.CSVDataSet  filepath: data/01_pri/info/combined.csv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="some-examples-of-common-regex-uses"&gt;Some examples of common regex uses&lt;/h2&gt;&lt;p&gt;&lt;code&gt;regex&lt;/code&gt; gets really complicated fast, but these basic examples are very common use cases and will get you a long way without being very complicated.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;term&lt;/code&gt; - all catalog entries that include &lt;code&gt;term&lt;/code&gt; in the catalog entry&lt;/li&gt;&lt;li&gt;&lt;code&gt;^term&lt;/code&gt; - all catalog entries that include &lt;code&gt;term&lt;/code&gt; at the &lt;strong&gt;beginning&lt;/strong&gt; of the catalog entry&lt;/li&gt;&lt;li&gt;&lt;code&gt;term$&lt;/code&gt; - all catalog entries that include &lt;code&gt;term&lt;/code&gt; at the &lt;strong&gt;end&lt;/strong&gt; of the catalog entry&lt;/li&gt;&lt;li&gt;&lt;code&gt;term1.*term2&lt;/code&gt; - include anything in between &lt;code&gt;term1&lt;/code&gt; and &lt;code&gt;term2&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;code&gt;term1|term2&lt;/code&gt; - all catalog entries that include &lt;code&gt;term1&lt;/code&gt; or &lt;code&gt;term2&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="lets-search-this-thing"&gt;Let's Search this thing&lt;/h2&gt;&lt;p&gt;kedro has long included the &lt;code&gt;catalog.list()&lt;/code&gt; feature that returns a list of all datasets.  Now the &lt;code&gt;list&lt;/code&gt; command takes in a &lt;code&gt;regex_search&lt;/code&gt; keyword argument.  By default, it is empty and returns the entire catalog.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro ipython&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="list-out-all-of-the-luxy-yahts"&gt;list out all of the luxy-yahts&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;luxy_yaht`)&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="c1"&gt;## List out data by layer&lt;/span&gt;&lt;span class="n"&gt;Easy&lt;/span&gt; &lt;span class="n"&gt;just&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;layer&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="c1"&gt;### raw&lt;/span&gt;&lt;span class="err"&gt;```&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="pri"&gt;pri&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_combined_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_combined_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;😲 We just included every &lt;code&gt;primium-scoot&lt;/code&gt; dataset!&lt;/p&gt;&lt;p&gt;Here we just encountered our first need for &lt;code&gt;regex&lt;/code&gt;.  I'll be the first to admit that I am really bad at regex, it's incredibly confusing, becomes read-only with much complexity, but is super powerful and used in a lot of places.&lt;/p&gt;&lt;h2 id="term"&gt;&lt;code&gt;^term&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;beginning of catalog entry&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;^&lt;/code&gt; regex operator searches for catalog entries that include the search term at the very beginning.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_combined_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_combined_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="term_1"&gt;&lt;code&gt;term$&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;&lt;em&gt;end of catalog entry&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;$&lt;/code&gt; operator is the opposite of the &lt;code&gt;^&lt;/code&gt; operator.  It means give me all that matches that occur at the end of the catalog entry.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;info$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_combined_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="term1term2"&gt;&lt;code&gt;term1.*term2&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;.*&lt;/code&gt; operator in regex means give me all the datasets that include the two terms no matter what is between them.  There is also a &lt;code&gt;.?&lt;/code&gt; to only allow one character between them.  More often than not I really just want the two patterns to exist in the dataset entry.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw.*info$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="some-real-things-that-we-can-do-with-search"&gt;Some real things that we can do with search&lt;/h2&gt;&lt;p&gt;Let's look at a few examples beyond the obvious of just searching for the dataset that we want to load.&lt;/p&gt;&lt;h2 id="check-raw-data"&gt;Check Raw Data&lt;/h2&gt;&lt;p&gt;While migrating pipelines between environments it's important to know if your raw datasets are available.  I will argue that you should also consider looking at &lt;code&gt;pipeline.inputs&lt;/code&gt; as it cannot lie and gives you a true reading of the pipeline inputs.  But another easy check might be to check all the datasets that the Data Engineers have labeled raw.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;^raw&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_luxy_yaht_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since we just created a dummy catalog the data does not exist in this example.&lt;/p&gt;&lt;h2 id="create-a-new-catalog"&gt;Create a new catalog&lt;/h2&gt;&lt;p&gt;Let's say that we have someone on the team who is from the land division of our company and they want a simplified catalog readily available that does not include any marine data.&lt;/p&gt;&lt;p&gt;To do this we will need to reach a bit into the kedro internals for the &lt;code&gt;DataCatalog&lt;/code&gt; class and utilize a new regex operator &lt;code&gt;|&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;land_catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;dataset&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;truck|scoot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;land_catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_lifted_truck_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;raw_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pri_primium_scoot_info&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="regex-recap"&gt;regex recap&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;^term&lt;/code&gt; - beginning&lt;/li&gt;&lt;li&gt;&lt;code&gt;term$&lt;/code&gt; - end&lt;/li&gt;&lt;li&gt;&lt;code&gt;term1.*term2&lt;/code&gt; - anything in between&lt;/li&gt;&lt;li&gt;&lt;code&gt;term1|term2&lt;/code&gt; - or&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-class-hooks'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create Configurable Kedro Hooks&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-catalog-create-cli'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;kedro catalog create&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-catalog-search</guid><pubDate>Mon, 22 Jun 2020 00:00:00 +0000</pubDate></item><item><title>Gracefully adopt kedro, the catalog</title><link>https://waylonwalker.com/graceful-kedro-catalog</link><description>While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For</description><content:encoded>&lt;h2 id="why-use-kedro-catalog"&gt;Why use kedro catalog?&lt;/h2&gt;&lt;p&gt;While using the catalog alone will not reap all of the benefits of the framework, it does get you and your project ready for the full framework eventually.  For me the full benefit of the catalog comes when you combine it with the pipeline and dont even touch read/write steps at all.&lt;/p&gt;&lt;p&gt;Taking a step into kedro by adopting the catalog first will give you a way to organize all of your data loads in one place, and stop manually writing read/write code, which can be different for each data and storage type. You just don't need to think about it.&lt;/p&gt;&lt;hr /&gt;&lt;ul&gt;&lt;li&gt;iperitive loading style&lt;/li&gt;&lt;li&gt;organizes your data&lt;/li&gt;&lt;li&gt;all file locations can be quickly identified&lt;/li&gt;&lt;li&gt;can be dropped into kedro later&lt;/li&gt;&lt;/ul&gt;&lt;hr /&gt;&lt;blockquote&gt;&lt;p&gt;"can be dropped into kedro later"Let's talk a bit more about that&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="2-ways-to-gracefully-adopt-the-catalog"&gt;2 Ways to Gracefully adopt the catalog&lt;/h2&gt;&lt;p&gt;&lt;em&gt;How do I get started with the kedro catalog&lt;/em&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;add with the code api&lt;/li&gt;&lt;li&gt;load from yaml (&lt;strong&gt;recommended&lt;/strong&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="1-adding-to-the-catalog-with-the-code-api"&gt;1. Adding to the catalog with the code api&lt;/h2&gt;&lt;p&gt;&lt;em&gt;how to use the kedro catalog code api&lt;/em&gt;&lt;/p&gt;&lt;p&gt;It is possible to keep everything inside of one single file if you want by utilizing the code api, which defines the kedro catalog inside of your script with python.  I personally like this method as it is a bit more scriptable to create many layers of datasets with a for loop.  It can still be carried right into a kedro project, but is not the normal way that other kedro users will be used to seeing.  I'll leave it up to you which technique to use.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.extras.datasets.pandas&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CSVDataSet&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;bikes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CSVDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;../data/01_raw/bikes.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;taken right from the kedro &lt;a href="https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html"&gt;docs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;👆 This can be done inside of a single Jupyter cell, and pulled out later.&lt;/p&gt;&lt;h2 id="2-creating-a-catalog-config-file"&gt;2. Creating a catalog config file&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;recommended&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This reccommended method it great since it will simply drop right in to a full kedro project if you were ever ready to adopt the framework as a whole.  The downside to gracefully adopting the framework is that you need to have a bit of an understanding of the internals to do it.  When using the framework as a whole it seemlessly takes care of everything for you.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# conf/base/catalog.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Example 1: Loads / saves a CSV file from / to a local file system&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;bikes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/01_raw/bikes.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.config&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ConfigLoader&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="n"&gt;conf_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfLoader&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;conf/base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="n"&gt;conf_catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf_loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;catalog*&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;catalog/**&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf_catalog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;You can even do this 👆 from a Jupyter notebook&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If you do happen to be in a module deeper into an existing library I tend to leverage the use of the &lt;code&gt;__file__&lt;/code&gt; magic.  &lt;code&gt;__file__&lt;/code&gt; is a string containing the location of the current file.  You can initiate a &lt;code&gt;Path&lt;/code&gt; object from this and roll up the necessary number of directories with the &lt;code&gt;parents&lt;/code&gt; attribute then into the &lt;code&gt;conf/base&lt;/code&gt; directory.  I find this more &lt;strong&gt;more robust&lt;/strong&gt; as it does not depend on your current working directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="n"&gt;conf_loader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfLoader&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parents&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;conf/base&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="n"&gt;conf_catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conf_loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;catalog*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;catalog/**&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;new_catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;conf_catalog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I find leveraging the &lt;code&gt;__file__&lt;/code&gt; magic a bit more robust when possible as it does not depend on your current working directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="adhoc-adding-to-an-existing-kedro-catalog"&gt;Adhoc adding to an existing kedro catalog&lt;/h2&gt;&lt;p&gt;Let's say that you are already using a kedro project, but you are wanting to develop new features entirely in the context of a notebook.  You can easily create a catalog as shown above.  Since the kedro catalog variable is typically &lt;code&gt;catalog&lt;/code&gt;, we will call it &lt;code&gt;new_catalog&lt;/code&gt; and add it to the existing &lt;code&gt;catalog&lt;/code&gt; below.  If you are not quite sure what that &lt;code&gt;**catalog&lt;/code&gt; syntax is doing check out my article on &lt;code&gt;**kwargs&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_feed_dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://waylonwalker.com/python-args-kwargs/"&gt;&lt;img alt="python args and kwargs" src="https://images.waylonwalker.com/python-args-kwargs.png" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;a href="https://waylonwalker.com/python-args-kwargs/"&gt;python args and kwargs&lt;/a&gt; article by &lt;a href="https://twitter.com/_WaylonWalker"&gt;@_waylonwalker&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The framework makes appending&lt;/p&gt;&lt;p&gt;&lt;code&gt;` pythoncatalog = DataCatalog({**catalog.datasets.__dict__, **new_catalog.datasets.__dict__})&lt;/code&gt;&lt;/p&gt;&lt;h2 id="one-word-of-caution"&gt;One word of caution&lt;/h2&gt;&lt;p&gt;If you have any hooks running &lt;code&gt;after_catalog_created&lt;/code&gt;, they will not be run on the appended catalog entries.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/gracefully-redirect'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Refactoring your blog urls&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/goals-2019'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;2019 goals&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/graceful-kedro-catalog</guid><pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate></item><item><title>What's New in Kedro 0.16.4</title><link>https://waylonwalker.com/whats-new-in-kedro-0164</link><description>If we take a look at the  This one comes a bit surprising as it was just casually mentioned in  As mentioned in  It feels a bit crazy that simply installing a p</description><content:encoded>&lt;p&gt;If we take a look at the &lt;a href="https://github.com/quantumblacklabs/kedro/blob/master/RELEASE.md"&gt;release notes&lt;/a&gt; I see one &lt;strong&gt;major&lt;/strong&gt; feature improvement on the list, auto-discovery of hooks.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gu"&gt;## Major features and improvements&lt;/span&gt;&lt;span class="k"&gt;*&lt;/span&gt; Enabled auto-discovery of hooks implementations coming from installed plugins.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This one comes a bit surprising as it was just casually mentioned in &lt;a href="https://github.com/quantumblacklabs/kedro/issues/435"&gt;#435&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://github.com/quantumblacklabs/kedro/issues/435"&gt;&lt;img alt="auto enabled plugins mentioned in issue 435" src="https://images.waylonwalker.com/kedro-435.png" /&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 id="think-pytest"&gt;Think pytest&lt;/h2&gt;&lt;p&gt;As mentioned in &lt;a href="https://github.com/quantumblacklabs/kedro/issues/435"&gt;#435&lt;/a&gt; this is the model that pytest uses. Not all plugins automatically start doing things right out of the box but require a CLI argument.&lt;/p&gt;&lt;h2 id="simplicity"&gt;simplicity&lt;/h2&gt;&lt;p&gt;It feels a bit crazy that simply installing a package will change the way that your pipeline gets executed. I do like that it requires just a bit less reaching into the framework stuff for the average user. Most folks will be able to write in the catalog and nodes without much change to the rest of the project.&lt;/p&gt;&lt;h2 id="implementation"&gt;Implementation&lt;/h2&gt;&lt;p&gt;Reading through the &lt;a href="https://kedro.readthedocs.io/en/stable/07_extend_kedro/04_plugins.html#hooks"&gt;docs&lt;/a&gt;, they show us that we can make our hooks automatically register by adding a &lt;code&gt;kedro.hooks&lt;/code&gt; endpoint that points to a &lt;em&gt;singleton&lt;/em&gt; instance of our hook.&lt;/p&gt;&lt;p&gt;&lt;em&gt;from the docs&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="o"&gt;...&lt;/span&gt;    &lt;span class="n"&gt;entry_points&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;kedro.hooks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;plugin_name = plugin_name.plugin:hooks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]},&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.framework.hooks&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;hook_impl&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyHooks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="nd"&gt;@hook_impl&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;after_catalog_created&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;# pylint: disable=unused-argument&lt;/span&gt;        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Reached after_catalog_created hook&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;hooks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyHooks&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="careful-with-the-singletons"&gt;Careful with the singletons&lt;/h2&gt;&lt;p&gt;&lt;em&gt;hook authors beware&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I will be a bit cautious before installing a plugin that is automatically registered. I know its not a common pattern, but if you were to leverage any part of two kedro projects at the same time, and project-specific data was stored in the instance of the hook it will likely be broken.&lt;/p&gt;&lt;p&gt;As long as the hook doesn't store data on the instance you will be ok. Hooks like what they have in the examples will be ok. They generally just take some information from the lifecycle arguments and do something at their prescribed lifecycle point.&lt;/p&gt;&lt;p&gt;Many of the hooks I am seeing in the wild are already more complicated and require the hooks author to utilize an &lt;code&gt;__init__&lt;/code&gt; method and store data on the instance. If you were to do this on two pipelines simultaneously it would break.&lt;/p&gt;&lt;h2 id="can-my-hook-be-auto-discovered"&gt;Can my hook be auto-discovered&lt;/h2&gt;&lt;p&gt;If your hook doesn't include a &lt;code&gt;__init__&lt;/code&gt; method its a fairly easy yes, otherwise be aware of the potential dangers of passing singleton on to your users.&lt;/p&gt;&lt;h2 id="use-virtual-environments"&gt;Use Virtual environments&lt;/h2&gt;&lt;p&gt;Whatever virtual environment manager you use, it is more important than ever to make sure you &lt;strong&gt;DO NOT&lt;/strong&gt; install plugins in your global environment. Generally, you should always run projects &lt;em&gt;even toys or tests&lt;/em&gt; in a &lt;strong&gt;virtual&lt;/strong&gt;  &lt;strong&gt;environemnt&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;I use conda&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n my-sample-env &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8 -y&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="overall"&gt;Overall&lt;/h2&gt;&lt;p&gt;I think this is a really interesting direction for the project to go to. Hooks are still really early. The implementation is good, but I foresee us getting some more functionality that may require us to rely on the &lt;code&gt;__init__&lt;/code&gt; method a little less.  I think there are going to be some really cool hooks that can leverage the simplicity of auto-discoverability.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/whats-new-in-kedro-0166'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What's New in Kedro 0.16.6&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/what-is-kedro-1'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What is Kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/whats-new-in-kedro-0164</guid><pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate></item><item><title>What's New in Kedro 0.16.6</title><link>https://waylonwalker.com/whats-new-in-kedro-0166</link><description>This version of kedro releases a new set of supported deployment options and the spaceflights pipeline is officially added as a starter alias.</description><content:encoded>&lt;p&gt;Kedro &lt;a href="https://github.com/quantumblacklabs/kedro/releases"&gt;0.16.6&lt;/a&gt; is out! Let's take a look through the release notes&lt;/p&gt;&lt;h2 id="deployment-docs"&gt;Deployment Docs&lt;/h2&gt;&lt;p&gt;This is really exciting to see more deployment options coming from the kedro team. It really shows the power of the framework. The power of some of these orchestrations options is incredible.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/04_argo.html"&gt;Argo&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/05_prefect.html"&gt;Prefect&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/06_kubeflow.html"&gt;Kubeflow&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/07_aws_batch.html"&gt;Batch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/09_aws_sagemaker.html"&gt;SageMaker&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Most of them hinge on a sweet combination of the kedro cli, docker image, and the pipeline knowing your nodes dependencies. &lt;/p&gt;&lt;p&gt;Argo, Prefect, and Kubeflow have an interesting technique where they translate the pipeline and its dependencies from kedro to their language.&lt;/p&gt;&lt;p&gt;Batch uses the aws cli to submit jobs, one node per job, and listen for them to complete. It will submit all nodes with completed dependencies at once, meaning that we can get some massive parallelization.&lt;/p&gt;&lt;p&gt;I did a quick and dirty test of one of these by simulating the technique in a bash script and saw a 40 hr pipeline finish in about 1 hour. I am excited to get this working in my production workflow.&lt;/p&gt;&lt;h2 id="spaceflight-starter"&gt;Spaceflight starter&lt;/h2&gt;&lt;p&gt;They have officially added the spaceflights pipeline as a starter. I have not yet had a chance to try this out, but I anticipate this will be a great pipeline to teach from as it is a bit more complex than the iris pipeline. &lt;/p&gt;&lt;p&gt;I tell folks all the time the best way to learn something new like kedro is to &lt;strong&gt;practice, practice, practice&lt;/strong&gt;. Having this at their fingertips will give an easy way to fire up a pipeline that is ok to break try out some new ideas and leave it. I see this helping me testing out plugins on more complex pipelines and writing blog posts with examples that readers can more easily follow along with.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;practice&lt;/li&gt;&lt;li&gt;testing&lt;/li&gt;&lt;li&gt;blog posts&lt;/li&gt;&lt;li&gt;tutorials&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="better-error-messages"&gt;Better Error Messages&lt;/h2&gt;&lt;p&gt;Shameless pug, my PR landed in kedro, but fell off of the release.md in a merge issue. I was frustrated working on large projects when the wrong arguments were passed into a node and it did not give you any information in the Error to figure out where the error was thrown. Now it will at least give the name of the function that caused the error. This was a simple fix as all of the information was already there.&lt;/p&gt;&lt;h2 id="overall"&gt;Overall&lt;/h2&gt;&lt;p&gt;Love the progress that the project is seeing and the focus on all of the deployment options.&lt;/p&gt;&lt;h2 id="thanks-for-supporting-contributions"&gt;Thanks for supporting contributions&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/deepyaman"&gt;Deepyaman Datta&lt;/a&gt;, Bhavya Merchant, &lt;a href="https://github.com/Lovkush-A"&gt;Lovkush Agarwal&lt;/a&gt;, &lt;a href="https://github.com/vhawk19"&gt;Varun Krishna S&lt;/a&gt;, &lt;a href="https://github.com/sebastianbertoli"&gt;Sebastian Bertoli&lt;/a&gt;, &lt;a href="https://github.com/noklam"&gt;noklam&lt;/a&gt;, &lt;a href="https://github.com/djpetti"&gt;Daniel Petti&lt;/a&gt;, &lt;a href="https://github.com/waylonwalker"&gt;Waylon Walker&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/whats-on-your-github-profile'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;🤓 What's on your GitHub Profile&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/whats-new-in-kedro-0164'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What's New in Kedro 0.16.4&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/whats-new-in-kedro-0166</guid><pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate></item><item><title>reasons-to-kedro</title><link>https://waylonwalker.com/reasons-to-kedro</link><description>There are many reasons that you should be using kedro.  If you are on a team of https://waylonwalker.com/what-is-kedro Kedro makes it super easy to get started </description><content:encoded>&lt;iframe src="https://anchor.fm/waylon-walker/embed/episodes/reasons-to-kedro-en6kr3" height="102px" width="400px" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;p&gt;There are many reasons that you should be using kedro.  If you are on a team ofData Scientists/Data Engineers processing DataFrames from many data sourcesshould be considering a pipeline framework.  Kedro is a great option thatprovides many benefits for teams to collaborate, develop, and deploy datapipelines&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;h2 id="starter-template"&gt;Starter Template&lt;/h2&gt;&lt;p&gt;Kedro makes it super easy to get started with their cli that utilizescookiecutter under the hood.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n my-new-project -y &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8kedro newkedro installkedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/create-new-kedro-project/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/create-new-kedro-project-og_250x140.png" alt="article cover for  Create New Kedro Project"/&gt;          &lt;p&gt;&lt;strong&gt; Create New Kedro Project&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;read more about how to start your first kedro project here&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="collaboration"&gt;Collaboration&lt;/h2&gt;&lt;p&gt;Kedro provides many tools that help teams collaborate on a single codebase.While writing monolithic scripts it can be easy to pin yourself in a cornerwhere it is difficult to have multiple people making changes to thenotebook/script at the same time.  Kedro helps guide your team to break yourproject down into small pieces that different members of the team can work onin parallel.&lt;/p&gt;&lt;h3 id="sharable-catalog"&gt;sharable catalog&lt;/h3&gt;&lt;p&gt;Kedro makes it easy to collaborate with members who aren't even working on thepipeline.  I often see team members who want to investigate datasets fromdifferent points in the pipeline.  Kedro makes it really easy for them to loadit into python.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;for python users&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Share catalog entries with folks doing EDA.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;main_table&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;for non-python users&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;For those who may not be using python, we can easily kick out a CSV version ofthat &lt;code&gt;main_table&lt;/code&gt; that they can get from s3 or your cloud storage solution ofchoice.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;master_table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;s3://bucket/data/03_primary/master_table.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;layer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;primary&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;for the SQL folks&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;We aren't even constrained to those who only use python or excel, we can kickout any kind of dataset that python can output.  Kedro even comes with manyDataSet types out of the box so that we don't have to write any read/writecode.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;master_table&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SQLTableDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;master_table&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;credentials&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;postgres&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="small-nodes-over-monolithic-scripts"&gt;small nodes over monolithic scripts&lt;/h3&gt;&lt;p&gt;As I said before single notebooks/scripts are really hard to collaborate on.  Ihave seen Data Engineers sitting idle waiting to get their changes manuallyadded into the master notebook.  When you find yourself in this situation, finda better solution.  It's time to break things down into individual modules andutilize a version control system that can automatically merge changes in.&lt;/p&gt;&lt;p&gt;Kedro encourages the use of git version control and storing all node functionsinside of modules while still making it really easy to load data into anotebook/shell and start trying out new things.&lt;/p&gt;&lt;h2 id="no-more-read-and-write-code"&gt;No More read and write code&lt;/h2&gt;&lt;p&gt;As I said earlier kedro comes with datasets for the most popular outputformats.  It is also backed by a really amazing library called &lt;code&gt;fsspec&lt;/code&gt;, thislibrary makes the filesystem that you are storing agnostic to how you write toit.  This means that the kedro library utilizes &lt;code&gt;fsspec&lt;/code&gt; under the hood andwrites to the file as if it was to disk, but based on the prefix to the file itmay actually be writing to the local filesystem, gcp, azure blob, or s3.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;custom DataSets&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If kedro does not have a &lt;code&gt;DataSet&lt;/code&gt; for the format that you need to read orwrite you can easily create your own custom &lt;code&gt;DataSet&lt;/code&gt;  all you need to do isinherit from &lt;code&gt;kedro.io.AbstractDataSet&lt;/code&gt; and create methods for &lt;code&gt;__init__&lt;/code&gt;,&lt;code&gt;_load&lt;/code&gt;, &lt;code&gt;_save&lt;/code&gt;, &lt;code&gt;_exists&lt;/code&gt;, and &lt;code&gt;_describe&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Check out this example from their docs.  I removed the docstrings for brevity,you can see the entire &lt;code&gt;DataSet&lt;/code&gt; in their&lt;a href="https://kedro.readthedocs.io/en/0.15.2/03_tutorial/03_set_up_data.html?highlight=custom%20dataset#creating-custom-datasets"&gt;docs&lt;/a&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;The complete example all in one was only available in an older version, more up to date &lt;a href="https://kedro.readthedocs.io/en/0.16.6/07_extend_kedro/01_custom_datasets.html?highlight=custom%20dataset"&gt;docs&lt;/a&gt; have a good writeup that walks through everything separately.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;AbstractDataSet&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ExcelLocalDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AbstractDataSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_engine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_load_args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                    &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_save_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xlsxwriter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Any&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;filepath&lt;/span&gt;        &lt;span class="n"&gt;default_save_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;        &lt;span class="n"&gt;default_load_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;engine&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xlrd&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_load_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;default_load_args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;load_args&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; \            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;load_args&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;default_load_args&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_save_args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;default_save_args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;save_args&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; \            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;save_args&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;default_save_args&lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;]]:&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_load_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ExcelWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;engine&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_engine&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_excel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_save_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="n"&gt;writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_filepath&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="execution-order-is-taken-care-of"&gt;Execution order is taken care of&lt;/h2&gt;&lt;p&gt;As you build up complex pipelines containing 10's or 100's of nodes it becomesdifficult to splice in new nodes/steps without messing up or a framework tohelp.  Kedro simply needs a set of nodes that each takes in catalog entries asinput and output to catalog entries and it will figure out the order for you.&lt;/p&gt;&lt;p&gt;These nodes can be made for one-off purposes, take in functions from reusablelibraries, and even be dynamically generated from a configuration.  There isno need to worry about hand curating the execution order, that's all taken careof.&lt;/p&gt;&lt;h2 id="easily-slice-up-a-pipeline"&gt;Easily slice up a pipeline&lt;/h2&gt;&lt;p&gt;Since kedro is a DAG that takes in a pile of nodes and figures out all of thedependencies for you it knows a lot about your pipeline.  You can slice it up toonly the specific pieces that you need.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# single nodes&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;only_nodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;node1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# single nodes and all of thier dependencies&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_nodes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;node1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;node2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# from a dataset to all of its dependants&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_inputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dataset1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dataset2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# to a an outputs with all of its dependencies&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_outputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dataset6&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dataset7&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="pluginshooks"&gt;plugins/hooks&lt;/h2&gt;&lt;p&gt;Creating your own modifications to how kedro behaves is made really simplethrough the use of hooks.  There are several hooks that happen at differentpoints in the kedro lifecycle.  For instance, you can hook in before pipelinerun or after pipeline run to do whatever your project needs.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/creating-the-kedro-preflight-hook/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/creating-the-kedro-preflight-hook-og_250x140.png" alt="article cover for  creating the kedro-preflight hook"/&gt;          &lt;p&gt;&lt;strong&gt; creating the kedro-preflight hook&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;h3 id="pip-install-plugin"&gt;pip install plugin&lt;/h3&gt;&lt;p&gt;There is a growing list of plugins available from pypi that is only a &lt;code&gt;pipinstall&lt;/code&gt; away.  Most of them are on&lt;a href="https://github.com/topics/kedro-plugin"&gt;GitHub&lt;/a&gt; and tagged as a&lt;a href="https://github.com/topics/kedro-plugin"&gt;kedro-plugin&lt;/a&gt; topic.&lt;/p&gt;&lt;h2 id="flexible-cli"&gt;flexible cli&lt;/h2&gt;&lt;p&gt;In the end, you have a cli for your project that can run your pipeline in allsorts of cool ways since it knows about each node's dependencies.  This makesrunning and scheduling production a breeze.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# single nodes&lt;/span&gt;kedro run --node node1&lt;span class="c1"&gt;# single nodes and all of their dependencies&lt;/span&gt;kedro run --to-nodes node1,node2 &lt;span class="c1"&gt;# from a dataset to all of its dependents&lt;/span&gt;kedro run --from-inputs dataset1,dataset2&lt;span class="c1"&gt;# to outputs with all of their dependencies&lt;/span&gt;kedro run --to-outputs dataset6,dataset7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="try-it-out"&gt;Try it out&lt;/h2&gt;&lt;p&gt;Hopefully this post gave you the inspiration to get started today, if it did &lt;code&gt;pip install kedro&lt;/code&gt; and run &lt;code&gt;kedro new&lt;/code&gt; to try it out.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/reasons-to-kedro-notes'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Reasons to Kedro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/realistic-git-workflow'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Realistic Git Workflow&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/reasons-to-kedro</guid><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate></item><item><title>Kedro - My Data Is Not A Table</title><link>https://waylonwalker.com/kedro-pickle</link><description>In python data science/engineering most of our data is in the form of some sort These containers for data contain many convenient methods to manipulate table ht</description><content:encoded>&lt;p&gt;In python data science/engineering most of our data is in the form of some sortof table, typically a DataFrame from a library like pandas, spark, or dask.&lt;/p&gt;&lt;h2 id="dataframes-are-the-heart-of-most-pipelines"&gt;DataFrames are the heart of most pipelines&lt;/h2&gt;&lt;p&gt;These containers for data contain many convenient methods to manipulate tablelike data structures.  Sometimes we leverage other data types, namely vanillatypes like lists and dicts, or even numpy data types.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;unfamiliar with kedro, check out this post&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="sometimes-datasets-are-not-tables"&gt;Sometimes datasets are not tables&lt;/h2&gt;&lt;p&gt;There are times when our data doesn't fit nicely into a DataFrame. Lucky for usKedro has pickle support out of the box.  Pickle is a way to store any pythonobject to disk.  Beware that pickle files coming from an unknown source can runmalicous code and are considered unsafe.  For the most part though when youread and write your own pickle files they are a good tool to consider.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;See more about &lt;a href="https://docs.python.org/3/library/pickle.html"&gt;pickle&lt;/a&gt; from python.org.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="cataloging-pickle"&gt;Cataloging Pickle&lt;/h2&gt;&lt;p&gt;I may have a dictionary that describes some cars.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;truck-012-abc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;    &lt;span class="s1"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;truck&amp;#39;&lt;/span&gt;    &lt;span class="s1"&gt;&amp;#39;sales&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="s1"&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9024&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="s1"&gt;&amp;#39;accesories&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;leather&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;audio-1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the catalog we will simply set the type as &lt;code&gt;pickle.PickleDataSet&lt;/code&gt; and giveit a filepath.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/cars.pkl&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pickle.PickleDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;This filepath does not have to be on the local filesystem it can be on thecloud thanks to how kedro utilizes fsspec for each of its datasets.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="loading-the-dataset"&gt;Loading the dataset&lt;/h2&gt;&lt;p&gt;The benefit of cataloging this dataset compared to leaving it as a&lt;code&gt;MemoryDataSet&lt;/code&gt; is that you can easily load this data back into memory forfurther development or debugging without running any of the pipeline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-pipeline-registry'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro pipeline_registry.py&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-parameters'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Setting Parameters in kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-pickle</guid><pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Minimal Kedro Pipeline</title><link>https://waylonwalker.com/minimal-kedro-pipeline</link><description>How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It 📝 Note this is only a composable pipeline, </description><content:encoded>&lt;p&gt;How small can a minimum kedro pipeline ready to package be?  I made one within 4 files that you can pip install.  It's only a total of 35 lines of python, 8 in &lt;code&gt;setup.py&lt;/code&gt; and 27 in &lt;code&gt;mini_kedro_pipeline.py&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;📝 Note this is only a composable pipeline, not a full project, it does not contain a catalog or runner.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="minimal-kedro-pipeline"&gt;Minimal Kedro Pipeline&lt;/h2&gt;&lt;p&gt;I have everything for this post hosted in this &lt;a href="https://github.com/WaylonWalker/mini-kedro-pipeline"&gt;gihub repo&lt;/a&gt;, you can fork it, clone it, or just follow along.&lt;/p&gt;&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install git+https://github.com/WaylonWalker/mini-kedro-pipeline&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="caveats"&gt;Caveats&lt;/h2&gt;&lt;p&gt;This repo represents the minimal amount of structure to build a kedro pipeline that can be shared across projects.  Its installable, and drops right into your &lt;code&gt;hooks.py&lt;/code&gt; or &lt;code&gt;run.py&lt;/code&gt; modules.  It is not a runnable pipeline.  At this pointI think the config loader requires to have a logging config file.&lt;/p&gt;&lt;p&gt;This is a sharable pipeline that can be used across many different projects.&lt;/p&gt;&lt;h2 id="usage"&gt;Usage&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# hooks.py&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mini_kedro_project&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;mkp&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ProjectHooks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="nd"&gt;@hook_impl&lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register_pipelines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Register the project&amp;#39;s pipeline.&lt;/span&gt;&lt;span class="sd"&gt;        Returns:&lt;/span&gt;&lt;span class="sd"&gt;            A mapping from a pipeline name to a ``Pipeline`` object.&lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;__default__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;([]),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mkp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;mkp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="implemantation"&gt;Implemantation&lt;/h2&gt;&lt;p&gt;This builds on another post that I made about creating the minimal python package.  I am not sure if it should be called a package, it's a module, but what do you call it after you build it and host it on pypi?&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/minimal-python-package/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/minimal-python-package-og_250x140.png" alt="article cover for  Minimal Python Package"/&gt;          &lt;p&gt;&lt;strong&gt; Minimal Python Package&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;h2 id="directory-structure"&gt;Directory structure&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.├── .gitignore├── README.md├── setup.py└── my_pipeline.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="setuppy"&gt;setup.py&lt;/h2&gt;&lt;p&gt;This is a very minimal &lt;code&gt;setup.py&lt;/code&gt;.  This is enough to get you started with a package that you can share across your team.  In practice, there is a bit more that you might want to include as your project grows.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MiniKedroPipeline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;py_modules&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mini_kedro_pipeline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;    &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;kedro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="mini_kedro_pipelinepy"&gt;mini_kedro_pipeline.py&lt;/h2&gt;&lt;p&gt;The mini kedro pipeline looks like any set of nodes in your project.  Many projects will separate nodes and functions, I prefer to keep them close together.  The default recommendation is also to have a &lt;code&gt;create_pipelines&lt;/code&gt; function that returns the pipeline.&lt;/p&gt;&lt;p&gt;This pattern creates a singleton, if you were to reference the same pipeline in multiple places within the same running interpreter and modify the one you would run into issues.  I don't foresee myself running into this issue, but maybe as more features become available I will change my mind.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="sd"&gt;An example of a minimal kedro pipeline project&lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Waylon S. Walker&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;creates a dictionary of sample data&amp;quot;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;beans&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;create_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;raw_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create_raw_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mult_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;multiplies each record of each item by 100&amp;quot;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mult_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;raw_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mult_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create_mult_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="kedro-in-scripts"&gt;Kedro in scripts&lt;/h2&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/kedro-in-scripts/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/kedro-in-scripts-og_250x140.png" alt="article cover for  Using Kedro In Scripts"/&gt;          &lt;p&gt;&lt;strong&gt; Using Kedro In Scripts&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;If you enjoyed this one check out this companion article where I build a fully runnable kedro project in a single script.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="share-your-pipelines"&gt;Share your pipelines&lt;/h2&gt;&lt;p&gt;Go forth and share your pipelines across projects.  Let me know, do you share pipelines or catalogs across projects?&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/minimal-python-package'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Minimal Python Package&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/master-no-more'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Master No More&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/minimal-kedro-pipeline</guid><pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Kedro pipeline_registry.py</title><link>https://waylonwalker.com/kedro-pipeline-registry</link><description>With the realease of  create a  register_pipelines register hook_impl class You should now have something that looks like this in your pipeline I was not able t</description><content:encoded>&lt;p&gt;With the realease of &lt;code&gt;kedro==0.17.2&lt;/code&gt; came a new module in the project template&lt;code&gt;pipeline_registry.py&lt;/code&gt;.  Here are some notes that I learned while playing withthis new module.&lt;/p&gt;&lt;h2 id="migrating-to-pipeline_registrypy"&gt;migrating to &lt;code&gt;pipeline_registry.py&lt;/code&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;create a &lt;code&gt;src/&amp;lt;package-name&amp;gt;/pipeline_registry.py&lt;/code&gt; file create a&lt;/li&gt;&lt;li&gt;&lt;code&gt;register_pipelines&lt;/code&gt; function in &lt;code&gt;pipeline_registry.py&lt;/code&gt; that mirrors the&lt;/li&gt;&lt;li&gt;register_pipelines method from your &lt;code&gt;hooks.py&lt;/code&gt; module do not bring the&lt;/li&gt;&lt;li&gt;&lt;code&gt;hook_impl&lt;/code&gt; decorator remove register_pipelines method on your &lt;code&gt;ProjectHooks&lt;/code&gt;&lt;/li&gt;&lt;li&gt;class&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You should now have something that looks like this in your&lt;code&gt;src/&amp;lt;package-name&amp;gt;/pipeline_registry.py&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Project pipelines.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register_pipelines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Register the project&amp;#39;s pipelines.&lt;/span&gt;&lt;span class="sd"&gt;    Returns: A mapping from a pipeline name to a ``Pipeline`` object.&lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;__default__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;([])}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;pipeline_registry only works in &lt;code&gt;kedro&amp;gt;=0.17.2&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="conflict-resolution"&gt;Conflict Resolution&lt;/h2&gt;&lt;p&gt;&lt;em&gt;What happens If I register pipelines in both places&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I was not able to find any official documentation on how conflict resolutionworked so I stepped into a project and added to both my &lt;code&gt;hooks.py&lt;/code&gt; and&lt;code&gt;pipeline_registry.py&lt;/code&gt; file.  I noticed that it would pick up pipelines fromboth modules, but pipelines from &lt;code&gt;hooks.py&lt;/code&gt; always take precedence.  The entireduplicate pipeline will be over written by the one from &lt;code&gt;hooks.py&lt;/code&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;kedro automatically merges pipelines from both hooks.py takes precedence&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="ready-to-update"&gt;Ready to update&lt;/h2&gt;&lt;p&gt;In my experience there were no issues upgrading from &lt;code&gt;0.17.1&lt;/code&gt; to &lt;code&gt;0.17.2&lt;/code&gt;.  Iwould reccomend only having one &lt;code&gt;register_pipelines&lt;/code&gt; so decide to migrate tothe new &lt;code&gt;pipeline_registry.py&lt;/code&gt; or keep it in your &lt;code&gt;hooks.py&lt;/code&gt;, but both is onlygoing to lead to confusion.&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/datajoely/status/1375193511264456705"&gt;https://twitter.com/datajoely/status/1375193511264456705&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-preflight'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;📝 Kedro Preflight Notes&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-pickle'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro - My Data Is Not A Table&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-pipeline-registry</guid><pubDate>Sat, 20 Mar 2021 00:00:00 +0000</pubDate></item><item><title>kedro replit</title><link>https://waylonwalker.com/kedro172_replit</link><description>I am trying to see what an embeded replit</description><content:encoded>&lt;p&gt;I am trying to see what an embeded replit&lt;/p&gt;&lt;iframe height="400px" width="100%" src="https://replit.com/@WaylonWalker/kedro-172?lite=true" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"&gt;&lt;/iframe&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/keep-location-list-closed'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Keep Location List Closed&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-your-first-nodes'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Writing your first kedro Nodes&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro172_replit</guid><pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate></item><item><title>Silence Kedro Logs</title><link>https://waylonwalker.com/kedro-silence</link><description>Kedro can have a chatty logger.  While this is super nice in production First, how does one silence a python log?  Python loggers can be retrieved by | Level   </description><content:encoded>&lt;p&gt;Kedro can have a chatty logger.  While this is super nice in productionso see everything that happened during a pipeline run. This can be troublesomewhile trying to implement a cli extension with clean output.&lt;/p&gt;&lt;h2 id="silence-a-python-log"&gt;Silence a Python log&lt;/h2&gt;&lt;p&gt;First, how does one silence a python log?  Python loggers can be retrieved bythe &lt;code&gt;logging&lt;/code&gt; module's &lt;code&gt;getLogger&lt;/code&gt; function. Then their log level can bechanged.  Much of kedro's chattiness comes from INFO level logs.  I don't wantto hear about anything for my current use case unless it's essential, i.e., afailure.  In this case, I set the log levels to ERROR as most errors shouldstop execution anyways.&lt;/p&gt;&lt;h3 id="python-logging-levels"&gt;python logging levels&lt;/h3&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Level&lt;/th&gt;&lt;th&gt;Numeric value&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;CRITICAL&lt;/td&gt;&lt;td&gt;50&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;ERROR&lt;/td&gt;&lt;td&gt;40&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;WARNING&lt;/td&gt;&lt;td&gt;30&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;INFO&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;DEBUG&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;NOTSET&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h2 id="get-or-create-a-logger"&gt;Get or Create a logger&lt;/h2&gt;&lt;p&gt;Getting a python logger is straightforward if we know the name of the logger.The following block will grab the logger object for the logger currentlyregistered under the name passed in.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;kedro&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🔥 If a logger doesn't exist under the passed in name, it will create one for you.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="set-level"&gt;Set Level&lt;/h2&gt;&lt;p&gt;Once we get the logger, we need to silence it by setting the log level.Typically it's not appropriate to completely turn off loggers as you would stillwant information in the case of a complete failure.  If you are buildinga cli such as one that prints out the pipelines to the console, you may not wantto see logs that happen during regular operation as this would make it morechallenging to integrate with other shell applications.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLevel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;⚠ Be sure to leave some logging left. After the point of error, you are notgoing to get a clean output anyways.  So let the user see what happened.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;It is possible to set the log level before kedro even registers thelogger, if there is no logger currently setup under getLogger, it will createone.&lt;/p&gt;&lt;h2 id="silent-all-kedro-loggers"&gt;Silent all kedro loggers&lt;/h2&gt;&lt;p&gt;As of &lt;code&gt;kedro==0.17.3&lt;/code&gt; this function covers every logger issued bykedro.  I generated this list of &lt;code&gt;known_kedro_loggers&lt;/code&gt; by looking through theircodebase and filling in a few others I found by running it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;silent_loggers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;All logs need to be silent in order for a clean kedro diff output.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;    &lt;span class="n"&gt;known_kedro_loggers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ProfileTimeTransformer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;hooks_handler&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.__init__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.config&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.config.config&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.extras.decorators.memory_profiler&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.framework.cli&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.framework.session.session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.framework.session.store&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.framework.session&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.io.cached_dataset&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.io.data_catalog&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.io&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.journal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.pipeline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.pipeline.decorators&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.pipeline.node&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.pipeline.pipeline&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.runner&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.runner.runner&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;kedro.versioning.journal&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;py4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;known_kedro_loggers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;        &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;manager&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loggerDict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;  &lt;span class="c1"&gt;# type: ignore&lt;/span&gt;    &lt;span class="p"&gt;]:&lt;/span&gt;        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setLevel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ERROR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This function comes right from a plugin I am currently working on&lt;a href="https://github.com/WaylonWalker/kedro-diff"&gt;kedro-diff&lt;/a&gt;.  Check it out, giveit a star, and watch it for release.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Not familiar with kedro, check out this article to see what it's all about.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="master-the-log"&gt;Master the log&lt;/h2&gt;&lt;p&gt;Python logs can seem super confusing at first, understanding how to get alogger and set its level are the first steps to mastering it.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-spaceflights-stream1'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Spaceflights - part 1 | Stream replay June 4, 2021&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-run'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Running your Kedro Pipeline from the command line&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-silence</guid><pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate></item><item><title>Using Kedro In Scripts</title><link>https://waylonwalker.com/kedro-in-scripts</link><description>With the latest releases of kedro  https://waylonwalker.com/what-is-kedro/ If your just learning about kedro check out this post walking through it I To get ked</description><content:encoded>&lt;p&gt;With the latest releases of kedro &lt;code&gt;0.17.x&lt;/code&gt;, it is now possible to run kedropipelines from within scripts.  While I would not start a project with thistechnique, it will be a good tool to keep in my back pocket when I want tosprinkle in a bit of kedro goodness in existing projects.&lt;/p&gt;&lt;h2 id="new-to-kedro"&gt;New to Kedro&lt;/h2&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;If your just learning about kedro check out this post walking through it&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="no-more-rabbit-hole-of-errors"&gt;No More Rabbit Hole of Errors&lt;/h2&gt;&lt;p&gt;&lt;em&gt;as of 0.17.2&lt;/em&gt;&lt;/p&gt;&lt;p&gt;I've tried to do this in kedro &lt;code&gt;0.16.x,&lt;/code&gt; and it turned into a rabbit hole oferrors.  First kedro needed a &lt;code&gt;conf&lt;/code&gt; directory, if you tried to fake one in itwould then ask for logging setup.  These errors just kept coming to the pointit wasnt worth doing and I might as well use a proper template for realprojects and stick to simple function calls for things that are not a kedroproject.&lt;/p&gt;&lt;h2 id="kedro-in-a-script"&gt;Kedro in a script&lt;/h2&gt;&lt;p&gt;To get kedro running, you will need a pipeline, catalog, andrunner at a minimum.  Those who have used kedro before the pipeline willlook very similar to what you are familiar with, but the catalog will not beloaded from yaml and you will need to bring your own runner.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.runner.sequential_runner&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SequentialRunner&lt;/span&gt;&lt;span class="c1"&gt;# additional datasets you want to use&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.extras.datasets.pandas.csv_dataset&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CSVDataSet&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.extras.datasets.pandas.parquet_dataset&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ParquetDataSet&lt;/span&gt;&lt;span class="c1"&gt;# the sequential runner is the simplest. It runs one node at a time.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SequentialRunner&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="c1"&gt;# this is a super simple example pipeline&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range**2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range**2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;gt;5k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;gt;5k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;gt;5k-head&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;gt;5k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;range&amp;gt;5k-mean&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;    &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;# to get up and running, you can use an empty catalog&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 Above is the minimal setup to get a kedro pipeline running&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="more-practically"&gt;more practically&lt;/h2&gt;&lt;p&gt;More often, your kedro pipelines are going to use a function rather than alambda, and pandas DataFrames.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_columns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;[&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clean_columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;raw_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;clean_columns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;create_clean_columns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;    &lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;raw_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ParquetDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data/raw_data.parquet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;clean_columns&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ParquetDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data/clean_columns.parquet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;One single node pipeline to get you started&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="semi-automatic-catalog"&gt;Semi-automatic catalog&lt;/h2&gt;&lt;p&gt;For some reason, when I tried to use the DataCatalogWithDefault it did not pickup my datasets right.  I suspect this has something to do with not setting up aproper session, so this is what I did in a pinch to get that catalog goodnessfor my DataFrames without setting up each one manually.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ParquetDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.parquet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_outputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;⚠ If all of your datasets are pandas dataframes&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;For the example above that does not use DataFrames, I would pickle all of myoutputs to enable re-loading them later.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DataCatalog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;        &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;data/&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.pkl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all_outputs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🔥 for use with non-pandas datasets&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="logging"&gt;Logging&lt;/h2&gt;&lt;p&gt;Once you explicitly add datasets, kedro will start logging when it'sloading, running, or saving each node.  Things will begin to look abit more familiar to anyone who has used kedro before.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;ww3&lt;/span&gt; &lt;span class="err"&gt;↪&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="err"&gt;©&lt;/span&gt;&lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt; &lt;span class="n"&gt;v3&lt;/span&gt;&lt;span class="mf"&gt;.8.8&lt;/span&gt; &lt;span class="n"&gt;ipython&lt;/span&gt;&lt;span class="err"&gt;❯&lt;/span&gt; &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;099&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Saving&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;104&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequential_runner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;105&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Saving&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequential_runner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;112&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;112&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Saving&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequential_runner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Saving&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;118&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequential_runner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Running&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;119&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Saving&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequential_runner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Completed&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="n"&gt;tasks&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;04&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;122&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequential_runner&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt; &lt;span class="n"&gt;execution&lt;/span&gt; &lt;span class="n"&gt;completed&lt;/span&gt; &lt;span class="n"&gt;successfully&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="kedro-viz"&gt;Kedro Viz&lt;/h2&gt;&lt;p&gt;I was not able to quickly get kedro viz up and running for my use case.  If youreally wanted to you could start modifying their format_pipelines_data functionin&lt;a href="https://github.com/quantumblacklabs/kedro-viz/blob/main/package/kedro_viz/server.py"&gt;server.py&lt;/a&gt;.Or you could render a new template and put your pipeline there for vizpurposes.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;It's possible, but might as well stick to the template&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="cli"&gt;cli&lt;/h2&gt;&lt;p&gt;For something that I would be using this on, I am probably not going to put mucheffort into the cli as it is not likely something that we will have ateam of developers interacting with constantly.  I would just put together theminimum necessary to run my application how I need.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--skip-raw&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_inputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range**2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;        &lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Keeping it simple &lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If I want to go down the route of having a full cli built out I am probablygoing to use the full kedro template, or something very similar.&lt;/p&gt;&lt;h2 id="its-a-bit-rough"&gt;It's a bit Rough&lt;/h2&gt;&lt;p&gt;While I might use this in production somewhere, it will be inside of someother not kedro application. I will still be using something quite similar totheir template for my pipelining projects.  It misses some excellentthings that bring me to kedro like hooks, plugins, credentials, catalog,logging config, cli, and viz.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-incremental-versioned-datasets'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Incremental Versioned Datasets in Kedro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-git-init'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Git Init&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-in-scripts</guid><pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate></item><item><title>Kedro Spaceflights - part 1 | Stream replay June 4, 2021</title><link>https://waylonwalker.com/kedro-spaceflights-stream1</link><description>This was my first time ever streaming on https://youtu.be/Y07UBr9Ccjs It all started with</description><content:encoded>&lt;p&gt;This was my first time ever streaming on&lt;a href="https://twitch.tv/waylonwalker"&gt;twitch.tv/waylonwalker&lt;/a&gt;.  I am excited to get going.I have been streaming early in the morning while I am still waking up, so stilla bit groggy as I go.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/Y07UBr9Ccjs"&gt;https://youtu.be/Y07UBr9Ccjs&lt;/a&gt;&lt;/p&gt;&lt;h2 id="kedro-spaceflights"&gt;Kedro Spaceflights&lt;/h2&gt;&lt;p&gt;It all started with&lt;a href="https://github.com/quantumblacklabs/kedro/issues/606"&gt;kedro/issues/606&lt;/a&gt;, Yetucalled out for users of kedro to record themselves doing a walk through oftheir tutorials.  I wanted to do this, but was really stuck at the fact thatrecording or editing somewhat polished vide is quite time consuming for me.&lt;/p&gt;&lt;p&gt;&lt;img alt="kedro-issue-606" src="https://images.waylonwalker.com/kedro-issue-606.png" /&gt;&lt;/p&gt;&lt;h2 id="notes"&gt;Notes&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run kedro new&lt;span class="nb"&gt;cd&lt;/span&gt; projectpython -m venv .venv&lt;span class="nb"&gt;source&lt;/span&gt; .venv/bin/activatepip install kedrokedro install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-spaceflights-stream2'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Spaceflights - part 2 | Stream replay June 7, 2021&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-silence'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Silence Kedro Logs&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-spaceflights-stream1</guid><pubDate>Fri, 04 Jun 2021 00:00:00 +0000</pubDate></item><item><title>Kedro Spaceflights - part 2 | Stream replay June 7, 2021</title><link>https://waylonwalker.com/kedro-spaceflights-stream2</link><description>This was my seconf time ever streaming on</description><content:encoded>&lt;p&gt;This was my seconf time ever streaming on&lt;a href="https://twitch.tv/waylonwalker"&gt;twitch.tv/waylonwalker&lt;/a&gt;, and I completely botched my mic 2x.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/_7MwgKu-844"&gt;https://youtu.be/_7MwgKu-844&lt;/a&gt;&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/03_tutorial/01_spaceflights_tutorial.html"&gt;Spaceflights Tutorial&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/WaylonWalker/kedro-spaceflights"&gt;my spaceflights repo&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="notes-to-get-started"&gt;Notes to get started&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run kedro new&lt;span class="nb"&gt;cd&lt;/span&gt; projectpython -m venv .venv&lt;span class="nb"&gt;source&lt;/span&gt; .venv/bin/activatepip install kedrokedro install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-static-viz-0-3-0'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Static Viz 0.3.0 is out with Hooks Support&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-spaceflights-stream1'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Spaceflights - part 1 | Stream replay June 4, 2021&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-spaceflights-stream2</guid><pubDate>Mon, 07 Jun 2021 00:00:00 +0000</pubDate></item><item><title>I Started Streaming on Twitch</title><link>https://waylonwalker.com/start-streaming</link><description>I recently started streaming on python kedro Data Science Data Engineering webdev digital gardening It all started with My introduction to twitch came from Afte</description><content:encoded>&lt;p&gt;I recently started streaming on&lt;a href="https://www.twitch.tv/waylonwalker"&gt;twitch.tv/waylonwalker&lt;/a&gt; and it's been ablast so far.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;python&lt;/li&gt;&lt;li&gt;kedro&lt;/li&gt;&lt;li&gt;Data Science&lt;/li&gt;&lt;li&gt;Data Engineering&lt;/li&gt;&lt;li&gt;webdev&lt;/li&gt;&lt;li&gt;digital gardening&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="kedro-spaceflights"&gt;Kedro Spaceflights&lt;/h2&gt;&lt;p&gt;It all started with&lt;a href="https://github.com/quantumblacklabs/kedro/issues/606"&gt;kedro/issues/606&lt;/a&gt;, Yetucalled out for users of kedro to record themselves doing a walk through oftheir tutorials.  I wanted to do this, but was really stuck at the fact thatrecording or editing somewhat polished vide is quite time consuming for me.&lt;/p&gt;&lt;p&gt;&lt;img alt="kedro-issue-606" src="https://images.waylonwalker.com/kedro-issue-606.png" /&gt;&lt;/p&gt;&lt;h2 id="inspiration"&gt;Inspiration&lt;/h2&gt;&lt;p&gt;My introduction to twitch came from&lt;a href="https://twitch.tv/theprimeagen"&gt;twitch.tv/theprimeagen&lt;/a&gt;. I watched him onYouTube, and then decided to drop into a stream.  It was so fun to watch himlive that I started following others in the science and tech category.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://www.twitch.tv/teej_dv"&gt;twitch.tv/teej_dv&lt;/a&gt; Brilliant neovim core dev, I learn a bunch about nvim every time I watch.&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.twitch.tv/cmgriffing"&gt;twitch.tv/cmgriffing&lt;/a&gt; Super Chill and engaging chat.&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.twitch.tv/cassidoo"&gt;twitch.tv/cassidoo&lt;/a&gt; Fantastic discussion/chat.&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.twitch.tv/anthonywritescode"&gt;twitch.tv/anthonywritescode&lt;/a&gt; Building the python ecosystem.&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.twitch.tv/kierisi"&gt;twitch.tv/kierisi&lt;/a&gt; Exploring data in r-studio, taking xgboost to Sliced.&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="streaming-what-i-do"&gt;Streaming What I Do&lt;/h2&gt;&lt;p&gt;After taking a jump in with the spaceflights tutorial I realized that it reallywas not that hard to do, and I can stream things that I am doing anyways.  Iwill be streaming while I build open source kedro plugins, pipelines, and whileI work on my website.&lt;/p&gt;&lt;h2 id="youtube"&gt;YouTube&lt;/h2&gt;&lt;p&gt;I started storing all the replay, and some clips on&lt;a href="https://www.youtube.com/channel/UChoRUssc5HoO-xQ9hUKZ1mA"&gt;YouTube&lt;/a&gt;.  If thatis more of your thing be sure to check it out.  To be completely honest the  editing/ clips will likely come at a minimum, as they take me a lot more time to edit.  I would greatly appreciateanyone who subscribes to help me get to the 100 subscriber baseline to get mycustom url.&lt;/p&gt;&lt;p&gt;Come join me while I try to figure out what I am doing.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/55g8FQr0kgA"&gt;Deploying a kedro dataset to netlify&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Here is a small clip from my latest&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/stories_10-10-2020_10-21-2020'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A brain dump of stories&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/stand-with-your-team'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Stand With Your Team&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/start-streaming</guid><pubDate>Sat, 12 Jun 2021 00:00:00 +0000</pubDate></item><item><title>Incremental Versioned Datasets in Kedro</title><link>https://waylonwalker.com/kedro-incremental-versioned-datasets</link><description>Kedro versioned datasets can be mixed with incremental and partitioned datasets https://waylonwalker.com/what-is-kedro/ 👆 Unsure what kedro is?  Check out this </description><content:encoded>&lt;p&gt;Kedro versioned datasets can be mixed with incremental and partitioned datasetsto do some timeseries analysis on how our dataset changes over time.  Kedro isa very extensible and composible framework, that allows us to build solutionsfrom the individual components that it provides.  This article is a greatexample of how you can combine these components in unique ways to achieve somepowerful results with very little work.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 Unsure what kedro is?  Check out this post.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="how-does-our-dataset-change-over-time"&gt;How does our dataset change over time??&lt;/h2&gt;&lt;p&gt;This was a question presented to me at work.  We had some plots being producesas the output of our pipeline and the user wanted the ability to compareresults over time.  Luckily this was asked early in the project so we were ableto proactively setup versioning on the right datasets.&lt;/p&gt;&lt;p&gt;To enable this all we needed to do now was to add &lt;code&gt;versioned: true&lt;/code&gt; and we willbe able to compare results over time.  Yes kedro makes it that easy to setup.&lt;/p&gt;&lt;h2 id="set-up-a-project"&gt;set up a project&lt;/h2&gt;&lt;p&gt;Set up a new project just as usual.  &lt;strong&gt;note&lt;/strong&gt; I like using pipx forglobal cli packages.  You can pick a specific version of kedro or opt for thelatest while simply globally installing kedro and running kedro new is purelydependent on the last time you chose to update kedro.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pipxpipx run kedro new&lt;span class="nb"&gt;cd&lt;/span&gt; versioned-partitioned-kedro-exampleconda create -n versioned-partitioned-kedro-example &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8  -yconda activate versioned-partitioned-kedro-examplepip install kedrokedro installgit initgit add .git commit -m &lt;span class="s2"&gt;&amp;quot;init project from pipx run kedro new&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I called my project versioned-partitioned-kedro-example. You can call yourproject whatever you like.  If you try to use some special characters wherethey don't belong, kedro will catch you.  Under the hood, kedro is using alibrary called &lt;code&gt;cookiecutter&lt;/code&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;⚠️ Please do not skip out on using a virtual environment. You may usewhichever virtual environment tool you prefer, but please do not skip out.Wrecking a running project for learning is not fun.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="update-dependencies"&gt;update dependencies&lt;/h2&gt;&lt;p&gt;I popped open my dependencies, added &lt;code&gt;kedro[pandas]&lt;/code&gt; and &lt;code&gt;find-kedro&lt;/code&gt;. Since those are extra packages our example will require.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;aiohttpblack==21.5b1find-kedroflake8&amp;gt;=3.7.9, &amp;lt;4.0ipythonisort~=5.0jupyter_client&amp;gt;=5.1, &amp;lt;7.0jupyterlab~=3.0jupyter~=1.0kedro-telemetry~=0.1.0kedro==0.17.4kedro[pandas]nbstripout~=0.4pytest-cov~=2.5pytest-mock&amp;gt;=1.7.1, &amp;lt;2.0pytest~=6.2requestswheel&amp;gt;=0.35, &amp;lt;0.37&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; I created &lt;code&gt;find-kedro&lt;/code&gt;, and I like using it to create mypipeline object.  Think of how pytest automatically picks up everything named&lt;code&gt;test&lt;/code&gt;, &lt;code&gt;find-kedro&lt;/code&gt; does the same thing for kedro.  It picks up everythingwith &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;pipeline&lt;/code&gt; in the name and creates pipelines out of it.&lt;/p&gt;&lt;h2 id="install-new-dependencies"&gt;Install new dependencies&lt;/h2&gt;&lt;p&gt;After adding our additional dependencies to the &lt;code&gt;requirements.in&lt;/code&gt;, wecan tell kedro to install everything and compile the dependencies.  Behindthe scenes &lt;code&gt;--build-reqs&lt;/code&gt; uses a library called &lt;code&gt;pip-compile&lt;/code&gt; to create a&lt;code&gt;requirements.txt&lt;/code&gt; file with hard pinned dependencies, which is ideal forcreating reproducible projects.  You and your future colleagues may not thankyou for this, but they sure as heck won't be cursing your name when they can'tget the project to run.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro install --build-reqsgit add .git commit -m &lt;span class="s2"&gt;&amp;quot;added additional dependencies&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="create-a-node"&gt;create a node&lt;/h2&gt;&lt;p&gt;For this example, we need a node to do much.  This node willpass the &lt;code&gt;cars.csv&lt;/code&gt; from a URL to a &lt;code&gt;parquet&lt;/code&gt; file.  I am going to use alambda to build my identity function inline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# pipelines/cars_nodes.py&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;            &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;create_int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🗒️ &lt;strong&gt;note&lt;/strong&gt;&lt;code&gt;find-kedro' will automatically pick up these nodes for us after weset up our&lt;/code&gt;pipeline_registry.py`.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add .git commit -m &lt;span class="s2"&gt;&amp;quot;add create_int_cars node&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="implement-find-kedro"&gt;implement find-kedro&lt;/h2&gt;&lt;p&gt;Next, we need to tell kedro where our nodes are.  This is where &lt;code&gt;find-kedro&lt;/code&gt;comes in.  Once we point to the directory where our modules ofnodes/pipelines are, it creates the pipelines dictionary for us automatically.  It will even separate each module into a pipeline and stitch them all into one default pipeline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# pipeline_registry.py&lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Project pipelines.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;typing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;find_kedro&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;find_kedro&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;register_pipelines&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Register the project&amp;#39;s pipelines.&lt;/span&gt;&lt;span class="sd"&gt;    Returns:&lt;/span&gt;&lt;span class="sd"&gt;        A mapping from a pipeline name to a &amp;quot;Pipeline &amp;quot;object.&lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;    &lt;span class="n"&gt;pipeline_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pipelines&amp;#39;&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;find_kedro&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pipeline_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🗒️ This is very similar to the default ` pipeline_registry'except the last twolines.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add .git commit -m &lt;span class="s2"&gt;&amp;quot;implement find-kedro&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="create-a-baseline-catalog"&gt;create a baseline catalog&lt;/h2&gt;&lt;p&gt;Once we have a pipeline setup, the kedro cli can automatically fill in missingcatalog entries with  &lt;code&gt;MemoryDataSet&lt;/code&gt;'s. Thus, using the cli helps consistently scaffold thecatalog and ensure we don't end up with a typo in ourdataset name.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro catalog create --pipeline cars_nodes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Kedro will kick out the following catalog file to &lt;code&gt;base/catalog/cars_nodes.yml&lt;/code&gt;for us to get started with.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;raw_cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;int_cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🔥 use the kedro cli to fill in any missing datasets from the automaticallycatalog.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="make-a-versioned-dataset"&gt;make a versioned dataset&lt;/h2&gt;&lt;p&gt;Kedro has scaffolded &lt;code&gt;MemoryDataSet&lt;/code&gt; 's for us.  We will convert them to theappropriate dataset type and turn on versioning for our &lt;code&gt;int&lt;/code&gt; layer, which isthe first point we save in our environment.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;raw_cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;https://waylonwalker.com/cars.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;int_cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.ParquetDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/int_cars.parquet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;versioned&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Commit your changes to the catalog.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add .git commit -m &lt;span class="s2"&gt;&amp;quot;create catalog&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="run-the-pipeline"&gt;run the pipeline&lt;/h2&gt;&lt;p&gt;Once we have the nodes and catalog setup, we can run the pipeline a few timesto get some versioned data.  Each time we run, it will save a new version insidethe &lt;code&gt;int_cars.parquet&lt;/code&gt; directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro runkedro runkedro runkedro runkedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🗒️ we put our data in the data directory. By default, this directory isincluded in the &lt;code&gt;.gitignore&lt;/code&gt; and will not be picked up by git.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="inspect-the-data"&gt;inspect the data&lt;/h2&gt;&lt;p&gt;Listing the files in &lt;code&gt;data/int_cars.parquet&lt;/code&gt; shows that I now have five differentdatasets available.  I can load old ones, but by default, kedro will load thelatest one.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls data/int_cars.parquet&lt;span class="m"&gt;2021&lt;/span&gt;-07-05T15.24.53.164Z&lt;span class="m"&gt;2021&lt;/span&gt;-07-05T15.29.56.144Z&lt;span class="m"&gt;2021&lt;/span&gt;-07-05T15.30.23.101Z&lt;span class="m"&gt;2021&lt;/span&gt;-07-05T15.30.26.555Z&lt;span class="m"&gt;2021&lt;/span&gt;-07-05T15.31.12.688Z&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🗒️ kedro sets the version at the timestamp that the session starts.  Alldatasets created within the same run will have the same version.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="stack-on-an-incremental-dataset"&gt;stack on an incremental dataset&lt;/h2&gt;&lt;p&gt;This is where things get interesting. Kedro comes with an incremental datasetthat will load all of the files from a particular directory into a dictionarywhere the keys are the filename of the dataset.  To load up all datasets intothis dictionary all we need to do is add a new catalog entry that is a  &lt;code&gt;type:PartitionedDataSet&lt;/code&gt;, with a &lt;code&gt;path&lt;/code&gt; pointing to the same place as the original,and a &lt;code&gt;dataset&lt;/code&gt; type the same as the original.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;int_cars_partitioned&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;PartitionedDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.ParquetDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/int_cars.parquet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="catalog-list"&gt;catalog list&lt;/h2&gt;&lt;p&gt;Listing the catalog entries confirms that we have successfully added our new &lt;code&gt;PartitionedDataSet&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;int_cars_partitioned&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;parameters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="loading-an-incremental-dataset"&gt;loading an incremental dataset&lt;/h2&gt;&lt;p&gt;Now we can easily load the datasets from every run we just did into a singledictionary, simply by running &lt;code&gt;context.catalog.load('int_cars_incremental')&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_incremental&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;534&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;int_cars_incremental&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IncrementalDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2021-07-05T15.29.56.144Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;              &lt;span class="n"&gt;Unnamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="n"&gt;mpg&lt;/span&gt;  &lt;span class="n"&gt;cyl&lt;/span&gt;   &lt;span class="n"&gt;disp&lt;/span&gt;   &lt;span class="n"&gt;hp&lt;/span&gt;  &lt;span class="n"&gt;drat&lt;/span&gt;     &lt;span class="n"&gt;wt&lt;/span&gt;   &lt;span class="n"&gt;qsec&lt;/span&gt;  &lt;span class="n"&gt;vs&lt;/span&gt;  &lt;span class="n"&gt;am&lt;/span&gt;  &lt;span class="n"&gt;gear&lt;/span&gt;  &lt;span class="n"&gt;carb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;             &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.620&lt;/span&gt;  &lt;span class="mf"&gt;16.46&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;         &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt; &lt;span class="n"&gt;Wag&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.875&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="n"&gt;Datsun&lt;/span&gt; &lt;span class="mi"&gt;710&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;108.0&lt;/span&gt;   &lt;span class="mi"&gt;93&lt;/span&gt;  &lt;span class="mf"&gt;3.85&lt;/span&gt;  &lt;span class="mf"&gt;2.320&lt;/span&gt;  &lt;span class="mf"&gt;18.61&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;        &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;Drive&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;258.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.215&lt;/span&gt;  &lt;span class="mf"&gt;19.44&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="n"&gt;Sportabout&lt;/span&gt;  &lt;span class="mf"&gt;18.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;               &lt;span class="n"&gt;Valiant&lt;/span&gt;  &lt;span class="mf"&gt;18.1&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;225.0&lt;/span&gt;  &lt;span class="mi"&gt;105&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.460&lt;/span&gt;  &lt;span class="mf"&gt;20.22&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;            &lt;span class="n"&gt;Duster&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;  &lt;span class="mf"&gt;14.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.21&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;15.84&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;             &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;  &lt;span class="mf"&gt;24.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;146.7&lt;/span&gt;   &lt;span class="mi"&gt;62&lt;/span&gt;  &lt;span class="mf"&gt;3.69&lt;/span&gt;  &lt;span class="mf"&gt;3.190&lt;/span&gt;  &lt;span class="mf"&gt;20.00&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;140.8&lt;/span&gt;   &lt;span class="mi"&gt;95&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.150&lt;/span&gt;  &lt;span class="mf"&gt;22.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.30&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;            &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="mf"&gt;17.8&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SE&lt;/span&gt;  &lt;span class="mf"&gt;16.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;4.070&lt;/span&gt;  &lt;span class="mf"&gt;17.40&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SL&lt;/span&gt;  &lt;span class="mf"&gt;17.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.730&lt;/span&gt;  &lt;span class="mf"&gt;17.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;          &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SLC&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.780&lt;/span&gt;  &lt;span class="mf"&gt;18.00&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;   &lt;span class="n"&gt;Cadillac&lt;/span&gt; &lt;span class="n"&gt;Fleetwood&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;472.0&lt;/span&gt;  &lt;span class="mi"&gt;205&lt;/span&gt;  &lt;span class="mf"&gt;2.93&lt;/span&gt;  &lt;span class="mf"&gt;5.250&lt;/span&gt;  &lt;span class="mf"&gt;17.98&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="n"&gt;Lincoln&lt;/span&gt; &lt;span class="n"&gt;Continental&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;460.0&lt;/span&gt;  &lt;span class="mi"&gt;215&lt;/span&gt;  &lt;span class="mf"&gt;3.00&lt;/span&gt;  &lt;span class="mf"&gt;5.424&lt;/span&gt;  &lt;span class="mf"&gt;17.82&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;    &lt;span class="n"&gt;Chrysler&lt;/span&gt; &lt;span class="n"&gt;Imperial&lt;/span&gt;  &lt;span class="mf"&gt;14.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;440.0&lt;/span&gt;  &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;3.23&lt;/span&gt;  &lt;span class="mf"&gt;5.345&lt;/span&gt;  &lt;span class="mf"&gt;17.42&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;             &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;  &lt;span class="mf"&gt;32.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;78.7&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;2.200&lt;/span&gt;  &lt;span class="mf"&gt;19.47&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;          &lt;span class="n"&gt;Honda&lt;/span&gt; &lt;span class="n"&gt;Civic&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;75.7&lt;/span&gt;   &lt;span class="mi"&gt;52&lt;/span&gt;  &lt;span class="mf"&gt;4.93&lt;/span&gt;  &lt;span class="mf"&gt;1.615&lt;/span&gt;  &lt;span class="mf"&gt;18.52&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;       &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corolla&lt;/span&gt;  &lt;span class="mf"&gt;33.9&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;71.1&lt;/span&gt;   &lt;span class="mi"&gt;65&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;1.835&lt;/span&gt;  &lt;span class="mf"&gt;19.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;        &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corona&lt;/span&gt;  &lt;span class="mf"&gt;21.5&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.1&lt;/span&gt;   &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="mf"&gt;3.70&lt;/span&gt;  &lt;span class="mf"&gt;2.465&lt;/span&gt;  &lt;span class="mf"&gt;20.01&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;     &lt;span class="n"&gt;Dodge&lt;/span&gt; &lt;span class="n"&gt;Challenger&lt;/span&gt;  &lt;span class="mf"&gt;15.5&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;318.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.520&lt;/span&gt;  &lt;span class="mf"&gt;16.87&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;          &lt;span class="n"&gt;AMC&lt;/span&gt; &lt;span class="n"&gt;Javelin&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;304.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.435&lt;/span&gt;  &lt;span class="mf"&gt;17.30&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;           &lt;span class="n"&gt;Camaro&lt;/span&gt; &lt;span class="n"&gt;Z28&lt;/span&gt;  &lt;span class="mf"&gt;13.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;350.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.73&lt;/span&gt;  &lt;span class="mf"&gt;3.840&lt;/span&gt;  &lt;span class="mf"&gt;15.41&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;     &lt;span class="n"&gt;Pontiac&lt;/span&gt; &lt;span class="n"&gt;Firebird&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;400.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.845&lt;/span&gt;  &lt;span class="mf"&gt;17.05&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;            &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="mf"&gt;27.3&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;79.0&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;1.935&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;        &lt;span class="n"&gt;Porsche&lt;/span&gt; &lt;span class="mi"&gt;914&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mf"&gt;26.0&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.3&lt;/span&gt;   &lt;span class="mi"&gt;91&lt;/span&gt;  &lt;span class="mf"&gt;4.43&lt;/span&gt;  &lt;span class="mf"&gt;2.140&lt;/span&gt;  &lt;span class="mf"&gt;16.70&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;         &lt;span class="n"&gt;Lotus&lt;/span&gt; &lt;span class="n"&gt;Europa&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;95.1&lt;/span&gt;  &lt;span class="mi"&gt;113&lt;/span&gt;  &lt;span class="mf"&gt;3.77&lt;/span&gt;  &lt;span class="mf"&gt;1.513&lt;/span&gt;  &lt;span class="mf"&gt;16.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;       &lt;span class="n"&gt;Ford&lt;/span&gt; &lt;span class="n"&gt;Pantera&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;  &lt;span class="mf"&gt;15.8&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;351.0&lt;/span&gt;  &lt;span class="mi"&gt;264&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;3.170&lt;/span&gt;  &lt;span class="mf"&gt;14.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;         &lt;span class="n"&gt;Ferrari&lt;/span&gt; &lt;span class="n"&gt;Dino&lt;/span&gt;  &lt;span class="mf"&gt;19.7&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;145.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.62&lt;/span&gt;  &lt;span class="mf"&gt;2.770&lt;/span&gt;  &lt;span class="mf"&gt;15.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;        &lt;span class="n"&gt;Maserati&lt;/span&gt; &lt;span class="n"&gt;Bora&lt;/span&gt;  &lt;span class="mf"&gt;15.0&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;301.0&lt;/span&gt;  &lt;span class="mi"&gt;335&lt;/span&gt;  &lt;span class="mf"&gt;3.54&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;14.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;           &lt;span class="n"&gt;Volvo&lt;/span&gt; &lt;span class="mi"&gt;142&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;121.0&lt;/span&gt;  &lt;span class="mi"&gt;109&lt;/span&gt;  &lt;span class="mf"&gt;4.11&lt;/span&gt;  &lt;span class="mf"&gt;2.780&lt;/span&gt;  &lt;span class="mf"&gt;18.60&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.23.101Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;              &lt;span class="n"&gt;Unnamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="n"&gt;mpg&lt;/span&gt;  &lt;span class="n"&gt;cyl&lt;/span&gt;   &lt;span class="n"&gt;disp&lt;/span&gt;   &lt;span class="n"&gt;hp&lt;/span&gt;  &lt;span class="n"&gt;drat&lt;/span&gt;     &lt;span class="n"&gt;wt&lt;/span&gt;   &lt;span class="n"&gt;qsec&lt;/span&gt;  &lt;span class="n"&gt;vs&lt;/span&gt;  &lt;span class="n"&gt;am&lt;/span&gt;  &lt;span class="n"&gt;gear&lt;/span&gt;  &lt;span class="n"&gt;carb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;             &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.620&lt;/span&gt;  &lt;span class="mf"&gt;16.46&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;         &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt; &lt;span class="n"&gt;Wag&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.875&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="n"&gt;Datsun&lt;/span&gt; &lt;span class="mi"&gt;710&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;108.0&lt;/span&gt;   &lt;span class="mi"&gt;93&lt;/span&gt;  &lt;span class="mf"&gt;3.85&lt;/span&gt;  &lt;span class="mf"&gt;2.320&lt;/span&gt;  &lt;span class="mf"&gt;18.61&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;        &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;Drive&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;258.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.215&lt;/span&gt;  &lt;span class="mf"&gt;19.44&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="n"&gt;Sportabout&lt;/span&gt;  &lt;span class="mf"&gt;18.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;               &lt;span class="n"&gt;Valiant&lt;/span&gt;  &lt;span class="mf"&gt;18.1&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;225.0&lt;/span&gt;  &lt;span class="mi"&gt;105&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.460&lt;/span&gt;  &lt;span class="mf"&gt;20.22&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;            &lt;span class="n"&gt;Duster&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;  &lt;span class="mf"&gt;14.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.21&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;15.84&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;             &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;  &lt;span class="mf"&gt;24.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;146.7&lt;/span&gt;   &lt;span class="mi"&gt;62&lt;/span&gt;  &lt;span class="mf"&gt;3.69&lt;/span&gt;  &lt;span class="mf"&gt;3.190&lt;/span&gt;  &lt;span class="mf"&gt;20.00&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;140.8&lt;/span&gt;   &lt;span class="mi"&gt;95&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.150&lt;/span&gt;  &lt;span class="mf"&gt;22.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.30&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;            &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="mf"&gt;17.8&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SE&lt;/span&gt;  &lt;span class="mf"&gt;16.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;4.070&lt;/span&gt;  &lt;span class="mf"&gt;17.40&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SL&lt;/span&gt;  &lt;span class="mf"&gt;17.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.730&lt;/span&gt;  &lt;span class="mf"&gt;17.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;          &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SLC&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.780&lt;/span&gt;  &lt;span class="mf"&gt;18.00&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;   &lt;span class="n"&gt;Cadillac&lt;/span&gt; &lt;span class="n"&gt;Fleetwood&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;472.0&lt;/span&gt;  &lt;span class="mi"&gt;205&lt;/span&gt;  &lt;span class="mf"&gt;2.93&lt;/span&gt;  &lt;span class="mf"&gt;5.250&lt;/span&gt;  &lt;span class="mf"&gt;17.98&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="n"&gt;Lincoln&lt;/span&gt; &lt;span class="n"&gt;Continental&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;460.0&lt;/span&gt;  &lt;span class="mi"&gt;215&lt;/span&gt;  &lt;span class="mf"&gt;3.00&lt;/span&gt;  &lt;span class="mf"&gt;5.424&lt;/span&gt;  &lt;span class="mf"&gt;17.82&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;    &lt;span class="n"&gt;Chrysler&lt;/span&gt; &lt;span class="n"&gt;Imperial&lt;/span&gt;  &lt;span class="mf"&gt;14.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;440.0&lt;/span&gt;  &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;3.23&lt;/span&gt;  &lt;span class="mf"&gt;5.345&lt;/span&gt;  &lt;span class="mf"&gt;17.42&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;             &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;  &lt;span class="mf"&gt;32.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;78.7&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;2.200&lt;/span&gt;  &lt;span class="mf"&gt;19.47&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;          &lt;span class="n"&gt;Honda&lt;/span&gt; &lt;span class="n"&gt;Civic&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;75.7&lt;/span&gt;   &lt;span class="mi"&gt;52&lt;/span&gt;  &lt;span class="mf"&gt;4.93&lt;/span&gt;  &lt;span class="mf"&gt;1.615&lt;/span&gt;  &lt;span class="mf"&gt;18.52&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;       &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corolla&lt;/span&gt;  &lt;span class="mf"&gt;33.9&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;71.1&lt;/span&gt;   &lt;span class="mi"&gt;65&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;1.835&lt;/span&gt;  &lt;span class="mf"&gt;19.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;        &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corona&lt;/span&gt;  &lt;span class="mf"&gt;21.5&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.1&lt;/span&gt;   &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="mf"&gt;3.70&lt;/span&gt;  &lt;span class="mf"&gt;2.465&lt;/span&gt;  &lt;span class="mf"&gt;20.01&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;     &lt;span class="n"&gt;Dodge&lt;/span&gt; &lt;span class="n"&gt;Challenger&lt;/span&gt;  &lt;span class="mf"&gt;15.5&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;318.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.520&lt;/span&gt;  &lt;span class="mf"&gt;16.87&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;          &lt;span class="n"&gt;AMC&lt;/span&gt; &lt;span class="n"&gt;Javelin&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;304.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.435&lt;/span&gt;  &lt;span class="mf"&gt;17.30&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;           &lt;span class="n"&gt;Camaro&lt;/span&gt; &lt;span class="n"&gt;Z28&lt;/span&gt;  &lt;span class="mf"&gt;13.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;350.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.73&lt;/span&gt;  &lt;span class="mf"&gt;3.840&lt;/span&gt;  &lt;span class="mf"&gt;15.41&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;     &lt;span class="n"&gt;Pontiac&lt;/span&gt; &lt;span class="n"&gt;Firebird&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;400.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.845&lt;/span&gt;  &lt;span class="mf"&gt;17.05&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;            &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="mf"&gt;27.3&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;79.0&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;1.935&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;        &lt;span class="n"&gt;Porsche&lt;/span&gt; &lt;span class="mi"&gt;914&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mf"&gt;26.0&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.3&lt;/span&gt;   &lt;span class="mi"&gt;91&lt;/span&gt;  &lt;span class="mf"&gt;4.43&lt;/span&gt;  &lt;span class="mf"&gt;2.140&lt;/span&gt;  &lt;span class="mf"&gt;16.70&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;         &lt;span class="n"&gt;Lotus&lt;/span&gt; &lt;span class="n"&gt;Europa&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;95.1&lt;/span&gt;  &lt;span class="mi"&gt;113&lt;/span&gt;  &lt;span class="mf"&gt;3.77&lt;/span&gt;  &lt;span class="mf"&gt;1.513&lt;/span&gt;  &lt;span class="mf"&gt;16.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;       &lt;span class="n"&gt;Ford&lt;/span&gt; &lt;span class="n"&gt;Pantera&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;  &lt;span class="mf"&gt;15.8&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;351.0&lt;/span&gt;  &lt;span class="mi"&gt;264&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;3.170&lt;/span&gt;  &lt;span class="mf"&gt;14.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;         &lt;span class="n"&gt;Ferrari&lt;/span&gt; &lt;span class="n"&gt;Dino&lt;/span&gt;  &lt;span class="mf"&gt;19.7&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;145.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.62&lt;/span&gt;  &lt;span class="mf"&gt;2.770&lt;/span&gt;  &lt;span class="mf"&gt;15.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;        &lt;span class="n"&gt;Maserati&lt;/span&gt; &lt;span class="n"&gt;Bora&lt;/span&gt;  &lt;span class="mf"&gt;15.0&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;301.0&lt;/span&gt;  &lt;span class="mi"&gt;335&lt;/span&gt;  &lt;span class="mf"&gt;3.54&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;14.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;           &lt;span class="n"&gt;Volvo&lt;/span&gt; &lt;span class="mi"&gt;142&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;121.0&lt;/span&gt;  &lt;span class="mi"&gt;109&lt;/span&gt;  &lt;span class="mf"&gt;4.11&lt;/span&gt;  &lt;span class="mf"&gt;2.780&lt;/span&gt;  &lt;span class="mf"&gt;18.60&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.26.555Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;              &lt;span class="n"&gt;Unnamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="n"&gt;mpg&lt;/span&gt;  &lt;span class="n"&gt;cyl&lt;/span&gt;   &lt;span class="n"&gt;disp&lt;/span&gt;   &lt;span class="n"&gt;hp&lt;/span&gt;  &lt;span class="n"&gt;drat&lt;/span&gt;     &lt;span class="n"&gt;wt&lt;/span&gt;   &lt;span class="n"&gt;qsec&lt;/span&gt;  &lt;span class="n"&gt;vs&lt;/span&gt;  &lt;span class="n"&gt;am&lt;/span&gt;  &lt;span class="n"&gt;gear&lt;/span&gt;  &lt;span class="n"&gt;carb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;             &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.620&lt;/span&gt;  &lt;span class="mf"&gt;16.46&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;         &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt; &lt;span class="n"&gt;Wag&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.875&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="n"&gt;Datsun&lt;/span&gt; &lt;span class="mi"&gt;710&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;108.0&lt;/span&gt;   &lt;span class="mi"&gt;93&lt;/span&gt;  &lt;span class="mf"&gt;3.85&lt;/span&gt;  &lt;span class="mf"&gt;2.320&lt;/span&gt;  &lt;span class="mf"&gt;18.61&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;        &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;Drive&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;258.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.215&lt;/span&gt;  &lt;span class="mf"&gt;19.44&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="n"&gt;Sportabout&lt;/span&gt;  &lt;span class="mf"&gt;18.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;               &lt;span class="n"&gt;Valiant&lt;/span&gt;  &lt;span class="mf"&gt;18.1&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;225.0&lt;/span&gt;  &lt;span class="mi"&gt;105&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.460&lt;/span&gt;  &lt;span class="mf"&gt;20.22&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;            &lt;span class="n"&gt;Duster&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;  &lt;span class="mf"&gt;14.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.21&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;15.84&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;             &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;  &lt;span class="mf"&gt;24.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;146.7&lt;/span&gt;   &lt;span class="mi"&gt;62&lt;/span&gt;  &lt;span class="mf"&gt;3.69&lt;/span&gt;  &lt;span class="mf"&gt;3.190&lt;/span&gt;  &lt;span class="mf"&gt;20.00&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;140.8&lt;/span&gt;   &lt;span class="mi"&gt;95&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.150&lt;/span&gt;  &lt;span class="mf"&gt;22.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.30&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;            &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="mf"&gt;17.8&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SE&lt;/span&gt;  &lt;span class="mf"&gt;16.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;4.070&lt;/span&gt;  &lt;span class="mf"&gt;17.40&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SL&lt;/span&gt;  &lt;span class="mf"&gt;17.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.730&lt;/span&gt;  &lt;span class="mf"&gt;17.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;          &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SLC&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.780&lt;/span&gt;  &lt;span class="mf"&gt;18.00&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;   &lt;span class="n"&gt;Cadillac&lt;/span&gt; &lt;span class="n"&gt;Fleetwood&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;472.0&lt;/span&gt;  &lt;span class="mi"&gt;205&lt;/span&gt;  &lt;span class="mf"&gt;2.93&lt;/span&gt;  &lt;span class="mf"&gt;5.250&lt;/span&gt;  &lt;span class="mf"&gt;17.98&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="n"&gt;Lincoln&lt;/span&gt; &lt;span class="n"&gt;Continental&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;460.0&lt;/span&gt;  &lt;span class="mi"&gt;215&lt;/span&gt;  &lt;span class="mf"&gt;3.00&lt;/span&gt;  &lt;span class="mf"&gt;5.424&lt;/span&gt;  &lt;span class="mf"&gt;17.82&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;    &lt;span class="n"&gt;Chrysler&lt;/span&gt; &lt;span class="n"&gt;Imperial&lt;/span&gt;  &lt;span class="mf"&gt;14.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;440.0&lt;/span&gt;  &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;3.23&lt;/span&gt;  &lt;span class="mf"&gt;5.345&lt;/span&gt;  &lt;span class="mf"&gt;17.42&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;             &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;  &lt;span class="mf"&gt;32.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;78.7&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;2.200&lt;/span&gt;  &lt;span class="mf"&gt;19.47&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;          &lt;span class="n"&gt;Honda&lt;/span&gt; &lt;span class="n"&gt;Civic&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;75.7&lt;/span&gt;   &lt;span class="mi"&gt;52&lt;/span&gt;  &lt;span class="mf"&gt;4.93&lt;/span&gt;  &lt;span class="mf"&gt;1.615&lt;/span&gt;  &lt;span class="mf"&gt;18.52&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;       &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corolla&lt;/span&gt;  &lt;span class="mf"&gt;33.9&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;71.1&lt;/span&gt;   &lt;span class="mi"&gt;65&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;1.835&lt;/span&gt;  &lt;span class="mf"&gt;19.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;        &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corona&lt;/span&gt;  &lt;span class="mf"&gt;21.5&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.1&lt;/span&gt;   &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="mf"&gt;3.70&lt;/span&gt;  &lt;span class="mf"&gt;2.465&lt;/span&gt;  &lt;span class="mf"&gt;20.01&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;     &lt;span class="n"&gt;Dodge&lt;/span&gt; &lt;span class="n"&gt;Challenger&lt;/span&gt;  &lt;span class="mf"&gt;15.5&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;318.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.520&lt;/span&gt;  &lt;span class="mf"&gt;16.87&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;          &lt;span class="n"&gt;AMC&lt;/span&gt; &lt;span class="n"&gt;Javelin&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;304.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.435&lt;/span&gt;  &lt;span class="mf"&gt;17.30&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;           &lt;span class="n"&gt;Camaro&lt;/span&gt; &lt;span class="n"&gt;Z28&lt;/span&gt;  &lt;span class="mf"&gt;13.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;350.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.73&lt;/span&gt;  &lt;span class="mf"&gt;3.840&lt;/span&gt;  &lt;span class="mf"&gt;15.41&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;     &lt;span class="n"&gt;Pontiac&lt;/span&gt; &lt;span class="n"&gt;Firebird&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;400.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.845&lt;/span&gt;  &lt;span class="mf"&gt;17.05&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;            &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="mf"&gt;27.3&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;79.0&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;1.935&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;        &lt;span class="n"&gt;Porsche&lt;/span&gt; &lt;span class="mi"&gt;914&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mf"&gt;26.0&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.3&lt;/span&gt;   &lt;span class="mi"&gt;91&lt;/span&gt;  &lt;span class="mf"&gt;4.43&lt;/span&gt;  &lt;span class="mf"&gt;2.140&lt;/span&gt;  &lt;span class="mf"&gt;16.70&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;         &lt;span class="n"&gt;Lotus&lt;/span&gt; &lt;span class="n"&gt;Europa&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;95.1&lt;/span&gt;  &lt;span class="mi"&gt;113&lt;/span&gt;  &lt;span class="mf"&gt;3.77&lt;/span&gt;  &lt;span class="mf"&gt;1.513&lt;/span&gt;  &lt;span class="mf"&gt;16.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;       &lt;span class="n"&gt;Ford&lt;/span&gt; &lt;span class="n"&gt;Pantera&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;  &lt;span class="mf"&gt;15.8&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;351.0&lt;/span&gt;  &lt;span class="mi"&gt;264&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;3.170&lt;/span&gt;  &lt;span class="mf"&gt;14.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;         &lt;span class="n"&gt;Ferrari&lt;/span&gt; &lt;span class="n"&gt;Dino&lt;/span&gt;  &lt;span class="mf"&gt;19.7&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;145.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.62&lt;/span&gt;  &lt;span class="mf"&gt;2.770&lt;/span&gt;  &lt;span class="mf"&gt;15.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;        &lt;span class="n"&gt;Maserati&lt;/span&gt; &lt;span class="n"&gt;Bora&lt;/span&gt;  &lt;span class="mf"&gt;15.0&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;301.0&lt;/span&gt;  &lt;span class="mi"&gt;335&lt;/span&gt;  &lt;span class="mf"&gt;3.54&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;14.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;           &lt;span class="n"&gt;Volvo&lt;/span&gt; &lt;span class="mi"&gt;142&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;121.0&lt;/span&gt;  &lt;span class="mi"&gt;109&lt;/span&gt;  &lt;span class="mf"&gt;4.11&lt;/span&gt;  &lt;span class="mf"&gt;2.780&lt;/span&gt;  &lt;span class="mf"&gt;18.60&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.31.12.688Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;              &lt;span class="n"&gt;Unnamed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="n"&gt;mpg&lt;/span&gt;  &lt;span class="n"&gt;cyl&lt;/span&gt;   &lt;span class="n"&gt;disp&lt;/span&gt;   &lt;span class="n"&gt;hp&lt;/span&gt;  &lt;span class="n"&gt;drat&lt;/span&gt;     &lt;span class="n"&gt;wt&lt;/span&gt;   &lt;span class="n"&gt;qsec&lt;/span&gt;  &lt;span class="n"&gt;vs&lt;/span&gt;  &lt;span class="n"&gt;am&lt;/span&gt;  &lt;span class="n"&gt;gear&lt;/span&gt;  &lt;span class="n"&gt;carb&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;             &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.620&lt;/span&gt;  &lt;span class="mf"&gt;16.46&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;         &lt;span class="n"&gt;Mazda&lt;/span&gt; &lt;span class="n"&gt;RX4&lt;/span&gt; &lt;span class="n"&gt;Wag&lt;/span&gt;  &lt;span class="mf"&gt;21.0&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;160.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.90&lt;/span&gt;  &lt;span class="mf"&gt;2.875&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="n"&gt;Datsun&lt;/span&gt; &lt;span class="mi"&gt;710&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;108.0&lt;/span&gt;   &lt;span class="mi"&gt;93&lt;/span&gt;  &lt;span class="mf"&gt;3.85&lt;/span&gt;  &lt;span class="mf"&gt;2.320&lt;/span&gt;  &lt;span class="mf"&gt;18.61&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;        &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;Drive&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;258.0&lt;/span&gt;  &lt;span class="mi"&gt;110&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.215&lt;/span&gt;  &lt;span class="mf"&gt;19.44&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="n"&gt;Hornet&lt;/span&gt; &lt;span class="n"&gt;Sportabout&lt;/span&gt;  &lt;span class="mf"&gt;18.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;17.02&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;               &lt;span class="n"&gt;Valiant&lt;/span&gt;  &lt;span class="mf"&gt;18.1&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;225.0&lt;/span&gt;  &lt;span class="mi"&gt;105&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.460&lt;/span&gt;  &lt;span class="mf"&gt;20.22&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;            &lt;span class="n"&gt;Duster&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;  &lt;span class="mf"&gt;14.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;360.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.21&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;15.84&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;             &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;  &lt;span class="mf"&gt;24.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;146.7&lt;/span&gt;   &lt;span class="mi"&gt;62&lt;/span&gt;  &lt;span class="mf"&gt;3.69&lt;/span&gt;  &lt;span class="mf"&gt;3.190&lt;/span&gt;  &lt;span class="mf"&gt;20.00&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;22.8&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;140.8&lt;/span&gt;   &lt;span class="mi"&gt;95&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.150&lt;/span&gt;  &lt;span class="mf"&gt;22.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;              &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.30&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;            &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;280&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;  &lt;span class="mf"&gt;17.8&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;167.6&lt;/span&gt;  &lt;span class="mi"&gt;123&lt;/span&gt;  &lt;span class="mf"&gt;3.92&lt;/span&gt;  &lt;span class="mf"&gt;3.440&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SE&lt;/span&gt;  &lt;span class="mf"&gt;16.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;4.070&lt;/span&gt;  &lt;span class="mf"&gt;17.40&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;           &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SL&lt;/span&gt;  &lt;span class="mf"&gt;17.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.730&lt;/span&gt;  &lt;span class="mf"&gt;17.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;          &lt;span class="n"&gt;Merc&lt;/span&gt; &lt;span class="mi"&gt;450&lt;/span&gt;&lt;span class="n"&gt;SLC&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;275.8&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt;  &lt;span class="mf"&gt;3.07&lt;/span&gt;  &lt;span class="mf"&gt;3.780&lt;/span&gt;  &lt;span class="mf"&gt;18.00&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;14&lt;/span&gt;   &lt;span class="n"&gt;Cadillac&lt;/span&gt; &lt;span class="n"&gt;Fleetwood&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;472.0&lt;/span&gt;  &lt;span class="mi"&gt;205&lt;/span&gt;  &lt;span class="mf"&gt;2.93&lt;/span&gt;  &lt;span class="mf"&gt;5.250&lt;/span&gt;  &lt;span class="mf"&gt;17.98&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;15&lt;/span&gt;  &lt;span class="n"&gt;Lincoln&lt;/span&gt; &lt;span class="n"&gt;Continental&lt;/span&gt;  &lt;span class="mf"&gt;10.4&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;460.0&lt;/span&gt;  &lt;span class="mi"&gt;215&lt;/span&gt;  &lt;span class="mf"&gt;3.00&lt;/span&gt;  &lt;span class="mf"&gt;5.424&lt;/span&gt;  &lt;span class="mf"&gt;17.82&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;    &lt;span class="n"&gt;Chrysler&lt;/span&gt; &lt;span class="n"&gt;Imperial&lt;/span&gt;  &lt;span class="mf"&gt;14.7&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;440.0&lt;/span&gt;  &lt;span class="mi"&gt;230&lt;/span&gt;  &lt;span class="mf"&gt;3.23&lt;/span&gt;  &lt;span class="mf"&gt;5.345&lt;/span&gt;  &lt;span class="mf"&gt;17.42&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;             &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;  &lt;span class="mf"&gt;32.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;78.7&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;2.200&lt;/span&gt;  &lt;span class="mf"&gt;19.47&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;          &lt;span class="n"&gt;Honda&lt;/span&gt; &lt;span class="n"&gt;Civic&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;75.7&lt;/span&gt;   &lt;span class="mi"&gt;52&lt;/span&gt;  &lt;span class="mf"&gt;4.93&lt;/span&gt;  &lt;span class="mf"&gt;1.615&lt;/span&gt;  &lt;span class="mf"&gt;18.52&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;       &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corolla&lt;/span&gt;  &lt;span class="mf"&gt;33.9&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;71.1&lt;/span&gt;   &lt;span class="mi"&gt;65&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;1.835&lt;/span&gt;  &lt;span class="mf"&gt;19.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;        &lt;span class="n"&gt;Toyota&lt;/span&gt; &lt;span class="n"&gt;Corona&lt;/span&gt;  &lt;span class="mf"&gt;21.5&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.1&lt;/span&gt;   &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="mf"&gt;3.70&lt;/span&gt;  &lt;span class="mf"&gt;2.465&lt;/span&gt;  &lt;span class="mf"&gt;20.01&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;     &lt;span class="n"&gt;Dodge&lt;/span&gt; &lt;span class="n"&gt;Challenger&lt;/span&gt;  &lt;span class="mf"&gt;15.5&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;318.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;2.76&lt;/span&gt;  &lt;span class="mf"&gt;3.520&lt;/span&gt;  &lt;span class="mf"&gt;16.87&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;          &lt;span class="n"&gt;AMC&lt;/span&gt; &lt;span class="n"&gt;Javelin&lt;/span&gt;  &lt;span class="mf"&gt;15.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;304.0&lt;/span&gt;  &lt;span class="mi"&gt;150&lt;/span&gt;  &lt;span class="mf"&gt;3.15&lt;/span&gt;  &lt;span class="mf"&gt;3.435&lt;/span&gt;  &lt;span class="mf"&gt;17.30&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;           &lt;span class="n"&gt;Camaro&lt;/span&gt; &lt;span class="n"&gt;Z28&lt;/span&gt;  &lt;span class="mf"&gt;13.3&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;350.0&lt;/span&gt;  &lt;span class="mi"&gt;245&lt;/span&gt;  &lt;span class="mf"&gt;3.73&lt;/span&gt;  &lt;span class="mf"&gt;3.840&lt;/span&gt;  &lt;span class="mf"&gt;15.41&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;     &lt;span class="n"&gt;Pontiac&lt;/span&gt; &lt;span class="n"&gt;Firebird&lt;/span&gt;  &lt;span class="mf"&gt;19.2&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;400.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.08&lt;/span&gt;  &lt;span class="mf"&gt;3.845&lt;/span&gt;  &lt;span class="mf"&gt;17.05&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;     &lt;span class="mi"&gt;3&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;            &lt;span class="n"&gt;Fiat&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="mf"&gt;27.3&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;79.0&lt;/span&gt;   &lt;span class="mi"&gt;66&lt;/span&gt;  &lt;span class="mf"&gt;4.08&lt;/span&gt;  &lt;span class="mf"&gt;1.935&lt;/span&gt;  &lt;span class="mf"&gt;18.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;        &lt;span class="n"&gt;Porsche&lt;/span&gt; &lt;span class="mi"&gt;914&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="mf"&gt;26.0&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;120.3&lt;/span&gt;   &lt;span class="mi"&gt;91&lt;/span&gt;  &lt;span class="mf"&gt;4.43&lt;/span&gt;  &lt;span class="mf"&gt;2.140&lt;/span&gt;  &lt;span class="mf"&gt;16.70&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;27&lt;/span&gt;         &lt;span class="n"&gt;Lotus&lt;/span&gt; &lt;span class="n"&gt;Europa&lt;/span&gt;  &lt;span class="mf"&gt;30.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;   &lt;span class="mf"&gt;95.1&lt;/span&gt;  &lt;span class="mi"&gt;113&lt;/span&gt;  &lt;span class="mf"&gt;3.77&lt;/span&gt;  &lt;span class="mf"&gt;1.513&lt;/span&gt;  &lt;span class="mf"&gt;16.90&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;       &lt;span class="n"&gt;Ford&lt;/span&gt; &lt;span class="n"&gt;Pantera&lt;/span&gt; &lt;span class="n"&gt;L&lt;/span&gt;  &lt;span class="mf"&gt;15.8&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;351.0&lt;/span&gt;  &lt;span class="mi"&gt;264&lt;/span&gt;  &lt;span class="mf"&gt;4.22&lt;/span&gt;  &lt;span class="mf"&gt;3.170&lt;/span&gt;  &lt;span class="mf"&gt;14.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;         &lt;span class="n"&gt;Ferrari&lt;/span&gt; &lt;span class="n"&gt;Dino&lt;/span&gt;  &lt;span class="mf"&gt;19.7&lt;/span&gt;    &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="mf"&gt;145.0&lt;/span&gt;  &lt;span class="mi"&gt;175&lt;/span&gt;  &lt;span class="mf"&gt;3.62&lt;/span&gt;  &lt;span class="mf"&gt;2.770&lt;/span&gt;  &lt;span class="mf"&gt;15.50&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;        &lt;span class="n"&gt;Maserati&lt;/span&gt; &lt;span class="n"&gt;Bora&lt;/span&gt;  &lt;span class="mf"&gt;15.0&lt;/span&gt;    &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="mf"&gt;301.0&lt;/span&gt;  &lt;span class="mi"&gt;335&lt;/span&gt;  &lt;span class="mf"&gt;3.54&lt;/span&gt;  &lt;span class="mf"&gt;3.570&lt;/span&gt;  &lt;span class="mf"&gt;14.60&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;           &lt;span class="n"&gt;Volvo&lt;/span&gt; &lt;span class="mi"&gt;142&lt;/span&gt;&lt;span class="n"&gt;E&lt;/span&gt;  &lt;span class="mf"&gt;21.4&lt;/span&gt;    &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="mf"&gt;121.0&lt;/span&gt;  &lt;span class="mi"&gt;109&lt;/span&gt;  &lt;span class="mf"&gt;4.11&lt;/span&gt;  &lt;span class="mf"&gt;2.780&lt;/span&gt;  &lt;span class="mf"&gt;18.60&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;     &lt;span class="mi"&gt;4&lt;/span&gt;     &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 notice that incremental datasets are all loaded for you, its a dict of &lt;code&gt;filepath:dataset&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="stack-on-a-partitioned-dataset"&gt;stack on a partitioned dataset&lt;/h2&gt;&lt;p&gt;Let's take a look at a similar type of dataset called &lt;code&gt;PartitionedDataSet&lt;/code&gt;.  Wecan add it to the catalog in a very similar way to how we added the&lt;code&gt;IncrementalDataSet&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;int_cars_incremental&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;IncrementalDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.ParquetDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/int_cars.parquet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="loading-a-partitioned-dataset"&gt;loading a partitioned dataset&lt;/h2&gt;&lt;p&gt;Note that we get a dict with the same keys as before, but this time thevalues are a load function rather than loaded data.  Partitioned datasets can be helpful ifyou are operating on datasets that take up more memory than you have available.In our case of coupling this with versioned datasets, its likely to grow quitelarge, so &lt;code&gt;PartitionedDataSet&lt;/code&gt; 's are likely a better option for this use.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_partitioned&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;253&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;int_cars_partitioned&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PartitionedDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2021-07-05T15.29.56.144Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;bound&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;AbstractVersionedDataSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parquet_dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParquetDataSet&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f4bb1570820&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.23.101Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;bound&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;AbstractVersionedDataSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parquet_dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParquetDataSet&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f4bb1570850&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.26.555Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;bound&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;AbstractVersionedDataSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parquet_dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParquetDataSet&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f4bb1570910&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.31.12.688Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;bound&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="n"&gt;AbstractVersionedDataSet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extras&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datasets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pandas&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parquet_dataset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ParquetDataSet&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x7f4bb15709a0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="incremental-vs-partitioned"&gt;incremental vs. partitioned&lt;/h2&gt;&lt;p&gt;&lt;code&gt;IncrementalDataSet&lt;/code&gt; 's and &lt;code&gt;PartitionedDataSet&lt;/code&gt; 's are very similar as they giveyou access to a whole directory of data that uses the same underlying datasetloader.  The significant difference is whether you want your data pre-loaded or ifyou want to load and dispose of it as you iterate over it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;incremental loads the data&lt;/li&gt;&lt;li&gt;partitioned give a load function&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="creating-nodes-with-partitioned-datasets"&gt;creating nodes with partitioned datasets&lt;/h2&gt;&lt;p&gt;Let's create a node with this &lt;code&gt;PartitionedDataSet&lt;/code&gt; to collect stats on ourdataset over time.  This node does a dict comprehension to get the length ofeach version that we pulled.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;timeseries_partitioned&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;            &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;timeseries_partitioned&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_partitioned&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_timeseries_partitioned&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;create_int_cars_timeseries_partitioned&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;🗒️ note that inside of the dict comprehension car is a load function that we need to call.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="creating-nodes-with-incremental-datasets"&gt;creating nodes with incremental datasets&lt;/h2&gt;&lt;p&gt;Doing the same node with our &lt;code&gt;IncrementalDataSet&lt;/code&gt; looks very similar, exceptthis time car is loaded data inside of the dict comprehension, not a functionthat we need to call.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;timeseries_incremental&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;car&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;car&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;        &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;            &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;timeseries_incremental&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_incremental&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_timeseries_incremental&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;create_int_cars_timeseries_incremental&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;            &lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="more-catalog-entries"&gt;More catalog entries&lt;/h2&gt;&lt;p&gt;After adding those nodes, we can add the catalog entries again with the commandline.  This will not overwrite any of the datasets we just created. It will onlyadd to it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro catalog create --pipeline cars_nodes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;int_cars_timeseries_partitioned&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;int_cars_timeseries_incremental&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;int_cars_timeseries_partitioned&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pickle.PickleDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/int_cars_timeseries_partitioned.parquet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;int_cars_timeseries_incremental&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pickle.PickleDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/int_cars_timeseries_incremental.parquet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="loading-the-new-datasets"&gt;Loading the new datasets&lt;/h2&gt;&lt;p&gt;Loading the two dtasets that we just created show that we have the ended upwith the same result using both incremental and partitioned datasets.  Thisresult is a dictionary of filepaths mapped to the size of the dataset.  Sincethe default filepaths are timestamps we could start doing some time seriesanalysis to see how our dataset is changing over time.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_timeseries_incremental&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;014&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;int_cars_timeseries_incremental&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2021-07-05T15.29.56.144Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.23.101Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.26.555Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.31.12.688Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T16.43.43.088Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars_timeseries_partitioned&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;07&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;223&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data_catalog&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;INFO&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Loading&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;int_cars_timeseries_partitioned&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PickleDataSet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2021-07-05T15.29.56.144Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.23.101Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.30.26.555Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T15.31.12.688Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T16.43.43.088Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2021-07-05T16.50.46.686Z/int_cars.parquet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/kedro-pickle/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/kedro-pickle-og_250x140.png" alt="article cover for  Kedro - My Data Is Not A Table"/&gt;          &lt;p&gt;&lt;strong&gt; Kedro - My Data Is Not A Table&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;☝️ I have a full article on creating datasets that are not tabular datasetsusing pickle.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="cross-posted-to-dev"&gt;cross posted to dev&lt;/h2&gt;&lt;p&gt;If you like this article give it some ❤️🦄🏷️ on dev &lt;a href="https://dev.to/waylonwalker/incremental-versioned-datasets-in-kedro-3ajn"&gt;https://dev.to/waylonwalker/incremental-versioned-datasets-in-kedro-3ajn&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;This post was primarily built live on &lt;a href="https://twitch.tv/waylonwalker"&gt;https://twitch.tv/waylonwalker&lt;/a&gt;, give me afollow and join in the live show if that is something that interests you.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-inputs'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How Kedro handles your inputs&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-in-scripts'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Using Kedro In Scripts&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-incremental-versioned-datasets</guid><pubDate>Thu, 08 Jul 2021 00:00:00 +0000</pubDate></item><item><title>How I Kedro</title><link>https://waylonwalker.com/how-i-kedro</link><description>https://youtu.be/bw5 I recently switched over to using Ubuntu, it works well pretty much out of the I am still using the built in default gnome terminal, it jus</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/bw5_FWDVRpU"&gt;https://youtu.be/bw5_FWDVRpU&lt;/a&gt;&lt;/p&gt;&lt;h2 id="ubuntu"&gt;Ubuntu&lt;/h2&gt;&lt;p&gt;I recently switched over to using Ubuntu, it works well pretty much out of thebox for me.  I am using gnome with a dark theme.&lt;/p&gt;&lt;h2 id="gnome-terminal"&gt;Gnome Terminal&lt;/h2&gt;&lt;p&gt;I am still using the built in default gnome terminal, it just works.  It doesall the things that I need it to do.  It supports transparency renders my fontsand allows me to highlight things well.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;One Dark Theme&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="dotfiles"&gt;dotfiles&lt;/h2&gt;&lt;p&gt;You can find my &lt;a href="https://github.com/waylonwalker/devtainer"&gt;dotfiles&lt;/a&gt; on github.  Feel free to read through and take anything that you find useful.  I would encourage you not to steal them, but to integrate the parts that you want into your own dotfiles. dotfiles are a very personal thing. They are an extension of ones fingertips designed for how you think and type.&lt;/p&gt;&lt;h2 id="zsh"&gt;zsh&lt;/h2&gt;&lt;p&gt;I use zsh as my default shell.  I like to use it as myinteractive shell.  It works, and does a bit better withthings like tab completion out of the box.&lt;/p&gt;&lt;h2 id="starship"&gt;starship&lt;/h2&gt;&lt;p&gt;I use the starship prompt for my shell.  It works well out ofthe box.  It looks good and includes all of the informationthat I would ever need.&lt;/p&gt;&lt;p&gt;&lt;img alt="kedro-prompt" src="https://images.waylonwalker.com/kedro-prompt.png" /&gt;&lt;/p&gt;&lt;h2 id="tmux"&gt;tmux&lt;/h2&gt;&lt;p&gt;As a team lead I am in and out of many projects per day, tmux allows me to getin and out of these files with super speed.  I was using a mix of vscode andtmux in until October 2020.  At this point I got moved development machines andpushed myself to use only the terminal.  I felt that vscode was just gettingslower and slower, and I was getting less benefit from it.  Especially now thatthe lsp is a part of nvim.&lt;/p&gt;&lt;p&gt;&lt;img alt="tmux-prefix+c-j" src="https://images.waylonwalker.com/tmux-navigation-2021-prefix+c-j.gif" /&gt;&lt;/p&gt;&lt;h2 id="neovim"&gt;neovim&lt;/h2&gt;&lt;p&gt;I really like the raw speed and customizability of neovim.  You can see all thecustomization, and plugins I have added in my dotfiles.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;OneBuddy Theme&lt;/li&gt;&lt;li&gt;pylsp&lt;/li&gt;&lt;li&gt;kedro-lsp&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img alt="nvim-kedro" src="https://images.waylonwalker.com/nvim-kedro.png" /&gt;&lt;/p&gt;&lt;h2 id="ipython"&gt;ipython&lt;/h2&gt;&lt;p&gt;I really like ipython, it lets me edit code in my code editor, then import itor run it quickly.  Ipython gives me the right level of tooling.  I don't needmarkdown mixed in my code, I put those notes into docstrings, a readme, orwiki.  When I need to see plots I just store them as png or html and view themin my browser.  &lt;/p&gt;&lt;p&gt;I do a bit of customization to my ipython session that you can find in mydotfiles repo.  I use a custom prompt and use rich formatting and tracebacks ifrich is installed.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;custom prompt&lt;/li&gt;&lt;li&gt;rich traceback&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;img alt="kedro-ipython" src="https://images.waylonwalker.com/kedro-ipython.png" /&gt;&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/tmux/tmux"&gt;tmux&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/waylonWalker/devtainer"&gt;dotfiles&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://starship.rs/"&gt;starship.rs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/quantumblacklabs/kedro"&gt;kedro&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://ipython.readthedocs.io/en/6.5.0/index.html"&gt;ipython&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/willmcgugan/rich"&gt;rich&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/how-python-tools-config'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How python tools configure&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/happy'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Do More of What Brings You Joy&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/how-i-kedro</guid><pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate></item><item><title>What is Kedro</title><link>https://waylonwalker.com/what-is-kedro</link><description>Kedro is an unopinionated Data Engineering framework that comes with a somewhat https://youtu.be/Wf4rnFsaFFU https://waylonwalker.com/what-is-kedro-1/ This is a</description><content:encoded>&lt;p&gt;Kedro is an unopinionated Data Engineering framework that comes with a somewhatopinionated template. It gives the user a way to build pipelines thatautomatically take care of io through the use of abstract &lt;code&gt;DataSets&lt;/code&gt; that theuser specifies through &lt;code&gt;Catalog&lt;/code&gt; entries.  These &lt;code&gt;Catalog&lt;/code&gt; entries are loaded,ran through a function, and saved by &lt;code&gt;Nodes&lt;/code&gt;.  The order that these &lt;code&gt;Nodes&lt;/code&gt; areexecuted are determined by the &lt;code&gt;Pipeline&lt;/code&gt;, which is a  &lt;strong&gt;DAG&lt;/strong&gt;.  It's the&lt;code&gt;runner&lt;/code&gt;'s job to manage the execution of the &lt;code&gt;Nodes&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/Wf4rnFsaFFU"&gt;https://youtu.be/Wf4rnFsaFFU&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro-1/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-1-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;This is an updated version of my original what-is-kedro article&lt;/p&gt;&lt;/blockquote&gt;&lt;hr /&gt;&lt;h2 id="hot-take"&gt;Hot Take&lt;/h2&gt;&lt;p&gt;If you are doing a series of operations to data with python, especially if youare using something as supported as pandas, you should be using a frameworkthat gives you a pipeline as a DAG and abstracts io.&lt;/p&gt;&lt;h2 id="orchestrators"&gt;Orchestrators&lt;/h2&gt;&lt;p&gt;Like I said, &lt;code&gt;kedro&lt;/code&gt; is unopinionated it does determine where or how your datashould be ran.  The kedro team does support the following &lt;strong&gt;Orchestrators&lt;/strong&gt;with very little add on to the base template.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/04_argo.html"&gt;Argo Workflows&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/05_prefect.html"&gt;Prefect&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/06_kubeflow.html"&gt;Kubeflow Workflows&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/07_aws_batch.html"&gt;AWS Batch&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/08_databricks.html"&gt;Databricks&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="datasets"&gt;DataSets&lt;/h2&gt;&lt;p&gt;Did I say kedro is unopionated?  Datasets are what allow kedro too be soflexible accross a number of different python objects.  Any python object canbe made into a kedro dataset.  Kedro comes out of the box with &lt;strong&gt;many&lt;/strong&gt; purpose built&lt;code&gt;DataSets&lt;/code&gt; like storing pandas DataFrames to parquet, csv, or a sql table.  Ifkedro does not come with support for the type of python objects you work withdon't worry, you can for the closest option they support and build your own.Or if you do not want to build your own, you can use a &lt;code&gt;PickleDataSet&lt;/code&gt; foranything.&lt;/p&gt;&lt;h2 id="catalog"&gt;Catalog&lt;/h2&gt;&lt;p&gt;You will not often be creating your own datasets, most of what you need whouldalready be taken care of by the kedro framework.  What you will need to do isto use the existing &lt;code&gt;DataSets&lt;/code&gt; to build your data catalog.&lt;/p&gt;&lt;p&gt;Kedro takes care of all fo the file io for you, you simply need to use thecatalog to tell kedro what type of DataSet to use and any extra informationthat &lt;code&gt;DataSet&lt;/code&gt; needs.  Much of the time this is simply a filepath.&lt;/p&gt;&lt;p&gt;Typically the catalog is specified in yaml format.  If you are not familiarwith yaml, I suggest&lt;a href="https://learnxinyminutes.com/docs/yaml/"&gt;learnxinyminutes.com/docs/yaml/&lt;/a&gt; as aresource of examples.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;s3://your_bucket/test.csv&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Here is the most basic yaml catalog entry taken from the kedro&lt;a href="https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html?highlight=catalog"&gt;docs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/01_raw/company/cars.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;sep&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;load_args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;save_args&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;False&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;date_format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-%d&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;%H:%M&amp;#39;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;decimal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Here is a bit more complex example that takes in &lt;code&gt;load_args&lt;/code&gt; and &lt;code&gt;save_args&lt;/code&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/05_data/01_data_catalog.html?highlight=catalog"&gt;docs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="nodes"&gt;Nodes&lt;/h2&gt;&lt;p&gt;Nodes are a very core part of kedro to build the &lt;strong&gt;DAG&lt;/strong&gt;.  These nodes are whatprovides the definition of what catalog entries, get passed into whichfunction, and output to another catalog entry.  &lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;               &lt;span class="n"&gt;boats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;boats_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;boats&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;array_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;clean_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;         &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cars_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;                      &lt;span class="n"&gt;boats_df&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="s1"&gt;&amp;#39;clean_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_cars2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;halve_dataframe&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;         &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;clean_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;         &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;train_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_boats2017&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Here is an example of three nodes taken from their&lt;a href="https://kedro.readthedocs.io/en/stable/kedro.pipeline.node.html?highlight=node"&gt;docs&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="pipeline"&gt;Pipeline&lt;/h2&gt;&lt;p&gt;The kedro &lt;code&gt;Pipeline&lt;/code&gt;, is a DAG (Directed Acyclic Graph).  It is a graph objectthat flows in one direction.  You can slice into the pipeline using a few builtin graph method &lt;code&gt;to_nodes&lt;/code&gt;, &lt;code&gt;from_nodes&lt;/code&gt;, &lt;code&gt;to_outputs&lt;/code&gt;, and &lt;code&gt;from_inputs&lt;/code&gt;.  Youcan chain up these method calls since each one returns a new &lt;code&gt;Pipeline&lt;/code&gt; object.You can also ask a pipline for its edges with &lt;code&gt;inputs&lt;/code&gt;, and &lt;code&gt;outputs&lt;/code&gt;.  You canalso list every dataset along the way with &lt;code&gt;all_inputs&lt;/code&gt; or &lt;code&gt;all_outputs&lt;/code&gt;.Lastly you can convert it back into a list of nodes with &lt;code&gt;nodes&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="c1"&gt;# using our nodes from last tim&lt;/span&gt;&lt;span class="n"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="runner"&gt;Runner&lt;/h2&gt;&lt;p&gt;The runner is the bridge between kedro and the orchestrators.  The kedro teamprovides some basic runners for running pipelines locally, built right into theframework, but adding on new runners for different orchestrators is donethrough the use of adding in a new runner to your project.&lt;/p&gt;&lt;h2 id="hooks"&gt;Hooks&lt;/h2&gt;&lt;p&gt;Kedro allows you to hook into a number of lifecycle methods through the use ofthe &lt;code&gt;pluggy&lt;/code&gt; framework.  Yes the one that &lt;code&gt;pytest&lt;/code&gt; is built on.  There are anumber of different lifecycle methods that allow us to hook in around wherekedro is running such as &lt;code&gt;before_pipeline_run&lt;/code&gt; or &lt;code&gt;after_catalog_loaded&lt;/code&gt;.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/kedro.pipeline.node.html"&gt;Node&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/kedro.pipeline.Pipeline.html#kedro.pipeline.Pipeline"&gt;Pipeline&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/06_nodes_and_pipelines/04_run_a_pipeline.html"&gt;Run a pipeline&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/03_tutorial/04_create_pipelines.html"&gt;create pipelines&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/10_deployment/01_deployment_guide.html"&gt;kedro deployment&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/what-is-kedro-1'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What is Kedro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/what-are-github-actions'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What Are GitHub Actions&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/what-is-kedro</guid><pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate></item><item><title>Kedro New</title><link>https://waylonwalker.com/kedro-new</link><description>https://youtu.be/uqiv5LAiJe0 Kedro new is simply a wrapper around the cookiecutter templating library.  The https://waylonwalker.com/what-is-kedro/ Unsure what </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/uqiv5LAiJe0"&gt;https://youtu.be/uqiv5LAiJe0&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Kedro new is simply a wrapper around the cookiecutter templating library.  Thekedro team maintains a ready made template that has everything you need for akedro project.  They also maintain a few kedro starters, which are very similarto the base template.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Unsure what kedro is, Check out yesterdays post on What is Kedro.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="pipx"&gt;pipx&lt;/h2&gt;&lt;p&gt;I reccomend using &lt;code&gt;pipx&lt;/code&gt; when running kedro new.  &lt;code&gt;pipx&lt;/code&gt; is designed for systemlevel cli tools so that you do not need to maintain a virtual environment orworry about version conflicts, &lt;code&gt;pipx&lt;/code&gt; manages the environment for you.&lt;/p&gt;&lt;p&gt;The kedro team does not reccomend &lt;code&gt;pipx&lt;/code&gt; in their docs as they already feellike there is a bit of a tool overload for folks that may be less familiar with&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;pipx&lt;/span&gt; &lt;span class="n"&gt;kedro&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I like using &lt;code&gt;pipx&lt;/code&gt; as it gives you better control over using a specificversion or always the latest version, unlike when you run what you have on yoursystem depends on when you last installed or upgraded.&lt;/p&gt;&lt;h2 id="kedro-new"&gt;Kedro New&lt;/h2&gt;&lt;p&gt;The kedro team also has a set of starters, by passing in &lt;code&gt;--starter&lt;/code&gt; you canstart with a different template.  Here is an example with the kedrospaceflights starter.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run kedro new --starter &lt;span class="nv"&gt;spaceflights&lt;/span&gt;&lt;span class="o"&gt;=============&lt;/span&gt;Please enter a human readable name &lt;span class="k"&gt;for&lt;/span&gt; your new project.Spaces and punctuation are allowed. &lt;span class="o"&gt;[&lt;/span&gt;New Kedro Project&lt;span class="o"&gt;]&lt;/span&gt;: Spaceflights CompleteRepository Name:&lt;span class="o"&gt;================&lt;/span&gt;Please enter a directory name &lt;span class="k"&gt;for&lt;/span&gt; your new project repository.Alphanumeric characters, hyphens and underscores are allowed.Lowercase is recommended. &lt;span class="o"&gt;[&lt;/span&gt;spaceflights-complete&lt;span class="o"&gt;]&lt;/span&gt;:Python Package Name:&lt;span class="o"&gt;====================&lt;/span&gt;Please enter a valid Python package name &lt;span class="k"&gt;for&lt;/span&gt; your project package.Alphanumeric characters and underscores are allowed.Lowercase is recommended. Package name must start with a letteror underscore. &lt;span class="o"&gt;[&lt;/span&gt;spaceflights_complete&lt;span class="o"&gt;]&lt;/span&gt;:Change directory to the project generated &lt;span class="k"&gt;in&lt;/span&gt; /home/u_walkews/git/spaceflights-completeA best-practice setup includes initialising git and creating a virtual environment before running &lt;span class="sb"&gt;``&lt;/span&gt;kedro install&lt;span class="sb"&gt;``&lt;/span&gt; to install project-specific dependencies. Refer to the Kedro documentation: https://kedro.readthedocs.io/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="other-versions-of-kedro-with-pipx"&gt;Other versions of kedro with pipx&lt;/h3&gt;&lt;p&gt;&lt;code&gt;pipx&lt;/code&gt; not only ensures that you run  the latest version, it can also run avery specific version.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run --spec &lt;span class="nv"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.16.6 kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/kedro-environment/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/kedro-environment-og_250x140.png" alt="article cover for  kedro Virtual Environment"/&gt;          &lt;p&gt;&lt;strong&gt; kedro Virtual Environment&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;The next post in this series will help you create your virtual environment for your new kedro project.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-parameters'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Setting Parameters in kedro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-install'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Install&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-new</guid><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate></item><item><title>Kedro Git Init</title><link>https://waylonwalker.com/kedro-git-init</link><description>Immediately after  https://youtu.be/IGba3ytf Its as simple as these three commands to get started. I don</description><content:encoded>&lt;p&gt;Immediately after &lt;code&gt;kedro new&lt;/code&gt;, before you start running &lt;code&gt;kedro install&lt;/code&gt; or your first line of code the firstthing you should always do after getting a new kedro template created is to&lt;code&gt;git init&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/IGba3ytf_6U"&gt;https://youtu.be/IGba3ytf_6U&lt;/a&gt;&lt;/p&gt;&lt;h2 id="git-init"&gt;git init&lt;/h2&gt;&lt;p&gt;Its as simple as these three commands to get started.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git initgit add .git commit -m init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I don't care if this project is for learning, if it will never have a remote or not, use git.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-in-scripts'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Using Kedro In Scripts&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-environment'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;kedro Virtual Environment&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-git-init</guid><pubDate>Fri, 20 Aug 2021 00:00:00 +0000</pubDate></item><item><title>Kedro Install</title><link>https://waylonwalker.com/kedro-install</link><description>Kedro comes with an  https://youtu.be/IWimEs-hHQg You must start by having your kedro project either cloned down https://waylonwalker.com/kedro-new/ this post c</description><content:encoded>&lt;p&gt;Kedro comes with an &lt;code&gt;install&lt;/code&gt; command to install and manage all of yourprojects dependencies.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/IWimEs-hHQg"&gt;https://youtu.be/IWimEs-hHQg&lt;/a&gt;&lt;/p&gt;&lt;h2 id="cd-into-your-project-directory-and-activate-env"&gt;cd into your project directory and activate env&lt;/h2&gt;&lt;p&gt;You must start by having your kedro project either cloned downfrom an existing project or created from kedro new.  Thenactivate your environment.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/kedro-new/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/kedro-new-og_250x140.png" alt="article cover for  Kedro New"/&gt;          &lt;p&gt;&lt;strong&gt; Kedro New&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;this post covers kedro new&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/kedro-environment/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/kedro-environment-og_250x140.png" alt="article cover for  kedro Virtual Environment"/&gt;          &lt;p&gt;&lt;strong&gt; kedro Virtual Environment&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;This post covers creating your virtual environment for kedro&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="install-kedro"&gt;install kedro&lt;/h2&gt;&lt;p&gt;Make sure you have kedro installed in your currentenvironment, if you dont already have it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install &lt;span class="nv"&gt;kedro&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.17.4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="pip-tools"&gt;pip-tools&lt;/h2&gt;&lt;p&gt;Kedro uses the &lt;code&gt;pip-tools&lt;/code&gt; package under the hood to pindependencies in a very robust way to ensure that the projectwill continue to work on everyone's machine day, includingproduction, day in and day out.  No matter what happens to thedependencies you have installed.&lt;/p&gt;&lt;h3 id="pip-compile"&gt;pip-compile&lt;/h3&gt;&lt;p&gt;The command that kedro uses from &lt;code&gt;pip-tools&lt;/code&gt; is &lt;code&gt;pip-compile&lt;/code&gt;.  It will look atwhat you have in a &lt;code&gt;requirements.in&lt;/code&gt; file, compile the dependencies down toexact versions, and create a requirements.txt that is fully pinned down, andupdatable by re-running &lt;code&gt;pip-compile&lt;/code&gt;.&lt;/p&gt;&lt;h2 id="requirementsin"&gt;requirements.in&lt;/h2&gt;&lt;p&gt;If kedro does not see a &lt;code&gt;requirements.in&lt;/code&gt; file it will automatically move your&lt;code&gt;requirements.txt&lt;/code&gt; to &lt;code&gt;requirements.in&lt;/code&gt; and run &lt;code&gt;pip-compile&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;No requirements.in found. Copying contents from requirements.txt...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="kedro-install"&gt;kedro install&lt;/h2&gt;&lt;p&gt;Lets go ahead and run kedro install on one of the projects we already createand environment for in a previous post, &lt;code&gt;kedro-conda&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first time you run this on a new repo it is likely that you will run intothis warning about creating a new &lt;code&gt;requirements.in&lt;/code&gt; file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;No requirements.in found. Copying contents from requirements.txt...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="kedro-install-flags"&gt;kedro install flags&lt;/h2&gt;&lt;p&gt;Kedro does let you avoid pip-compile all together, by using the&lt;code&gt;--no-build-reqs&lt;/code&gt; flag.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro install --no-build-reqs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It also lets you upgrade all of your dependencies with build-reqs.  I wouldreccomend doing this on its own branch, and own pull request.  If you areworking on a team you want everyone to be on the same page when it comes todependencies.  If you are not, you surely do not want something to break with anew set of dependencies without a way of rolling back.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro install --build-reqs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-new'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro New&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-inputs'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How Kedro handles your inputs&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-install</guid><pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate></item><item><title>kedro Virtual Environment</title><link>https://waylonwalker.com/kedro-environment</link><description>Avoid serious version conflict issues, and use a virtual environment anytime https://youtu.be/ZSxc5VVCBhM conda venv pipenv I prefer to use conda as my virtual </description><content:encoded>&lt;p&gt;Avoid serious version conflict issues, and use a virtual environment anytimeyou are running python, here are three ways you can setup a kedro virtualenvironment.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/ZSxc5VVCBhM"&gt;https://youtu.be/ZSxc5VVCBhM&lt;/a&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;conda&lt;/li&gt;&lt;li&gt;venv&lt;/li&gt;&lt;li&gt;pipenv&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="conda"&gt;conda&lt;/h2&gt;&lt;p&gt;I prefer to use conda as my virtual environment manager of choice as it give meboth the interpreter and the packages I install.  I don't have to rely on thesystem version of python or another tool to maintain python versions at all, Iget everything in one tool.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;envs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;stores environment in a root directory i.e. &lt;code&gt;~/miniconda3&lt;/code&gt;&lt;/li&gt;&lt;li&gt;conda can use its own way to manage environments &lt;code&gt;environment.yml&lt;/code&gt;&lt;/li&gt;&lt;li&gt;the python interpreter is packaged with the environment&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="virtualenv"&gt;virtualenv&lt;/h2&gt;&lt;p&gt;Virtual env (venv) is another very respectable option that is built right intopython, and requires no additional installs or using a different distributionof pytyhon.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m venv .venvsource ./.venv/bin/activatepython  -m pip install --upgrade pippip install -e src&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;environments are typically stored in the project directory&lt;/li&gt;&lt;li&gt;does not package the interpreter&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="pipenv"&gt;pipenv&lt;/h2&gt;&lt;p&gt;Pipenv is another virtual enviroment tool that comes with its own system formanaging dependencies using a &lt;code&gt;pipfile&lt;/code&gt;.  It's main benefit is that it createsa lockfile that will allow users to replicate the exact version of all theirpackages.  The typical &lt;code&gt;requirements.txt&lt;/code&gt; workflow can easily break as newversion of dependecies are released between testing  and deplpoyment.&lt;/p&gt;&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run pipenv shellpython  -m pip install --upgrade pippip install -e src&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;* stores environment in a root directory i.e. &lt;code&gt;~/.local/share/virtualenvs/&lt;/code&gt;* pipenv can use its own way to manage environments &lt;code&gt;pipfile&lt;/code&gt;* does not package the interpreter&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-git-init'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Git Init&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-class-hooks'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create Configurable Kedro Hooks&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-environment</guid><pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate></item><item><title>Running your Kedro Pipeline from the command line</title><link>https://waylonwalker.com/kedro-run</link><description>Running your kedro pipeline from the command line could not be any easier to https://youtu.be/ZmccpLy-OEI https://waylonwalker.com/what-is-kedro/ 👆 Unsure what </description><content:encoded>&lt;p&gt;Running your kedro pipeline from the command line could not be any easier toget started.  This is a concept that you may or may not do often depending onyour workflow, but its good to have under your belt.  I personally do this halfthe time and run from ipython half the time.  In production, I mostly use dockerand that is all done with this cli.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/ZmccpLy-OEI"&gt;https://youtu.be/ZmccpLy-OEI&lt;/a&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 Unsure what kedro is?  Check out this post.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="kedro-run"&gt;Kedro run&lt;/h2&gt;&lt;p&gt;To run the whole darn project all we need to do is fire up a terminal, activateour environment, and tell kedro to run.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="specific-pipelines"&gt;Specific Pipelines&lt;/h2&gt;&lt;p&gt;Running a sub pipeline that we have created is as easy as telling kedro whichone we want to run.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run --pipeline dp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="single-nodes"&gt;Single Nodes&lt;/h2&gt;&lt;p&gt;While developing a node or a small list of nodes in a larger pipeline its handyto be able to run them one at a time.  Besides the use case of developing asingle node I would not reccomend leaning very heavy on running single nodes,let the DAG do the work of figuring out which nodes to run for you.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run --pipeline dp --node create_model_input_table_nodekedro run --pipeline dp -n create_model_input_table_node&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="some-dag-concepts"&gt;Some DAG concepts&lt;/h2&gt;&lt;p&gt;We will cover more of the benefits that we get from the graph nature of the DAGin the future, but here is a quick peek at some things we can do.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run --pipeline dp --to-outputs preprocessed_shuttleskedro run --pipeline dp --from-inputs preprocessed_shuttleskedro run --pipeline dp --to-nodes create_model_input_table_node&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="multiple-things"&gt;Multiple things&lt;/h2&gt;&lt;p&gt;You can stack up multiple kedro dag concepts into a single run command.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run --pipeline dp --to-nodes create_model_input_table_node --to-nodes preprocess_shuttles_node&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;h2 id="related-links"&gt;Related Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;what is kedro&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/kedro-environment/"&gt;setting up a kedro environment&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/kedro-new/"&gt;creating a new kedro project&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/latest/06_nodes_and_pipelines/04_run_a_pipeline.html"&gt;kedro run docs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-silence'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Silence Kedro Logs&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-preflight'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;📝 Kedro Preflight Notes&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-run</guid><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate></item><item><title>Writing your first kedro Nodes</title><link>https://waylonwalker.com/kedro-your-first-nodes</link><description>https://youtu.be/-gEwU-MrPuA Before we jump in with anything crazy, let You will need to import node from kedro.pipeline to start creating nodes. The  Inputs an</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/-gEwU-MrPuA"&gt;https://youtu.be/-gEwU-MrPuA&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Before we jump in with anything crazy, let's make some nodes with some vanilladata structures.&lt;/p&gt;&lt;h2 id="import-node"&gt;import node&lt;/h2&gt;&lt;p&gt;You will need to import node from kedro.pipeline to start creating nodes.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="func"&gt;func&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;func&lt;/code&gt; is a callable that will take the &lt;code&gt;inputs&lt;/code&gt; and create the &lt;code&gt;outputs&lt;/code&gt;.&lt;/p&gt;&lt;h2 id="inputs-outputs"&gt;inputs / outputs&lt;/h2&gt;&lt;p&gt;Inputs and outputs can be None, a single catalog entry as a string, mutiplecatalog entries as a List of strings, or a dictionary of strings where the keyis the keyword argument of the func and the value is the catalog entry to usefor that keyword.&lt;/p&gt;&lt;h2 id="our-first-node"&gt;our first node&lt;/h2&gt;&lt;p&gt;Sometimes in our pipelines our data is coming from an api where we already havepython functions built to pull with.  Thats ok, kedro supposrts that with&lt;code&gt;inputs=None&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_range&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;make_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;create_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="second-node"&gt;second node&lt;/h2&gt;&lt;p&gt;Now we have some data to work from, lets use that as our input.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;square_range&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;square_range&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;square_range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range_squared&amp;#39;&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="multiple-inputs"&gt;Multiple Inputs&lt;/h2&gt;&lt;p&gt;Kedro can take lists or dicts as either input or output when your functionneeds more than one input or output.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;range_two&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;range_two&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;concat_ranges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;range_squared&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;concat&amp;#39;&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;## inputs could also be defined as a dict&lt;/span&gt;&lt;span class="n"&gt;concat_ranges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;range&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;range_two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;range_squared&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;    &lt;span class="n"&gt;outputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;concat&amp;#39;&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/kedro/"&gt;all of my kedro articles&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bw5_FWDVRpU&amp;amp;list=PLTRNG6WIHETCoPt5gAKYSH_HCZvE_r41n"&gt;kedro playlist on YouTube&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/kedro.pipeline.node.html"&gt;node docs&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://gist.github.com/WaylonWalker/347b32c6ae7b799d1e0853c3811a98de"&gt;first_nodes.py&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro172_replit'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;kedro replit&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-static-viz-0-3-0'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Static Viz 0.3.0 is out with Hooks Support&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-your-first-nodes</guid><pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate></item><item><title>Setting Parameters in kedro</title><link>https://waylonwalker.com/kedro-parameters</link><description>Parameters are a place for you to store variables for your pipeline that can be https://youtu.be/Jj5cQ5bqcjg https://waylonwalker.com/what-is-kedro/ 👆 Unsure wh</description><content:encoded>&lt;p&gt;Parameters are a place for you to store variables for your pipeline that can beaccessed by any node that needs it, and can be easily changed by changing yourenvironment.  Parameters are stored in the repository in yaml files.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/Jj5cQ5bqcjg"&gt;https://youtu.be/Jj5cQ5bqcjg&lt;/a&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 Unsure what kedro is?  Check out this post.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="parameters-files"&gt;parameters files&lt;/h2&gt;&lt;p&gt;You can have multiple parameters files and choose which ones to load by settingyour environment.  By default kedro will give you a &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;local&lt;/code&gt;parameters file.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;conf/base/parameters.yml&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;conf/local/parameters.yml&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="base"&gt;base&lt;/h2&gt;&lt;p&gt;The base environment should contain all of the default values you want to run.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# /conf/base/parameters.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;test_size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;0.2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;random_state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;3&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;engines&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;passenger_capacity&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;crew&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;d_check_complete&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;moon_clearance_complete&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;iata_approved&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;company_rating&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;review_scores_rating&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; base will always be loaded first.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="accessing-parameters"&gt;accessing parameters&lt;/h2&gt;&lt;p&gt;Parameters can be accessed through context or through the catalog.  Generallywhen you are working with nodes it will be loaded through the catalog.&lt;/p&gt;&lt;p&gt;Loding with the context.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load_context&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Loading with the catalog.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;parameters&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Loading a specific key with the catalog.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;catalog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;params:test_size&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-parameters-in-nodes"&gt;using parameters in nodes&lt;/h2&gt;&lt;p&gt;Here is an example from the complete spaceflights demo.  The entire parametersdict is passed in, then the &lt;code&gt;features&lt;/code&gt; key is accessed.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;split_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Dict&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Tuple&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Splits data into features and targets training and test sets.&lt;/span&gt;&lt;span class="sd"&gt;    Args:&lt;/span&gt;&lt;span class="sd"&gt;        data: Data containing features and target.&lt;/span&gt;&lt;span class="sd"&gt;        parameters: Parameters defined in parameters.yml.&lt;/span&gt;&lt;span class="sd"&gt;    Returns:&lt;/span&gt;&lt;span class="sd"&gt;        Split data.&lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;    &lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;features&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;price&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;        &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test_size&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;random_state&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/kedro-node/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/kedro-node-og_250x140.png" alt="article cover for  Comprehensive guide to creating kedro nodes"/&gt;          &lt;p&gt;&lt;strong&gt; Comprehensive guide to creating kedro nodes&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 Check out this complete guide to creating kedro nodes.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="local"&gt;local&lt;/h2&gt;&lt;p&gt;The local parameters by default are in &lt;code&gt;conf/local/parameters.yml&lt;/code&gt;.  They willoverride the base parameters in a shallow fashion.  If a top level key existsin local, it will override that entire key in your parameters.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# /conf/local/parameters.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;local&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;features&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;company_rating&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;review_scores_rating&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; If you have not explicitly set your environment, local will be thedefault environment selected to override base.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="env"&gt;env&lt;/h2&gt;&lt;p&gt;You can also have other environments that override the base environment.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# /conf/new/parameters.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;new&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; if you use an env local will not be applied&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="activating-this-environment"&gt;Activating this environment&lt;/h2&gt;&lt;p&gt;Following the &lt;a href="https://kedro.readthedocs.io/en/latest/04_kedro_project_setup/02_configuration.html"&gt;configuration docs&lt;/a&gt;we can activate the environment by setting an environment variable in our shellor passing in --env to our kedro cli command.&lt;/p&gt;&lt;p&gt;Setting an environment variable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;KEDRO_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Passing in the env to a kedro cli command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run --env&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Setting the Environment Variable in python.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;KEDRO_ENV&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;new&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/kedro/"&gt;all of my kedro articles&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/what-is-kedro/"&gt;what is kedro&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://waylonwalker.com/kedro-node/"&gt;comprehensive guide to creating kedro nodes&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bw5_FWDVRpU&amp;amp;list=PLTRNG6WIHETCoPt5gAKYSH_HCZvE_r41n"&gt;kedro playlist on YouTube&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/latest/04_kedro_project_setup/02_configuration.html"&gt;configuration docs&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-pickle'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro - My Data Is Not A Table&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-new'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro New&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-parameters</guid><pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate></item><item><title>nvim conf 2021 | IDE's are slow | Waylon Walker</title><link>https://waylonwalker.com/nvim-ides-are-slow</link><description>https://youtu.be/E18m4KkJUnI Using Vim as a Team Lead I 💜 Tmux Why I stopped using @code Get there fast How I vim Use a graphical IDE if it works for you. vim i</description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/E18m4KkJUnI"&gt;https://youtu.be/E18m4KkJUnI&lt;/a&gt;&lt;/p&gt;&lt;hr /&gt;&lt;h2 id="slides"&gt;Slides 👇&lt;/h2&gt;&lt;h2 id="welcome"&gt;welcome&lt;/h2&gt;&lt;h2 id="other-possible-titles"&gt;Other possible titles&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Using Vim as a Team Lead&lt;/li&gt;&lt;li&gt;I 💜 Tmux&lt;/li&gt;&lt;li&gt;Why I stopped using @code&lt;/li&gt;&lt;li&gt;Get there fast&lt;/li&gt;&lt;li&gt;How I vim&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="its-ok"&gt;It's ok&lt;/h2&gt;&lt;p&gt;Use a graphical IDE if it works for you.&lt;/p&gt;&lt;h2 id="trick-it-out"&gt;Trick it out&lt;/h2&gt;&lt;p&gt;vim is so well integrated into the terminal, take advantage&lt;/p&gt;&lt;h2 id="it-wasnt-working-for-me-anymore"&gt;It wasn't working for me anymore&lt;/h2&gt;&lt;h2 id="dozens-of-instances"&gt;dozens of instances&lt;/h2&gt;&lt;p&gt;As a team lead I bounce betweeen a dozen projects a per day&lt;/p&gt;&lt;p&gt;&lt;a href="https://pbs.twimg.com/media/FAEmRjYUcAUk2eR?format=jpg&amp;amp;name=large"&gt;https://pbs.twimg.com/media/FAEmRjYUcAUk2eR?format=jpg&amp;amp;name=large&lt;/a&gt; &lt;/p&gt;&lt;h2 id="move-with-intent"&gt;Move With Intent&lt;/h2&gt;&lt;p&gt;Running vim inside tmux lets me move swiftly between the exact project I need.&lt;/p&gt;&lt;p&gt;&lt;a href="https://twitter.com/_WaylonWalker/status/1438849269407047686/photo/1"&gt;https://twitter.com/_WaylonWalker/status/1438849269407047686/photo/1&lt;/a&gt;&lt;/p&gt;&lt;h2 id="hub-and-spoke"&gt;Hub and Spoke&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;direct link to specific projects&lt;/li&gt;&lt;li&gt;fuzzy into all projects&lt;/li&gt;&lt;li&gt;fuzzy into open projects&lt;/li&gt;&lt;/ul&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/tmux-nav-2021/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/tmux-nav-2021-og_250x140.png" alt="article cover for  How I navigate tmux in 2021"/&gt;          &lt;p&gt;&lt;strong&gt; How I navigate tmux in 2021&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;h2 id="other-things-that-make-this-possible"&gt;Other Things That Make this Possible&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;tmux&lt;/li&gt;&lt;li&gt;direnv&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;vim adjacent things&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="yes-vim-is-ugly-make-it-yours"&gt;yes, vim is ugly, make it yours&lt;/h2&gt;&lt;p&gt;@rook&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;command&lt;span class="p"&gt;!&lt;/span&gt; Q :&lt;span class="k"&gt;q&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;@_waylonwalker&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;nnoremap&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;leader&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;c&lt;/span&gt;&lt;span class="p"&gt;-&lt;/span&gt;^&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;h2 id="lsp"&gt;lsp&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;lua&lt;/span&gt; &lt;span class="k"&gt;vim&lt;/span&gt;.&lt;span class="nb"&gt;lsp&lt;/span&gt;.&lt;span class="k"&gt;buf&lt;/span&gt;.definition&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="treesitter"&gt;treesitter&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Plug &lt;span class="s1"&gt;&amp;#39;nvim-treesitter/nvim-treesitter-textobjects&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="telescope"&gt;telescope&lt;/h2&gt;&lt;p&gt;fuzzy matching like a boss&lt;/p&gt;&lt;p&gt;fzf is ok too&lt;/p&gt;&lt;h2 id="check-messages"&gt;Check Messages&lt;/h2&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/out-of-space'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Out of Space&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/newsboat'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Newsboat&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/nvim-ides-are-slow</guid><pubDate>Fri, 29 Oct 2021 00:00:00 +0000</pubDate></item><item><title>kedro catalog create</title><link>https://waylonwalker.com/kedro-catalog-create-cli</link><description>I use  https://youtu.be/ https://waylonwalker.com/what-is-kedro/ 👆 Unsure what kedro is?  Check out this post. The command to ensure there are catalog entries f</description><content:encoded>&lt;p&gt;I use &lt;code&gt;kedro catalog create&lt;/code&gt; to boost my productivity by automaticallygenerating yaml catalog entries for me.  It will create new yaml files for eachpipeline, fill in missiing catalog entries, and respect already existingcatalog entries.  It will reformat the file, and sort it based on catalog key.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/_22ELT4kja4"&gt;https://youtu.be/_22ELT4kja4&lt;/a&gt;&lt;/p&gt;&lt;!-- syntax highlighting broken after underscore from the link __ --&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;👆 Unsure what kedro is?  Check out this post.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="running-kedro-catalog-create"&gt;Running Kedro Catalog Create&lt;/h2&gt;&lt;p&gt;The command to ensure there are catalog entries for every dataset in the passedin pipeline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro catalog create --pipeline history_nodes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;Create's new yaml file, if needed&lt;/li&gt;&lt;li&gt;Fills in new dataset entries with the default dataset&lt;/li&gt;&lt;li&gt;Keeps existing datasets untouched&lt;/li&gt;&lt;li&gt;it will reformat your yaml file a bit&lt;ul&gt;&lt;li&gt;default sorting will be applied&lt;/li&gt;&lt;li&gt;empty newlines will be removed&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="conf_root"&gt;CONF_ROOT&lt;/h2&gt;&lt;p&gt;Kedro will respect your &lt;code&gt;CONF_ROOT&lt;/code&gt; settings when it creates a new catalogfile, or looks for existing catalog files.  You can change the location of yourconfiguration files by editing your &lt;code&gt;CONF_ROOT&lt;/code&gt; variable in your projects.&lt;/p&gt;&lt;p&gt;&lt;code&gt;settings.py&lt;/code&gt;.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# settings.py&lt;/span&gt;&lt;span class="c1"&gt;# default settings&lt;/span&gt;&lt;span class="n"&gt;CONF_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;conf&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# I like to package my configuration&lt;/span&gt;&lt;span class="n"&gt;CONF_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;conf&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I prefer to keep my configuration packaged inside of my project.  This ispartly due to how my team operates and deploys pipelines.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="file-location"&gt;File Location&lt;/h2&gt;&lt;p&gt;The &lt;code&gt;kedro catalog create&lt;/code&gt; command will look for a &lt;code&gt;yaml&lt;/code&gt; file based on thename of the pipeline (&lt;code&gt;CONF_ROOT/catalog/&amp;lt;pipeline-name&amp;gt;.yml&lt;/code&gt;).  If it does notfind one it will create one and make entries for each dataset in the pipeline.It will not look in all of your existing catalog files for entries, only theone in the exact file for your pipeline.  If you are going to use this commandits important that you follow this pattern or copy what it generates into yourown catalog file of choice.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;⚠️ It will not look in all of your existing catalog files for entries, only theone in the exact file for your pipeline.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="memorydatasets"&gt;MemoryDataSet's&lt;/h2&gt;&lt;p&gt;When you run &lt;code&gt;kedro catalog create&lt;/code&gt; you get &lt;code&gt;MemoryDataSet&lt;/code&gt;, that's it.  As of&lt;code&gt;0.17.4&lt;/code&gt; its hard coded into the library and not configurable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;range12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="your-free-to-use-what-you-want-though"&gt;Your free to use what you want though&lt;/h2&gt;&lt;p&gt;Let's switch this dataset over to a &lt;code&gt;pandas.CSVDataSet&lt;/code&gt; so that the file getsstored and we can pick up  and read the file without re-running the wholepipeline.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;range12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/range12.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="continue-adding-nodes"&gt;Continue adding nodes&lt;/h2&gt;&lt;p&gt;As we work we will keep adding nodes to our kedro pipeline, in this case weadded another node that created a dataset called &lt;code&gt;range13&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro catalog create --pipeline history_nodes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After telling kedro to create new catalog entries for us we will see that itleft our &lt;code&gt;range12&lt;/code&gt; entry alone and created &lt;code&gt;range13&lt;/code&gt; for us.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;range12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/range12.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;range13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="formatting-is-not-worthwhile"&gt;Formatting is not worthwhile&lt;/h2&gt;&lt;p&gt;If we decide this is too cramped for us we could add some space betweendatasets.  The next time we run &lt;code&gt;kedro catalog create&lt;/code&gt; empty lines will beremoved.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;range12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;range13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="continuing-to-work"&gt;Continuing to work&lt;/h2&gt;&lt;p&gt;If we coninue adding new nodes, and tell kedro to create catalog entries again,all of our effort given to formatting will be lost.  I wouldn't worry about itunless you have an autoformatter that you can run on your yaml files.  Theproductivity gains in an semi-automated catalog are worth it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;range12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;pandas.CSVDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;data/range12.csv&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;range121&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;range13&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;MemoryDataSet&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="sorting-order"&gt;Sorting Order&lt;/h2&gt;&lt;p&gt;Notice the sorting order in the last entry, &lt;code&gt;range121&lt;/code&gt; comes before &lt;code&gt;range13&lt;/code&gt;.This is all based on how pythons &lt;code&gt;yaml.safe_dump&lt;/code&gt; works, kedro has set the&lt;code&gt;default_flow_style&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;.  You can see where they write your file in thesource code currently&lt;a href="https://github.com/quantumblacklabs/kedro/blob/master/kedro/framework/cli/catalog.py#L202"&gt;here&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro-catalog-search'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to find things in your kedro catalog&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/kedro-catalog'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro Catalog&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/kedro-catalog-create-cli</guid><pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate></item><item><title>Running Kedro on Ubuntu 21.10 Impish Indri</title><link>https://waylonwalker.com/til/kedro-ubuntu-impish</link><description>I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted a But what I got back was not what I expected This is weird, why cant I run kedro new with pi</description><content:encoded>&lt;p&gt;I just installed a brand new Ubuntu 21.10 Impish Indri, and wanted akedro project to play with so I did what any good kedroid would do, Iwent to my command line and ran&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run kedro new --starter spaceflights&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But what I got back was not what I expected!&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Fatal error from pip prevented installation. Full pip output &lt;span class="k"&gt;in&lt;/span&gt; file:    /home/walkers/.local/pipx/logs/cmd_2022-01-01_20.42.16_pip_errors.logSome possibly relevant errors from pip install:    ERROR: Could not find a version that satisfies the requirement kedro &lt;span class="o"&gt;(&lt;/span&gt;from versions: none&lt;span class="o"&gt;)&lt;/span&gt;    ERROR: No matching distribution found &lt;span class="k"&gt;for&lt;/span&gt; kedroError installing kedro.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is weird, why cant I run kedro new with pipx?  Lets try pip.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Same issue.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ERROR: Could not find a version that satisfies the requirement kedro &lt;span class="o"&gt;(&lt;/span&gt;from versions: none&lt;span class="o"&gt;)&lt;/span&gt;ERROR: No matching distribution found &lt;span class="k"&gt;for&lt;/span&gt; kedro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/what-is-kedro/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/what-is-kedro-og_250x140.png" alt="article cover for  What is Kedro"/&gt;          &lt;p&gt;&lt;strong&gt; What is Kedro&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Curious what kedro is?  Check out this article.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="whats-up"&gt;What's up..&lt;/h2&gt;&lt;p&gt;&lt;em&gt;wrong python version&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The issue is that kedro only runs on up to &lt;code&gt;python 3.8&lt;/code&gt;, and on Ubuntu21.10 when you &lt;code&gt;apt install python3&lt;/code&gt; you get &lt;code&gt;python 3.9&lt;/code&gt; and thestandard repos don't have an old enough version to run kedro.&lt;/p&gt;&lt;h2 id="how-to-fix-this"&gt;How to fix this?&lt;/h2&gt;&lt;p&gt;Theres a couple of ways you can fix this?  They all involve installing adistribution that does not come from the standard repo.&lt;/p&gt;&lt;h2 id="where-can-i-get-the-right-version"&gt;Where Can I get the right version&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Anaconda&lt;/li&gt;&lt;li&gt;Python.org&lt;/li&gt;&lt;li&gt;deadsnakes&lt;/li&gt;&lt;li&gt;pyenv&lt;/li&gt;&lt;li&gt;miniconda&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="i-have-two-articles-that-can-help-you"&gt;I have two articles that can help you&lt;/h2&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/install-miniconda/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/install-miniconda-og_250x140.png" alt="article cover for  How to Install miniconda on linux (from the command line only)"/&gt;          &lt;p&gt;&lt;strong&gt; How to Install miniconda on linux (from the command line only)&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Using miniconda&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda create -n myenv &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/til/pyenv-first-impressions/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/til/pyenv-first-impressions-og_250x140.png" alt="article cover for  My first impressions with pyenv"/&gt;          &lt;p&gt;&lt;strong&gt; My first impressions with pyenv&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Using pyenv&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install &lt;span class="m"&gt;3&lt;/span&gt;.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/linux-bluetoothctl'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Bluetooth at the command line on Ubuntu&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/kedro-rich'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Make Kedro Runs Beautiful&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/kedro-ubuntu-impish</guid><pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Practice making pipelines with kedro</title><link>https://waylonwalker.com/til/practice-kedro</link><description>I am a huge believer in practicing your craft.  Professional athletes Go to your playground directory, and if you don Install pipx in your system python.  This </description><content:encoded>&lt;p&gt;I am a huge believer in practicing your craft.  Professional athletesspend most of their time honing their skills and making themslevesbetter.  In Engineering many spend nearly 0 time practicing.  I am notsaying that you need to spend all your free time practicing, but a fewminutes trying new things can go a long way in how you understand whatyou are doing and make a hue impact on your long term productivity.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;practice&lt;/strong&gt; building pipelines with &lt;em&gt;#kedro&lt;/em&gt; today&lt;/p&gt;&lt;p&gt;Go to your playground directory, and if you don't have one, make one.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/playground&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Install pipx in your system python.  This is one of the very few, andpossibly the only python library that deserves to be installed in yoursystem directory, primarily because its used to sanbox clis in their ownvirtual environment automatically for you.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pipx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;From inside your &lt;code&gt;playground&lt;/code&gt; directory, start your new kedro project.This is quite simple and painless.  So much so that if you mess this oneup doing something wild, it might be easier to make a new one thatfixing the wild one.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run kedro new# answer the questions it asks&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I use this quite often to try out new things in a safe place.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="make-a-virtual-environment"&gt;Make a virtual environment.&lt;/h2&gt;&lt;h3 id="using-conda"&gt;Using Conda&lt;/h3&gt;&lt;p&gt;Conda is a fine choice to manage your virtual environments.  It used tomake things so much easier on windows that it was almost required.Nowadays getting python running on windows has become so much easierthat this is less so.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;create&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;upgrade&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;one great benefit of conda is that it lets you choose the interpreterto go with your virtual environment.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Your new environment will be listed in your list of conda env here.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;conda&lt;/span&gt; &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;envs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="using-venv"&gt;Using venv&lt;/h3&gt;&lt;p&gt;&lt;code&gt;venv&lt;/code&gt; is what I use now.  Nothing against conda, it works great.&lt;code&gt;venv&lt;/code&gt; just feels a bit lighter and more common.  I've actually grown toappreciate that the &lt;code&gt;venv&lt;/code&gt; is right where I put it, most often in theproject directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m venv .venvsource ./.venv/bin/activatepython  -m pip install --upgrade pippip install -e src&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="using-pipenv"&gt;using pipenv&lt;/h3&gt;&lt;p&gt;&lt;code&gt;pipenv&lt;/code&gt; is another fine choice.  I like how in one command it makes theenvironment and activates it for you.  &lt;code&gt;pipenv&lt;/code&gt; also puts virtualenvironments in the global directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run pipenv shellpython  -m pip install --upgrade pippip install -e src&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="make-pipelines"&gt;Make pipelines&lt;/h2&gt;&lt;p&gt;Now go make some pipelines with your new project, try something wild,break it, and make anther.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/pyenv-first-impressions'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;My first impressions with pyenv&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/popen-stderr'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Read stderr from python subprocess.Popen&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/practice-kedro</guid><pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Add New Dependencies to Your Kedro Project</title><link>https://waylonwalker.com/til/kedro-new-dependencies</link><description>As you work on your kedro projects you are bound to need to add more Before you start mucking around with any changes to dependencies make sure that New require</description><content:encoded>&lt;p&gt;As you work on your kedro projects you are bound to need to add moredependencies to the project eventually.  Kedro uses a fantastic command&lt;code&gt;pip-compile&lt;/code&gt; under the hood to ensure that everyone is on the same version ofpackages at all times, and able to easily upgrade them.  It might be a bitdifferent workflow than what you have seen, let's take a look at it.&lt;/p&gt;&lt;h2 id="git-status"&gt;git status&lt;/h2&gt;&lt;p&gt;Before you start mucking around with any changes to dependencies make sure thatyour git status is clean.  I'd even reccomend starting a new branch for this,and if you are working on a team potentially submit this as its own PR forclarity.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git statusgit checkout maingit checkout -b add-rich-dependency&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="requirementsin"&gt;requirements.in&lt;/h2&gt;&lt;p&gt;New requirements get added to a requirements.in file.  If you need to specifyan exact version, or a minimum version you can do that, but if all versionsgenerally work you can leave it open.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# requirements.in&lt;/span&gt;rich&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here I added the popular &lt;code&gt;rich&lt;/code&gt; package to my &lt;code&gt;requirements.in&lt;/code&gt; file.  SinceI am ok with the latest version I am not going to pin anything, I am going tolet the pip resolver pick the latest version that does not conflict with any ofmy dependencies for me.&lt;/p&gt;&lt;h2 id="build-reqs"&gt;build-reqs&lt;/h2&gt;&lt;p&gt;The command &lt;code&gt;kedro build-reqs&lt;/code&gt; will tell kedro to recompile the&lt;code&gt;requirements.txt&lt;/code&gt; file that has all of our dependencies pinned down to exactversions.  This ensures that all of our teammates and production workflows usethe same exact versions of packages even if new ones are released after weinstalled on our development machines.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro build-reqs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="git-add"&gt;git add&lt;/h2&gt;&lt;p&gt;Now that we have our new dependencies ready to go commit those to git, andsubmit a PR for them if you are working on a team.  This is a good way todocument the discussion of adding new dependencies to your teams project.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git add requirements.ingit add requirements.txtgit statusgit commit -m &lt;span class="s2"&gt;&amp;quot;FEAT updated dependencies with rich&amp;quot;&lt;/span&gt;git push&lt;span class="c1"&gt;# go make a pr&lt;/span&gt;gh pr create --title &lt;span class="s2"&gt;&amp;quot;feat add rich to dependencies&amp;quot;&lt;/span&gt; --body &lt;span class="s2"&gt;&amp;quot;I added rich as a dependency, and ran pip-compile&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/kedro-rich'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Make Kedro Runs Beautiful&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/kedro-lambda-node'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Lambda Function as a Kedro Node&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/kedro-new-dependencies</guid><pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Lambda Function as a Kedro Node</title><link>https://waylonwalker.com/til/kedro-lambda-node</link><description>I keep my nodes short and sweet.  They do one thing and do it well. I Here are two examples, the first one  Many times I just want to get the data in as fast as</description><content:encoded>&lt;p&gt;I keep my nodes short and sweet.  They do one thing and do it well. Iturn almost every DataFrame transformation into its own node.  It makesit must easier to pull catalog entries, than firing up the pipeline,running it, and starting a debugger.  For this reason many of my nodescan be built from inline lambdas.&lt;/p&gt;&lt;h2 id="examples"&gt;Examples&lt;/h2&gt;&lt;p&gt;Here are two examples, the first one &lt;code&gt;lambda x: x&lt;/code&gt; is sometimes referredto as an identity function.  This is super common to use in the earlyphases of a project.  It lets you follow standard layering conventions,without skipping a layer, overthinking if you should have the layer ornot, and leaves a good placholder to fill in later when you need it.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Many times I just want to get the data in as fast as possible, learnabout it, then go back and tidy it up.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;kedro.pipeline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="n"&gt;my_first_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;my_first_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;   &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cars&lt;/span&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mpg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cyl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disp&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;query&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;disp&amp;gt;200&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;   &lt;span class="n"&gt;inputs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;raw_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;int_cars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pri&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;   &lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note: try not to take the idea of a one liner too far.  If yourone line function wraps several lines down it probably deserves to bea real function for readability and a good docstring.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/kedro-new-dependencies'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Add New Dependencies to Your Kedro Project&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/installing-pipx-on-ubuntu'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Pipx on Ubuntu&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/kedro-lambda-node</guid><pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Make Kedro Runs Beautiful</title><link>https://waylonwalker.com/til/kedro-rich</link><description>Kedro rich is a very new and unstable (it There is no pypi package yet, but it You can run your pipeline just as you normally would, except you get progress Lis</description><content:encoded>&lt;p&gt;Kedro rich is a very new and unstable (it's good, just not ready) plugin forkedro to make the command line prettier.&lt;/p&gt;&lt;h2 id="install-kedro-rich"&gt;Install kedro rich&lt;/h2&gt;&lt;p&gt;There is no pypi package yet, but it's on github.  You can pip install it withthe git url.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install git+https://github.com/datajoely/kedro-rich&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="kedro-run"&gt;Kedro run&lt;/h2&gt;&lt;p&gt;You can run your pipeline just as you normally would, except you get progressbars and pretty prints.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="kedro rich pretty run" src="https://images.waylonwalker.com/kedro-rich-run.png" /&gt;&lt;/p&gt;&lt;h2 id="kedro-catalog"&gt;Kedro catalog&lt;/h2&gt;&lt;p&gt;Listing out catalog entries from the command line now print out a nice prettytable.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kedro catalog list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="kedro rich catalog list table output" src="https://images.waylonwalker.com/kedro-rich-catalog-list.png" /&gt;&lt;/p&gt;&lt;h2 id="give-it-a-star"&gt;Give it a star&lt;/h2&gt;&lt;p&gt;Go to the &lt;a href="https://github.com/datajoely/kedro-rich"&gt;GitHub repo&lt;/a&gt; and give it astar, Joel deserves it.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/kedro-ubuntu-impish'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Running Kedro on Ubuntu 21.10 Impish Indri&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/kedro-new-dependencies'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Add New Dependencies to Your Kedro Project&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/kedro-rich</guid><pubDate>Fri, 11 Mar 2022 00:00:00 +0000</pubDate></item></channel></rss>