<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Waylon Walkers Digital Garden - bash posts</title><link>https://waylonwalker.com/bash-rss.xml</link><description>Waylon Walkers posts - bash posts</description><atom:link href="https://waylonwalker.com/bash-rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>8bitcc.png</url><title>Waylon Walkers Digital Garden - bash posts</title><link>https://waylonwalker.com/bash-rss.xml</link></image><language>en</language><lastBuildDate>Fri, 10 Jun 2022 02:40:00 +0000</lastBuildDate><item><title>üìù Bash Notes</title><link>https://waylonwalker.com/bash</link><description>Waylon Walker's Bash Notes</description><content:encoded>&lt;p&gt;Bash is super powerful.&lt;/p&gt;&lt;h2 id="file-system-full"&gt;File System Full&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Show Remaining Space on Drives&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;show largest files in current directory&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;du . -h --max-depth&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Move files then symlink them&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir /mnt/mounted_drivemv ~/bigdir /mnt/mounted_driveln -s /mnt/mounted_drive/bigdir ~/bigdir&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="fuzzy-one-liners"&gt;Fuzzy One Liners&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;a&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt; activate &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;print $&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;edit in vim&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vf&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; xargs -r -I % &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; % &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;cat a file&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vf&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; xargs -r -I % &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; % &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;bash execute&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bf&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; bash &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;fzf&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;git add&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gadd&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; git status -s &lt;span class="p"&gt;|&lt;/span&gt; fzf -m &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs git add &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status -s&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;git reset&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;greset&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; git status -s &lt;span class="p"&gt;|&lt;/span&gt;  fzf -m &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;xargs git reset &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status -s&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Kill a process&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fkill&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ps aux &lt;span class="p"&gt;|&lt;/span&gt; fzf &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print($2)}&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="finding-things"&gt;Finding things&lt;/h2&gt;&lt;h3 id="files"&gt;Files&lt;/h3&gt;&lt;p&gt;&lt;a href="https://github.com/sharkdp/fd"&gt;fd-find&lt;/a&gt; is amazing for finding files, it even respects your &lt;code&gt;.gitignore&lt;/code&gt; file üò≤.  Install with &lt;code&gt;apt install fd-find&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fd md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag -g python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find . -n &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;h3 id="content"&gt;Content&lt;/h3&gt;&lt;p&gt;** show matching text **&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep -iR Python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;p&gt;** show file names only **&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag -l python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep -iRl python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;h3 id="recursively-replace-text"&gt;Recursively Replace text&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;agr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;ag -l &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Extending&lt;/strong&gt; &lt;code&gt;**agr**&lt;/code&gt; &lt;strong&gt;or&lt;/strong&gt; &lt;code&gt;**grepr**&lt;/code&gt;&lt;/p&gt;&lt;p&gt;There are so many options inside of &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;ag&lt;/code&gt;, and &lt;code&gt;sed&lt;/code&gt; that you could many an enormous amount of these if you really wanted to, but I like to keep it simple.  These cover 90% of my usage.  If I wanted to change something in the second half I would just paste in this command and edit it. More often though I want to limit the input, say only replace word1 to word2 inside of markdown files.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Limited Scope&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fd md &lt;span class="p"&gt;|&lt;/span&gt; xargs argr python python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find . -n &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs grepr python python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/refactor-in-cli/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/refactor-in-cli-og_250x140.png" alt="article cover for  Large Refactor At The Command Line"/&gt;          &lt;p&gt;&lt;strong&gt; Large Refactor At The Command Line&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I use these replace commands heavily when doing large refactorings.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="conditionally-configure"&gt;conditionally configure&lt;/h3&gt;&lt;p&gt;I like this one when there is not a good cli into config files and I need to replace something like a true to false if the value is in the config and append to the config if its not.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="c1"&gt;# replaces first string with second string inside file from third argument&lt;/span&gt;    &lt;span class="c1"&gt;# example:&lt;/span&gt;    &lt;span class="c1"&gt;#   grepr &amp;quot;allow_conda_downgrades:.*&amp;quot; &amp;quot;allow_conda_downgrades: true&amp;quot; ~/.condarc&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep -xq &lt;span class="nv"&gt;$1&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt;    &lt;span class="k"&gt;then&lt;/span&gt;        sed -i &lt;span class="s2"&gt;&amp;quot;s|&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;|g&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$3&lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$3&lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="watch-the-time"&gt;Watch the time&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;watch -n &lt;span class="m"&gt;1&lt;/span&gt; date&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;++Vanilla Bonus&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;with figlet&lt;/strong&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;watch -n &lt;span class="m"&gt;1&lt;/span&gt; bash -c &lt;span class="s2"&gt;&amp;quot;date | figlet&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="watch-a-function"&gt;watch a function&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;run &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;dateaws s3 sync &lt;span class="nv"&gt;$BUCKET&lt;/span&gt; .&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; -f runwatch -n &lt;span class="m"&gt;10&lt;/span&gt; run&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="if-conda-environment-does-not-exist-create-it"&gt;if conda environment does not exist create it&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; grep my_env &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;my_env environment is installed&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; conda create -n my_env &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8 -y&lt;span class="nb"&gt;source&lt;/span&gt; activate my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id="rename-multiple-files"&gt;Rename multiple files&lt;/h1&gt;&lt;p&gt;more info from &lt;a href="https://linuxize.com/post/how-to-rename-files-in-linux/"&gt;linuxize&lt;/a&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; f &lt;span class="k"&gt;in&lt;/span&gt; *.png&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;   mv &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; prefix-&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="using-the-rename-command"&gt;using the rename command&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt install rename&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rename &lt;span class="s2"&gt;&amp;quot;s/.GIF/.gif/&amp;quot;&lt;/span&gt; *.GIF&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="convert-all-files-in-a-directory-to-unix"&gt;convert all files in a directory to unix&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;dos2unix **/*&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="recursively-remove-all-whitespace-from-py-files"&gt;recursively remove all whitespace from .py files&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find **/*.py -type f -exec sed -i &lt;span class="s1"&gt;&amp;#39;s/ *$//&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{}&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="recursively-autopep8"&gt;recursively autopep8&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="n"&gt;autopep8&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;place&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; \&lt;span class="p"&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="make-bash-script-a-runnable-command"&gt;make bash script a runnable command&lt;/h2&gt;&lt;p&gt;include a shebang&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#! /bin/bash&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;chmod&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;chmod +x /usr/local/bin/my_script&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;accept positional input&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#! /bin/bash&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; input&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-pyp"&gt;Using pyp&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx install pyp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="replacement-for-cut"&gt;replacement for cut&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ python -m http.server &lt;span class="m"&gt;5000&lt;/span&gt; &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;8574&lt;/span&gt;‚ú¶ ‚ùØ Serving HTTP on &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 port &lt;span class="m"&gt;5000&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;http://0.0.0.0:5000/&lt;span class="o"&gt;)&lt;/span&gt; ...‚ú¶ ‚ùØ ps aux &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;python -m http.server&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v grep &lt;span class="p"&gt;|&lt;/span&gt; pyp &lt;span class="s1"&gt;&amp;#39;line.split()[1]&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs &lt;span class="nb"&gt;kill&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;  + terminated  python -m http.server &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="replacement-for-wc"&gt;replacement for wc&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; pyp &lt;span class="s1"&gt;&amp;#39;len(lines) - 3 # account for header and base&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="print-contents-of-shell-function"&gt;print contents of shell function&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;declare&lt;/span&gt; -f &amp;lt;&lt;span class="k"&gt;function&lt;/span&gt;-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="batch-rename-files"&gt;batch rename files&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; f &lt;span class="k"&gt;in&lt;/span&gt; *.jpeg&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;    mv -- &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;%.jpeg&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.jpg&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="convert-markdown-files-to-revealjs"&gt;convert markdown files to reveal.js&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides"&gt;https://github.com/jgm/pandoc/wiki/Using-pandoc-to-produce-reveal.js-slides&lt;/a&gt;install pandoc&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt install pandoc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;setup&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://github.com/hakimel/reveal.js/archive/master.tar.gztar -xzvf master.tar.gzmv reveal.js-master reveal.js&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;convert&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pandoc -t revealjs -s -o myslides.html myslides.md -V revealjs-url&lt;span class="o"&gt;=&lt;/span&gt;https://unpkg.com/reveal.js@3.9.2/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="render-markdown-at-the-command-line"&gt;Render Markdown at the command line&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/charmbracelet/glow"&gt;Glow&lt;/a&gt; is a terminal markdown renderer written in go.  There iis a prebuilt binary that can simply be unzipped and executed to render markdow.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://github.com/charmbracelet/glow/releases/download/v0.2.0/glow_0.2.0_linux_x86_64.tar.gztar -xzf glow_0.2.0_linux_x86_64.tar.gzchmod +x glowsudo mv glow /usr/binglow &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="autocomplete-for-click-applications"&gt;Autocomplete for click applications&lt;/h2&gt;&lt;p&gt;see the &lt;a href="https://click.palletsprojects.com/en/7.x/bashcomplete/"&gt;docs&lt;/a&gt; for more details&lt;/p&gt;&lt;h2 id="autocomplete-for-non-click-python-clis"&gt;Autocomplete for non click python cli's&lt;/h2&gt;&lt;p&gt;shtab &lt;a href="https://github.com/iterative/shtab" title="https://github.com/iterative/shtab"&gt;https://github.com/iterative/shtab&lt;/a&gt;&lt;/p&gt;&lt;h2 id="ensure-functions-reset-context"&gt;Ensure functions reset context&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;project_log&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;   &lt;span class="nv"&gt;_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;   _project_log&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;      &lt;span class="nb"&gt;cd&lt;/span&gt; ~/projects/project      git log   &lt;span class="o"&gt;}&lt;/span&gt;   _project_log &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="finding-files"&gt;Finding Files&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --files . &lt;span class="p"&gt;|&lt;/span&gt; grep bashrg --files . &lt;span class="p"&gt;|&lt;/span&gt; rg bashrg --files . &lt;span class="p"&gt;|&lt;/span&gt; ag bashrg --files . &lt;span class="p"&gt;|&lt;/span&gt; fzfrg -e &lt;span class="s1"&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; -g &lt;span class="s1"&gt;&amp;#39;*.md&amp;#39;&lt;/span&gt;rg -e &lt;span class="s1"&gt;&amp;#39;hook&amp;#39;&lt;/span&gt; -g &lt;span class="s1"&gt;&amp;#39;*.py&amp;#39;&lt;/span&gt;rg --files-with-matchesrg --files-without-match&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="mu-repo"&gt;mu-repo&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# installation&lt;/span&gt;pip install mu-repo&lt;span class="c1"&gt;## register repos&lt;/span&gt;mu register --recursivemu list&lt;span class="c1"&gt;# run git commands&lt;/span&gt;mu status --shortmu diff -U0 --color &lt;span class="p"&gt;|&lt;/span&gt; bat&lt;span class="c1"&gt;# run shell commands&lt;/span&gt;mu sh &lt;span class="k"&gt;$(&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;KEDRO_GID=0&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/KEDRO_GID=0/KEDRO_GID=5/g&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/mu-repo/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/mu-repo-og_250x140.png" alt="article cover for  Maintianing multiple git repos with mu-repo"/&gt;          &lt;p&gt;&lt;strong&gt; Maintianing multiple git repos with mu-repo&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;See the full post for mu-repo for more&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="mu-unregister-all"&gt;mu unregister all&lt;/h2&gt;&lt;p&gt;I ran into some issues with mu unregister * before, but this seems to work everywhere.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mu list &lt;span class="p"&gt;|&lt;/span&gt; tail -n +3 &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt; mu unregister &lt;span class="o"&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="mu-register-all-repos-that-have-an-rg-match"&gt;mu register all repos that have an rg match&lt;/h2&gt;&lt;p&gt;Add all repos that have a versionspec of 3.7 in them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --hidden&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;versionSpec:.*.3.7&amp;#39;&lt;/span&gt; -l &lt;span class="p"&gt;|&lt;/span&gt; xargs -I &lt;span class="o"&gt;{}&lt;/span&gt; mu register &lt;span class="o"&gt;{}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="xrandr"&gt;xrandr&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;xrandr -s 1920x1080&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/bind-dynamic-lambdas'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;TIL: Bind arguments to dynamically generated lambdas in python&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/autoreload-ipython'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Autoreload in Ipython&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/bash</guid><pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate></item><item><title>Supercharge Zsh Startup</title><link>https://waylonwalker.com/supercharge-zsh-startup</link><description>I have been using oh-my-zsh successfully for about 2 years now. But lately my I believe the real issue is io speed on wsl.  I have some remote servers with Quic</description><content:encoded>&lt;p&gt;I have been using oh-my-zsh successfully for about 2 years now. But lately mystartup time has been really bothersome. It has grown to the point where it wastaking about &lt;strong&gt;5.5s&lt;/strong&gt; to startup a shell!  This is ok if I am going to spendsome time in here for awhile and do some work that benefits from all of theautocompletions, plugins, and shortcuts that oh-my-zsh brings.  But to onlyjump in to run a handful of commands is infuriating.&lt;/p&gt;&lt;h3 id="my-setup"&gt;üìë My Setup&lt;/h3&gt;&lt;p&gt;I believe the real issue is io speed on wsl.  I have some remote servers withsimilar configs that are 10x faster or more, loading in 100s of millisecondsrather than seconds.  Sourcing all of the individual plugin files are just toomuch for it.&lt;/p&gt;&lt;h2 id="how-fast-can-it-be"&gt;üí® How Fast can it be&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;Quick side note: your zsh config is controled by your ~/.zshrc file.  Thisfile can source other files, load plugins, or run literally anything.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Time the &lt;strong&gt;initial&lt;/strong&gt; time&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;time&lt;/span&gt; zsh -c &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Move your &lt;strong&gt;~/.zshrc&lt;/strong&gt; config file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv ~/.zshrc ~/.zshrc-back&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Time the fastest startup possible with nothing in your &lt;strong&gt;~/.zshrc&lt;/strong&gt; config file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;time&lt;/span&gt; zsh -c &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Move your &lt;strong&gt;~/.zshrc&lt;/strong&gt; back&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mv ~/.zshrc-back ~/.zshrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="profile-your-startup-time"&gt;üïµÔ∏è‚Äç‚ôÇÔ∏èProfile your startup time&lt;/h2&gt;&lt;p&gt;It is possible to profile your zsh startup time by adding &lt;code&gt;zmodload zsh/zprof&lt;/code&gt;to the start of your &lt;code&gt;~/.zshrc&lt;/code&gt; file and &lt;code&gt;zprof&lt;/code&gt; at the end.  This wasunsuccessfull for me.  I ended up just backing up &lt;code&gt;~/.zshrc&lt;/code&gt; file, thendeleting half of it to see where the hot spots were.  I found that two placesthat were really hot for me.  One I was inadvertantly setting git and npmsettings everytime that didn't need to be set everytime.  That was an easy 2sgain.  Another easy 3s gain was removing oh-my-zsh.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.zshrc&lt;/span&gt;zmodload zsh/zprof......zprof&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="but-i-really-like-oh-my-zsh"&gt;üò≠But I really like oh-my-zsh&lt;/h2&gt;&lt;p&gt;without all the bells and whistle that oh-my-zsh provided zsh became lightning fast to load, but incredibly boring.  It was also very painful to manually type out everything that it autocompleted or aliased all the time.  Next I headed down a path to get all of that functionality back without sacrificing load time.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Without oh-my-zsh, zsh became incredibly boring.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="plugin-managers"&gt;üîå Plugin Managers&lt;/h2&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/steve-johnson-ZUabNmumOcA-unsplash.jpg" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@steve_j?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Steve Johnson&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/plug?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;oh-my-zsh&lt;/li&gt;&lt;li&gt;zplugin&lt;/li&gt;&lt;li&gt;zgen&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;There are a number of plugin managers for zsh, I tried each of the ones listed above, but found that as I approached a nice setup that I liked the load time would creep up &lt;strong&gt;above the 2s&lt;/strong&gt; &lt;strong&gt;mark&lt;/strong&gt; each time. I would turn certain plugins on and off, try different plugin managers, before realizing that I had spent enough time on this problem and it was going to be time to settle on fast startup or functionality.&lt;/p&gt;&lt;h2 id="finding-balance"&gt;‚öñ Finding Balance&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Semi-lazy loading&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/jeppe-hove-jensen-b3eaH1hguOA-unsplash.jpg" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Photo by Jeppe Hove Jensen on &lt;a href="https://unsplash.com/s/photos/balance?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;After struggling to get all of the features I wanted with a fast load time, I decided to only load what I needed upon startup.  Next I created a simple alias that loads in zgen and all of the plugins I want. By doing this I get two main benefits.  Obviously I get a faster starup time by loading less.  I got my startup time down to about 0.25s.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.zshrc&lt;/span&gt;p &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;zgen load zsh-users/zsh-autosuggestions.......&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="fast-loading"&gt;‚ö° Fast Loading&lt;/h3&gt;&lt;p&gt;I really like the fast startup time, because sometimes I am only loading up zsh to run a handful of commands that dont need much in the way of plugins&lt;/p&gt;&lt;p&gt;&lt;strong&gt;simple commands that need üí® blazing start speed&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;any single easy to type command, these are my common commands that I will open a terminal in my editor and just need to run quick.&lt;/em&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;vim&lt;/li&gt;&lt;li&gt;git add . &amp;amp;&amp;amp; git commit &amp;amp;&amp;amp; git push&lt;/li&gt;&lt;li&gt;sh my_script.sh&lt;/li&gt;&lt;li&gt;make build&lt;/li&gt;&lt;li&gt;bake build&lt;/li&gt;&lt;li&gt;pytest&lt;/li&gt;&lt;li&gt;gatsby develop&lt;/li&gt;&lt;li&gt;npm i&lt;/li&gt;&lt;li&gt;npm update&lt;/li&gt;&lt;li&gt;pip install&lt;/li&gt;&lt;li&gt;ipython&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The second benefit was that I can continue typing while plugins are loading.&lt;/p&gt;&lt;p&gt;&lt;img alt="" src="https://waylonwalker.com/type-while-loading-plugins.gif" /&gt;&lt;/p&gt;&lt;h2 id="prompt"&gt;&amp;gt;Prompt&lt;/h2&gt;&lt;p&gt;After removing oh-my-zsh the first thing that I missed was the themes that it provided.  I went through a number of them and the one that seemed to have the smallest effect on performance and everything I needed was &lt;a href="https://starship.rs/"&gt;starship&lt;/a&gt;.  It's a really fast prompt written in rust.  The biggest thing that I needed to have that other prompts were misssing was conda environments.  I live much of my work life running python from various conda environments and it is crutial that I can see what environment I am in at all times.&lt;/p&gt;&lt;p&gt;&lt;img alt="" src="https://images.waylonwalker.com/2020-01-04 12-36-31_Cortana.png" /&gt;&lt;/p&gt;&lt;h2 id="bonus"&gt;üí∞ Bonus&lt;/h2&gt;&lt;p&gt;I applied the same logic to neovim and achieved similar results.  Again it just had too many plugins loading on startup for simple tasks.  I ended up taking a shortcut and load any heavy plugins upon NerdTreeToggle.  I dont really use NERDTree that much, but when I do its for more than just a quick edit.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/.config/nvim/init.vim&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;valloric/youcompleteme&amp;#39;&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;do&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;./install.py&amp;#39;&lt;/span&gt;, &lt;span class="s1"&gt;&amp;#39;on&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;NERDTreeToggle&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/symlink-gallery'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Create a Virtual File Gallery with Symlinks&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/strip-trailing-whitespace'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Strip Trailing Whitespace from Git projects&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/supercharge-zsh-startup</guid><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate></item><item><title>How to Install miniconda on linux (from the command line only)</title><link>https://waylonwalker.com/install-miniconda</link><description>Installing miniconda from only the command line can be a bit of an intimidating task your first time. Lets walk through how to do it.</description><content:encoded>&lt;p&gt;miniconda is a python distribution from continuum. It's a slimmed-down version of their very popular anaconda distribution. It comes with its own environment manager and has eased the install process for many that do not have a way to compile c-extensions. It made it much easier to install the data science stack on windows a few years ago. These days windows are much better than it was back then at compiling c-extensions. I still like its environment manager, which installs to a global directory rather than a local directory for your project.&lt;/p&gt;&lt;h2 id="installing-miniconda-on-linux"&gt;Installing miniconda on Linux&lt;/h2&gt;&lt;p&gt;Installing miniconda on Linux can be a bit tricky the first time you do it completely from the terminal. The following snippet will create a directory to install miniconda into, download the latest python 3 based install script for Linux 64 bit, run the install script, delete the install script, then add a conda initialize to your bash or zsh shell. After doing this you can restart your shell and conda will be ready to go.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir -p ~/miniconda3wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.shbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3rm -rf ~/miniconda3/miniconda.sh~/miniconda3/bin/conda init bash~/miniconda3/bin/conda init zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="options"&gt;Options&lt;/h2&gt;&lt;p&gt;The miniconda.sh script comes with a few basic options.  Most notably we used &lt;code&gt;-b&lt;/code&gt; to be able to run unattended, which means that all of the agreements are automatically accepted without user prompt.  &lt;code&gt;-u&lt;/code&gt; updates any existing installation in the directory of install if there is one. &lt;code&gt;-p&lt;/code&gt; is the directory to install into.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;usage: /root/miniconda3/miniconda.sh [options]Installs Miniconda3 4.6.14-b           run install in batch mode (without manual intervention),             it is expected the license terms are agreed upon-f           no error if install prefix already exists-h           print this help message and exit-p PREFIX    install prefix, defaults to /root/miniconda3, must not contain spaces.-s           skip running pre/post-link/install scripts-u           update an existing installation-t           run package tests after installation (may install conda-build)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="silentlogged"&gt;Silent/Logged&lt;/h2&gt;&lt;p&gt;A quick and easy way to silence everything or to log it to a file during an automated install is to wrap the script into a bash function, or save it to its own file, and call the file.  I like the function method since I can still copy it right into a terminal, or keep my install script as one single file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;install_miniconda &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;mkdir -p ~/miniconda3wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.shbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3rm -rf ~/miniconda3/miniconda.sh~/miniconda3/bin/conda init bash~/miniconda3/bin/conda init zsh&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;normal&lt;/strong&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;install_miniconda&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;silent&lt;/strong&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;install_miniconda &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;logged&lt;/strong&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;install_miniconda &amp;gt; miniconda_install.log 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/reusable-bash/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/reusable-bash-og_250x140.png" alt="article cover for  Creating Reusable Bash Scripts"/&gt;          &lt;p&gt;&lt;strong&gt; Creating Reusable Bash Scripts&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;This posts covers more ways to write reuable bash scripts&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="cross-posted-to-dev"&gt;Cross posted to DEV&lt;/h2&gt;&lt;p&gt;Check out this post and many more on &lt;a href="https://dev.to/waylonwalker/installing-miniconda-on-linux-from-the-command-line-4ad7"&gt;dev.to/waylonwalker&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/install-nvim-skit'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How linux users install a text editor&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/install-micromamba'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to Install micromamba on linux (from the comamnd line only)&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/install-miniconda</guid><pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate></item><item><title>Creating Reusable Bash Scripts</title><link>https://waylonwalker.com/reusable-bash</link><description>Bash is a language that is quite useful for automation no matter what language I have three techniques that help me write more composable bash scripts. Function</description><content:encoded>&lt;p&gt;Bash is a language that is quite useful for automation no matter what languageyou write in. Bash can do so many powerful system-level tasks. Even if you areon windows these days you are likely to come across bash inside a cloud VM,Continuous Integration, or even inside of docker.&lt;/p&gt;&lt;p&gt;I have three techniques that help me write more composable bash scripts.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;a href="#functions"&gt;functions&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#arguments"&gt;Arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#positional-arguments"&gt;positional arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#all-arguments"&gt;All Arguments&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="#main-script"&gt;main script&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;hr /&gt;&lt;h2 id="functions"&gt;Functions&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Break scripts down into reusable components&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Functions in bash are quite simple. They are something that I wish I would havestarted using long ago. They make your code much more reusable. I often usethem in my aliases as well since they can simplify the process and allow moreflexibility.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;span class="c1"&gt;# hello_world&lt;/span&gt;hello_world &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Source the file to load the function and run it from the terminal.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hello_worldhello_world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;h2 id="hello-world"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/h2&gt;&lt;h2 id="arguments"&gt;Arguments&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Make functions a little more flexible&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Arguments and options are quite a bit more complex in bash. For now, we willfocus on the basics which are not all that bad.&lt;/p&gt;&lt;h3 id="positional-arguments"&gt;positional arguments&lt;/h3&gt;&lt;p&gt;&lt;em&gt;easiest and most common to use&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Positional arguments can be pulled out quite easily using &lt;code&gt;$1&lt;/code&gt; for the firstone, &lt;code&gt;$2&lt;/code&gt; for the second, and so on.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; &lt;code&gt;$0&lt;/code&gt; is the command that was called. You will see this often used tofind the command called to open up your current shell.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;span class="c1"&gt;# hello&lt;/span&gt;hello &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hellohello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have a function that accepts positional arguments and we can call it bypassing things into it.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;More than one argument would be ignored since we are only looking at &lt;code&gt;$1&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hellohello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello Waylon&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just the same as before since we do not use the second argument.&lt;/p&gt;&lt;h3 id="all-arguments"&gt;All Arguments&lt;/h3&gt;&lt;p&gt;Bash has another special variable &lt;code&gt;$@&lt;/code&gt; that stores &lt;strong&gt;all arguments&lt;/strong&gt; in one.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;span class="c1"&gt;# hello&lt;/span&gt;hello &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hello &lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just the same as before.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;run it&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;source&lt;/span&gt; hellohello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the function will output all arguments that are passed into it since we are using the &lt;code&gt;$@&lt;/code&gt; variable.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;outputs&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;hello Waylon Walker&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr /&gt;&lt;h2 id="error-handling"&gt;Error Handling&lt;/h2&gt;&lt;p&gt;&lt;em&gt;Super powers in a single line&lt;/em&gt;&lt;/p&gt;&lt;p&gt;The easiest and most common way to handle an error in bash is through the useof the logical operators &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (and) and &lt;code&gt;||&lt;/code&gt; (or).&lt;/p&gt;&lt;p&gt;Here I have a concrete example from earlier today. I was creating a bash scriptto run a python script from cron. The bash script is there to make sure that wehave the python environment, activate it, and run. If it doesn't have it, itshould create it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# creates the conda environment&lt;/span&gt;create_env&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    conda create -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8    conda activate &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;    pip install -r requirements.txt&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;# checks if the conda environment exists&lt;/span&gt;env_exists&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;conda info --envs &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tail -n +3 &lt;span class="p"&gt;|&lt;/span&gt; grep -w &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &amp;gt; /dev/null&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="c1"&gt;# creates the conda environment if it doesn&amp;#39;t exist&lt;/span&gt;create_if &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;env_exists &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;environment exists&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; create_env &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;create_if my_env&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we look at the &lt;code&gt;create_if&lt;/code&gt; function, it will check if the environment existsif there is a passing status code &lt;code&gt;0&lt;/code&gt;, then it will run &lt;code&gt;echo "environmentexists"&lt;/code&gt; otherwise it will run &lt;code&gt;create_env $1&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; Inside of &lt;code&gt;env_exists&lt;/code&gt; grep will look for whole words if there is amatch it will give a status code 0 if it finds a match and not 0 if there is nomatch.&lt;/p&gt;&lt;hr /&gt;&lt;h2 id="main-script"&gt;main script&lt;/h2&gt;&lt;p&gt;_&lt;code&gt;if __name__ == " __main__"&lt;/code&gt;_&lt;/p&gt;&lt;p&gt;The last thing I want to discuss is making a bash script both runnable andsourceable. This makes it so that you can &lt;code&gt;source filename.sh&lt;/code&gt; and run eachfunction individually, or &lt;code&gt;bash filename.sh&lt;/code&gt; to run the script. This is asimilar concept to &lt;code&gt;if __name__ == " __main__"&lt;/code&gt; from python.&lt;/p&gt;&lt;p&gt;I did try this from bash and zsh with success. The following is an example thatwould pass all arguments into a main function.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[0]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;    main &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Extending the example above that created a python example if necessary we cancreate the env if necessary, activate the environment, and run the script.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;syntax&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[0]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;create_if my_envconda activate my_envpython script.py&lt;span class="k"&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using this syntax to run our "main" functions will allow us to both runs thescript or source the script to utilize the functions that we created.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/save-vim-macro'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Save Vim Macro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/resume-tips'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Resume Tips&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/reusable-bash</guid><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate></item><item><title>Find and Replace in the Terminal.</title><link>https://waylonwalker.com/find-replace</link><description>notes about find and replace techniques</description><content:encoded>&lt;h2 id="grepr"&gt;grepr&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;```&lt;/span&gt;bashgrepr&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;grep -iRl &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs sed -i &lt;span class="s2"&gt;&amp;quot;s/&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;/g&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="grepd"&gt;grepd&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;grepd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;iRl&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/^$1/d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="cocsearch"&gt;CocSearch&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;:CocSearch status: &lt;span class="s1"&gt;&amp;#39;false&amp;#39;&lt;/span&gt; -g *.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/fix-git-commit-author'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Fix git commit author&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/find-kedro-release'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;üì¢ Announcing find-kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/find-replace</guid><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate></item><item><title>Newsboat</title><link>https://waylonwalker.com/newsboat</link><description>Web browsers are a black hole of productivity.  I try to use them as little as I am going to give a terminal rss reader a try for a bit and see how that goes I </description><content:encoded>&lt;p&gt;Web browsers are a black hole of productivity.  I try to use them as little aspossible when it is time to focus.  I try to use &lt;code&gt;help&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, or &lt;code&gt;??&lt;/code&gt; withipython, or --help at the command line as much as possible.  What about thattime I am trying to see what my online friends are posting on their sites?  Iused to used google reader quite heavily before that was taken down.&lt;/p&gt;&lt;h2 id="newsboat"&gt;Newsboat&lt;/h2&gt;&lt;p&gt;I am going to give a terminal rss reader a try for a bit and see how that goesfor me.  I have really struggled to get into an rss reader since google readerdied.&lt;/p&gt;&lt;h2 id="installation"&gt;installation&lt;/h2&gt;&lt;p&gt;I installed with the reccomended snap for Ubuntu.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo snap install newsboat&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="adding-feeds"&gt;Adding feeds&lt;/h2&gt;&lt;p&gt;&lt;em&gt;super simple&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Running help for newsboat directed me towards their config files at the bottom.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;‚ùØ newsboat --helpnewsboat r2.22usage: /snap/newsboat/3849/usr/local/bin/newsboat &lt;span class="o"&gt;[&lt;/span&gt;-i &amp;lt;file&amp;gt;&lt;span class="p"&gt;|&lt;/span&gt;-e&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-u &amp;lt;urlfile&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-c &amp;lt;cachefile&amp;gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-x &amp;lt;command&amp;gt; ...&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;-h&lt;span class="o"&gt;]&lt;/span&gt;    -e, --export-to-opml        &lt;span class="nb"&gt;export&lt;/span&gt; OPML feed to stdout    -r, --refresh-on-start      refresh feeds on start    -i, --import-from-opml&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;   import OPML file    -u, --url-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;urlfile&amp;gt;    &lt;span class="nb"&gt;read&lt;/span&gt; RSS feed URLs from &amp;lt;urlfile&amp;gt;    -c, --cache-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;cachefile&amp;gt;    use &amp;lt;cachefile&amp;gt; as cache file    -C, --config-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;configfile&amp;gt;  &lt;span class="nb"&gt;read&lt;/span&gt; configuration from &amp;lt;configfile&amp;gt;    -X, --vacuum            compact the cache    -x, --execute&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;command&amp;gt;...  execute list of commands    -q, --quiet         quiet startup    -v, --version           get version information    -l, --log-level&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;loglevel&amp;gt;  write a log with a certain loglevel &lt;span class="o"&gt;(&lt;/span&gt;valid values: &lt;span class="m"&gt;1&lt;/span&gt; to &lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    -d, --log-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;logfile&amp;gt;    use &amp;lt;logfile&amp;gt; as output log file    -E, --export-to-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt; &lt;span class="nb"&gt;export&lt;/span&gt; list of &lt;span class="nb"&gt;read&lt;/span&gt; articles to &amp;lt;file&amp;gt;    -I, --import-from-file&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;file&amp;gt;   import list of &lt;span class="nb"&gt;read&lt;/span&gt; articles from &amp;lt;file&amp;gt;    -h, --help          this &lt;span class="nb"&gt;help&lt;/span&gt;        --cleanup           remove unreferenced items from cacheFiles:    - configuration:  /home/nic/snap/newsboat/3849/.newsboat/config    - feed URLs:      /home/nic/snap/newsboat/3849/.newsboat/urls    - cache:          /home/nic/snap/newsboat/3849/.newsboat/cache.dbSupport at &lt;span class="c1"&gt;#newsboat at https://freenode.net or on our mailing list https://groups.google.com/g/newsboat&lt;/span&gt;For more information, check out https://newsboat.org/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I just need to edit its urls file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvim ~/snap/newsboat/3849/.newsboat/urls&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The Urls file is just a list of urls to rss feeds.  Adding mine in allowed me to see all of my posts.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;https://waylonwalker.com/rss.xml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="config"&gt;Config&lt;/h2&gt;&lt;p&gt;I took most of my config from a &lt;a href="http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/"&gt;blogpost&lt;/a&gt;that I found by Evan Travers.  It set some sane defaults to the reading widthand vim keys.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# http://evantravers.com/articles/2020/04/15/reworking-my-rss-reading/&lt;/span&gt;&lt;span class="c1"&gt;# Hide feeds where all the items are read.&lt;/span&gt;show-read-feeds no&lt;span class="c1"&gt;# Make the text width readable&lt;/span&gt;text-width &lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="c1"&gt;# Use multiple threads to download all the news faster.&lt;/span&gt;reload-threads &lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="c1"&gt;# browser ~/bin/newsboat-browser.sh&lt;/span&gt;&lt;span class="c1"&gt;# browser &amp;quot;/usr/bin/brave-browser %u&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# unbind keys&lt;/span&gt;unbind-key ENTERunbind-key junbind-key kunbind-key Junbind-key Kunbind-key ^Dunbind-key ^Uunbind-key ounbind-key gunbind-key G&lt;span class="c1"&gt;# bind keys - vim style&lt;/span&gt;bind-key j downbind-key k upbind-key l openbind-key h quitbind-key ^D pagedownbind-key ^U pageupbind-key b toggle-source-viewbind-key U toggle-show-read-feedsbind-key u show-urlsbind-key g homebind-key G endbind-key b open-in-browser-and-mark-readbind-key B open-in-browserbind-key i sortbind-key I rev-sort&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="gui-browser"&gt;GUI Browser&lt;/h2&gt;&lt;p&gt;No matter how many different guides I tried I keedp getting &lt;code&gt;error code 127&lt;/code&gt;when trying to &lt;code&gt;open-in-browser&lt;/code&gt;.  Please let me know if you know how to fixthis. For now I am just going to roll with it.&lt;/p&gt;&lt;h2 id="heres-how-it-looks"&gt;Here's how it looks&lt;/h2&gt;&lt;p&gt;&lt;img alt="newsboat feed" src="https://images.waylonwalker.com/newsboat-feed-waylonwalker-com.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;browsing a feed in newsboat&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img alt="newsboat article" src="https://images.waylonwalker.com/newsboat-article.png" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;reading an article in newsboat&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/nvim-ides-are-slow'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;nvim conf 2021 | IDE's are slow | Waylon Walker&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/new-machine-tpio'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;New Machine for developing Tests with TestProject.io&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/newsboat</guid><pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate></item><item><title>If Tmux</title><link>https://waylonwalker.com/if-tmux</link><description>I do much of my work from tmux, I love it so much that I want to setup some Bash function to check if the shell is in a tmux session. I often open up vim to do </description><content:encoded>&lt;p&gt;I do much of my work from tmux, I love it so much that I want to setup somefunctionality that puts me in tmux even if I didn't ask for it.&lt;/p&gt;&lt;h2 id="bash-function"&gt;Bash Function&lt;/h2&gt;&lt;p&gt;Bash function to check if the shell is in a tmux session.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;in_tmux &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$TMUX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="k"&gt;else&lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;  &lt;span class="k"&gt;fi&lt;/span&gt;  &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-the-bash-function"&gt;Using the bash function&lt;/h2&gt;&lt;p&gt;I often open up vim to do some quite edits, but before I know it I have severalsplits open and I need access to another shell utility, but I forgot to startin tmux.  This function makes sure tht I start in tmux everytime.&lt;/p&gt;&lt;p&gt;Using &lt;code&gt;if_tmux&lt;/code&gt; to ensure vim is opened in tmux.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vim &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;   in_tmux &lt;span class="se"&gt;\&lt;/span&gt;    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; nvim &lt;span class="se"&gt;\&lt;/span&gt;    &lt;span class="o"&gt;||&lt;/span&gt; bash -c &lt;span class="s2"&gt;&amp;quot;\&lt;/span&gt;&lt;span class="s2"&gt;    tmux new-session -d;\&lt;/span&gt;&lt;span class="s2"&gt;    tmux send-keys nvim Space +GFiles C-m;\&lt;/span&gt;&lt;span class="s2"&gt;    tmux -2 attach-session -d;&lt;/span&gt;&lt;span class="s2"&gt;    &amp;quot;&lt;/span&gt;  &lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I am not quite sure if this is proper use of the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt;, let me know ifyou have a better way to do one thing if &lt;code&gt;in_tmux&lt;/code&gt; returns true and another ifit returns faslse.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/if_name_main'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What is if __name__ == "__main___", and how do I use it.&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/how-python-tools-config'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How python tools configure&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/if-tmux</guid><pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Quickly Edit Posts</title><link>https://waylonwalker.com/quickly-edit-posts</link><description>Recently I automated starting new posts with a python script.  Today I want to https://waylonwalker.com/automating-my-post-starter Check out this post about set</description><content:encoded>&lt;p&gt;Recently I automated starting new posts with a python script.  Today I want towork on the next part that is editing those posts quickly.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/automating-my-post-starter/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/automating-my-post-starter-og_250x140.png" alt="article cover for  Automating my Post Starter"/&gt;          &lt;p&gt;&lt;strong&gt; Automating my Post Starter&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Check out this post about setting up my posts with python üêç&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="enter-bash"&gt;Enter Bash&lt;/h2&gt;&lt;p&gt;For the process of editing a post I just need to open the file in vim quickly.I dont need much in the way of parsing and setting up the frontmatter.  I thinkthis is a simple job for a &lt;strong&gt;bash&lt;/strong&gt; script and fzf.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;change to the root of my blog&lt;/li&gt;&lt;li&gt;fuzzy find the post&lt;/li&gt;&lt;li&gt;open it with vim&lt;/li&gt;&lt;li&gt;change back to the directory I was in&lt;/li&gt;&lt;/ol&gt;&lt;h2 id="bash-function"&gt;bash function&lt;/h2&gt;&lt;p&gt;For this I am going to go with a bash function.  This is partly due to beingable to track where I was and get back.  Also the line with nvim will run fzfeverytime you source your &lt;code&gt;~/.alias&lt;/code&gt; file which is not what we want.&lt;/p&gt;&lt;p&gt;Lets setup the &lt;strong&gt;boilerplate&lt;/strong&gt;.  Its going to create a function called ep&lt;code&gt;"edit post"&lt;/code&gt;, track our current directory, create a sub function &lt;code&gt;_ep&lt;/code&gt;.  Thencall that function and cd back to where we were no matter if &lt;code&gt;_ep&lt;/code&gt; fails orsucceeds.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;boilerplate&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ep &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nv"&gt;_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;    _ep &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;        &lt;span class="c1"&gt;# open file here&lt;/span&gt;    &lt;span class="o"&gt;}&lt;/span&gt;    _ep &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/reusable-bash/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/reusable-bash-og_250x140.png" alt="article cover for  Creating Reusable Bash Scripts"/&gt;          &lt;p&gt;&lt;strong&gt; Creating Reusable Bash Scripts&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;check out this post for more information about writing reusable bash scripts.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="fzf"&gt;FZF&lt;/h2&gt;&lt;p&gt;Let's focus in on that &lt;code&gt;_ep&lt;/code&gt; function here that is going to do the bulk of thework to edit the post.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;cd to where I want to edit from&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/git/waylonwalkerv2/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;Next I need to find all markdown pages within my posts directory.  There isprobably a better way to filter with the &lt;code&gt;find&lt;/code&gt; command directly, but I am notworried about perf here and I knew how to do it without google.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;find all markdown&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find ~/git/waylonwalkerv2/src/pages/ &lt;span class="p"&gt;|&lt;/span&gt; grep .md$&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;p&gt;Now that we can list all potential posts, sending the selected post back toneovim is as easy as piping those files into fzf inside of a commandsubstitution that is called with neovim.&lt;/p&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;putting together the edit command&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;$EDITOR&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;find ~/git/waylonwalkerv2/src/pages/ &lt;span class="p"&gt;|&lt;/span&gt; grep .md$ &lt;span class="p"&gt;|&lt;/span&gt; fzf&lt;span class="k"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;h2 id="final-script"&gt;Final Script&lt;/h2&gt;&lt;p&gt;&lt;em&gt;&lt;small&gt;&lt;mark&gt;final ep function&lt;/mark&gt;&lt;/small&gt;&lt;/em&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ep &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;    &lt;span class="nv"&gt;_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;    _ep &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;        &lt;span class="nb"&gt;cd&lt;/span&gt; ~/git/waylonwalkerv2/        &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;find ~/git/waylonwalkerv2/src/pages/ &lt;span class="p"&gt;|&lt;/span&gt; grep .md$ &lt;span class="p"&gt;|&lt;/span&gt; fzf&lt;span class="k"&gt;)&lt;/span&gt;    &lt;span class="o"&gt;}&lt;/span&gt;    _ep &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$_dir&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/react-headroom'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;I just added react-headroom to my site&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/quickly-change-conda-env-with-fzf'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Quickly Change Conda Env With Fzf&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/quickly-edit-posts</guid><pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate></item><item><title>Vim Wsl Clipboard</title><link>https://waylonwalker.com/vim-wsl-clipboard</link><description>I wsl can access clip.exe.  You can do some cool things with it, such as Let pipe streams of text into clip.exe I recently made mine feel a bit more natural by </description><content:encoded>&lt;p&gt;I've long used neovim from within windows wsl, and for far too long, I wentwithout a proper way to get text out of it and into windows.&lt;/p&gt;&lt;h2 id="wsl-has-access-to-cmd-applications"&gt;wsl has access to cmd applications&lt;/h2&gt;&lt;p&gt;wsl can access clip.exe.  You can do some cool things with it, such ascat a file into the clipboard, sending output from a command to the clipboard,or set an autocmd group in vim to send yank to the windows clipboard.&lt;/p&gt;&lt;h2 id="using-clipexe"&gt;using clip.exe&lt;/h2&gt;&lt;p&gt;Let's say you want to send a teammate the tail of a log file over chat. You cantail the file into clip.exe.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tail -n &lt;span class="m"&gt;1&lt;/span&gt; info.log &lt;span class="p"&gt;|&lt;/span&gt; clip.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;pipe streams of text into clip.exe&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="make-it-a-bit-more-natural"&gt;make it a bit more natural&lt;/h2&gt;&lt;p&gt;I recently made mine feel a bit more natural by aliasing it to clip.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;clip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;clip.exe&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;pop this in your ~/.bashrc or ~/.zshrc&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="yanking-to-windows-clipboard-from-vim"&gt;yanking to windows clipboard from vim&lt;/h2&gt;&lt;p&gt;I use neovim as my daily text editor and its a pain to share code with ateammate over chat, stack overflow, into a gist, or whatever you need.  Thefollowing snippet has been quite useful and flawless for me.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uname -r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=~&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Microsoft&amp;quot;&lt;/span&gt;    augroup Yank        autocmd&lt;span class="p"&gt;!&lt;/span&gt;        autocmd TextYankPost * :&lt;span class="k"&gt;call&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/mnt/c/windows/system32/clip.exe &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;@&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;        augroup END&lt;span class="k"&gt;endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;add this to your ~/.vimrc or your ~/.config/nvim/init.vim&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="wsl2"&gt;Wsl2&lt;/h2&gt;&lt;p&gt;Based on some&lt;a href="https://github.com/WaylonWalker/waylonwalker.com/issues/4"&gt;feedback&lt;/a&gt;from &lt;a href="https://github.com/l-sannin"&gt;l-sannin&lt;/a&gt; the 'uname -r' command nowreturns &lt;code&gt;uname -r command returns '5.10.16.3-microsoft-standard-WSL2'&lt;/code&gt;So you will need an all lowercase microsoft.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uname -r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=~&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;microsoft&amp;quot;&lt;/span&gt;  augroup Yank  autocmd&lt;span class="p"&gt;!&lt;/span&gt;  autocmd TextYankPost * :&lt;span class="k"&gt;call&lt;/span&gt; system&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/mnt/c/windows/system32/clip.exe &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;@&amp;quot;&lt;span class="p"&gt;)&lt;/span&gt;  augroup END&lt;span class="k"&gt;endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/what-are-github-actions'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What Are GitHub Actions&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/vim-replace-visual-star'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Vim Replace Visual Star&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/vim-wsl-clipboard</guid><pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate></item><item><title>How to Install micromamba on linux (from the comamnd line only)</title><link>https://waylonwalker.com/install-micromamba</link><description>I really like using conda ( Mamba is a reimplementation of the conda package manager in C++. parallel downloading of repository data and package files using mul</description><content:encoded>&lt;p&gt;I really like using conda (&lt;code&gt;miniconda&lt;/code&gt;) as my python virtual environmentmanager of choice.  It's simple and it includes its own python interpreterusing the version that I specify at creation.&lt;/p&gt;&lt;h2 id="mamba"&gt;Mamba&lt;/h2&gt;&lt;p&gt;&lt;em&gt;from their &lt;a href="https://github.com/mamba-org/mamba"&gt;readme&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;hr /&gt;&lt;p&gt;Mamba is a reimplementation of the conda package manager in C++.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;parallel downloading of repository data and package files using multi-threading&lt;/li&gt;&lt;li&gt;libsolv for much faster dependency solving, a state of the art library used in the RPM package manager of Red Hat, Fedora and OpenSUSE&lt;/li&gt;&lt;li&gt;core parts of mamba are implemented in C++ for maximum efficiency&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;At the same time, mamba utilize the same command line parser, packageinstallation and deinstallation code and transaction verification routines asconda to stay as compatible as possible.&lt;/p&gt;&lt;hr /&gt;&lt;h2 id="installing-micromamba"&gt;Installing Micromamba&lt;/h2&gt;&lt;p&gt;Similar to miniconda micromamba can be installed with a few lines of bash&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget -qO- https://micromamba.snakepit.net/api/micromamba/linux-64/latest &lt;span class="p"&gt;|&lt;/span&gt; tar -xvj bin/micromamba./bin/micromamba shell init -s bash -p ~/micromamba&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="creating-environments-with-micromamba"&gt;Creating Environments with Micromamba&lt;/h2&gt;&lt;p&gt;Creating new environments with micromamba is pretty similar to using conda.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;micromamba create -n mamba-new &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.9 -y -c conda-forge&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="-c-is-required"&gt;-c is required&lt;/h2&gt;&lt;p&gt;I was unable to figure out how to configure channels to &lt;code&gt;micromamba&lt;/code&gt;, so Ineeded to add &lt;code&gt;-c conda-forge&lt;/code&gt; to my commands.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;                                           __          __  ______ ___  ____ _____ ___  / /_  ____ _         / / / / __ &lt;span class="sb"&gt;`&lt;/span&gt;__ &lt;span class="se"&gt;\/&lt;/span&gt; __ &lt;span class="sb"&gt;`&lt;/span&gt;/ __ &lt;span class="sb"&gt;`&lt;/span&gt;__ &lt;span class="se"&gt;\/&lt;/span&gt; __ &lt;span class="se"&gt;\/&lt;/span&gt; __ &lt;span class="sb"&gt;`&lt;/span&gt;/        / /_/ / / / / / / /_/ / / / / / / /_/ / /_/ /       / .___/_/ /_/ /_/&lt;span class="se"&gt;\_&lt;/span&gt;_,_/_/ /_/ /_/_.___/&lt;span class="se"&gt;\_&lt;/span&gt;_,_/      /_/WARNING No &lt;span class="s1"&gt;&amp;#39;channels&amp;#39;&lt;/span&gt; specifiedEncountered problems &lt;span class="k"&gt;while&lt;/span&gt; solving:  - nothing provides requested python &lt;span class="m"&gt;3&lt;/span&gt;.9**ERROR   Could not solve &lt;span class="k"&gt;for&lt;/span&gt; environment specs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;‚ö† micromamba thows this error when &lt;code&gt;-c conda-forge&lt;/code&gt; is missing from the create command.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="speed"&gt;Speed&lt;/h2&gt;&lt;p&gt;micromamba is built for speed.  I tried it out in a replit.com session, whileit felt quite snappy creating a new environment was still within a few secondsof conda on subsequent environment creations.  Their marketing says it shouldbe faster, but for what I use conda for I didn't see it.&lt;/p&gt;&lt;h2 id="pip"&gt;pip&lt;/h2&gt;&lt;p&gt;I used conda install years ago while on windows machines struggling to compilec-extensions and install certain troublesome packages, but I haven't used a&lt;code&gt;conda install&lt;/code&gt; in years, pip works just fine for my use.&lt;/p&gt;&lt;h2 id="useful-links"&gt;Useful Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;GitHub: &lt;a href="https://github.com/mamba-org/mamba"&gt;https://github.com/mamba-org/mamba&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Gitter: &lt;a href="https://gitter.im/QuantStack/Lobby"&gt;https://gitter.im/QuantStack/Lobby&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Documentation: &lt;a href="https://mamba.readthedocs.io/en/latest/"&gt;https://mamba.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/install-miniconda'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to Install miniconda on linux (from the command line only)&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/if_name_main'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;What is if __name__ == "__main___", and how do I use it.&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/install-micromamba</guid><pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate></item><item><title>Create a Virtual File Gallery with Symlinks</title><link>https://waylonwalker.com/symlink-gallery</link><description>Creating a directory that is a union of several directories can be achieved Here is how I am creating a virtual directory of all my projects that is a ‚ö† Notice </description><content:encoded>&lt;p&gt;Creating a directory that is a union of several directories can be achievedwith a few symlinks at the command line.&lt;/p&gt;&lt;h2 id="creating-a-virtual-file-gallery"&gt;Creating a Virtual File Gallery&lt;/h2&gt;&lt;p&gt;Here is how I am creating a virtual directory of all my projects that is acombination of both work and not-work projects.  I am creating symlinks forevery directory under &lt;code&gt;~/work&lt;/code&gt; and &lt;code&gt;~/git&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm -rf ~/projectsmkdir ~/projectsln -sf ~/work/* ~/projectsln -sf ~/git/* ~/projects&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;‚ö† Notice that first I am recreating the directory each time. This will ensurethat any project that is deleted from their actual directory is removed fromthe virtual gallery.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="updating-the-gallery"&gt;Updating the gallery&lt;/h2&gt;&lt;p&gt;Since links are always kept up to date without any extra work, all the data isstill in the same place it started.  But as new directories are added to anyproject directory they will not be automatically added to the virtual gallery.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;cron&lt;/li&gt;&lt;li&gt;bashrc/zshrc&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If you're concerned about system resources, you can add it to a cron job to runat a regular schedule that makes sense to you.  For me, I just popped those 4lines right in my &lt;code&gt;~/.zshrc&lt;/code&gt;.  It's a bit overkill, maybe bloat, but it runs inan impercieveable amount of time.&lt;/p&gt;&lt;h2 id="automatically-cd-to-the-real-directory"&gt;Automatically CD to the real directory&lt;/h2&gt;&lt;p&gt;When you cd into a &lt;code&gt;~/projects/my-proj&lt;/code&gt; directory, your &lt;code&gt;$PWD&lt;/code&gt; will still be&lt;code&gt;~/projects/my-proj&lt;/code&gt;.  I did not want this for my use case.  I wanted to followthe symlink to the real directory.  I found two options that worked for me.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias cd=&amp;#39;cd -P&amp;#39;set -o physical&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Add either of these to your &lt;code&gt;.bashrc&lt;/code&gt;/&lt;code&gt;.zshrc&lt;/code&gt; to follow symlinks to theactual directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/telegraph-release'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;I made a neovim plugin&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/supercharge-zsh-startup'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Supercharge Zsh Startup&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/symlink-gallery</guid><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate></item><item><title>Trim unused git branches</title><link>https://waylonwalker.com/trim-branches</link><description>prev Twitter deepdives next tmux zoom</description><content:encoded>&lt;h2 id="trim-branches-no-longer-on-origin"&gt;Trim branches no longer on origin&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote prune origin --dry-rungit remote prune origin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="find-branches-already-merged"&gt;Find branches already merged&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout main&lt;span class="c1"&gt;# list remote branches that have already been merged into main&lt;/span&gt;git branch -r --merged&lt;span class="c1"&gt;# list local branches that have already been merged into main&lt;/span&gt;git branch --merged&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/twitter-deepdives'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Twitter deepdives&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/tmux-zoom'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;tmux zoom&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/trim-branches</guid><pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate></item><item><title>JUT | Read Notebooks in the Terminal</title><link>https://waylonwalker.com/jut</link><description>Trying to read a .ipynb file without starting a jupyter server?  jut has you https://youtu.be/t8AvImnwor0 watch the video version of this post on  jut ! Take a </description><content:encoded>&lt;p&gt;Trying to read a .ipynb file without starting a jupyter server?  jut has youcovered.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/t8AvImnwor0"&gt;https://youtu.be/t8AvImnwor0&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;watch the video version of this post on &lt;a href="https://youtu.be/t8AvImnwor0"&gt;YouTube&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="install"&gt;install&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jut&lt;/code&gt; is packaged and available on pypi so installing is as easy as pip installing it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install jut&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="installing jut with pip" src="https://images.waylonwalker.com/jut-install.gif" /&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;! This is my first time including snippets of the video in the article like this, let me know what you think!&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="examples"&gt;examples&lt;/h2&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynbjut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --head &lt;span class="m"&gt;3&lt;/span&gt;jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --tail &lt;span class="m"&gt;2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running jut examples" src="https://images.waylonwalker.com/jut-command.gif" /&gt;&lt;/p&gt;&lt;h2 id="what-are-all-the-commands-available-for-jut"&gt;what are all the commands available for jut?&lt;/h2&gt;&lt;p&gt;Take a look at the help of the &lt;code&gt;jut&lt;/code&gt; cli to explore all the options that itoffers.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jut --help&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is some good information on the projects&lt;a href="https://github.com/kracekumar/jut"&gt;readme&lt;/a&gt; as well.&lt;/p&gt;&lt;p&gt;&lt;img alt="getting help with jut" src="https://images.waylonwalker.com/jut-help.gif" /&gt;&lt;/p&gt;&lt;h2 id="without-installing"&gt;without installing&lt;/h2&gt;&lt;p&gt;&lt;em&gt;using pipx&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Don't want jut cluttering up your venv, or want to save yourself from making anew one, &lt;a href="https://github.com/pypa/pipx"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt; can manage a separate virualenvironment for you.  This is one of the biggest selling points for me.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx run jut https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb --head &lt;span class="m"&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running jut with pipx" src="https://images.waylonwalker.com/jut-pipx.gif" /&gt;&lt;/p&gt;&lt;h2 id="nbconvert"&gt;nbconvert&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jut&lt;/code&gt; is the lightweight option that I think will fit the bill often for me,but it just doesn't always cut it.  Mostly if there are images in the notebookor  large output that is hard to read, its time to pull out the medium gunsthat sit between fulling running jupyter and &lt;code&gt;jut&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install nbconvert&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;nbconvert does not have its own cli, instead it sits under the jupyter command.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="converting-to-html"&gt;converting to html&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;Need to see images, go here!&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynbjupyter nbconvert flame_temperature.ipynb --to htmlpython -m http.server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note, nb convert does not work with a url, you will need to have the notebook locally.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;img alt="nbconvert to html to see images" src="https://images.waylonwalker.com/jut-nbconvert-html.gif" /&gt;&lt;/p&gt;&lt;h2 id="what-other-options-does-nbconvert-offer"&gt;what other options does nbconvert offer?&lt;/h2&gt;&lt;p&gt;&lt;code&gt;nbconvert&lt;/code&gt; also offers a standard help flag that you can access by passing inthe &lt;code&gt;--help&lt;/code&gt; flag&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter nbconvert --help&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="converting-to-markdown"&gt;converting to markdown&lt;/h3&gt;&lt;p&gt;&lt;code&gt;nbconvert&lt;/code&gt; also supports converting to many other formats, one option that isquite interesting for use in the terminal is markdown.  We could simply convertthe notebook to markdown and cat it out.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter nbconvert flame_temperature.ipynb --to maarkdowncat flameflame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="nbconvert to markdown and displaying in bat" src="https://images.waylonwalker.com/jut-nbconvert-markdown-bat.gif" /&gt;&lt;/p&gt;&lt;h3 id="viewing-markdown-with-glow"&gt;viewing markdown with glow&lt;/h3&gt;&lt;p&gt;Glow is a terminal markdown viewer that looks really good.  These days I use&lt;code&gt;bat&lt;/code&gt; as &lt;code&gt;cat&lt;/code&gt; so I don't get quite as much benefit from &lt;code&gt;glow&lt;/code&gt;, but it stilllooks pretty good.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;glow flameflame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="nbconvert to markdown and displaying in glow" src="https://images.waylonwalker.com/jut-nbconvert-markdown-glow.gif" /&gt;&lt;/p&gt;&lt;h3 id="viewing-markdown-as-slides-with-lookatme"&gt;viewing markdown as slides with lookatme&lt;/h3&gt;&lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;lookatme&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;Lookatme is my slideshow tool of choice.  Creating slides in markdown is such afantasic user experience,  It realy lets you go from outline to finished slidedeck fluidly.  Refactoring the whole thing is also so much easier than with guitools.  Once you have your idea fleshed out it does make the process of makingslides in powerpoint much easier if thats what you need.&lt;/p&gt;&lt;p&gt;On to nbconvert, without even changing the notebook we can look at the notebookas a slideshow in the terminal.  The only thing that it needs is some markdownheaders to start new slides from.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;lookatme flameflame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="nbconvert to markdown and displaying as slides with lookatme" src="https://images.waylonwalker.com/jut-nbconvert-markdown-lookatme.gif" /&gt;&lt;/p&gt;&lt;h3 id="viewing-markdown-with-rich"&gt;viewing markdown with rich&lt;/h3&gt;&lt;p&gt;Bringing this full circle, lets take a look at the converted markdown withrich.  Here you will notice a surprising similarity to what we saw with &lt;code&gt;jut&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install richpython -m rich.markdown flame_temperature.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Rich still cannot pull directly from a url or display markdown with out beinginstalled and managed by yourself.  Unlike how &lt;code&gt;jut&lt;/code&gt; can leverage &lt;a href="https://github.com/pypa/pipx"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt; tomanage the installation sandbox for you.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/kracekumar/jut"&gt;jut&lt;/a&gt; - View notebooks in the terminal&lt;/li&gt;&lt;li&gt;&lt;a href="https://nbconvert.readthedocs.io/en/latest/usage.html"&gt;nbconvert&lt;/a&gt; - convert notebooks to other formats&lt;/li&gt;&lt;li&gt;&lt;a href="https://cantera.org/examples/jupyter/thermo/flame_temperature.ipynb"&gt;flame-temperature notebook&lt;/a&gt; - The sample notebook I used&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/charmbracelet/glow"&gt;glow&lt;/a&gt; - Terminal Markdown viewer&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/d0c-s4vage/lookatme"&gt;lookatme&lt;/a&gt; - Terminal Markdown slideshow tool&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/pypa/pipx"&gt;pipx&lt;/a&gt; - Run python cli's without maintianing a virtual environment&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/willmcgugan/rich"&gt;rich&lt;/a&gt; - Beautiful python terminal formatter&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/kedro'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Kedro&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/just-use-pathlib'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Just Use Pathlib&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/jut</guid><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate></item><item><title>30 days dotfile ricing</title><link>https://waylonwalker.com/dotfile-rice-challenge-intro</link><description>https://youtu.be/Jq1Y48F I am challenging myself to 30 days of dotfile ricing.  I have been on linux This is primarily going to be focused on productivity, but </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/Jq1Y48F_rOU"&gt;https://youtu.be/Jq1Y48F_rOU&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I am challenging myself to 30 days of dotfile ricing.  I have been on linuxdesktop for a few months now and have a pretty good workflow going, I have thecoarse edits done to my workflow, but it has some rough edges that need sandeddown.  It's time to squash some of those little annoyances that still exist inmy setup.&lt;/p&gt;&lt;p&gt;This is primarily going to be focused on productivity, but may have  a fewthings to just look better.  This will comprise heavily of aliases, zsh, andnvim config.&lt;/p&gt;&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the &lt;a href="https://waylonwalker/rss/"&gt;rssfeed&lt;/a&gt; to stay up to date.&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/drawing-ascii-boxes'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;drawing ascii boxes&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/don-t-waste-your-time-learning-everything'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Don‚Äôt waste your time learning everything&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/dotfile-rice-challenge-intro</guid><pubDate>Mon, 29 Nov 2021 00:00:00 +0000</pubDate></item><item><title>Open files FAST from zsh | or bash if thats your thing</title><link>https://waylonwalker.com/fuzzy-edit-zsh</link><description>https://youtu.be/PQw I am often in a set of tmux splits flying back and forth, accidentally close my Make sure you check out the YouTube video to see all of my </description><content:encoded>&lt;p&gt;&lt;a href="https://youtu.be/PQw_is7rQSw"&gt;https://youtu.be/PQw_is7rQSw&lt;/a&gt;&lt;/p&gt;&lt;p&gt;I am often in a set of tmux splits flying back and forth, accidentally close myeditor, so when I come back to that split and hit my keybinds to edit files Ienter them into zsh rather than into nvim like I intended.  Today I am going tosand off that rough edge and get as similar behavior to nvim as I can with acouple of aliases.&lt;/p&gt;&lt;p&gt;Make sure you check out the YouTube video to see all of my improvements.&lt;/p&gt;&lt;h2 id="whats-an-alias"&gt;what's an alias&lt;/h2&gt;&lt;p&gt;If you have never heard of an alias before it's essentially a shortcut to agiven command.  You can pass additional flags to the underlying command andthey will get passed in.  Most of the time they are just shorter versions ofcommands that you run often or even like in this case a common muscle memorytypo that occurs for you.&lt;/p&gt;&lt;h2 id="my-new-aliass-for-fuzzy-editing-files-from-zsh"&gt;My new alias's for fuzzy editing files from zsh&lt;/h2&gt;&lt;p&gt;Here are the new aliases that I came up with to smooth out my workflow.  Thesegive me a similar feel to how these keys work in neovim but from zsh.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# fuzzy select file to edit&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nvim `fzf --preview=&amp;quot;bat --color always {}&amp;quot;`&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;# give me the same syntax as edit while in neovim&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; :e&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nvim &amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Follow the &lt;a href="https://youtube.com/waylonwalker"&gt;YouTube channel&lt;/a&gt; or the &lt;a href="https://waylonwalker/rss/"&gt;rssfeed&lt;/a&gt; to stay up to date.&lt;/p&gt;&lt;h2 id="related-links"&gt;Related links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLTRNG6WIHETAj0nR_WYAxxGjd7kXch5zj"&gt;playlist for my dotfiles challenge&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/gatsby-remark-embedder'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;gatsby-remark-embedder&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/four-github-actions-website'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Four github actions for your website&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/fuzzy-edit-zsh</guid><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Code Review from the comfort of vim | Diffurcate</title><link>https://waylonwalker.com/diffurcate</link><description>I often review Pull requests from the browser as it just makes it so easy to see https://youtu.be/5NKaZFavM0E This all stems from the great plugin by First to q</description><content:encoded>&lt;p&gt;I often review Pull requests from the browser as it just makes it so easy to seethe diffs and navigate through them, but there comes a time when the diffs getreally big and hard to follow.  That's when its time to bring in the comforts ofvim.&lt;/p&gt;&lt;p&gt;&lt;a href="https://youtu.be/5NKaZFavM0E"&gt;https://youtu.be/5NKaZFavM0E&lt;/a&gt;&lt;/p&gt;&lt;h2 id="plugins-needed"&gt;Plugins needed&lt;/h2&gt;&lt;p&gt;This all stems from the great plugin by&lt;a href="https://github.com/AndrewRadev"&gt;AndrewRadev&lt;/a&gt;.  It breaks a downinto a project.  So rather than poping into a pager from git diff,you can pipe to diffurcate and it will setup a project in a tmpdirectory for you and you  can browse this project just like anyother except it's just a diff.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Plug &lt;span class="s1"&gt;&amp;#39;AndrewRadev/diffurcate.vim&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="my-aliases"&gt;My aliases&lt;/h2&gt;&lt;p&gt;First to quickly checkout PR's from azure devops I have setup an alias to fuzzyselect a pr and let the &lt;code&gt;az&lt;/code&gt; command do the checkout.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;azcheckout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;az repos pr checkout --id $(az repos pr list --output table | tail -n -2 | fzf | cut -d &amp;quot; &amp;quot; -f1)&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next I have a few aliases setup for checking diffs.  The first one checks whatis staged vs the current branch, the others check the current branch vs main ormaster.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias diffstaged=&amp;quot;git diff --staged | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;&amp;quot;alias diffmain=&amp;quot;git diff main.. | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;&amp;quot;alias diffmaster=&amp;quot;git diff master.. | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;&amp;quot;diffcommit() {    git diff $1 | nvim - +Diffurcate &amp;#39;+Telescope find_files&amp;#39;}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/AndrewRadev/diffurcate.vim"&gt;diffurcte.vim&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/digital-gardening-stream-6-6-2021'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;üå± Digital Gardening | gif to Mp4 | Stream replay June 4, 2021&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/devto-comments-from-url'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How to get Dev Comments from an article Url&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/diffurcate</guid><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Serve html from your command line</title><link>https://waylonwalker.com/til/serve-html-command-line</link><description>When I first moved to vim from and ide like vscode or sublime text one of my You will need a way to run another process alongside vim, here are a couple use bac</description><content:encoded>&lt;p&gt;When I first moved to vim from and ide like vscode or sublime text one of myvery first issues was trying to preview my website at &lt;code&gt;localhost:8000&lt;/code&gt;.  Therehad always just been a button there to do it in all of my other editors, notvim.  There are not many buttons for anything in vim.  While there is probably aplugin that can run a webserver for me in vim, it's not necessary, we just needthe command line we are already in.&lt;/p&gt;&lt;h2 id="running-a-separate-process"&gt;running a separate process&lt;/h2&gt;&lt;p&gt;You will need a way to run another process alongside vim, here are a coupleideas to get you going that are not the focus here.style&lt;/p&gt;&lt;ul&gt;&lt;li&gt;use background jobs&lt;/li&gt;&lt;li&gt;c-z to send a job to the background&lt;/li&gt;&lt;li&gt;fg to bring it back&lt;/li&gt;&lt;li&gt;use a second terminal&lt;/li&gt;&lt;li&gt;use a second tab&lt;/li&gt;&lt;li&gt;use tmux and run it in a separate split/window&lt;/li&gt;&lt;li&gt;use an embeded nvim terminal&lt;/li&gt;&lt;/ul&gt;&lt;h2 id="running-a-development-webserver-from-the-command-line"&gt;running a development webserver from the command line&lt;/h2&gt;&lt;p&gt;Python already exists on most linux systems by default, and most are now onpython3.  If you are on windows typing python will take you directly to thewindows store to install it, or you can also use wsl.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# python3&lt;/span&gt;python -m http.server&lt;span class="c1"&gt;# running on port 5000&lt;/span&gt;python -m http.server --directory markout &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# for the low chance you are on python2python -m SimpleHTTPServer# running on port 5000python -m SimpleHTTPServer 5000python -m SimpleHTTPServer --directory markout 5000&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running a python static webserver from the command line" src="https://images.waylonwalker.com/python-m-http-server.png" /&gt;&lt;/p&gt;&lt;h2 id="using-nodejs"&gt;using nodejs&lt;/h2&gt;&lt;p&gt;If you are a web developer it's likely that you need nodejs and npm on yoursystem anyways and may want to use one of the servers from npm.  I'll admit withthese not being tied to the long term support of a language they are much morefeature rich with things like compression out of the box.  In my opinion theyare nice things that you would want out of a production server, but may notbe necessary for development.&lt;/p&gt;&lt;h3 id="installing-npx"&gt;installing npx&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# if you don&amp;#39;t alredy have npx&lt;/span&gt;npm i -g npx&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;npx is a handy tool that lets you run command line applications straight fromnpm without installing them.  It pulls the latest version every time you wantto run, then executes it without it being installed.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id="running-the-http-server-with-npx"&gt;running the http-server with npx&lt;/h3&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;npx http-server&lt;span class="c1"&gt;# running on port 5000&lt;/span&gt;npx http-server -p &lt;span class="m"&gt;5000&lt;/span&gt;npx http-server markout -p &lt;span class="m"&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="running a nodejs static webserver from the command line" src="https://images.waylonwalker.com/npx-http-server.png" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/simple-samba'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Simple Samba Share Setup&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/review-pull-requests-with-git-worktrees'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Review Pull Requests with git worktrees&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/serve-html-command-line</guid><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate></item><item><title>Installing Homebrew on Linux</title><link>https://waylonwalker.com/til/installing-homebrew-linux</link><description>Installing brew on linux proved quite easy and got pyenv running for me I had never used homebrew before, honestly I thought it was a mac only That was it, now </description><content:encoded>&lt;p&gt;Installing brew on linux proved quite easy and got pyenv running for mewithin 4 commands.&lt;/p&gt;&lt;p&gt;I had never used homebrew before, honestly I thought it was a mac onlything for years.  Today I wanted to try out pyenv, and the reccommendedway to install was using homebrew.  I am not yet sure if I want eitherin my normal workflow, so for now I am just going to pop open a newterminal and install homebrew and see how it goes.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/bin/bash -c &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eval &amp;quot;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; /home/walkers/.zprofile&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;/home/linuxbrew/.linuxbrew/bin/brew shellenv&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That was it, now homebrew is working. Starting a new shell and runningthe command to install pyenv worked.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew install pyenv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://brew.sh/"&gt;homebrew&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/installing-pipx-on-ubuntu'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing Pipx on Ubuntu&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/install-yq'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Install yq | A light weight yaml parser cli&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/installing-homebrew-linux</guid><pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate></item><item><title>My first impressions with pyenv</title><link>https://waylonwalker.com/til/pyenv-first-impressions</link><description>pyenv provides an easy way to install almost any version of python from I needed to install an older version of python on ubuntu I Based on the Readme it looked</description><content:encoded>&lt;p&gt;pyenv provides an easy way to install almost any version of python froma large list of distributions. I have simply been using the version ofpython from the os package manager for awhile, but recently I bumped myhome system to Ubuntu 21.10 impish, and it is only 3.9+ while thelibraries I needed were only compatable with up to 3.8.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I needed to install an older version of python on ubuntu&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I've been wanting to check out pyenv for awhile now, but without aburning need to do so.&lt;/p&gt;&lt;h2 id="installing"&gt;installing&lt;/h2&gt;&lt;p&gt;Based on the Readme it looked like I needed to install using homebrew,so thisis what I did, but I later realized that there is a pyenv-installer repo thatmay have saved me this need.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/til/installing-homebrew-linux/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/til/installing-homebrew-linux-og_250x140.png" alt="article cover for  Installing Homebrew on Linux"/&gt;          &lt;p&gt;&lt;strong&gt; Installing Homebrew on Linux&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;h2 id="list-out-install-candidates"&gt;List out install candidates&lt;/h2&gt;&lt;p&gt;You can list all of the available versions to install with&lt;code&gt;pyenv install --list&lt;/code&gt;.  It does reccomend updating pyenv if you suspectthat it is missing one.  At the time of writing this comes out to 532different versions!&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install --list&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lets-install-the-latest-38-patch"&gt;Let's install the latest 3.8 patch&lt;/h2&gt;&lt;p&gt;Installing a version is as easy as &lt;code&gt;pyenv install 3.8.12&lt;/code&gt;.  This willinstall it, but not make it active anywhere.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv install 3.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="lets-use-python-3812-while-in-this-directory"&gt;let's use python 3.8.12 while in this directory&lt;/h2&gt;&lt;p&gt;Running &lt;code&gt;pyenv local&lt;/code&gt; will set the version of python that we wish to usewhile in this directory and any directory underneath of it while usingthe pyenv command.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;local&lt;/span&gt; python3.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="python-version-file"&gt;.python-version file&lt;/h2&gt;&lt;p&gt;This creates a &lt;code&gt;.python-version&lt;/code&gt; files in the directory I ran it in,that contains simply the version number.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="m"&gt;3&lt;/span&gt;.8.12&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="using-with-pipx"&gt;using with pipx&lt;/h2&gt;&lt;p&gt;I immediately ran into the same issue I was having before when trying torun pipx, as pipx was running my system python.  I had to install pipxin the python3.8 environment to get it to use it.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv &lt;span class="nb"&gt;exec&lt;/span&gt; pip install pipxpyenv &lt;span class="nb"&gt;exec&lt;/span&gt; pipx run kedro new&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="python-is-still-the-system-python"&gt;python is still the system python&lt;/h2&gt;&lt;p&gt;When I open a terminal and call &lt;code&gt;python&lt;/code&gt; its still my system python thatI installed and set with update-alternatives.  I am not sure if this isexpected or based on how I had installed the system python previously,but it's what happened on my system.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;update-alternatives --query pythonName: pythonLink: /home/walkers/.local/bin/pythonStatus: autoBest: /usr/bin/python3Value: /usr/bin/python3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="making-a-virtual-environment"&gt;making a virtual environment&lt;/h2&gt;&lt;p&gt;To make a virtual environment, I simply ran &lt;code&gt;pyenv exec python&lt;/code&gt; in placeof where I would normally run python and it worked for me.  There is awhole package to get pyenv and venv to play nicely together, so Isuspect that there is more to it, but this worked well for me and I washappy.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pyenv exec python -m venv .venv --prompt $(basename $PWD)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now when my virtual environment is active it points to the python inthat virtual environment, and is the version of python that was used tocreate the environment.&lt;/p&gt;&lt;h2 id="links"&gt;Links&lt;/h2&gt;&lt;p&gt;&lt;a href="https://github.com/pyenv/pyenv#installation"&gt;https://github.com/pyenv/pyenv#installation&lt;/a&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/pyenv-no-sqlite3'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;pyenv no module named '_sqlite3'&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/practice-kedro'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Practice making pipelines with kedro&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/pyenv-first-impressions</guid><pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate></item><item><title>List all the files containing a phrase</title><link>https://waylonwalker.com/til/list-all-files-containing-phrase</link><description>One of the most useful skills you can acquire to make you faster at I Passing the flag  Giving </description><content:encoded>&lt;p&gt;One of the most useful skills you can acquire to make you faster atalmost any job that uses a computer is getting good at finding text inyour current working diretory and identifying the files that its in.  Ioften use the silver searcher &lt;code&gt;ag&lt;/code&gt; or ripgrep &lt;code&gt;rg&lt;/code&gt; to find files inlarge directories quickly.  Both have a sane set of defaults that ignorehidden and gitignored files, but getting them to list only the filenamesand not the matched was not trivial to me.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;I've searched throught he help/man pages many times looking for theseflags and they always seem to evade me.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="ag"&gt;ag&lt;/h2&gt;&lt;p&gt;Passing the flag &lt;code&gt;-l&lt;/code&gt; to ag will get it to list only the filepath, andnot the match. Here I gave it a &lt;code&gt;--md&lt;/code&gt; as well to only return markdownfiletypes.  &lt;code&gt;ag&lt;/code&gt; supports a number of filetypes in a very similar way.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag nvim --md -l&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rg"&gt;rg&lt;/h2&gt;&lt;p&gt;Giving &lt;code&gt;rg&lt;/code&gt; the &lt;code&gt;--files-with-matches&lt;/code&gt; flag will yield you a similar setof results, giving only the filepaths themselves and not the matchstatement.  Also passing in the &lt;code&gt;-g "*.md"&lt;/code&gt; will similarly yield onlyresults from markdown files.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rg --files-with-matches you -g &lt;span class="s2"&gt;&amp;quot;*.md&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/lookatme-slides'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;How I Present Markdown Slides from the Terminal&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-unzip-directory'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Unzip minecraft mods to their directory from the command line&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/list-all-files-containing-phrase</guid><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate></item><item><title>copier template variables</title><link>https://waylonwalker.com/til/copier-template-variables</link><description>I By default copier uses double square brackets for its variables. note Before running copier we need to tell copier what variables to ask for, I prefer to inst</description><content:encoded>&lt;p&gt;I've been looking for a templating tool for awhile that works well withsingle files.  My go to templating tool &lt;code&gt;cookiecutter&lt;/code&gt; does not work forsingle files, it needs to put files into a directory underneath of it.&lt;/p&gt;&lt;h2 id="template-variables"&gt;template variables&lt;/h2&gt;&lt;p&gt;By default copier uses double square brackets for its variables.variables in files, directory_names, or file_names will be substitutedfor their value once you render them.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# hello-py/hello.py.tmpl&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello-[[name]]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;note! by default copier will not inject variables into your[[template-strings]] unless you use a .tmpl suffix.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Before running copier we need to tell copier what variables to ask for,we do this with a copier.yml file.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# copier.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;my_name&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;str&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;help&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;What is your name&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="installing-copier"&gt;installing copier&lt;/h2&gt;&lt;p&gt;I prefer to install cli tools that I need globally with pipx, thisalways gives me access to the tool without worrying about dependencyconflicts, bloating my system site-packages, or managing a separatevirtual environment for it myself.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pipx install copier&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="running-copier"&gt;running copier&lt;/h2&gt;&lt;p&gt;When running &lt;code&gt;copier copy&lt;/code&gt; we pass in the directory of the template, andthe directory that we want to render the template into.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;copier copy hello-py .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;note! the directory '.' is often referred to in cli programs torepresent the current working directory that we are calling thecommand from.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="results"&gt;results&lt;/h2&gt;&lt;p&gt;The resulting files will have your variables injected into them if you havesetup your template and copier.yml up correctly.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello-you&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/copier_endops'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Changing copier template strings (_endops)&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/copier-tasks'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Copier Tasks | Python templating post run task&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/copier-template-variables</guid><pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Changing copier template strings (_endops)</title><link>https://waylonwalker.com/til/copier_endops</link><description>I was completely stuck for awhile.  copier was not replacing my template !</description><content:encoded>&lt;p&gt;I was completely stuck for awhile.  copier was not replacing my templatevariables.  I found out that adding all these &lt;code&gt;_endops&lt;/code&gt; fixed it.  NowIt will support all of these types of variable wrappers&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# copier.yml&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;_templates_suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;.jinja&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;_envops&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;block_end_string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;block_start_string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{%&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;comment_end_string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;#}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;comment_start_string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{#&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;keep_trailing_newline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;variable_end_string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;}}&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;variable_start_string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;!RTFM: Later I read the docs and realized that copier defaults to using &lt;code&gt;[[&lt;/code&gt;and &lt;code&gt;]]&lt;/code&gt; for its templates unlike other tools like cookiecutter.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/dedupe-your-shell-paths'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Dedupe your shell paths&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/copier-template-variables'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;copier template variables&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/copier_endops</guid><pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Tmux Pop size</title><link>https://waylonwalker.com/til/tmux-pop-size</link><description>tmux popups can be sized how you like based on the % width of the</description><content:encoded>&lt;p&gt;tmux popups can be sized how you like based on the % width of theterminal on creation by using the flags (h, w, x, y) for height, width,and position.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# normal popup&lt;/span&gt;tmux popup figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# fullscreen popup&lt;/span&gt;tmux popup -h &lt;span class="m"&gt;100&lt;/span&gt;% -w &lt;span class="m"&gt;100&lt;/span&gt;% figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# 75% centered popup&lt;/span&gt;tmux popup -h &lt;span class="m"&gt;100&lt;/span&gt;% -w &lt;span class="m"&gt;75&lt;/span&gt;% figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;span class="c1"&gt;# 75% popup on left side&lt;/span&gt;tmux popup -h &lt;span class="m"&gt;100&lt;/span&gt;% -w &lt;span class="m"&gt;75&lt;/span&gt;% -x &lt;span class="m"&gt;0&lt;/span&gt;% figlet &lt;span class="s2"&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img alt="example video running these commands" src="https://images.waylonwalker.com/tmux-popup-position.gif" /&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ubuntu-terminal-clipboard'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Tmux and Vim Clipboard for Ubuntu&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/tmux-copy-mode-binding'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A better copy-mode bind for Tmux&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/tmux-pop-size</guid><pubDate>Wed, 05 Jan 2022 00:00:00 +0000</pubDate></item><item><title>2 minutes to stow</title><link>https://waylonwalker.com/til/2-minutes-to-stow</link><description>Stow is an incredible way to manage your dotfiles.  It works by managing When using stow its easiest to keep your dotfiles directory (you may name it Then each </description><content:encoded>&lt;p&gt;Stow is an incredible way to manage your dotfiles.  It works by managingsymlinks between your dotfiles directory and the rest of the system.  You canthen make your dotfiles directory a git repo and have it version controlled.  Inmy honest opinion, when I was trying to get started the docs straight into deepdetail of things I frankly don't really care about and jumped right over how touse it.&lt;/p&gt;&lt;p&gt;When using stow its easiest to keep your dotfiles directory (you may name itwhat you want) in your home directory, with application directories inside ofit.&lt;/p&gt;&lt;p&gt;Then each application directory should reflet the same diretory structure as youwant in your home directory.&lt;/p&gt;&lt;h2 id="zsh"&gt;zsh&lt;/h2&gt;&lt;p&gt;Here is a simple example with my zshrc.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir ~/dotfiles&lt;span class="nb"&gt;cd&lt;/span&gt; ~/dotfilesmkdir zshmv ~/.zshrc zshstow --simulate zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can pass in the --simulate if you wish, it will tell you if there are goingto be any more errors or not, but it wont give much more than that.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;WARNING: in simulation mode so not modifying filesystem.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once your ready you can stow your zsh application.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;stow zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="nvim"&gt;nvim&lt;/h2&gt;&lt;p&gt;A slightly more complicated example is neovim since its diretory structure doesnot put configuration files directly in your home directory, but rather at adeeper level.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir ~/dotfiles/nvim/.config/nvim/ -p&lt;span class="nb"&gt;cd&lt;/span&gt; ~/dotfilesmv ~/.config/nvim/ ~/dotfiles/nvim/.config/nvim/stow zsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;!notice how the nvim directory inside of dotfiles is structured like it wouldbe in your $HOME directory.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ag-ahead'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;ag silver searcher look ahead and look behind&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/testproject-io-py-actions'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Integration testing with Python, TestProject.io, and GitHub Actions&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/2-minutes-to-stow</guid><pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate></item><item><title>fuzzy wallpaper with fzf</title><link>https://waylonwalker.com/til/fzf-wallpaper</link><description>I really appreciate that in linux anything can be scripted, including I set my default wallpaper with  Leaning in on feh, we can use fzf to pick a wallpaper fro</description><content:encoded>&lt;p&gt;I really appreciate that in linux anything can be scripted, includingsetting the wallpaper.  So everytime I disconnect a monitor I can justrerun my script and fix my wallpaper without digging deep into the uiand fussing through a bunch of settings.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;feh --bg-scale ~/.config/awesome/wallpaper/my_wallpaper.png&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I set my default wallpaper with &lt;code&gt;feh&lt;/code&gt; using the command above.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Leaning in on feh, we can use fzf to pick a wallpaper from a directoryfull of wallpapers with very few keystrokes.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;alias wallpaper=&amp;#39;ls ~/.config/awesome/wallpaper | fzf --preview=&amp;quot;feh --bg-scale ~/.config/awesome/wallpaper/{}&amp;quot; | xargs -I {} feh --bg-scale ~/.config/awesome/wallpaper/{}&amp;#39;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;I have mine alias'd to &lt;code&gt;wallpaper&lt;/code&gt; so that I can quickly run it frommy terminal.&lt;/p&gt;&lt;/blockquote&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/git-checkout-worktree'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Git Worktrees are not so Scary&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/fugitive-commit-verbose'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;fugitive verbose commit&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/fzf-wallpaper</guid><pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate></item><item><title>Neovim Config for Git</title><link>https://waylonwalker.com/til/neovim-config-for-git</link><description>Creating a minimal config specifically for git commits has made running The other thing that is engrained into my muscle memory is  Here is the config that has </description><content:encoded>&lt;p&gt;Creating a minimal config specifically for git commits has made running&lt;code&gt;git commit&lt;/code&gt; much more pleasant.  It starts up Much faster, and has allof the parts of my config that I use while making a git commit.  The onething that I often use is autocomplete, for things coming from elsewherein the tmux session.  For this &lt;code&gt;cmpe-tmux&lt;/code&gt; specifically is superhelpful.&lt;/p&gt;&lt;p&gt;The other thing that is engrained into my muscle memory is &lt;code&gt;jj&lt;/code&gt;for escape.  For that I went agead and added my &lt;code&gt;settings&lt;/code&gt; and &lt;code&gt;keymap&lt;/code&gt;with no noticable performance hit.&lt;/p&gt;&lt;p&gt;Here is the config that has taken&lt;/p&gt;&lt;p&gt;~/.config/nvim/init-git.vim&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/settings.&lt;span class="k"&gt;vim&lt;/span&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/&lt;span class="nb"&gt;keymap&lt;/span&gt;.&lt;span class="k"&gt;vim&lt;/span&gt;source &lt;span class="p"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/.config/&lt;/span&gt;nvim/git&lt;span class="p"&gt;-&lt;/span&gt;plugins.&lt;span class="k"&gt;vim&lt;/span&gt;&lt;span class="k"&gt;lua&lt;/span&gt; require&lt;span class="s1"&gt;&amp;#39;waylonwalker.cmp&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;~/.config/nvim/git-plugins.vim&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;call&lt;/span&gt; plug#begin&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;~/.local/share/nvim/plugged&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c"&gt;&amp;quot; cmp&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/nvim-cmp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-nvim-lsp&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-buffer&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-path&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;hrsh7th/cmp-calc&amp;#39;&lt;/span&gt;Plug &lt;span class="s1"&gt;&amp;#39;andersevenrud/compe-tmux&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; { &lt;span class="s1"&gt;&amp;#39;branch&amp;#39;&lt;/span&gt;: &lt;span class="s1"&gt;&amp;#39;cmp&amp;#39;&lt;/span&gt; }&lt;span class="k"&gt;call&lt;/span&gt; plug#&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;~/.gitconfig&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[core]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;editor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;nvim&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="n"&gt;nvim&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="n"&gt;init-git&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/nix-install-java8'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;nix rescues modded minecraft night&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/modded-minecraft-in-docker'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Modded Minecraft in Docker&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/neovim-config-for-git</guid><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate></item><item><title>ag silver searcher look ahead and look behind</title><link>https://waylonwalker.com/til/ag-ahead</link><description>A super useful tool when doing PR It</description><content:encoded>&lt;p&gt;A super useful tool when doing PR's or checking your own work during a bigrefactor is the silver searcher.  Its a super fast command line based searchingtool. You just run &lt;code&gt;ag "&amp;lt;search term&amp;gt;"&lt;/code&gt; to search for your search term.  Thiswill list out every line of every file in any directory under your currentworking directory that contains a match.&lt;/p&gt;&lt;h2 id="aheadbehind"&gt;Ahead/Behind&lt;/h2&gt;&lt;p&gt;It's often useful to need some extra context around the change.  I recentlyreviewed a bunch of PR's that moved schema from &lt;code&gt;save_args&lt;/code&gt; to the root of thedataset in all yaml configs.  To ensure they all made it to the top levelDataSet configuraion, and not underneath save_args.  I can do a search for allthe schemas, and ensure that none of them are under &lt;code&gt;save_args&lt;/code&gt; anymore.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ag &lt;span class="s2"&gt;&amp;quot;schema: &amp;quot;&lt;/span&gt; -A &lt;span class="m"&gt;12&lt;/span&gt; -B &lt;span class="m"&gt;12&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/ansible_install_fonts'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing system nerd-fonts with ansible&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/2-minutes-to-stow'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;2 minutes to stow&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/ag-ahead</guid><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate></item><item><title>View AWS event bridge rules with visidata</title><link>https://waylonwalker.com/til/aws-eventbridge-visidata</link><description>Reading eventbridge rules from the command line can be a total drag, pipe it I just love when I start thinking through how to parse a bunch of json at the</description><content:encoded>&lt;p&gt;Reading eventbridge rules from the command line can be a total drag, pipe itinto visidata to make it a breeze.&lt;/p&gt;&lt;p&gt;I just love when I start thinking through how to parse a bunch of json at thecommand line, maybe building out my own custom cli, then the solution is assimple as piping it into visidata.  Which is a fantastic tui application thathad a ton of vim-like keybindings and data features.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;awsevents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;aws&lt;/span&gt; &lt;span class="n"&gt;events&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rules&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;visidata&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/bash-mktemp'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Bash mktemp&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/ansible_install_if_not_callable'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Installing packages with ansible only if they do not exist&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/aws-eventbridge-visidata</guid><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate></item><item><title>Bash mktemp</title><link>https://waylonwalker.com/til/bash-mktemp</link><description>There is GNU coreutils command called  Here are some examples of making temp directories in different places, my Here is a sample script that shows how to captu</description><content:encoded>&lt;p&gt;There is GNU coreutils command called &lt;code&gt;mktemp&lt;/code&gt; that is super handy in shellscripts to make temporary landing spots for files so that they never clash withanother instance, and will automatically get cleaned up when you restart, orwhenever &lt;code&gt;/tmp&lt;/code&gt; gets wiped.  I'm not sure when that is, but I don't expect itto be long.&lt;/p&gt;&lt;h2 id="making-temp-directories"&gt;Making temp directories&lt;/h2&gt;&lt;p&gt;Here are some examples of making temp directories in different places, myfavorite is &lt;code&gt;mktemp -dt mytemp-XXXXXX&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# makes a temporary directory in /tmp/ with the defaul template tmp.XXXXXXXXXX&lt;/span&gt;mktemp&lt;span class="c1"&gt;# makes a temporary directory in your current directory&lt;/span&gt;mktemp --directory mytemp-XXXXXX&lt;span class="c1"&gt;# shorter version&lt;/span&gt;mktemp -d mytemp-XXXXXX&lt;span class="c1"&gt;# same thing, but makes a file&lt;/span&gt;mktemp mytemp-XXXXXX&lt;span class="c1"&gt;# makes a temporary directory in your /tmp/ directory (or what ever you have configured as your TMPDIR)&lt;/span&gt;mktemp --directory --tmpdir mytemp-XXXXXX&lt;span class="c1"&gt;# shorter version&lt;/span&gt;mktemp -dt mytemp-XXXXXX&lt;span class="c1"&gt;# same thing, but makes a file&lt;/span&gt;mktemp --tmpdir mytemp-XXXXXX&lt;span class="c1"&gt;# shorter version&lt;/span&gt;mktemp -t mytemp-XXXXXX&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="use-case"&gt;Use Case&lt;/h2&gt;&lt;p&gt;Here is a sample script that shows how to capture the tempdir as a variable andreuse it.  Here is an example of curling my bootstrap file into a tempdirectory and running it from that directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;mktemp -dt bootstrap-XXXXXX&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;$tmp&lt;/span&gt;curl https://raw.githubusercontent.com/WaylonWalker/devtainer/main/bootstrap &amp;gt; bootstrapbash bootstrap&lt;span class="nb"&gt;popd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="templates"&gt;Templates&lt;/h2&gt;&lt;p&gt;You must have at least 3 trailing X's that mktemp will replace with randomcharacters.  I played with it for a bit, it kinda allows for some trailingcharacters, and will not fill groups of X's earlier in your template, only thelast consecutive string.&lt;/p&gt;&lt;p&gt;My randomm samples I played with.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;waylonwalker.com on ÓÇ† main &lt;span class="o"&gt;[&lt;/span&gt;!?&lt;span class="o"&gt;]&lt;/span&gt; Óàµ v3.9.7 &lt;span class="o"&gt;(&lt;/span&gt;waylonwalker.com&lt;span class="o"&gt;)&lt;/span&gt; took 2m24s‚ùØ mktemp myXtemp-XaXbXXXX -dt/tmp/myXtemp-XaXbx9hnwaylonwalker.com on ÓÇ† main &lt;span class="o"&gt;[&lt;/span&gt;!?&lt;span class="o"&gt;]&lt;/span&gt; Óàµ v3.9.7 &lt;span class="o"&gt;(&lt;/span&gt;waylonwalker.com&lt;span class="o"&gt;)&lt;/span&gt;‚ùØ mktemp myXtemp-XaXbXXXXs -dt/tmp/myXtemp-XaXb2tpGswaylonwalker.com on ÓÇ† main &lt;span class="o"&gt;[&lt;/span&gt;!?&lt;span class="o"&gt;]&lt;/span&gt; Óàµ v3.9.7 &lt;span class="o"&gt;(&lt;/span&gt;waylonwalker.com&lt;span class="o"&gt;)&lt;/span&gt;‚ùØ mktemp myXtemp-XaXbXXcXXs -dtmktemp: too few X&lt;span class="s1"&gt;&amp;#39;s in template ‚ÄòmyXtemp-XaXbXXcXXs‚Äô&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XaXbXXcXXs -dt&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XaXbXXXXt -dt&lt;/span&gt;&lt;span class="s1"&gt;/tmp/myXtemp-XaXbe8PWt&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XXX-you-XXX -dt&lt;/span&gt;&lt;span class="s1"&gt;/tmp/myXtemp-XXX-you-48l&lt;/span&gt;&lt;span class="s1"&gt;waylonwalker.com on ÓÇ† main [!?] Óàµ v3.9.7 (waylonwalker.com)&lt;/span&gt;&lt;span class="s1"&gt;‚ùØ mktemp myXtemp-XXX-you-XX -dt&lt;/span&gt;&lt;span class="s1"&gt;mktemp: too few X&amp;#39;&lt;/span&gt;s &lt;span class="k"&gt;in&lt;/span&gt; template ‚ÄòmyXtemp-XXX-you-XX‚Äô&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="rtfm"&gt;RTFM&lt;/h2&gt;&lt;p&gt;The man page has good stuff on all the flags that you might need.&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;man mktemp&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/bs4-findall-headings'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Find all Headings with BeautifulSoup&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/aws-eventbridge-visidata'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;View AWS event bridge rules with visidata&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/bash-mktemp</guid><pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate></item><item><title>Unzip minecraft mods to their directory from the command line</title><link>https://waylonwalker.com/til/linux-unzip-directory</link><description>This morning I was trying to install a modpack on my minecraft server after So I Then I go back to my server and download the modpack with wget. Now I can unzip</description><content:encoded>&lt;p&gt;This morning I was trying to install a modpack on my minecraft server aftergetting a zip file, and its quite painful when I unzip everything in thecurrent directory rather than the directory it belongs in.&lt;/p&gt;&lt;h2 id="i-had-the-files-on-a-windows-machine"&gt;I had the files on a Windows Machine&lt;/h2&gt;&lt;p&gt;So I've been struggling to get mods installed on linux lately and the easiestway to download the entire pack rather than each mod one by one seems to be touse the overwolf application on windows.  Once I have the modpack I can startmyself a small mod-server by zipping it, putting it in a mod-server directoryand running a python &lt;code&gt;http.server&lt;/code&gt;&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python -m http.server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="downoading-on-the-server"&gt;Downoading on the server&lt;/h2&gt;&lt;p&gt;Then I go back to my server and download the modpack with wget.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="mf"&gt;10.0.0.171&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;One&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;BBlock&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;BServer&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;BPack&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zip&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="unzip-to-the-minecraft-data-directory"&gt;Unzip to the minecraft-data directory&lt;/h2&gt;&lt;p&gt;Now I can unzip my mods into the &lt;code&gt;minecraft-data&lt;/code&gt; directory.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip One+Block+Server+Pack-1.4.zip -d minecraft-data&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="running-the-server-with-docker"&gt;Running the server with docker&lt;/h2&gt;&lt;p&gt;I run the minecraft server with docker, which is setup to mount theminecraft-data directory.&lt;/p&gt;&lt;div class="onelinelink-wrapper"&gt;      &lt;a class="onelinelink" href="https://waylonwalker.com/til/docker-minecraft-server/"&gt;          &lt;img style="float: right;" align='right' src="https://images.waylonwalker.com/til/docker-minecraft-server-og_250x140.png" alt="article cover for  Running a Minecraft Server in Docker"/&gt;          &lt;p&gt;&lt;strong&gt; Running a Minecraft Server in Docker&lt;/strong&gt;&lt;/p&gt;      &lt;/a&gt;  &lt;/div&gt;&lt;p&gt;A bit more on that in the other post, but when I download the whole modpacklike this I make these changes to my docker compose. (commented out lines)&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;mc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;walkercraft&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;itzg/minecraft-server:java8&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;EULA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;TRUE&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;TYPE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;FORGE&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;VERSION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;1.15.2&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# MODS_FILE: /extras/mods.txt&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# REMOVE_OLD_MODS: &amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;tty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;stdin_open&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;unless-stopped&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;25565:25565&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./minecraft-data:/data&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;# - ./mods.txt:/extras/mods.txt:ro&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/list-all-files-containing-phrase'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;List all the files containing a phrase&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/linux-tty'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;A TTY Can Save Your Bacon&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/linux-unzip-directory</guid><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate></item><item><title>Bash function to edit scripts faster</title><link>https://waylonwalker.com/til/ewhich</link><description>I am often editing my own scripts as I develop them. I want to make a better Currently I am combining  for now lets use my todo command as an example On first p</description><content:encoded>&lt;p&gt;I am often editing my own scripts as I develop them. I want to make a betterworkflow for working with scripts like this.&lt;/p&gt;&lt;h2 id="currently"&gt;Currently&lt;/h2&gt;&lt;p&gt;Currently I am combining &lt;code&gt;nvim&lt;/code&gt; with a &lt;code&gt;which&lt;/code&gt; subshell to etit these fileslike this.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;for now lets use my todo command as an example&lt;/p&gt;&lt;/blockquote&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nvim &lt;span class="sb"&gt;`&lt;/span&gt;which todo&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="first-pass"&gt;First pass&lt;/h2&gt;&lt;p&gt;On first pass I made a bash function to do exactly what I have been doing.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ewhich &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$EDITOR&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;which &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;$1&lt;/code&gt; will pass the first input to the which subshell.  Now we can edit our todo script like this.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ewich todo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;p&gt;Note, I use bash functions instead of aliases for things that require input.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 id="final-state"&gt;Final State&lt;/h2&gt;&lt;p&gt;This works fine for commands that are files, but not aliases or shellfunctions.  Next I jumped to looking at the output of &lt;code&gt;command -V $1&lt;/code&gt;.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;if the command is not found, search for a file&lt;/li&gt;&lt;li&gt;if its a builtin, exit&lt;/li&gt;&lt;li&gt;if its an alias, open my &lt;code&gt;~/.alias file to that line&lt;/code&gt;&lt;/li&gt;&lt;li&gt;if its a function, open my &lt;code&gt;~/.alias file to that line&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ewhich &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt; -V &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; not found&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="nv"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;fzf --prompt &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; not found searching ...&amp;quot;&lt;/span&gt; --query &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;        &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$FILE&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;closing&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; &lt;span class="nv"&gt;$FILE&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;    *&lt;span class="s2"&gt;&amp;quot;is a shell builtin&amp;quot;&lt;/span&gt;*&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt; is a builtin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;    *&lt;span class="s2"&gt;&amp;quot;is an alias&amp;quot;&lt;/span&gt;*&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; ~/.alias +/alias&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;    *&lt;span class="s2"&gt;&amp;quot;is a shell function&amp;quot;&lt;/span&gt;*&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; ~/.alias +/^&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;    *&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="nv"&gt;$EDITOR&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;which &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;&lt;span class="k"&gt;esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="a-bit-more-ergo-and-less-readable"&gt;a bit more ergo, and less readable&lt;/h2&gt;&lt;p&gt;To make it easier to type, at the sacrifice of readability for anyone watchingI added a single character &lt;code&gt;e&lt;/code&gt; alias to ewhich.  So when I want to editanything I just use &lt;code&gt;e&lt;/code&gt;.&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ewhich&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="results"&gt;Results&lt;/h2&gt;&lt;p&gt;Here is a quick screencast of how it works.&lt;/p&gt;&lt;video autoplay="" controls="" loop="true" muted="" playsinline="" width="100%"&gt;     &lt;source src="https://images.waylonwalker.com/ewhich.webm" type="video/webm"&gt;     Sorry, your browser doesn't support embedded videos.&lt;/video&gt;&lt;div class='prevnext'&gt;    &lt;style type='text/css'&gt;    :root {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    [data-theme="light"] {      --prevnext-color-text: #1f2022;      --prevnext-color-angle: #ffeb00;      --prevnext-subtitle-brightness: 3;    }    [data-theme="dark"] {      --prevnext-color-text: #eefbfe;      --prevnext-color-angle: #ff66c4;      --prevnext-subtitle-brightness: 3;    }    .prevnext {      display: flex;      flex-direction: row;      justify-content: space-around;      align-items: flex-start;    }    .prevnext a {      display: flex;      align-items: center;      width: 100%;      text-decoration: none;    }    a.next {      justify-content: flex-end;    }    .prevnext a:hover {      background: #00000006;    }    .prevnext-subtitle {      color: var(--prevnext-color-text);      filter: brightness(var(--prevnext-subtitle-brightness));      font-size: .8rem;    }    .prevnext-title {      color: var(--prevnext-color-text);      font-size: 1rem;    }    .prevnext-text {      max-width: 30vw;    }    &lt;/style&gt;    &lt;a class='prev' href='/til/fugitive-commit-verbose'&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M13.5 8.25L9.75 12L13.5 15.75" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt; &lt;/path&gt;        &lt;/svg&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;prev&lt;/p&gt;            &lt;p class='prevnext-title'&gt;fugitive verbose commit&lt;/p&gt;        &lt;/div&gt;    &lt;/a&gt;    &lt;a class='next' href='/til/dunk-is-my-new-diff-pager'&gt;        &lt;div class='prevnext-text'&gt;            &lt;p class='prevnext-subtitle'&gt;next&lt;/p&gt;            &lt;p class='prevnext-title'&gt;Dunk is my new diff pager&lt;/p&gt;        &lt;/div&gt;        &lt;svg width="50px" height="50px" viewbox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"&gt;            &lt;path d="M10.5 15.75L14.25 12L10.5 8.25" stroke="var(--prevnext-color-angle)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"&gt;&lt;/path&gt;        &lt;/svg&gt;    &lt;/a&gt;  &lt;/div&gt;</content:encoded><guid isPermaLink="false">https://waylonwalker.com/til/ewhich</guid><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate></item></channel></rss>